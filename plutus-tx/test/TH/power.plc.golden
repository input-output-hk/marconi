(program
  (let
    (nonrec)
    (termbind
      (vardecl
        multiplyInteger (fun (con integer) (fun (con integer) (con integer)))
      )
      (builtin multiplyInteger)
    )
    (let
      (nonrec)
      (termbind
        (vardecl multiply (fun (con integer) (fun (con integer) (con integer))))
        multiplyInteger
      )
      (lam
        ds
        (con integer)
        (let
          (nonrec)
          (termbind
            (vardecl y (con integer))
            (let
              (nonrec)
              (termbind (vardecl y (con integer)) [ [ multiply ds ] (con 1) ])
              [ [ multiply y ] y ]
            )
          )
          [ [ multiply y ] y ]
        )
      )
    )
  )
)