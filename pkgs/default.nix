# Generated using stack2nix 0.1.3.1.
#
# Only works with sufficiently recent nixpkgs, e.g. "NIX_PATH=nixpkgs=https://github.com/NixOS/nixpkgs/archive/21a8239452adae3a4717772f4e490575586b2755.tar.gz".

{ pkgs ? (import <nixpkgs> {})
, compiler ? pkgs.haskell.packages.ghc802
}:

with pkgs.haskell.lib;

let
  stackPackages = { pkgs, stdenv, callPackage }:
    self: {
array = null;
base = null;
binary = null;
bytestring = null;
containers = null;
deepseq = null;
directory = null;
filepath = null;
ghc-boot = null;
ghc-boot-th = null;
ghc-prim = null;
ghci = null;
hoopl = null;
hpc = null;
integer-gmp = null;
pretty = null;
process = null;
rts = null;
template-haskell = null;
time = null;
transformers = null;
unix = null;
"AC-Vector" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "AC-Vector";
version = "2.3.2";
sha256 = "5e51ff6779a3803ce1009c9dffd13a3022fb3cbddeb49e685d7f43d7a8715011";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Efficient geometric vectors and transformations";
license = stdenv.lib.licenses.bsd3;

}) {};
"ALUT" = callPackage
({
  mkDerivation
, base
, freealut
, OpenAL
, StateVar
, stdenv
, transformers
}:
mkDerivation {

pname = "ALUT";
version = "2.4.0.2";
sha256 = "b8364da380f5f1d85d13e427851a153be2809e1838d16393e37566f34b384b87";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
OpenAL
StateVar
transformers
];
librarySystemDepends = [
freealut
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-openal/ALUT";
description = "A binding for the OpenAL Utility Toolkit";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) freealut;};
"Agda" = callPackage
({
  mkDerivation
, alex
, array
, base
, binary
, boxes
, bytestring
, containers
, cpphs
, data-hash
, deepseq
, directory
, EdisonCore
, edit-distance
, emacs
, equivalence
, filepath
, geniplate-mirror
, gitrev
, happy
, hashable
, hashtables
, haskeline
, ieee754
, monadplus
, mtl
, murmur-hash
, parallel
, pretty
, process
, regex-tdfa
, stdenv
, strict
, template-haskell
, text
, time
, transformers
, transformers-compat
, unordered-containers
, xhtml
, zlib
}:
mkDerivation {

pname = "Agda";
version = "2.5.2";
sha256 = "d812cec3bf7f03c4b27248572475c7e060154102771a8434cc11ba89f5691439";
revision = "3";
editedCabalFile = "10j2hf2g9vv2xibywgd8s96x05clfxr4wli00011vkhblr4p9br8";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
array
base
binary
boxes
bytestring
containers
data-hash
deepseq
directory
EdisonCore
edit-distance
equivalence
filepath
geniplate-mirror
gitrev
hashable
hashtables
haskeline
ieee754
monadplus
mtl
murmur-hash
parallel
pretty
process
regex-tdfa
strict
template-haskell
text
time
transformers
transformers-compat
unordered-containers
xhtml
zlib
];
libraryToolDepends = [
alex
cpphs
happy
];
executableHaskellDepends = [
base
directory
filepath
process
];
executableToolDepends = [
emacs
];
doHaddock = false;
doCheck = false;
postInstall = ''
  files=("$data/share/ghc-"*"/"*"-ghc-"*"/Agda-"*"/lib/prim/Agda/"{Primitive.agda,Builtin"/"*.agda})
  for f in "''${files[@]}" ; do
    $out/bin/agda $f
  done
  for f in "''${files[@]}" ; do
    $out/bin/agda -c --no-main $f
  done
  $out/bin/agda-mode compile
'';
homepage = "http://wiki.portal.chalmers.se/agda/";
description = "A dependently typed functional programming language and proof assistant";
license = "unknown";

}) {};
"BlastHTTP" = callPackage
({
  mkDerivation
, base
, biocore
, biofasta
, blastxml
, bytestring
, conduit
, HTTP
, http-conduit
, hxt
, mtl
, network
, stdenv
, transformers
}:
mkDerivation {

pname = "BlastHTTP";
version = "1.2.1";
sha256 = "cee85e0fba0530aff57209b3d91a800db52b63c3f7e4a431a04e7a9cbd355bd5";
libraryHaskellDepends = [
base
biocore
biofasta
blastxml
bytestring
conduit
HTTP
http-conduit
hxt
mtl
network
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/eggzilla/BlastHTTP";
description = "Libary to interface with the NCBI blast REST interface";
license = stdenv.lib.licenses.gpl3;

}) {};
"BlogLiterately" = callPackage
({
  mkDerivation
, base
, blaze-html
, bool-extras
, bytestring
, cmdargs
, containers
, data-default
, directory
, filepath
, HaXml
, haxr
, highlighting-kate
, hscolour
, HTTP
, lens
, mtl
, pandoc
, pandoc-citeproc
, pandoc-types
, parsec
, process
, split
, stdenv
, strict
, tagsoup
, temporary
, transformers
}:
mkDerivation {

pname = "BlogLiterately";
version = "0.8.4.3";
sha256 = "56789deadc7e7a3b94b6dbbc0f8857565348ddde049ed8f0d938d4701f761721";
revision = "1";
editedCabalFile = "01fpw6xqfdrhm26frf1mm05spk2zp6f3swl48mk4pz3zbffaskps";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
blaze-html
bool-extras
bytestring
cmdargs
containers
data-default
directory
filepath
HaXml
haxr
highlighting-kate
hscolour
HTTP
lens
mtl
pandoc
pandoc-citeproc
pandoc-types
parsec
process
split
strict
tagsoup
temporary
transformers
];
executableHaskellDepends = [
base
cmdargs
];
doHaddock = false;
doCheck = false;
homepage = "http://byorgey.wordpress.com/blogliterately/";
description = "A tool for posting Haskelly articles to blogs";
license = stdenv.lib.licenses.gpl3;

}) {};
"BlogLiterately-diagrams" = callPackage
({
  mkDerivation
, base
, BlogLiterately
, containers
, diagrams-builder
, diagrams-lib
, diagrams-rasterific
, directory
, filepath
, JuicyPixels
, pandoc
, safe
, stdenv
}:
mkDerivation {

pname = "BlogLiterately-diagrams";
version = "0.2.0.5";
sha256 = "9aa44dcff5bdddc3e3331a359ce517ec5f04258ebf2ab8c52c0971c38cd01948";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
BlogLiterately
containers
diagrams-builder
diagrams-lib
diagrams-rasterific
directory
filepath
JuicyPixels
pandoc
safe
];
executableHaskellDepends = [
base
BlogLiterately
];
doHaddock = false;
doCheck = false;
description = "Include images in blog posts with inline diagrams code";
license = stdenv.lib.licenses.bsd3;

}) {};
"Boolean" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "Boolean";
version = "0.2.4";
sha256 = "67216013b02b8ac5b534a1ef25f409f930eea1a85eae801933a01ad43145eef8";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Generalized booleans and numbers";
license = stdenv.lib.licenses.bsd3;

}) {};
"BoundedChan" = callPackage
({
  mkDerivation
, array
, base
, stdenv
}:
mkDerivation {

pname = "BoundedChan";
version = "1.0.3.0";
sha256 = "531ceaed7f62844c2a63a7cbfdcab332ea5eaa218e9922ca3305580438adc46d";
libraryHaskellDepends = [
array
base
];
doHaddock = false;
doCheck = false;
description = "Implementation of bounded channels";
license = stdenv.lib.licenses.bsd3;

}) {};
"Cabal" = callPackage
({
  mkDerivation
, array
, base
, binary
, bytestring
, containers
, deepseq
, directory
, filepath
, pretty
, process
, stdenv
, time
, unix
}:
mkDerivation {

pname = "Cabal";
version = "1.24.2.0";
sha256 = "b7d0eb8e3503fbca460c0a6ca5c88352cecfe1b69e0bbc79827872134ed86340";
revision = "2";
editedCabalFile = "15ncrm7x2lg4hn0m5mhc8hy769bzhmajsm6l9i6536plfs2bbbdj";
libraryHaskellDepends = [
array
base
binary
bytestring
containers
deepseq
directory
filepath
pretty
process
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/cabal/";
description = "A framework for packaging Haskell software";
license = stdenv.lib.licenses.bsd3;

}) {};
"ChannelT" = callPackage
({
  mkDerivation
, base
, free
, mmorph
, mtl
, stdenv
, transformers-base
}:
mkDerivation {

pname = "ChannelT";
version = "0.0.0.2";
sha256 = "1ca364133211d323a743424a45677e2f61051f704e80223247b8fdc86f8aa7a0";
libraryHaskellDepends = [
base
free
mmorph
mtl
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pthariensflame/ChannelT";
description = "Generalized stream processors";
license = stdenv.lib.licenses.bsd3;

}) {};
"Chart" = callPackage
({
  mkDerivation
, array
, base
, colour
, data-default-class
, lens
, mtl
, old-locale
, operational
, stdenv
, time
, vector
}:
mkDerivation {

pname = "Chart";
version = "1.8.2";
sha256 = "8442c16959e2a46355418b82c0c6fc3174d04b41ea6e2e320c56588a563be28d";
libraryHaskellDepends = [
array
base
colour
data-default-class
lens
mtl
old-locale
operational
time
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/timbod7/haskell-chart/wiki";
description = "A library for generating 2D Charts and Plots";
license = stdenv.lib.licenses.bsd3;

}) {};
"Chart-cairo" = callPackage
({
  mkDerivation
, array
, base
, cairo
, Chart
, colour
, data-default-class
, lens
, mtl
, old-locale
, operational
, stdenv
, time
}:
mkDerivation {

pname = "Chart-cairo";
version = "1.8.2";
sha256 = "7cd8ba9da4c43ff4d6ba468d65e91b7239a0543038996a9a626818dc1a408fc1";
libraryHaskellDepends = [
array
base
cairo
Chart
colour
data-default-class
lens
mtl
old-locale
operational
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/timbod7/haskell-chart/wiki";
description = "Cairo backend for Charts";
license = stdenv.lib.licenses.bsd3;

}) {};
"Chart-diagrams" = callPackage
({
  mkDerivation
, base
, blaze-markup
, bytestring
, Chart
, colour
, containers
, data-default-class
, diagrams-core
, diagrams-lib
, diagrams-postscript
, diagrams-svg
, lens
, mtl
, old-locale
, operational
, stdenv
, svg-builder
, SVGFonts
, text
, time
}:
mkDerivation {

pname = "Chart-diagrams";
version = "1.8.2";
sha256 = "ca181dec04bac1029101dd75951f48710ebc42f5333e06c57943e3245bba9f41";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
blaze-markup
bytestring
Chart
colour
containers
data-default-class
diagrams-core
diagrams-lib
diagrams-postscript
diagrams-svg
lens
mtl
old-locale
operational
svg-builder
SVGFonts
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/timbod7/haskell-chart/wiki";
description = "Diagrams backend for Charts";
license = stdenv.lib.licenses.bsd3;

}) {};
"ChasingBottoms" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, QuickCheck
, random
, stdenv
, syb
}:
mkDerivation {

pname = "ChasingBottoms";
version = "1.3.1.2";
sha256 = "796e278b60c4a24eb6772155ea0edff9e20f96d396cfcd6c5a55d10a3bd2b8d6";
libraryHaskellDepends = [
base
containers
mtl
QuickCheck
random
syb
];
doHaddock = false;
doCheck = false;
description = "For testing partial and infinite values";
license = stdenv.lib.licenses.mit;

}) {};
"Clipboard" = callPackage
({
  mkDerivation
, base
, directory
, stdenv
, unix
, utf8-string
, X11
}:
mkDerivation {

pname = "Clipboard";
version = "2.3.1.0";
sha256 = "ddbb85e3e3fa01edc9c98b0798d0db8cec803a8f85a3c6b56684a604dff053e3";
libraryHaskellDepends = [
base
directory
unix
utf8-string
X11
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell.org/haskellwiki/Clipboard";
description = "System clipboard interface";
license = stdenv.lib.licenses.bsd3;

}) {};
"ClustalParser" = callPackage
({
  mkDerivation
, base
, cmdargs
, either-unwrap
, parsec
, stdenv
, text
, vector
}:
mkDerivation {

pname = "ClustalParser";
version = "1.2.1";
sha256 = "0034a9fdca3e4bcb70edb961536ee4acb162fec0ab1b2c67108598bfcd75879d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
parsec
text
vector
];
executableHaskellDepends = [
base
cmdargs
either-unwrap
];
doHaddock = false;
doCheck = false;
description = "Libary for parsing Clustal tools output";
license = stdenv.lib.licenses.gpl3;

}) {};
"ConfigFile" = callPackage
({
  mkDerivation
, base
, containers
, MissingH
, mtl
, parsec
, stdenv
}:
mkDerivation {

pname = "ConfigFile";
version = "1.1.4";
sha256 = "ae087b359ff2945a62b671449227e0a811d143ee651179f4e7e9c66548e0f514";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
MissingH
mtl
parsec
];
doHaddock = false;
doCheck = false;
homepage = "http://software.complete.org/configfile";
description = "Configuration file reading & writing";
license = stdenv.lib.licenses.bsd3;

}) {};
"DAV" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, containers
, data-default
, exceptions
, haskeline
, http-client
, http-client-tls
, http-types
, lens
, mtl
, network
, network-uri
, optparse-applicative
, stdenv
, transformers
, transformers-base
, transformers-compat
, utf8-string
, xml-conduit
, xml-hamlet
}:
mkDerivation {

pname = "DAV";
version = "1.3.1";
sha256 = "5c80faa58f8bbfb4bbdf7f3db6f23a3a4d26a199831ceb27dd5f69fef21bc009";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
case-insensitive
containers
data-default
exceptions
http-client
http-client-tls
http-types
lens
mtl
transformers
transformers-base
transformers-compat
utf8-string
xml-conduit
xml-hamlet
];
executableHaskellDepends = [
base
bytestring
case-insensitive
containers
data-default
exceptions
haskeline
http-client
http-client-tls
http-types
lens
mtl
network
network-uri
optparse-applicative
transformers
transformers-base
transformers-compat
utf8-string
xml-conduit
xml-hamlet
];
doHaddock = false;
doCheck = false;
homepage = "http://floss.scru.org/hDAV";
description = "RFC 4918 WebDAV support";
license = stdenv.lib.licenses.gpl3;

}) {};
"DRBG" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, cipher-aes128
, crypto-api
, cryptohash-cryptoapi
, entropy
, mtl
, parallel
, prettyclass
, stdenv
, tagged
}:
mkDerivation {

pname = "DRBG";
version = "0.5.5";
sha256 = "21df3202486cc83c7cc3f867cb139eac9a3f69bd91b5f6b016ae026e03c33bfd";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
cereal
cipher-aes128
crypto-api
cryptohash-cryptoapi
entropy
mtl
parallel
prettyclass
tagged
];
doHaddock = false;
doCheck = false;
description = "Deterministic random bit generator (aka RNG, PRNG) based HMACs, Hashes, and Ciphers";
license = stdenv.lib.licenses.bsd3;

}) {};
"Decimal" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "Decimal";
version = "0.4.2";
sha256 = "c5f53652949eedd48dbafc1bb3e08c05348d5e25c248e8e1543bc380a9f84261";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/PaulJohnson/Haskell-Decimal";
description = "Decimal numbers with variable precision";
license = stdenv.lib.licenses.bsd3;

}) {};
"Diff" = callPackage
({
  mkDerivation
, array
, base
, pretty
, stdenv
}:
mkDerivation {

pname = "Diff";
version = "0.3.4";
sha256 = "77b7daec5a79ade779706748f11b4d9b8f805e57a68e7406c3b5a1dee16e0c2f";
libraryHaskellDepends = [
array
base
pretty
];
doHaddock = false;
doCheck = false;
description = "O(ND) diff algorithm in haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"Earley" = callPackage
({
  mkDerivation
, base
, ListLike
, stdenv
}:
mkDerivation {

pname = "Earley";
version = "0.11.0.1";
sha256 = "c207a40926bb0b9de05641a0fc03c22849a2c7e0bc007d2ffef37f33793985b3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
ListLike
];
doHaddock = false;
doCheck = false;
description = "Parsing all context-free grammars using Earley's algorithm";
license = stdenv.lib.licenses.bsd3;

}) {};
"Ebnf2ps" = callPackage
({
  mkDerivation
, array
, base
, containers
, directory
, happy
, old-time
, stdenv
, unix
}:
mkDerivation {

pname = "Ebnf2ps";
version = "1.0.15";
sha256 = "0ecce7d721d6c8993fa6ba6cfb16f1101d85e00bbaf0b6941d36a00badea2b4b";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
array
base
containers
directory
old-time
unix
];
executableToolDepends = [
happy
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/FranklinChen/Ebnf2ps";
description = "Peter's Syntax Diagram Drawing Tool";
license = stdenv.lib.licenses.bsd3;

}) {};
"EdisonAPI" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "EdisonAPI";
version = "1.3.1";
sha256 = "95a3b8d01599520a50456219b5a2e9f7832bcddaaeb8e94ce777bd87a4a6b56e";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://rwd.rdockins.name/edison/home/";
description = "A library of efficient, purely-functional data structures (API)";
license = stdenv.lib.licenses.mit;

}) {};
"EdisonCore" = callPackage
({
  mkDerivation
, array
, base
, containers
, EdisonAPI
, mtl
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "EdisonCore";
version = "1.3.1.1";
sha256 = "3e0720ee3b179304f563b99dd446c1d6911e31ddc4d0f78d6550b18e59ed501b";
libraryHaskellDepends = [
array
base
containers
EdisonAPI
mtl
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "http://rwd.rdockins.name/edison/home/";
description = "A library of efficent, purely-functional data structures (Core Implementations)";
license = "unknown";

}) {};
"EntrezHTTP" = callPackage
({
  mkDerivation
, base
, biocore
, bytestring
, conduit
, HTTP
, http-conduit
, hxt
, mtl
, network
, stdenv
, Taxonomy
, text
, transformers
}:
mkDerivation {

pname = "EntrezHTTP";
version = "1.0.3";
sha256 = "395c438c8b5b68fc0826e1946483d252a8936d5a91a25bf928eef113b4f9a89b";
libraryHaskellDepends = [
base
biocore
bytestring
conduit
HTTP
http-conduit
hxt
mtl
network
Taxonomy
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/eggzilla/EntrezHTTP";
description = "Libary to interface with the NCBI Entrez REST service";
license = stdenv.lib.licenses.gpl3;

}) {};
"FenwickTree" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
, template-haskell
}:
mkDerivation {

pname = "FenwickTree";
version = "0.1.2.1";
sha256 = "9c172d62b24365e663a0355e8eaa34362a1a769c18a64391939a9b50e384f03c";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
QuickCheck
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mgajda/FenwickTree";
description = "Data structure for fast query and update of cumulative sums";
license = stdenv.lib.licenses.bsd3;

}) {};
"FloatingHex" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "FloatingHex";
version = "0.4";
sha256 = "b277054db48d2dec62e3831586f218cbe0a056dec44dbc032e9a73087425a24c";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Read and write hexadecimal floating point numbers";
license = stdenv.lib.licenses.bsd3;

}) {};
"FontyFruity" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, deepseq
, directory
, filepath
, stdenv
, text
, vector
, xml
}:
mkDerivation {

pname = "FontyFruity";
version = "0.5.3.2";
sha256 = "87196e6f40bd60eafa415ac503a62d8dd7c318126bbb7cd1731821312e2ac515";
libraryHaskellDepends = [
base
binary
bytestring
containers
deepseq
directory
filepath
text
vector
xml
];
doHaddock = false;
doCheck = false;
description = "A true type file format loader";
license = stdenv.lib.licenses.bsd3;

}) {};
"Frames" = callPackage
({
  mkDerivation
, base
, ghc-prim
, pipes
, primitive
, readable
, stdenv
, template-haskell
, text
, transformers
, vector
, vinyl
}:
mkDerivation {

pname = "Frames";
version = "0.1.9";
sha256 = "18eaea64c8f3ff7156ca1dcc372bae3e8ff7538cffce4c415710eae770eb6b25";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
ghc-prim
pipes
primitive
readable
template-haskell
text
transformers
vector
vinyl
];
doHaddock = false;
doCheck = false;
description = "Data frames For working with tabular data files";
license = stdenv.lib.licenses.bsd3;

}) {};
"GLFW-b" = callPackage
({
  mkDerivation
, base
, bindings-GLFW
, stdenv
}:
mkDerivation {

pname = "GLFW-b";
version = "1.4.8.1";
sha256 = "438a49ec5cf6cbda95966fcc42750b9245f54fe7daf69a6493e7703c3f178ae9";
libraryHaskellDepends = [
base
bindings-GLFW
];
doHaddock = false;
doCheck = false;
description = "Bindings to GLFW OpenGL library";
license = stdenv.lib.licenses.bsd3;

}) {};
"GLURaw" = callPackage
({
  mkDerivation
, base
, libGL
, libGLU
, OpenGLRaw
, stdenv
, transformers
}:
mkDerivation {

pname = "GLURaw";
version = "2.0.0.3";
sha256 = "582cf8c0c1b8c0123ee9a8a06eba65fffded6decfe4e2e08bfea308f55f7ccee";
libraryHaskellDepends = [
base
OpenGLRaw
transformers
];
librarySystemDepends = [
libGL
libGLU
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Opengl";
description = "A raw binding for the OpenGL graphics system";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) libGL; inherit (pkgs) libGLU;};
"GLUT" = callPackage
({
  mkDerivation
, array
, base
, containers
, OpenGL
, StateVar
, stdenv
, transformers
}:
mkDerivation {

pname = "GLUT";
version = "2.7.0.11";
sha256 = "da270ef3027f48fd62115e6f1e90a44334e3da5524e4619dbab6d186f5511b5d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
base
containers
OpenGL
StateVar
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Opengl";
description = "A binding for the OpenGL Utility Toolkit";
license = stdenv.lib.licenses.bsd3;

}) {};
"Genbank" = callPackage
({
  mkDerivation
, base
, biocore
, biofasta
, bytestring
, cmdargs
, parsec
, split
, stdenv
}:
mkDerivation {

pname = "Genbank";
version = "1.0.3";
sha256 = "2baf631ac851b1c29ba531ae1c16b8ba3c4b672bac9d4840a3b9afc0a89d2b93";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
biocore
biofasta
bytestring
parsec
split
];
executableHaskellDepends = [
base
cmdargs
];
doHaddock = false;
doCheck = false;
description = "Libary for processing the NCBI genbank format";
license = "GPL";

}) {};
"GenericPretty" = callPackage
({
  mkDerivation
, base
, ghc-prim
, pretty
, stdenv
}:
mkDerivation {

pname = "GenericPretty";
version = "1.2.1";
sha256 = "175e334292904d365c630c9dfcc5a94f0c052a88a10d34513f39ebc36205672d";
libraryHaskellDepends = [
base
ghc-prim
pretty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RazvanRanca/GenericPretty";
description = "A generic, derivable, haskell pretty printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"Glob" = callPackage
({
  mkDerivation
, base
, containers
, directory
, dlist
, filepath
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "Glob";
version = "0.7.14";
sha256 = "2837b88916e8ba4314fdbb556de8b0e7f577b848d3e80a08959b6ef47e1c842b";
libraryHaskellDepends = [
base
containers
directory
dlist
filepath
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://iki.fi/matti.niemenmaa/glob/";
description = "Globbing library";
license = stdenv.lib.licenses.bsd3;

}) {};
"GraphSCC" = callPackage
({
  mkDerivation
, array
, base
, containers
, stdenv
}:
mkDerivation {

pname = "GraphSCC";
version = "1.0.4";
sha256 = "789d93e6188845f009779b1c800b043f524587a21d324be8594d09b0f8e86cf1";
libraryHaskellDepends = [
array
base
containers
];
doHaddock = false;
doCheck = false;
description = "Tarjan's algorithm for computing the strongly connected components of a graph";
license = stdenv.lib.licenses.bsd3;

}) {};
"H" = callPackage
({
  mkDerivation
, base
, bytestring
, cmdargs
, file-embed
, inline-r
, pretty
, process
, stdenv
, temporary
, vector
}:
mkDerivation {

pname = "H";
version = "0.9.0.1";
sha256 = "5fc04dfefcac9f6882cea9e65755479f7b1d853618c89258a005df63c8d57134";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
bytestring
cmdargs
file-embed
inline-r
pretty
process
temporary
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://tweag.github.io/HaskellR";
description = "The Haskell/R mixed programming environment";
license = stdenv.lib.licenses.bsd3;

}) {};
"HCodecs" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, QuickCheck
, random
, stdenv
}:
mkDerivation {

pname = "HCodecs";
version = "0.5";
sha256 = "b1bf109a5e0877b47eb2f942ad0d1aa2368b9c006882ba07fe345dd0a90a1756";
libraryHaskellDepends = [
array
base
bytestring
QuickCheck
random
];
doHaddock = false;
doCheck = false;
homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
description = "A library to read, write and manipulate MIDI, WAVE, and SoundFont2 files";
license = stdenv.lib.licenses.bsd3;

}) {};
"HDBC" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, convertible
, mtl
, old-time
, stdenv
, text
, time
, utf8-string
}:
mkDerivation {

pname = "HDBC";
version = "2.4.0.1";
sha256 = "7a3ee21c41e716111c4a3742a66eb448683719a9384afbf7021c5942ac73d2ad";
revision = "1";
editedCabalFile = "1zg7l48g45wc86kqyspzg92q3vnzb6c52rn8qkrhw85wk57yy76s";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
convertible
mtl
old-time
text
time
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hdbc/hdbc";
description = "Haskell Database Connectivity";
license = stdenv.lib.licenses.bsd3;

}) {};
"HDBC-session" = callPackage
({
  mkDerivation
, base
, HDBC
, stdenv
}:
mkDerivation {

pname = "HDBC-session";
version = "0.1.1.0";
sha256 = "4ad37a6c9d17b8f2f049ec4f3c4ea5efc8d866b02b226c6c066ab11153fc80b9";
libraryHaskellDepends = [
base
HDBC
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "Bracketed connection for HDBC";
license = stdenv.lib.licenses.bsd3;

}) {};
"HPDF" = callPackage
({
  mkDerivation
, array
, base
, base64-bytestring
, binary
, bytestring
, containers
, errors
, mtl
, random
, stdenv
, vector
, zlib
}:
mkDerivation {

pname = "HPDF";
version = "1.4.10";
sha256 = "de2bfddd93eeef2129a2378e8dce486d086bec3c48ee2a1bf1a5fb01581607d4";
libraryHaskellDepends = [
array
base
base64-bytestring
binary
bytestring
containers
errors
mtl
random
vector
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://www.alpheccar.org";
description = "Generation of PDF documents";
license = stdenv.lib.licenses.bsd3;

}) {};
"HSet" = callPackage
({
  mkDerivation
, base
, containers
, hashable
, hashtables
, stdenv
}:
mkDerivation {

pname = "HSet";
version = "0.0.0";
sha256 = "8b336a5f5c68d23683b7f69a5fcc02c7a9f869b7570799cf81cd26c37ea70426";
libraryHaskellDepends = [
base
containers
hashable
hashtables
];
doHaddock = false;
doCheck = false;
description = "Faux heterogeneous sets";
license = stdenv.lib.licenses.bsd3;

}) {};
"HStringTemplate" = callPackage
({
  mkDerivation
, array
, base
, blaze-builder
, bytestring
, containers
, deepseq
, directory
, filepath
, mtl
, old-locale
, parsec
, pretty
, stdenv
, syb
, template-haskell
, text
, time
, void
}:
mkDerivation {

pname = "HStringTemplate";
version = "0.8.5";
sha256 = "e02b3043f1a5f72db3a1a1075e7b641f266329b954ea7f2f6bd20266295b35ff";
revision = "1";
editedCabalFile = "0qwz8lby7096vpmi73wryanky27aimwxpmfwpbarjm2lzbiq868i";
libraryHaskellDepends = [
array
base
blaze-builder
bytestring
containers
deepseq
directory
filepath
mtl
old-locale
parsec
pretty
syb
template-haskell
text
time
void
];
doHaddock = false;
doCheck = false;
description = "StringTemplate implementation in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"HTF" = callPackage
({
  mkDerivation
, aeson
, array
, base
, base64-bytestring
, bytestring
, containers
, cpphs
, Diff
, directory
, haskell-src
, HUnit
, lifted-base
, monad-control
, mtl
, old-time
, pretty
, process
, QuickCheck
, random
, regex-compat
, stdenv
, text
, time
, unix
, vector
, xmlgen
}:
mkDerivation {

pname = "HTF";
version = "0.13.1.0";
sha256 = "1cb469ee21766fb7ad56fb42469709fac06214f7a33c39880134dfc2ea0de847";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
array
base
base64-bytestring
bytestring
containers
cpphs
Diff
directory
haskell-src
HUnit
lifted-base
monad-control
mtl
old-time
pretty
process
QuickCheck
random
regex-compat
text
time
unix
vector
xmlgen
];
executableHaskellDepends = [
array
base
cpphs
directory
HUnit
mtl
old-time
random
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/skogsbaer/HTF/";
description = "The Haskell Test Framework";
license = "LGPL";

}) {};
"HTTP" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, mtl
, network
, network-uri
, parsec
, stdenv
, time
}:
mkDerivation {

pname = "HTTP";
version = "4000.3.5";
sha256 = "bca0bf130666e924abaf3daff22be6e27928f83f91d6a34cbc39616497908aed";
revision = "2";
editedCabalFile = "1jdvr6aalcrg0xmq2n4mc0i2agbzaz63k0xi4dawvmsnd0ihb6kb";
libraryHaskellDepends = [
array
base
bytestring
mtl
network
network-uri
parsec
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell/HTTP";
description = "A library for client-side HTTP";
license = stdenv.lib.licenses.bsd3;

}) {};
"HUnit" = callPackage
({
  mkDerivation
, base
, call-stack
, deepseq
, stdenv
}:
mkDerivation {

pname = "HUnit";
version = "1.5.0.0";
sha256 = "65c51d17ced1c0646d888cd8caf195df67f6fdc1394c34459bcfd1be0f9ddea0";
revision = "1";
editedCabalFile = "10mwjkm6gpk92rl8x676hyqhdwbcyx4mbgjk9f4lcx93ymvslp5i";
libraryHaskellDepends = [
base
call-stack
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hspec/HUnit#readme";
description = "A unit testing framework for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"HUnit-approx" = callPackage
({
  mkDerivation
, base
, HUnit
, stdenv
}:
mkDerivation {

pname = "HUnit-approx";
version = "1.1";
sha256 = "d7cc9e120092e8f845b3347a5da99fab59135eda34c57871f3ff1f09224830a6";
revision = "1";
editedCabalFile = "1h78rwj5vy88pdj192l57181z0617gn5p8psrgbz6qgimfq35dpw";
libraryHaskellDepends = [
base
HUnit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/goldfirere/HUnit-approx";
description = "Approximate equality for floating point numbers with HUnit";
license = stdenv.lib.licenses.bsd3;

}) {};
"HaTeX" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, matrix
, parsec
, QuickCheck
, stdenv
, text
, transformers
, wl-pprint-extras
}:
mkDerivation {

pname = "HaTeX";
version = "3.17.1.0";
sha256 = "c497c6b2853018b09016c4422f22d18956881fc774066626d7c43c8b8f0917c3";
libraryHaskellDepends = [
base
bytestring
containers
matrix
parsec
QuickCheck
text
transformers
wl-pprint-extras
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Daniel-Diaz/HaTeX/blob/master/README.md";
description = "The Haskell LaTeX library";
license = stdenv.lib.licenses.bsd3;

}) {};
"HaXml" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, filepath
, polyparse
, pretty
, random
, stdenv
}:
mkDerivation {

pname = "HaXml";
version = "1.25.3";
sha256 = "6448a7ee1c26159c6c10db93757ed9248f647b1c0c431e7aead6aadd6d2307c7";
revision = "1";
editedCabalFile = "0b9pppnsvid2zxcldzlqlfqjnfv5fxwxdb3d8mwyvlsi0x1al53a";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
filepath
polyparse
pretty
random
];
executableHaskellDepends = [
base
directory
polyparse
pretty
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/HaXml/";
description = "Utilities for manipulating XML documents";
license = "LGPL";

}) {};
"HandsomeSoup" = callPackage
({
  mkDerivation
, base
, containers
, HTTP
, hxt
, hxt-http
, mtl
, network
, network-uri
, parsec
, stdenv
, transformers
}:
mkDerivation {

pname = "HandsomeSoup";
version = "0.4.2";
sha256 = "0ae2dad3fbde1efee9e45b84b2aeb5b526cc7b3ea2cbc5715494f7bde3ceeefb";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
containers
HTTP
hxt
hxt-http
mtl
network
network-uri
parsec
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/egonSchiele/HandsomeSoup";
description = "Work with HTML more easily in HXT";
license = stdenv.lib.licenses.bsd3;

}) {};
"HaskellNet" = callPackage
({
  mkDerivation
, array
, base
, base64-string
, bytestring
, cryptohash
, mime-mail
, mtl
, network
, old-time
, pretty
, stdenv
, text
}:
mkDerivation {

pname = "HaskellNet";
version = "0.5.1";
sha256 = "3245d31ad76f9f9013a2f6e2285d73ed37376eeb073c100b9a6d19e87f0ca838";
libraryHaskellDepends = [
array
base
base64-string
bytestring
cryptohash
mime-mail
mtl
network
old-time
pretty
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jtdaugherty/HaskellNet";
description = "Client support for POP3, SMTP, and IMAP";
license = stdenv.lib.licenses.bsd3;

}) {};
"HaskellNet-SSL" = callPackage
({
  mkDerivation
, base
, bytestring
, connection
, data-default
, HaskellNet
, network
, stdenv
, tls
}:
mkDerivation {

pname = "HaskellNet-SSL";
version = "0.3.3.0";
sha256 = "177d462b939dcb1ebab9cabf5ab5d49d969c80a8de1732bc6e1613780b8fd5f4";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
connection
data-default
HaskellNet
network
tls
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dpwright/HaskellNet-SSL";
description = "Helpers to connect to SSL/TLS mail servers with HaskellNet";
license = stdenv.lib.licenses.bsd3;

}) {};
"Hclip" = callPackage
({
  mkDerivation
, base
, mtl
, process
, stdenv
, strict
}:
mkDerivation {

pname = "Hclip";
version = "3.0.0.4";
sha256 = "d8c80bd2d035571cd76ce4f69453e9fcef4096dbc8868eb4cfcd7eb74fe5f712";
libraryHaskellDepends = [
base
mtl
process
strict
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jetho/Hclip";
description = "A small cross-platform library for reading and modifying the system clipboard";
license = stdenv.lib.licenses.bsd3;

}) {};
"HsOpenSSL" = callPackage
({
  mkDerivation
, base
, bytestring
, integer-gmp
, network
, openssl
, stdenv
, time
}:
mkDerivation {

pname = "HsOpenSSL";
version = "0.11.4";
sha256 = "6326b9b1fb07e05a72f8435cc3ae777d696251e43e93b25ec2ff513f7f2bed07";
libraryHaskellDepends = [
base
bytestring
integer-gmp
network
time
];
librarySystemDepends = [
openssl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vshabanov/HsOpenSSL";
description = "Partial OpenSSL binding for Haskell";
license = stdenv.lib.licenses.publicDomain;

}) {inherit (pkgs) openssl;};
"HsOpenSSL-x509-system" = callPackage
({
  mkDerivation
, base
, bytestring
, HsOpenSSL
, stdenv
, unix
}:
mkDerivation {

pname = "HsOpenSSL-x509-system";
version = "0.1.0.3";
sha256 = "5bdcb7ae2faba07a374109fea0a1431ae09d080f8574e60ab7a351b46f931f92";
libraryHaskellDepends = [
base
bytestring
HsOpenSSL
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/redneb/HsOpenSSL-x509-system";
description = "Use the system's native CA certificate store with HsOpenSSL";
license = stdenv.lib.licenses.bsd3;

}) {};
"IPv6Addr" = callPackage
({
  mkDerivation
, attoparsec
, base
, iproute
, network
, network-info
, random
, stdenv
, text
}:
mkDerivation {

pname = "IPv6Addr";
version = "0.6.3";
sha256 = "d51d7316a72e7cbe680cafda0b422d07bf9755261f040061ae72351aaf470e02";
revision = "1";
editedCabalFile = "11dvmn6l2sicxmiy7hg0a7msi022gpzzaiyliclkdcnifs75lhjm";
libraryHaskellDepends = [
attoparsec
base
iproute
network
network-info
random
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/MichelBoucey/IPv6Addr";
description = "Library to deal with IPv6 address text representations";
license = stdenv.lib.licenses.bsd3;

}) {};
"IfElse" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "IfElse";
version = "0.85";
sha256 = "8ad3bfc3e2c867e6330d9bff874b3105476c35b2e1638fd448f233e9f80addcd";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
description = "Anaphoric and miscellaneous useful control-flow";
license = stdenv.lib.licenses.bsd3;

}) {};
"IntervalMap" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, stdenv
}:
mkDerivation {

pname = "IntervalMap";
version = "0.5.2.0";
sha256 = "031a491ae40c333a3227d147aae9ace42f2f4b535fcbbb991c6b4f35a1531684";
libraryHaskellDepends = [
base
containers
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "http://www.chr-breitkopf.de/comp/IntervalMap";
description = "Containers for intervals, with efficient search";
license = stdenv.lib.licenses.bsd3;

}) {};
"JuicyPixels" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, deepseq
, mtl
, primitive
, stdenv
, transformers
, vector
, zlib
}:
mkDerivation {

pname = "JuicyPixels";
version = "3.2.8";
sha256 = "038c6547d543442a93b2028be4b84c225bb7a6fa913e1fc57325c58d043d5644";
revision = "1";
editedCabalFile = "0gif39hhnn7qccqvqca56hl3rc4s2i4sf5g7kkhpz6lapcgq84aj";
libraryHaskellDepends = [
base
binary
bytestring
containers
deepseq
mtl
primitive
transformers
vector
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Twinside/Juicy.Pixels";
description = "Picture loading/serialization (in png, jpeg, bitmap, gif, tga, tiff and radiance)";
license = stdenv.lib.licenses.bsd3;

}) {};
"JuicyPixels-extra" = callPackage
({
  mkDerivation
, base
, JuicyPixels
, stdenv
}:
mkDerivation {

pname = "JuicyPixels-extra";
version = "0.1.1";
sha256 = "d37b257e7780e18a4e8335523b2f8962efb845da3b1dd84435a684b24a82b9fd";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
JuicyPixels
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/JuicyPixels-extra";
description = "Efficiently scale, crop, flip images with JuicyPixels";
license = stdenv.lib.licenses.bsd3;

}) {};
"JuicyPixels-scale-dct" = callPackage
({
  mkDerivation
, base
, base-compat
, carray
, fft
, JuicyPixels
, stdenv
}:
mkDerivation {

pname = "JuicyPixels-scale-dct";
version = "0.1.1.2";
sha256 = "9abd9d00520424912201b58343f252362b9f34760023d3324732ca00a906fe96";
revision = "3";
editedCabalFile = "0z1ks049q9jsc5ysh12idkqf3rz0bnvv74rhlaw24r5q2xj8lv8i";
libraryHaskellDepends = [
base
base-compat
carray
fft
JuicyPixels
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/JuicyPixels-scale-dct#readme";
description = "Scale JuicyPixels images with DCT";
license = stdenv.lib.licenses.bsd3;

}) {};
"LibZip" = callPackage
({
  mkDerivation
, base
, bindings-libzip
, bytestring
, filepath
, mtl
, stdenv
, time
, utf8-string
}:
mkDerivation {

pname = "LibZip";
version = "1.0.1";
sha256 = "a636e0202d2a3f60d894a814bd9834cf8c62313b67ccc48c295f02a4bebe425f";
libraryHaskellDepends = [
base
bindings-libzip
bytestring
filepath
mtl
time
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://bitbucket.org/astanin/hs-libzip/";
description = "Bindings to libzip, a library for manipulating zip archives";
license = stdenv.lib.licenses.bsd3;

}) {};
"List" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "List";
version = "0.6.0";
sha256 = "03de2236b8802ddc76ff22d6de0037855d00790d0f4071b3467b419521a29889";
revision = "1";
editedCabalFile = "107y4qn4170pwpz8f6wxczcajhrs4ripjcmdii1xmqqfqzf4xxyn";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yairchu/generator/tree";
description = "List monad transformer and class";
license = stdenv.lib.licenses.bsd3;

}) {};
"ListLike" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, deepseq
, dlist
, fmlist
, stdenv
, text
, utf8-string
, vector
}:
mkDerivation {

pname = "ListLike";
version = "4.5.1";
sha256 = "b70745335b563cd9039bb17a1e2faf7edb1b68febdd19586b28ab67c55562a8d";
libraryHaskellDepends = [
array
base
bytestring
containers
deepseq
dlist
fmlist
text
utf8-string
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/JohnLato/listlike";
description = "Generic support for list-like structures";
license = stdenv.lib.licenses.bsd3;

}) {};
"MFlow" = callPackage
({
  mkDerivation
, base
, blaze-html
, blaze-markup
, bytestring
, case-insensitive
, clientsession
, conduit
, conduit-extra
, containers
, cpphs
, directory
, extensible-exceptions
, http-types
, monadloc
, mtl
, old-time
, parsec
, pwstore-fast
, random
, RefSerialize
, resourcet
, stdenv
, stm
, TCache
, text
, time
, transformers
, utf8-string
, vector
, wai
, wai-extra
, warp
, warp-tls
, Workflow
}:
mkDerivation {

pname = "MFlow";
version = "0.4.6.0";
sha256 = "4e93f7488152d88359fd100a742c2ea96788284d262f3cd1b50d936f80f1a342";
libraryHaskellDepends = [
base
blaze-html
blaze-markup
bytestring
case-insensitive
clientsession
conduit
conduit-extra
containers
directory
extensible-exceptions
http-types
monadloc
mtl
old-time
parsec
pwstore-fast
random
RefSerialize
resourcet
stm
TCache
text
time
transformers
utf8-string
vector
wai
wai-extra
warp
warp-tls
Workflow
];
libraryToolDepends = [
cpphs
];
doHaddock = false;
doCheck = false;
description = "stateful, RESTful web framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"MemoTrie" = callPackage
({
  mkDerivation
, base
, newtype-generics
, stdenv
}:
mkDerivation {

pname = "MemoTrie";
version = "0.6.7";
sha256 = "cdab03dc1394e982dd3144ac433b7548d51a55a1c44ddb864e5ac14057c41672";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
newtype-generics
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/conal/MemoTrie";
description = "Trie-based memo functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"MissingH" = callPackage
({
  mkDerivation
, array
, base
, containers
, directory
, filepath
, hslogger
, HUnit
, mtl
, network
, old-locale
, old-time
, parsec
, process
, random
, regex-compat
, stdenv
, time
, unix
}:
mkDerivation {

pname = "MissingH";
version = "1.4.0.1";
sha256 = "283f2afd46625d98b4e29f77edadfa5e6009a227812ee2ece10091ad6a7e9b71";
libraryHaskellDepends = [
array
base
containers
directory
filepath
hslogger
HUnit
mtl
network
old-locale
old-time
parsec
process
random
regex-compat
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://software.complete.org/missingh";
description = "Large utility library";
license = stdenv.lib.licenses.bsd3;

}) {};
"MonadPrompt" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "MonadPrompt";
version = "1.0.0.5";
sha256 = "b012cbbe83650f741c7b7f6eafcc89dec299b0ac74a758b6f3a8cdfc5d3bbeda";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
description = "MonadPrompt, implementation & examples";
license = stdenv.lib.licenses.bsd3;

}) {};
"MonadRandom" = callPackage
({
  mkDerivation
, base
, fail
, mtl
, primitive
, random
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "MonadRandom";
version = "0.5.1";
sha256 = "9e3f0f92807285302036dc504066ae6d968c8b0b4c25d9360888f31fe1730d87";
revision = "1";
editedCabalFile = "19242r11a7iqr8dnbxsac04c3ylh7xkan70pdv5k3jzcmfwn4shd";
libraryHaskellDepends = [
base
fail
mtl
primitive
random
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
description = "Random-number generation monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"MusicBrainz" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, conduit
, conduit-extra
, HTTP
, http-conduit
, http-types
, monad-control
, resourcet
, stdenv
, text
, time
, time-locale-compat
, transformers
, vector
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "MusicBrainz";
version = "0.2.4";
sha256 = "d221f8752fe4c0abdb6e681b1b1811af067b2bc202fa3ef869c5cebe631c3db8";
revision = "1";
editedCabalFile = "1bnj0wq9q6y2pxjnl1rk5ybdj16g17g7qkzrfnjrwmm7iq8xbm62";
libraryHaskellDepends = [
aeson
base
bytestring
conduit
conduit-extra
HTTP
http-conduit
http-types
monad-control
resourcet
text
time
time-locale-compat
transformers
vector
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "http://floss.scru.org/hMusicBrainz";
description = "interface to MusicBrainz XML2 web service";
license = stdenv.lib.licenses.gpl3;

}) {};
"Network-NineP" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, convertible
, exceptions
, hslogger
, monad-loops
, monad-peel
, mstate
, mtl
, network
, NineP
, regex-posix
, stateref
, stdenv
, transformers
}:
mkDerivation {

pname = "Network-NineP";
version = "0.4.1";
sha256 = "9d7a456c672c1e7ef1075e27654b21ecacd8062917e1482c8060e404f3960f4a";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
binary
bytestring
containers
convertible
exceptions
hslogger
monad-loops
monad-peel
mstate
mtl
network
NineP
regex-posix
stateref
transformers
];
doHaddock = false;
doCheck = false;
description = "High-level abstraction over 9P protocol";
license = "unknown";

}) {};
"NineP" = callPackage
({
  mkDerivation
, base
, binary
, stdenv
}:
mkDerivation {

pname = "NineP";
version = "0.0.2.1";
sha256 = "4bb1516b9fb340118960043e0c72aa62316be8ff3f78cc8c1354e2fac96dd8cc";
libraryHaskellDepends = [
base
binary
];
doHaddock = false;
doCheck = false;
homepage = "http://9ph.googlecode.com";
description = "9P2000 in pure Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"NoTrace" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "NoTrace";
version = "0.3.0.1";
sha256 = "a8efac60b33bb9a50b08036b94b75746150aa79e2cf4a10f3c627f4982cd5f4f";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/CindyLinz/Haskell-NoTrace";
description = "Remove all the functions come from Debug.Trace after debugging";
license = stdenv.lib.licenses.mit;

}) {};
"NumInstances" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "NumInstances";
version = "1.4";
sha256 = "cbdb2a49346f59ceb5ab38592d7bc52e5205580d431d0ac6d852fd9880e59679";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/conal/NumInstances";
description = "Instances of numeric classes for functions and tuples";
license = stdenv.lib.licenses.bsd3;

}) {};
"ObjectName" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "ObjectName";
version = "1.1.0.1";
sha256 = "72dbef237580fd4e8567de2de752835bbadd3629f486d1586486d49a49aad210";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/svenpanne/ObjectName";
description = "Explicitly handled object names";
license = stdenv.lib.licenses.bsd3;

}) {};
"Octree" = callPackage
({
  mkDerivation
, AC-Vector
, base
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "Octree";
version = "0.5.4.3";
sha256 = "4fd8aa7fbbcc2387e06159b0d96c8ede26812ebe85b5d6931ce4bb8b1972b465";
revision = "1";
editedCabalFile = "1ysmpp7knrkxh68q6nq012877mn51sgzjrpls7d80pkg4pgkf42a";
libraryHaskellDepends = [
AC-Vector
base
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mgajda/octree";
description = "Simple unbalanced Octree for storing data about 3D points";
license = stdenv.lib.licenses.bsd3;

}) {};
"OneTuple" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "OneTuple";
version = "0.2.1";
sha256 = "4b6f74b6d92df112b0f4eaf15ccdc5fbb763d59f07e9a2afa5690ef89159a2f4";
revision = "1";
editedCabalFile = "1kb7f21n9vwwrk4kipqdwdqs94k34zai6yy0kgdn22zi442yicjh";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Singleton Tuple";
license = stdenv.lib.licenses.bsd3;

}) {};
"OpenAL" = callPackage
({
  mkDerivation
, base
, ObjectName
, openal
, OpenGL
, StateVar
, stdenv
, transformers
}:
mkDerivation {

pname = "OpenAL";
version = "1.7.0.4";
sha256 = "3989f6c4fe437843551004dd011c4308bf63d787ae4fbb8ce71d44b1b0b1f118";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
ObjectName
OpenGL
StateVar
transformers
];
librarySystemDepends = [
openal
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-openal/ALUT";
description = "A binding to the OpenAL cross-platform 3D audio API";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) openal;};
"OpenGL" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, GLURaw
, ObjectName
, OpenGLRaw
, StateVar
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "OpenGL";
version = "3.0.1.0";
sha256 = "f45c0c65aa31108391d5d86bb65b3e945e0c1102b7d09db4b356c060f3afa2da";
libraryHaskellDepends = [
base
bytestring
containers
GLURaw
ObjectName
OpenGLRaw
StateVar
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Opengl";
description = "A binding for the OpenGL graphics system";
license = stdenv.lib.licenses.bsd3;

}) {};
"OpenGLRaw" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, fixed
, half
, libGL
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "OpenGLRaw";
version = "3.2.4.0";
sha256 = "e3f9910be96b375fdf30db5a2cb6d55869eab11d507aa14edee177495c7dcb2e";
libraryHaskellDepends = [
base
bytestring
containers
fixed
half
text
transformers
];
librarySystemDepends = [
libGL
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Opengl";
description = "A raw binding for the OpenGL graphics system";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) libGL;};
"PSQueue" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "PSQueue";
version = "1.1";
sha256 = "a8e0871ad10f916f55c3b9baec53eff23c4e97e09cf96d6c66771789e00a49cc";
revision = "1";
editedCabalFile = "0gpx33bkhpwya7prnqzwpbnylm4v4nm4x8m02ggmj7d6rkklb2qq";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Priority Search Queue";
license = stdenv.lib.licenses.bsd3;

}) {};
"ParsecTools" = callPackage
({
  mkDerivation
, base
, parsec
, stdenv
}:
mkDerivation {

pname = "ParsecTools";
version = "0.0.2.0";
sha256 = "ef4843353127aa3e6f6ab0aece9f4245225d375802921e151a1751d797857a87";
libraryHaskellDepends = [
base
parsec
];
doHaddock = false;
doCheck = false;
description = "Parsec combinators for more complex objects";
license = stdenv.lib.licenses.gpl3;

}) {};
"QuasiText" = callPackage
({
  mkDerivation
, attoparsec
, base
, haskell-src-meta
, stdenv
, template-haskell
, text
, th-lift-instances
}:
mkDerivation {

pname = "QuasiText";
version = "0.1.2.6";
sha256 = "e801d269e25263645ee66fc090040fe9b9c8a8e5bf10485801dd7a5a30e0f119";
libraryHaskellDepends = [
attoparsec
base
haskell-src-meta
template-haskell
text
th-lift-instances
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mikeplus64/QuasiText";
description = "A QuasiQuoter for Text";
license = stdenv.lib.licenses.bsd3;

}) {};
"QuickCheck" = callPackage
({
  mkDerivation
, base
, containers
, random
, stdenv
, template-haskell
, tf-random
, transformers
}:
mkDerivation {

pname = "QuickCheck";
version = "2.9.2";
sha256 = "155c1656f583bc797587846ee1959143d2b1b9c88fbcb9d3f510f58d8fb93685";
libraryHaskellDepends = [
base
containers
random
template-haskell
tf-random
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nick8325/quickcheck";
description = "Automatic testing of Haskell programs";
license = stdenv.lib.licenses.bsd3;

}) {};
"RNAlien" = callPackage
({
  mkDerivation
, aeson
, base
, biocore
, biofasta
, BlastHTTP
, blastxml
, bytestring
, cassava
, ClustalParser
, cmdargs
, containers
, directory
, edit-distance
, either-unwrap
, EntrezHTTP
, filepath
, hierarchical-clustering
, HTTP
, http-conduit
, http-types
, hxt
, matrix
, network
, parsec
, process
, pureMD5
, random
, split
, stdenv
, Taxonomy
, text
, text-metrics
, time
, transformers
, vector
, ViennaRNAParser
}:
mkDerivation {

pname = "RNAlien";
version = "1.3.1";
sha256 = "2e928bb739cba57427fc3a24780b8b36c8eaf6a709e72dadfc637aab0a862fb3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
biocore
biofasta
BlastHTTP
blastxml
bytestring
cassava
ClustalParser
cmdargs
containers
directory
edit-distance
either-unwrap
EntrezHTTP
filepath
hierarchical-clustering
HTTP
http-conduit
http-types
hxt
matrix
network
parsec
process
pureMD5
random
Taxonomy
text
text-metrics
transformers
vector
ViennaRNAParser
];
executableHaskellDepends = [
base
biocore
biofasta
bytestring
cassava
cmdargs
containers
directory
either-unwrap
filepath
process
random
split
text
time
vector
ViennaRNAParser
];
doHaddock = false;
doCheck = false;
description = "Unsupervized construction of RNA family models";
license = stdenv.lib.licenses.gpl3;

}) {};
"RSA" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, crypto-api
, crypto-pubkey-types
, pureMD5
, SHA
, stdenv
}:
mkDerivation {

pname = "RSA";
version = "2.2.0";
sha256 = "293056d43352716d7f9501aac7ac9871c338f00d40c97a54c927a798f8a4f2d7";
libraryHaskellDepends = [
base
binary
bytestring
crypto-api
crypto-pubkey-types
pureMD5
SHA
];
doHaddock = false;
doCheck = false;
description = "Implementation of RSA, using the padding schemes of PKCS#1 v2.1.";
license = stdenv.lib.licenses.bsd3;

}) {};
"Rasterific" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, dlist
, FontyFruity
, free
, JuicyPixels
, mtl
, primitive
, stdenv
, transformers
, vector
, vector-algorithms
}:
mkDerivation {

pname = "Rasterific";
version = "0.7.1";
sha256 = "a3614c5d87c6aacbbd2aabc16d1258f559b03bf46537f47c375949438e7eb5ef";
revision = "1";
editedCabalFile = "12fhwz7bkl7lkk81pxjq999k9v24592cr0l0gssr4wzbfx2baf3d";
libraryHaskellDepends = [
base
bytestring
containers
dlist
FontyFruity
free
JuicyPixels
mtl
primitive
transformers
vector
vector-algorithms
];
doHaddock = false;
doCheck = false;
description = "A pure haskell drawing engine";
license = stdenv.lib.licenses.bsd3;

}) {};
"ReadArgs" = callPackage
({
  mkDerivation
, base
, stdenv
, system-filepath
, text
}:
mkDerivation {

pname = "ReadArgs";
version = "1.2.3";
sha256 = "9f4b2a9dfa9f0d851f79853a56ffde3b35e218d5f2bf8354c91a1344a1251a69";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
system-filepath
text
];
executableHaskellDepends = [
base
system-filepath
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/rampion/ReadArgs";
description = "Simple command line argument parsing";
license = stdenv.lib.licenses.bsd3;

}) {};
"RefSerialize" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, hashtables
, stdenv
, stringsearch
}:
mkDerivation {

pname = "RefSerialize";
version = "0.4.0";
sha256 = "05b25eb1ab943d96119aa2acca678fc8f194c3411af521e3835f4de5c752bbb2";
libraryHaskellDepends = [
base
binary
bytestring
containers
hashtables
stringsearch
];
doHaddock = false;
doCheck = false;
description = "Write to and read from ByteStrings maintaining internal memory references";
license = stdenv.lib.licenses.bsd3;

}) {};
"RepLib" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "RepLib";
version = "0.5.4";
sha256 = "986447e27a4eb12408b9571f51c766612f31f99c40e94d031c796387ce24838d";
libraryHaskellDepends = [
base
containers
mtl
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sweirich/replib";
description = "Generic programming library with representation types";
license = stdenv.lib.licenses.bsd3;

}) {};
"SHA" = callPackage
({
  mkDerivation
, array
, base
, binary
, bytestring
, stdenv
}:
mkDerivation {

pname = "SHA";
version = "1.6.4.2";
sha256 = "c470176f63cbe49fd0502a1b32ef22bc01b1af42385583b8be94547750958a8c";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
base
binary
bytestring
];
doHaddock = false;
doCheck = false;
description = "Implementations of the SHA suite of message digest functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"STMonadTrans" = callPackage
({
  mkDerivation
, array
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "STMonadTrans";
version = "0.4.3";
sha256 = "574fd56cf74036c20d00a09d815659dbbb0ae51c8103d00c93cd9558ad3322db";
revision = "1";
editedCabalFile = "09kqrv9a4yhsdpix49h9qjw0j2fhxrgkjnfrnyxg1nspmqrvl50m";
libraryHaskellDepends = [
array
base
mtl
];
doHaddock = false;
doCheck = false;
description = "A monad transformer version of the ST monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"SVGFonts" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-markup
, blaze-svg
, bytestring
, cereal
, cereal-vector
, containers
, data-default-class
, diagrams-core
, diagrams-lib
, directory
, parsec
, split
, stdenv
, text
, tuple
, vector
, xml
}:
mkDerivation {

pname = "SVGFonts";
version = "1.6.0.1";
sha256 = "f727ef24f8591c2d6aea64d85c569db56db5324093dcf569d417ac6b1582d0f0";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
attoparsec
base
blaze-markup
blaze-svg
bytestring
cereal
cereal-vector
containers
data-default-class
diagrams-core
diagrams-lib
directory
parsec
split
text
tuple
vector
xml
];
doHaddock = false;
doCheck = false;
description = "Fonts from the SVG-Font format";
license = stdenv.lib.licenses.bsd3;

}) {};
"SafeSemaphore" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, stm
}:
mkDerivation {

pname = "SafeSemaphore";
version = "0.10.1";
sha256 = "21e5b737a378cae9e1faf85cab015316d4c84d4b37e6d9d202111cef8c4cef66";
revision = "1";
editedCabalFile = "1k61gqgfh6n3sj8ni8sfvpcm39nqc2msjfxk2pgmhfabvv48w5hv";
libraryHaskellDepends = [
base
containers
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ChrisKuklewicz/SafeSemaphore";
description = "Much safer replacement for QSemN, QSem, and SampleVar";
license = stdenv.lib.licenses.bsd3;

}) {};
"SegmentTree" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "SegmentTree";
version = "0.3";
sha256 = "6188c1b1276d7fa0391098a563df73dd522d20b57dc5321fe3418a9e3ca84fc1";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Data structure for querying the set (or count) of intervals covering given point";
license = stdenv.lib.licenses.bsd3;

}) {};
"ShellCheck" = callPackage
({
  mkDerivation
, base
, containers
, directory
, json
, mtl
, parsec
, process
, QuickCheck
, regex-tdfa
, stdenv
}:
mkDerivation {

pname = "ShellCheck";
version = "0.4.5";
sha256 = "53039ac314b99af691a99aec111572ee51b0579280c7fa5795ac48d0c4e02fa7";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
directory
json
mtl
parsec
process
QuickCheck
regex-tdfa
];
executableHaskellDepends = [
base
containers
directory
json
mtl
parsec
QuickCheck
regex-tdfa
];
doHaddock = false;
doCheck = false;
homepage = "http://www.shellcheck.net/";
description = "Shell script analysis tool";
license = stdenv.lib.licenses.gpl3;

}) {};
"Spintax" = callPackage
({
  mkDerivation
, attoparsec
, base
, extra
, mtl
, mwc-random
, stdenv
, text
}:
mkDerivation {

pname = "Spintax";
version = "0.3.1";
sha256 = "335e13554aa0a13c97b4f9258be904e3007c35a56e8131bdb363c5f7930fc521";
libraryHaskellDepends = [
attoparsec
base
extra
mtl
mwc-random
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/MichelBoucey/spintax";
description = "Random text generation based on spintax";
license = stdenv.lib.licenses.bsd3;

}) {};
"Spock" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, containers
, cryptonite
, focus
, hashable
, http-types
, hvect
, list-t
, monad-control
, mtl
, reroute
, resource-pool
, resourcet
, Spock-core
, stdenv
, stm
, stm-containers
, text
, time
, transformers
, transformers-base
, unordered-containers
, vault
, wai
}:
mkDerivation {

pname = "Spock";
version = "0.12.0.0";
sha256 = "8392d1ee34b46238c6bfe951080f06e11e1f3622d8402e7762c70aa61430e3d9";
revision = "1";
editedCabalFile = "0a9mfn2p1b6r6pc6n3a2l7xl4607mjj3fvsvpcipp2zvqsryi9c8";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
containers
cryptonite
focus
hashable
http-types
hvect
list-t
monad-control
mtl
reroute
resource-pool
resourcet
Spock-core
stm
stm-containers
text
time
transformers
transformers-base
unordered-containers
vault
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://www.spock.li";
description = "Another Haskell web framework for rapid development";
license = stdenv.lib.licenses.bsd3;

}) {};
"Spock-api" = callPackage
({
  mkDerivation
, aeson
, base
, deepseq
, hvect
, reroute
, stdenv
}:
mkDerivation {

pname = "Spock-api";
version = "0.12.0.0";
sha256 = "8cfdbcbd2fa426c595fb7d29f8a6395dea17476c15d5ae863da2605b1c6ebe00";
revision = "1";
editedCabalFile = "0w0xah0lirgrs1xvlw5z6saa3wvzdl5r3yq3zxipg7kmrfxgbfbz";
libraryHaskellDepends = [
aeson
base
deepseq
hvect
reroute
];
doHaddock = false;
doCheck = false;
homepage = "https://www.spock.li";
description = "Another Haskell web framework for rapid development";
license = stdenv.lib.licenses.bsd3;

}) {};
"Spock-api-server" = callPackage
({
  mkDerivation
, base
, hvect
, mtl
, Spock-api
, Spock-core
, stdenv
}:
mkDerivation {

pname = "Spock-api-server";
version = "0.12.0.0";
sha256 = "29734206823875ec71d7cad14bf012adb70b01700975e2181a7cb52713b131ce";
libraryHaskellDepends = [
base
hvect
mtl
Spock-api
Spock-core
];
doHaddock = false;
doCheck = false;
homepage = "https://www.spock.li";
description = "Another Haskell web framework for rapid development";
license = stdenv.lib.licenses.bsd3;

}) {};
"Spock-core" = callPackage
({
  mkDerivation
, aeson
, base
, base64-bytestring
, bytestring
, case-insensitive
, containers
, cookie
, directory
, hashable
, http-api-data
, http-types
, hvect
, mtl
, old-locale
, reroute
, resourcet
, stdenv
, stm
, superbuffer
, text
, time
, transformers
, unordered-containers
, vault
, wai
, wai-extra
, warp
}:
mkDerivation {

pname = "Spock-core";
version = "0.12.0.0";
sha256 = "e69b70ea3027fa644d546bcae25bbf75e38abd6f4a7f88f0628fea6e16e97895";
revision = "1";
editedCabalFile = "0xk6kmka807ifwldr34wjgkwdn19p848ik6lmm2zyah08amvcgqq";
libraryHaskellDepends = [
aeson
base
base64-bytestring
bytestring
case-insensitive
containers
cookie
directory
hashable
http-api-data
http-types
hvect
mtl
old-locale
reroute
resourcet
stm
superbuffer
text
time
transformers
unordered-containers
vault
wai
wai-extra
warp
];
doHaddock = false;
doCheck = false;
homepage = "https://www.spock.li";
description = "Another Haskell web framework for rapid development";
license = stdenv.lib.licenses.bsd3;

}) {};
"Spock-lucid" = callPackage
({
  mkDerivation
, base
, blaze-builder
, lucid
, Spock
, stdenv
, transformers
}:
mkDerivation {

pname = "Spock-lucid";
version = "0.3.0.0";
sha256 = "9291c9105d45f1807a63a633475b8e32ad9f9b99d3eff0db247079d69f707f3c";
libraryHaskellDepends = [
base
blaze-builder
lucid
Spock
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/Spock-lucid";
description = "Lucid support for Spock";
license = stdenv.lib.licenses.bsd3;

}) {};
"Spock-worker" = callPackage
({
  mkDerivation
, base
, containers
, errors
, lifted-base
, mtl
, Spock
, stdenv
, stm
, text
, time
, transformers
, vector
}:
mkDerivation {

pname = "Spock-worker";
version = "0.3.1.0";
sha256 = "edc009d59fe528ab3bee887b8092f720a8a4ee85b550dec065964ed55c76dc4b";
libraryHaskellDepends = [
base
containers
errors
lifted-base
mtl
Spock
stm
text
time
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/agrafix/Spock-worker";
description = "Background workers for Spock";
license = stdenv.lib.licenses.mit;

}) {};
"StateVar" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
, transformers
}:
mkDerivation {

pname = "StateVar";
version = "1.1.0.4";
sha256 = "7ad68decb5c9a76f83c95ece5fa13d1b053e4fb1079bd2d3538f6b05014dffb7";
libraryHaskellDepends = [
base
stm
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-opengl/StateVar";
description = "State variables";
license = stdenv.lib.licenses.bsd3;

}) {};
"Strafunski-StrategyLib" = callPackage
({
  mkDerivation
, base
, directory
, mtl
, stdenv
, syb
, transformers
}:
mkDerivation {

pname = "Strafunski-StrategyLib";
version = "5.0.0.10";
sha256 = "308a1a051df6bb617c9d37bda297fdbedfb8b4c7f6ea5864443cfb9f15e80cc2";
revision = "1";
editedCabalFile = "031p57vf33vdhwk1p4d1jzpk8fcl2js8kzdg7gyhz9g11vl2n4j9";
libraryHaskellDepends = [
base
directory
mtl
syb
transformers
];
doHaddock = false;
doCheck = false;
description = "Library for strategic programming";
license = stdenv.lib.licenses.bsd3;

}) {};
"TCache" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, hashtables
, mtl
, old-time
, RefSerialize
, stdenv
, stm
, text
}:
mkDerivation {

pname = "TCache";
version = "0.12.1";
sha256 = "f134b45fcdd127fa1a4214f01d44dc34e994fed137cec63f4c4ea632363ab7bd";
libraryHaskellDepends = [
base
bytestring
containers
directory
hashtables
mtl
old-time
RefSerialize
stm
text
];
doHaddock = false;
doCheck = false;
description = "A Transactional cache with user-defined persistence";
license = stdenv.lib.licenses.bsd3;

}) {};
"Taxonomy" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, either-unwrap
, fgl
, graphviz
, parsec
, stdenv
, text
, vector
}:
mkDerivation {

pname = "Taxonomy";
version = "1.0.2";
sha256 = "343e94d5cd555a99b242b50d253b0862c2174f7d3ea2b4935cdac642a414d21c";
libraryHaskellDepends = [
aeson
base
bytestring
either-unwrap
fgl
graphviz
parsec
text
vector
];
doHaddock = false;
doCheck = false;
description = "Libary for parsing, processing and vizualization of taxonomy data";
license = stdenv.lib.licenses.gpl3;

}) {};
"TypeCompose" = callPackage
({
  mkDerivation
, base
, base-orphans
, stdenv
}:
mkDerivation {

pname = "TypeCompose";
version = "0.9.12";
sha256 = "3a182c2cc93f8291b3aedfc32c0b1faa84a982601c1a24cbe7fe1ecc50e333e2";
revision = "1";
editedCabalFile = "0j27xdfim7a6a16v834n3jdp1j7bsr3yn19bnfwni3xsvrc732q3";
libraryHaskellDepends = [
base
base-orphans
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/conal/TypeCompose";
description = "Type composition classes & instances";
license = stdenv.lib.licenses.bsd3;

}) {};
"Unique" = callPackage
({
  mkDerivation
, base
, containers
, extra
, hashable
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "Unique";
version = "0.4.6.1";
sha256 = "8b9648383b28087fedf16b7bcb7c6c2137873a59af2d1ef8460fba1c902a84f9";
libraryHaskellDepends = [
base
containers
extra
hashable
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "It provides the functionality like unix \"uniq\" utility";
license = stdenv.lib.licenses.bsd3;

}) {};
"Unixutils" = callPackage
({
  mkDerivation
, base
, bytestring
, directory
, exceptions
, filepath
, mtl
, process
, process-extras
, pureMD5
, regex-tdfa
, stdenv
, unix
, zlib
}:
mkDerivation {

pname = "Unixutils";
version = "1.54.1";
sha256 = "f9295529744cb2658364956f376ff506dc1876eb2b0148e5b09c1a4bc4732644";
libraryHaskellDepends = [
base
bytestring
directory
exceptions
filepath
mtl
process
process-extras
pureMD5
regex-tdfa
unix
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/seereason/haskell-unixutils.git";
description = "A crude interface between Haskell and Unix-like operating systems";
license = stdenv.lib.licenses.bsd3;

}) {};
"ViennaRNAParser" = callPackage
({
  mkDerivation
, base
, parsec
, ParsecTools
, process
, stdenv
, transformers
}:
mkDerivation {

pname = "ViennaRNAParser";
version = "1.3.2";
sha256 = "daff4df1a477ee3df01b30cda344e889818b761748e2b9aee0b8e2f46e0fa844";
libraryHaskellDepends = [
base
parsec
ParsecTools
process
transformers
];
doHaddock = false;
doCheck = false;
description = "Libary for parsing ViennaRNA package output";
license = "GPL";

}) {};
"Win32" = callPackage
({
  mkDerivation
, advapi32
, base
, bytestring
, gdi32
, shell32
, shfolder
, stdenv
, user32
, winmm
}:
mkDerivation {

pname = "Win32";
version = "2.3.1.1";
sha256 = "5c57f6ca9e13bb9e945bfe25b85390451fff589ae5e1e2522fc939a144c7a588";
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
advapi32
gdi32
shell32
shfolder
user32
winmm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell/win32";
description = "A binding to part of the Win32 library";
license = stdenv.lib.licenses.bsd3;
platforms = stdenv.lib.platforms.none;

}) {inherit (pkgs) advapi32; inherit (pkgs) gdi32;
inherit (pkgs) shell32; inherit (pkgs) shfolder;
inherit (pkgs) user32; inherit (pkgs) winmm;};
"Win32-extras" = callPackage
({
  mkDerivation
, base
, imm32
, msimg32
, stdenv
, Win32
}:
mkDerivation {

pname = "Win32-extras";
version = "0.2.0.1";
sha256 = "f0dc0e62d87114953e111bb3c8a09f90d5dba490007c4f26d8b892a3f4c69902";
revision = "1";
editedCabalFile = "0gxp1a5sk9jb7x1mvz5jk68n8npvh8b9nlqcw9s2dn4wlyicm4mp";
libraryHaskellDepends = [
base
Win32
];
librarySystemDepends = [
imm32
msimg32
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/shelarcy/Win32-extras/";
description = "Provides missing Win32 API";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) imm32; inherit (pkgs) msimg32;};
"Win32-notify" = callPackage
({
  mkDerivation
, base
, containers
, directory
, stdenv
, Win32
}:
mkDerivation {

pname = "Win32-notify";
version = "0.3.0.1";
sha256 = "c49159d8154f9ff7d30207901125ceadc2aa94baa3b2996ff0884e9f0158eb7f";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
directory
Win32
];
doHaddock = false;
doCheck = false;
description = "A binding to part of the Win32 library for file notification";
license = stdenv.lib.licenses.bsd3;

}) {};
"Workflow" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, directory
, exceptions
, extensible-exceptions
, mtl
, old-time
, RefSerialize
, stdenv
, stm
, TCache
, vector
}:
mkDerivation {

pname = "Workflow";
version = "0.8.3";
sha256 = "c89b4b3a4a29fe576f8972ffa1e698eff8ac0ceb433642fc0b3f9c0308d22123";
revision = "1";
editedCabalFile = "0jy6hn1lx9wpq44ld96msgb6a2hb6cvryn1a39b4rq4iy3m45r8v";
libraryHaskellDepends = [
base
binary
bytestring
containers
directory
exceptions
extensible-exceptions
mtl
old-time
RefSerialize
stm
TCache
vector
];
doHaddock = false;
doCheck = false;
description = "Workflow patterns over a monad for thread state logging & recovery";
license = stdenv.lib.licenses.bsd3;

}) {};
"X11" = callPackage
({
  mkDerivation
, base
, data-default
, libX11
, libXext
, libXinerama
, libXrandr
, libXrender
, libXScrnSaver
, stdenv
}:
mkDerivation {

pname = "X11";
version = "1.8";
sha256 = "541b166aab1e05a92dc8f42a511d827e7aad373af12ae283b9df9982ccc09d8e";
libraryHaskellDepends = [
base
data-default
];
librarySystemDepends = [
libX11
libXext
libXinerama
libXrandr
libXrender
libXScrnSaver
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/xmonad/X11";
description = "A binding to the X11 graphics library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) libX11; inherit (pkgs) libXext;
inherit (pkgs) libXrandr;};
"Xauth" = callPackage
({
  mkDerivation
, base
, libXau
, stdenv
}:
mkDerivation {

pname = "Xauth";
version = "0.1";
sha256 = "ba332dea9ec152b3f676d22461eee81a657e16987c3dfb8249e9dbe0cda56ed7";
libraryHaskellDepends = [
base
];
libraryPkgconfigDepends = [
libXau
];
doHaddock = false;
doCheck = false;
description = "A binding to the X11 authentication library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) libXau;};
"Yampa" = callPackage
({
  mkDerivation
, base
, deepseq
, random
, stdenv
}:
mkDerivation {

pname = "Yampa";
version = "0.10.5";
sha256 = "ebb5fb1091f913b246fb2e9dd8278d642dbb88bfd248e34fff1ac796299cf6d7";
libraryHaskellDepends = [
base
deepseq
random
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Yampa";
description = "Library for programming hybrid systems";
license = stdenv.lib.licenses.bsd3;

}) {};
"YampaSynth" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, HCodecs
, stdenv
, Yampa
}:
mkDerivation {

pname = "YampaSynth";
version = "0.2";
sha256 = "a1c6a0ea57aee855ca3f558f1b6d7ec167abb57333052d8a9f7b46ef323d0a09";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
array
base
bytestring
containers
HCodecs
Yampa
];
doHaddock = false;
doCheck = false;
homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
description = "Software synthesizer";
license = stdenv.lib.licenses.bsd3;

}) {};
"abstract-deque" = callPackage
({
  mkDerivation
, array
, base
, containers
, random
, stdenv
, time
}:
mkDerivation {

pname = "abstract-deque";
version = "0.3";
sha256 = "09aa10f38193a8275a7791b92a4f3a7192a304874637e2a35c897dde25d75ca2";
libraryHaskellDepends = [
array
base
containers
random
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
description = "Abstract, parameterized interface to mutable Deques";
license = stdenv.lib.licenses.bsd3;

}) {};
"abstract-par" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "abstract-par";
version = "0.3.3";
sha256 = "248a8739bd902462cb16755b690b55660e196e58cc7e6ef8157a72c2a3d5d860";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/simonmar/monad-par";
description = "Type classes generalizing the functionality of the 'monad-par' library";
license = stdenv.lib.licenses.bsd3;

}) {};
"accelerate" = callPackage
({
  mkDerivation
, array
, base
, containers
, fclabels
, ghc-prim
, hashable
, hashtables
, pretty
, stdenv
, template-haskell
, unordered-containers
}:
mkDerivation {

pname = "accelerate";
version = "0.15.1.0";
sha256 = "db0f9a5bd8ba6e264561bb62b213384e70baae6fe90208ea2ee101f553556b1d";
revision = "1";
editedCabalFile = "0dgzfcc2yjxqq5llvm19lak16ymsqghalm33y0calgp07fwkp1hj";
libraryHaskellDepends = [
array
base
containers
fclabels
ghc-prim
hashable
hashtables
pretty
template-haskell
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AccelerateHS/accelerate/";
description = "An embedded language for accelerated array processing";
license = stdenv.lib.licenses.bsd3;

}) {};
"accuerr" = callPackage
({
  mkDerivation
, base
, bifunctors
, lens
, semigroups
, stdenv
}:
mkDerivation {

pname = "accuerr";
version = "0.2.0.2";
sha256 = "4f6a8230d2ad3bc274dea234208ce4f5282e2d9413a5da1f5505fc55a2fa9a36";
libraryHaskellDepends = [
base
bifunctors
lens
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/massysett/accuerr";
description = "Data type like Either but with accumulating error type";
license = stdenv.lib.licenses.bsd3;

}) {};
"ace" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-html
, blaze-markup
, data-default
, parsec
, stdenv
, text
}:
mkDerivation {

pname = "ace";
version = "0.6";
sha256 = "d3472b659d26cf7ea9afa207ec24ac0314598de997722e636e9bfa24b3900738";
libraryHaskellDepends = [
attoparsec
base
blaze-html
blaze-markup
data-default
parsec
text
];
doHaddock = false;
doCheck = false;
description = "Attempto Controlled English parser and printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"acid-state" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, cereal
, containers
, directory
, extensible-exceptions
, filepath
, mtl
, network
, safecopy
, stdenv
, stm
, template-haskell
, unix
}:
mkDerivation {

pname = "acid-state";
version = "0.14.2";
sha256 = "86dc1ebbcb4870e1c233764c3e038f38c8c8802694440baf83c3f7dc05ebe5c0";
libraryHaskellDepends = [
array
base
bytestring
cereal
containers
directory
extensible-exceptions
filepath
mtl
network
safecopy
stm
template-haskell
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://acid-state.seize.it/";
description = "Add ACID guarantees to any serializable Haskell data structure";
license = stdenv.lib.licenses.publicDomain;

}) {};
"action-permutations" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "action-permutations";
version = "0.0.0.1";
sha256 = "a419ee59f996e5305afd96336a561a9fcf26844362eaa32ab6b747a8f9fd1466";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Execute a set of actions (e.g. parsers) in each possible order";
license = stdenv.lib.licenses.bsd3;

}) {};
"active" = callPackage
({
  mkDerivation
, base
, lens
, linear
, semigroupoids
, semigroups
, stdenv
, vector
}:
mkDerivation {

pname = "active";
version = "0.2.0.12";
sha256 = "55281f8fad2b2776969d04d1769fb99498477b58570e02f7a5c69022e3a8b91e";
revision = "2";
editedCabalFile = "17x1irvhj2snkljgdplm1330a4ji3lz9myi809hvxk37knfp9djq";
libraryHaskellDepends = [
base
lens
linear
semigroupoids
semigroups
vector
];
doHaddock = false;
doCheck = false;
description = "Abstractions for animation";
license = stdenv.lib.licenses.bsd3;

}) {};
"ad" = callPackage
({
  mkDerivation
, array
, base
, comonad
, containers
, data-reify
, erf
, free
, nats
, reflection
, stdenv
, transformers
}:
mkDerivation {

pname = "ad";
version = "4.3.2.1";
sha256 = "84de5524f60a088f4a326956434c74f32b9c4961be616fb3f1fbea620413e39d";
libraryHaskellDepends = [
array
base
comonad
containers
data-reify
erf
free
nats
reflection
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/ad";
description = "Automatic Differentiation";
license = stdenv.lib.licenses.bsd3;

}) {};
"adjunctions" = callPackage
({
  mkDerivation
, array
, base
, comonad
, containers
, contravariant
, distributive
, free
, mtl
, profunctors
, semigroupoids
, semigroups
, stdenv
, tagged
, transformers
, transformers-compat
, void
}:
mkDerivation {

pname = "adjunctions";
version = "4.3";
sha256 = "b948a14fafe8857f451ae3e474f5264c907b5a2d841d52bf78249ae4749c3ecc";
revision = "1";
editedCabalFile = "1079l9szyr7ybi9wcvv1vjsjfrqirkn9z3j7dann8vbk81a4z37q";
libraryHaskellDepends = [
array
base
comonad
containers
contravariant
distributive
free
mtl
profunctors
semigroupoids
semigroups
tagged
transformers
transformers-compat
void
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/adjunctions/";
description = "Adjunctions and representable functors";
license = stdenv.lib.licenses.bsd3;

}) {};
"adler32" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, zlib
}:
mkDerivation {

pname = "adler32";
version = "0.1.1.0";
sha256 = "578cb9ea7451dc905a22de15e46f8d6fc27f76e4c6f75352a70ebfe53a6928ec";
revision = "1";
editedCabalFile = "087fykdlay78g9zg1w6a36xwd4pizcyi5wqzvj7cw5sh6gq493km";
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/redneb/hs-adler32";
description = "An implementation of Adler-32, supporting rolling checksum operation";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) zlib;};
"aeson" = callPackage
({
  mkDerivation
, attoparsec
, base
, base-compat
, bytestring
, containers
, deepseq
, dlist
, ghc-prim
, hashable
, scientific
, stdenv
, tagged
, template-haskell
, text
, time
, time-locale-compat
, unordered-containers
, vector
}:
mkDerivation {

pname = "aeson";
version = "1.0.2.1";
sha256 = "e0a66fba0a9996063d0e241b0b868c6271b6aeb457821a78bfcaac5d84c89066";
revision = "1";
editedCabalFile = "1wfplxb4bppx2bqxbwprl09w9h9bfwn4ak97g8nrdrm30xfqv16g";
libraryHaskellDepends = [
attoparsec
base
base-compat
bytestring
containers
deepseq
dlist
ghc-prim
hashable
scientific
tagged
template-haskell
text
time
time-locale-compat
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/aeson";
description = "Fast JSON parsing and encoding";
license = stdenv.lib.licenses.bsd3;

}) {};
"aeson-better-errors" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, dlist
, mtl
, scientific
, stdenv
, text
, transformers
, transformers-compat
, unordered-containers
, vector
, void
}:
mkDerivation {

pname = "aeson-better-errors";
version = "0.9.1.0";
sha256 = "68f001bf055ec7b755d91019f2a0ef136307d157a231acddad6b4cc561f67327";
libraryHaskellDepends = [
aeson
base
bytestring
dlist
mtl
scientific
text
transformers
transformers-compat
unordered-containers
vector
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hdgarrood/aeson-better-errors";
description = "Better error messages when decoding JSON values";
license = stdenv.lib.licenses.mit;

}) {};
"aeson-casing" = callPackage
({
  mkDerivation
, aeson
, base
, stdenv
}:
mkDerivation {

pname = "aeson-casing";
version = "0.1.0.5";
sha256 = "cfec563dc6822f035858a7190153d8818c200be565806b43b70f198bf5410577";
libraryHaskellDepends = [
aeson
base
];
doHaddock = false;
doCheck = false;
description = "Tools to change the formatting of field names in Aeson instances";
license = stdenv.lib.licenses.mit;

}) {};
"aeson-compat" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base-compat
, bytestring
, containers
, exceptions
, hashable
, nats
, scientific
, semigroups
, stdenv
, tagged
, text
, time
, time-locale-compat
, unordered-containers
, vector
}:
mkDerivation {

pname = "aeson-compat";
version = "0.3.6";
sha256 = "7aa365d9f44f708f25c939489528836aa10b411e0a3e630c8c2888670874d142";
revision = "6";
editedCabalFile = "1hvq2pp7k2wqlzd192l7dz1dhld7m3slhv84hnmh4jz8g618xzsc";
libraryHaskellDepends = [
aeson
attoparsec
base
base-compat
bytestring
containers
exceptions
hashable
nats
scientific
semigroups
tagged
text
time
time-locale-compat
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/aeson-compat#readme";
description = "Compatibility layer for aeson";
license = stdenv.lib.licenses.bsd3;

}) {};
"aeson-extra" = callPackage
({
  mkDerivation
, aeson
, aeson-compat
, attoparsec
, base
, base-compat
, bytestring
, containers
, exceptions
, hashable
, parsec
, recursion-schemes
, scientific
, stdenv
, template-haskell
, text
, time
, time-parsers
, unordered-containers
, vector
}:
mkDerivation {

pname = "aeson-extra";
version = "0.4.0.0";
sha256 = "78ecedf65f8b68c09223912878e2a055aa38536489eddc9b47911cbc05aba594";
revision = "3";
editedCabalFile = "11wps0p4wrm68zzck6km0yxj988xnkcbaww1vlyd02jv3vzyb16z";
libraryHaskellDepends = [
aeson
aeson-compat
attoparsec
base
base-compat
bytestring
containers
exceptions
hashable
parsec
recursion-schemes
scientific
template-haskell
text
time
time-parsers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/aeson-extra#readme";
description = "Extra goodies for aeson";
license = stdenv.lib.licenses.bsd3;

}) {};
"aeson-generic-compat" = callPackage
({
  mkDerivation
, aeson
, base
, stdenv
}:
mkDerivation {

pname = "aeson-generic-compat";
version = "0.0.1.0";
sha256 = "d4a05e4d351350f4ce7e270c85dcd990c81d879fd1208a6371865f5b2190d3ad";
libraryHaskellDepends = [
aeson
base
];
doHaddock = false;
doCheck = false;
description = "Compatible generic class names of Aeson";
license = stdenv.lib.licenses.bsd3;

}) {};
"aeson-injector" = callPackage
({
  mkDerivation
, aeson
, base
, bifunctors
, deepseq
, lens
, servant-docs
, stdenv
, swagger2
, text
, unordered-containers
}:
mkDerivation {

pname = "aeson-injector";
version = "1.0.7.0";
sha256 = "de379a3727b81d537bd068d2b22dec4631daf193b992d4a0d9a878535eae41d8";
libraryHaskellDepends = [
aeson
base
bifunctors
deepseq
lens
servant-docs
swagger2
text
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Injecting fields into aeson values";
license = stdenv.lib.licenses.mit;

}) {};
"aeson-pretty" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base-compat
, bytestring
, cmdargs
, scientific
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "aeson-pretty";
version = "0.8.2";
sha256 = "6cb429821040bdd6f819b1c6170cac630a4155fa57fa24eb3d496c06030fb9b0";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
base-compat
bytestring
scientific
text
unordered-containers
vector
];
executableHaskellDepends = [
aeson
attoparsec
base
bytestring
cmdargs
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/informatikr/aeson-pretty";
description = "JSON pretty-printing library and command-line tool";
license = stdenv.lib.licenses.bsd3;

}) {};
"aeson-qq" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base-compat
, haskell-src-meta
, parsec
, scientific
, stdenv
, template-haskell
, text
, vector
}:
mkDerivation {

pname = "aeson-qq";
version = "0.8.1";
sha256 = "2dcd2392902baac446e317621df509b09db9dca9b8c9187e53701226f18013fd";
libraryHaskellDepends = [
aeson
attoparsec
base
base-compat
haskell-src-meta
parsec
scientific
template-haskell
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/zalora/aeson-qq";
description = "JSON quasiquoter for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"aeson-utils" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, scientific
, stdenv
, text
}:
mkDerivation {

pname = "aeson-utils";
version = "0.3.0.2";
sha256 = "71814b1be8849f945395eb81217a2ad464f2943134c50c09afd8a3126add4b1f";
revision = "6";
editedCabalFile = "06jpkp95sicqv9kjasgwwd89kfrnz37402ppvgg5567sbg1wm9zh";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
scientific
text
];
doHaddock = false;
doCheck = false;
description = "Utilities for working with Aeson";
license = stdenv.lib.licenses.bsd3;

}) {};
"airship" = callPackage
({
  mkDerivation
, attoparsec
, base
, base64-bytestring
, blaze-builder
, bytestring
, bytestring-trie
, case-insensitive
, containers
, cryptohash
, directory
, either
, filepath
, http-date
, http-media
, http-types
, lifted-base
, microlens
, mime-types
, mmorph
, monad-control
, mtl
, network
, old-locale
, random
, stdenv
, text
, time
, transformers
, transformers-base
, unix
, unordered-containers
, wai
, wai-extra
}:
mkDerivation {

pname = "airship";
version = "0.6.0";
sha256 = "e4ca2be5c5dfcd51dfd95449b108ed9bb463b3fdeae45449ecba9f8271051fd6";
libraryHaskellDepends = [
attoparsec
base
base64-bytestring
blaze-builder
bytestring
bytestring-trie
case-insensitive
containers
cryptohash
directory
either
filepath
http-date
http-media
http-types
lifted-base
microlens
mime-types
mmorph
monad-control
mtl
network
old-locale
random
text
time
transformers
transformers-base
unix
unordered-containers
wai
wai-extra
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/helium/airship/";
description = "A Webmachine-inspired HTTP library";
license = stdenv.lib.licenses.mit;

}) {};
"alarmclock" = callPackage
({
  mkDerivation
, async
, base
, clock
, stdenv
, stm
, time
, unbounded-delays
}:
mkDerivation {

pname = "alarmclock";
version = "0.4.0.2";
sha256 = "a84c412ac9ded121d1916ce05c9b5e33e35d0fdba1ae86a8202021ff1b28e91c";
libraryHaskellDepends = [
async
base
clock
stm
time
unbounded-delays
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/davecturner/alarmclock";
description = "Wake up and perform an action at a certain time";
license = stdenv.lib.licenses.bsd3;

}) {};
"alex" = callPackage
({
  mkDerivation
, array
, base
, Cabal
, containers
, directory
, filepath
, happy
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "alex";
version = "3.2.1";
sha256 = "a4e7f7ec729f4fae5a5c778bc48421a90acf65c7278f6970cf123fb3b6230e6c";
revision = "1";
editedCabalFile = "1nl05l0dkai8i9x9fx288ka010hp6yhy3dmvfhjkqpfakimfcs1s";
isLibrary = false;
isExecutable = true;
setupHaskellDepends = [
base
Cabal
directory
filepath
];
executableHaskellDepends = [
array
base
containers
directory
QuickCheck
];
executableToolDepends = [
happy
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/alex/";
description = "Alex is a tool for generating lexical analysers in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"alternators" = callPackage
({
  mkDerivation
, base
, mmorph
, stdenv
, transformers
}:
mkDerivation {

pname = "alternators";
version = "0.1.1.0";
sha256 = "f95d9a4826c57194e2a22e41a9f0eaef0e96cf95f6372179aa7c47bc3ca8f627";
libraryHaskellDepends = [
base
mmorph
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/alternators#readme";
description = "Handy functions when using transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"amazonka" = callPackage
({
  mkDerivation
, amazonka-core
, base
, bytestring
, conduit
, conduit-extra
, directory
, exceptions
, http-conduit
, ini
, mmorph
, monad-control
, mtl
, resourcet
, retry
, stdenv
, text
, time
, transformers
, transformers-base
, transformers-compat
}:
mkDerivation {

pname = "amazonka";
version = "1.4.5";
sha256 = "86e7b7ef0dea4a6bc9a7644ec17908a3d9f781ac1190fcb4bd33690b8bca885c";
revision = "1";
editedCabalFile = "1k7qwrdy8r4pfx0b4wil8q2hrb7gb77dr1g4k0dj8qqppmj7mhmb";
libraryHaskellDepends = [
amazonka-core
base
bytestring
conduit
conduit-extra
directory
exceptions
http-conduit
ini
mmorph
monad-control
mtl
resourcet
retry
text
time
transformers
transformers-base
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Comprehensive Amazon Web Services SDK";
license = "unknown";

}) {};
"amazonka-apigateway" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-apigateway";
version = "1.4.5";
sha256 = "cccd4f7832b75b3df0de5946fdc0d9277fe2e267fce7a93524ebc609234d0e4a";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon API Gateway SDK";
license = "unknown";

}) {};
"amazonka-application-autoscaling" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-application-autoscaling";
version = "1.4.5";
sha256 = "e6b4e51be8eb4279e0a5daa81b858e6b7a35a7005d48e038c1b53d5c9feec24e";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Application Auto Scaling SDK";
license = "unknown";

}) {};
"amazonka-appstream" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-appstream";
version = "1.4.5";
sha256 = "7f15da60e2afdf90ea98bec5734c5f387e2676fd7ef9a1388501396f7782517c";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon AppStream SDK";
license = "unknown";

}) {};
"amazonka-autoscaling" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-autoscaling";
version = "1.4.5";
sha256 = "f887bf9f7ff88edc228dee99a858a097e6235f066886430ce4d7c5dc339e6bda";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Auto Scaling SDK";
license = "unknown";

}) {};
"amazonka-budgets" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-budgets";
version = "1.4.5";
sha256 = "a1363b6057e1e85b9e4a18491056f8eeeee7dbd4798cc3292ba89fb4e7ea1d8b";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Budgets SDK";
license = "unknown";

}) {};
"amazonka-certificatemanager" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-certificatemanager";
version = "1.4.5";
sha256 = "9990c1090044eb24013197b94bb923e800c6312c87c89f4caae6bbe36c0632b0";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Certificate Manager SDK";
license = "unknown";

}) {};
"amazonka-cloudformation" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudformation";
version = "1.4.5";
sha256 = "fac2471ee46e386baa7751ac091194d90f84c96eb0c0a1094e790ecb62ddb7f6";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudFormation SDK";
license = "unknown";

}) {};
"amazonka-cloudfront" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudfront";
version = "1.4.5";
sha256 = "0e89f49e5ab607a45f5ac94d9b47d3102c11c5d7b7249eb0303e9350a3a5aad1";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudFront SDK";
license = "unknown";

}) {};
"amazonka-cloudhsm" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudhsm";
version = "1.4.5";
sha256 = "0114a91437d3dfa7e03e656750a47fe2b4c223ec5c4a66ad533bd0893c77a837";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudHSM SDK";
license = "unknown";

}) {};
"amazonka-cloudsearch" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudsearch";
version = "1.4.5";
sha256 = "62c42b596e1682e438966f536db36e284926141487dd9c49a634f3ffacba325b";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudSearch SDK";
license = "unknown";

}) {};
"amazonka-cloudsearch-domains" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudsearch-domains";
version = "1.4.5";
sha256 = "e0090397d9d6ce30a99537bb5041b6085aa758502a809d8e5744cd222fea028a";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudSearch Domain SDK";
license = "unknown";

}) {};
"amazonka-cloudtrail" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudtrail";
version = "1.4.5";
sha256 = "45e80bd1a66402e9a56355a88bfaa3407fd9549f3ee66a9d9a344fccfaccc276";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudTrail SDK";
license = "unknown";

}) {};
"amazonka-cloudwatch" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudwatch";
version = "1.4.5";
sha256 = "00e6b5f8d949ed5b4d4c7fc2c8264677018c54d7e5f36a6ead297da22f8c2201";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudWatch SDK";
license = "unknown";

}) {};
"amazonka-cloudwatch-events" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudwatch-events";
version = "1.4.5";
sha256 = "b1a2b8119e6c104e2820febd9a743c74b220ea70b2fdb4d464a8edc0bdc9fc7d";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudWatch Events SDK";
license = "unknown";

}) {};
"amazonka-cloudwatch-logs" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudwatch-logs";
version = "1.4.5";
sha256 = "10cffb3ce3f6ee216b740b78d56a3689b7f1d4e0e367c92afac8f4d412799032";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudWatch Logs SDK";
license = "unknown";

}) {};
"amazonka-codebuild" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-codebuild";
version = "1.4.5";
sha256 = "24426e202b2171181bd3b0ffe8fa2e2032561d233fa36f1fe0dfb890887afdd0";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CodeBuild SDK";
license = "unknown";

}) {};
"amazonka-codecommit" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-codecommit";
version = "1.4.5";
sha256 = "fc8fed2cedf92680d4cffe7467c6b33259a0fb9b2461f11017eb85ce1a668063";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CodeCommit SDK";
license = "unknown";

}) {};
"amazonka-codedeploy" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-codedeploy";
version = "1.4.5";
sha256 = "b1f0222e0d3504c116f5b1ff6d4769edafe7655bb0fd0deaa955689e9f7071b7";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CodeDeploy SDK";
license = "unknown";

}) {};
"amazonka-codepipeline" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-codepipeline";
version = "1.4.5";
sha256 = "6608a8f8f1adc996cbba830988cde869c425b1bc779bdb7f259d619f654646ec";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CodePipeline SDK";
license = "unknown";

}) {};
"amazonka-cognito-identity" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cognito-identity";
version = "1.4.5";
sha256 = "2cac79694e1b0c0a694525904bf8031d57a79c5fee2dda16b1126655ccf50d06";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Cognito Identity SDK";
license = "unknown";

}) {};
"amazonka-cognito-idp" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cognito-idp";
version = "1.4.5";
sha256 = "bcf273498b47ecdfe30922bc22ad68d8d04773fd1a4ede8d98b6598cd7126618";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Cognito Identity Provider SDK";
license = "unknown";

}) {};
"amazonka-cognito-sync" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cognito-sync";
version = "1.4.5";
sha256 = "1331523164798c0162904f58d95a100fec9527652fcdebb81846c460a6344edf";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Cognito Sync SDK";
license = "unknown";

}) {};
"amazonka-config" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-config";
version = "1.4.5";
sha256 = "775c5b9ff6efb185ee6954aaf57f607ac1fcc386daf6a7aa7071e7364c7fbe24";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Config SDK";
license = "unknown";

}) {};
"amazonka-core" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bifunctors
, bytestring
, case-insensitive
, conduit
, conduit-extra
, cryptonite
, deepseq
, exceptions
, hashable
, http-conduit
, http-types
, lens
, memory
, mtl
, resourcet
, scientific
, semigroups
, stdenv
, tagged
, text
, time
, transformers
, transformers-compat
, unordered-containers
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "amazonka-core";
version = "1.4.5";
sha256 = "db13e1d0ced722c21187815f34975d08a6e5a432ed58c17b3bbac75389cdee7f";
revision = "2";
editedCabalFile = "1ii2y0sz9whxy395k1cjygp0ajvf10qb9ibm16dgwjdmkyvl2jgb";
libraryHaskellDepends = [
aeson
attoparsec
base
bifunctors
bytestring
case-insensitive
conduit
conduit-extra
cryptonite
deepseq
exceptions
hashable
http-conduit
http-types
lens
memory
mtl
resourcet
scientific
semigroups
tagged
text
time
transformers
transformers-compat
unordered-containers
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Core data types and functionality for Amazonka libraries";
license = "unknown";

}) {};
"amazonka-datapipeline" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-datapipeline";
version = "1.4.5";
sha256 = "258812a9a3c553bf56e8d18f32ff69d28860f65664fb2510e5f5b1ff3ff25cb5";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Data Pipeline SDK";
license = "unknown";

}) {};
"amazonka-devicefarm" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-devicefarm";
version = "1.4.5";
sha256 = "ea472974c93f360186baea4a5b746ac37ff1c573c778b747c9be479dda458802";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Device Farm SDK";
license = "unknown";

}) {};
"amazonka-directconnect" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-directconnect";
version = "1.4.5";
sha256 = "52139e543342d60607fc24e0ff5a25e38dc8868590aefbabf659bced71b3dea9";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Direct Connect SDK";
license = "unknown";

}) {};
"amazonka-discovery" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-discovery";
version = "1.4.5";
sha256 = "df5781938eda734bcce63fc6f7b674422bfa1dde5dbdf46d6cc1cf7bcdbcadb8";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Application Discovery Service SDK";
license = "unknown";

}) {};
"amazonka-dms" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-dms";
version = "1.4.5";
sha256 = "334209b75c646cb4783ec19b98bece9274291402627bc65a86180bffb15171fc";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Database Migration Service SDK";
license = "unknown";

}) {};
"amazonka-ds" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-ds";
version = "1.4.5";
sha256 = "e711f34752793135a9bc088789f69482faf3044d23394c0455a8873ec76944dd";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Directory Service SDK";
license = "unknown";

}) {};
"amazonka-dynamodb" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-dynamodb";
version = "1.4.5";
sha256 = "74b23d5a012af7b2f3a14001a41496e22bdc61884aa52b8aac7f687c64bcd762";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon DynamoDB SDK";
license = "unknown";

}) {};
"amazonka-dynamodb-streams" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-dynamodb-streams";
version = "1.4.5";
sha256 = "83a340d763fbcd62b0b6f4c09358646516c7949b5f86423d4263874175e1feed";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon DynamoDB Streams SDK";
license = "unknown";

}) {};
"amazonka-ec2" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-ec2";
version = "1.4.5";
sha256 = "e4a4938f947b6d69b799b5abc47a2d36e57ba68fdcc51a10b01c2566510cd498";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Elastic Compute Cloud SDK";
license = "unknown";

}) {};
"amazonka-ecr" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-ecr";
version = "1.4.5";
sha256 = "c3fa1094ea22402a87f4803301b74081bfd3a6dd1db42536ade0994548fd690c";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon EC2 Container Registry SDK";
license = "unknown";

}) {};
"amazonka-ecs" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-ecs";
version = "1.4.5";
sha256 = "ba72592448eee9123acc7b700067343712c6c05f0635d6a52ebdcf3c08e2c414";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon EC2 Container Service SDK";
license = "unknown";

}) {};
"amazonka-efs" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-efs";
version = "1.4.5";
sha256 = "e8fba140dc9ca493da92ba57873b54e4488ad63d1a7e6b914b0149338cb52c50";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Elastic File System SDK";
license = "unknown";

}) {};
"amazonka-elasticache" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-elasticache";
version = "1.4.5";
sha256 = "6f592d7af0a9b0433ab9332bbfbb84b3b75c27b6a4df45006ff096c261be45bb";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon ElastiCache SDK";
license = "unknown";

}) {};
"amazonka-elasticbeanstalk" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-elasticbeanstalk";
version = "1.4.5";
sha256 = "e3ac291b93b951ab557ff82bed2cbe702e56b8b24e5f95e3330777fb82df59f8";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Elastic Beanstalk SDK";
license = "unknown";

}) {};
"amazonka-elasticsearch" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-elasticsearch";
version = "1.4.5";
sha256 = "bdc5f8bf276fde27b5357048f77b261569cddc1ffe1de2ff1035e436b9255303";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Elasticsearch Service SDK";
license = "unknown";

}) {};
"amazonka-elastictranscoder" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-elastictranscoder";
version = "1.4.5";
sha256 = "306760ad72bae83f29cfa574caac2646e3eac6935596d0e7ed66201b8e2c123b";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Elastic Transcoder SDK";
license = "unknown";

}) {};
"amazonka-elb" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-elb";
version = "1.4.5";
sha256 = "e6ca6ef93fc988ff9cb4314ff6668f415ea4306d41a5e8c555d6deefd210eb62";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Elastic Load Balancing SDK";
license = "unknown";

}) {};
"amazonka-elbv2" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-elbv2";
version = "1.4.5";
sha256 = "fa4c8d492f85be81c2ad3d47f08d464acb7003e9fb003724daa8992de75dd847";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Elastic Load Balancing SDK";
license = "unknown";

}) {};
"amazonka-emr" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-emr";
version = "1.4.5";
sha256 = "2c99f0be432d535e7e55a958cb6d8c65e9e48dc5f337daf61705aa2de0e924b7";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Elastic MapReduce SDK";
license = "unknown";

}) {};
"amazonka-gamelift" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-gamelift";
version = "1.4.5";
sha256 = "e05847758651f3f658c1db3275798deffaabc4eb0ed1e1e2bc87ef1608dc8152";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon GameLift SDK";
license = "unknown";

}) {};
"amazonka-glacier" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-glacier";
version = "1.4.5";
sha256 = "9ca17da801fa3b470796a4285e5d45592005d2d9ec96bb3d9298868535ad52e3";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Glacier SDK";
license = "unknown";

}) {};
"amazonka-health" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-health";
version = "1.4.5";
sha256 = "ec1def33813329c965a92c4becd7b942750c8da9b1f81b00b673aa676c1e2e61";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Health APIs and Notifications SDK";
license = "unknown";

}) {};
"amazonka-iam" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-iam";
version = "1.4.5";
sha256 = "c37c6081febdce459a9683ac9ea22f45161dd86d56f452e2699f819a729068ca";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Identity and Access Management SDK";
license = "unknown";

}) {};
"amazonka-importexport" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-importexport";
version = "1.4.5";
sha256 = "24b131fbf1af88531c1688541cc357e22cc4cd770a5a691ea59b02bd3959c5ec";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Import/Export SDK";
license = "unknown";

}) {};
"amazonka-inspector" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-inspector";
version = "1.4.5";
sha256 = "8408f9535fbd5c3136a2adc5afb7d698520db7a5577c598c8d7ed02e9d9aa78a";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Inspector SDK";
license = "unknown";

}) {};
"amazonka-iot" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-iot";
version = "1.4.5";
sha256 = "bac8bb743fc67bbcd62b2c636c922af58d0866df1859cd266ceda2f1d3d66293";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon IoT SDK";
license = "unknown";

}) {};
"amazonka-iot-dataplane" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-iot-dataplane";
version = "1.4.5";
sha256 = "3b3dc22d05f534fefb163600963793dbcd9d077200255f7ce106fe54f6d4d962";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon IoT Data Plane SDK";
license = "unknown";

}) {};
"amazonka-kinesis" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-kinesis";
version = "1.4.5";
sha256 = "69661eeaf4b9c9e8082d3e576eb705ae8de3c3e90c814f90bc0cbd0e2f1ea24d";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Kinesis SDK";
license = "unknown";

}) {};
"amazonka-kinesis-analytics" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-kinesis-analytics";
version = "1.4.5";
sha256 = "36917ed8d951b2cae224f1fd1f41a94741d5a51d7606de11af28f3bb63e5908a";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Kinesis Analytics SDK";
license = "unknown";

}) {};
"amazonka-kinesis-firehose" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-kinesis-firehose";
version = "1.4.5";
sha256 = "fcdccc16e54f79b99d98e32790284ea0d64207bce0e0405e9cfd7632d24ce103";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Kinesis Firehose SDK";
license = "unknown";

}) {};
"amazonka-kms" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-kms";
version = "1.4.5";
sha256 = "8578614ba763ed460f78b55ae975680b43d856a7c57d7380c034097d1c68f0f6";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Key Management Service SDK";
license = "unknown";

}) {};
"amazonka-lambda" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-lambda";
version = "1.4.5";
sha256 = "b210aa40ff787d5c848278609b9a9b4d001f1c0a38b965488e6d416af949cf22";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Lambda SDK";
license = "unknown";

}) {};
"amazonka-lightsail" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-lightsail";
version = "1.4.5";
sha256 = "9204a4a4d70e8edd998011a5e3216f269ba291e004d3ad88a343d1c097c3e980";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Lightsail SDK";
license = "unknown";

}) {};
"amazonka-marketplace-analytics" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-marketplace-analytics";
version = "1.4.5";
sha256 = "43d428b51e7a38aac08c64dc2dc01e98021a11b5fa9d178c351808d4f109ab28";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Marketplace Commerce Analytics SDK";
license = "unknown";

}) {};
"amazonka-marketplace-metering" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-marketplace-metering";
version = "1.4.5";
sha256 = "76144fe48a26014c40ec0fca4f828c9e4b5dfd08f1efc0ffb5b3b1829d8e3cde";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Marketplace Metering SDK";
license = "unknown";

}) {};
"amazonka-ml" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-ml";
version = "1.4.5";
sha256 = "579b0d042abdc637d14f394a89b2e192b1c5e1bc82fff1c666e6f5eac9544865";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Machine Learning SDK";
license = "unknown";

}) {};
"amazonka-opsworks" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-opsworks";
version = "1.4.5";
sha256 = "c91802c8bdcf0d259d86b382e5ce1fb25795e73810631f9367d5603afc2f8d34";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon OpsWorks SDK";
license = "unknown";

}) {};
"amazonka-opsworks-cm" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-opsworks-cm";
version = "1.4.5";
sha256 = "5791722b0bb3783dfc11ddffa284024b5317f3da817040b4a6389b6dec9d29d3";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon OpsWorks for Chef Automate SDK";
license = "unknown";

}) {};
"amazonka-pinpoint" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-pinpoint";
version = "1.4.5";
sha256 = "91267103b0453e5f56ef6e01f24a139ea2c4020a8344cd8664e7958f9ac1bcdd";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Pinpoint SDK";
license = "unknown";

}) {};
"amazonka-polly" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-polly";
version = "1.4.5";
sha256 = "b5d5e2347c9a98daf4182e16a8100c6c1ffe5ed86d9adc69ae888c5aaeb3cec6";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Polly SDK";
license = "unknown";

}) {};
"amazonka-rds" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-rds";
version = "1.4.5";
sha256 = "8377e03b84e6d8d8ec2417046ce3d67bc052632fc05d92f2f6299e6808c2a30b";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Relational Database Service SDK";
license = "unknown";

}) {};
"amazonka-redshift" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-redshift";
version = "1.4.5";
sha256 = "b7ecd60b51ff6b28d3435ef716485a2ebb1e3863a13cdb90b4ceb2ec65ffa84a";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Redshift SDK";
license = "unknown";

}) {};
"amazonka-rekognition" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-rekognition";
version = "1.4.5";
sha256 = "a6c3aec679aa4b7c4484644b22738fb9611dffe72c38fd80ecf1c19c067a25be";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Rekognition SDK";
license = "unknown";

}) {};
"amazonka-route53" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
, text
}:
mkDerivation {

pname = "amazonka-route53";
version = "1.4.5";
sha256 = "68f49826d8f594abc99311081a9d8224f6e79457e6118c5bc7a55bd4aed8425d";
libraryHaskellDepends = [
amazonka-core
base
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Route 53 SDK";
license = "unknown";

}) {};
"amazonka-route53-domains" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-route53-domains";
version = "1.4.5";
sha256 = "1fb74290a0c019f4dfa1fba75b553efd90c440fb3f4a89fba66dd5ec7ad4fd3d";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Route 53 Domains SDK";
license = "unknown";

}) {};
"amazonka-s3" = callPackage
({
  mkDerivation
, amazonka-core
, base
, lens
, stdenv
, text
}:
mkDerivation {

pname = "amazonka-s3";
version = "1.4.5";
sha256 = "78297e966eac3ba9045612c8e09d3e6e34c83b5dfb3d59e489edc7cd3a2fe4ad";
libraryHaskellDepends = [
amazonka-core
base
lens
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Simple Storage Service SDK";
license = "unknown";

}) {};
"amazonka-s3-streaming" = callPackage
({
  mkDerivation
, amazonka
, amazonka-core
, amazonka-s3
, base
, bytestring
, conduit
, conduit-extra
, dlist
, exceptions
, lens
, lifted-async
, mmap
, mmorph
, mtl
, resourcet
, stdenv
, text
}:
mkDerivation {

pname = "amazonka-s3-streaming";
version = "0.1.0.4";
sha256 = "ecd0dfe5b024a326e96224ba6f406b44f1279eaef4d44904167a8f5a1f3d881d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
amazonka
amazonka-core
amazonka-s3
base
bytestring
conduit
dlist
exceptions
lens
lifted-async
mmap
mmorph
mtl
resourcet
];
executableHaskellDepends = [
amazonka
amazonka-core
amazonka-s3
base
bytestring
conduit
conduit-extra
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Axman6/amazonka-s3-streaming#readme";
description = "Provides conduits to upload data to S3 using the Multipart API";
license = stdenv.lib.licenses.bsd3;

}) {};
"amazonka-sdb" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-sdb";
version = "1.4.5";
sha256 = "fdec685f8184680eaea76456db18cd552ccb77fd40e941d3590f2f57f2bec6b2";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon SimpleDB SDK";
license = "unknown";

}) {};
"amazonka-servicecatalog" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-servicecatalog";
version = "1.4.5";
sha256 = "a5e0106a155a5bd51ac6bb8f2d1037419a621fe5402f2a0888399bb98f74d6e7";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Service Catalog SDK";
license = "unknown";

}) {};
"amazonka-ses" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-ses";
version = "1.4.5";
sha256 = "a30f23624dcba2d779dc67a13e9b6f9092f7526e1bf54290fdd0684ae42e1329";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Simple Email Service SDK";
license = "unknown";

}) {};
"amazonka-shield" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-shield";
version = "1.4.5";
sha256 = "8c2ec2c561fca8653d33136d0f93f6dc4cd4de1b15a0cc00e5eb0ec9d7242fdc";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Shield SDK";
license = "unknown";

}) {};
"amazonka-sms" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-sms";
version = "1.4.5";
sha256 = "4a6ffbf02c58db9928517f48d392d7068a5439b39a7a119a727a9c6dd7b0da78";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Server Migration Service SDK";
license = "unknown";

}) {};
"amazonka-snowball" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-snowball";
version = "1.4.5";
sha256 = "e27f2c73800874531269dae80e823575ac71820453f1b8c6e406d542ed831e1e";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Import/Export Snowball SDK";
license = "unknown";

}) {};
"amazonka-sns" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-sns";
version = "1.4.5";
sha256 = "e875c23e6a55cb9753d84f1dab58a39728b9c1ec6b1834db8b5b5d150f888681";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Simple Notification Service SDK";
license = "unknown";

}) {};
"amazonka-sqs" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-sqs";
version = "1.4.5";
sha256 = "90a38f27bdbe229300cf4a64a253078e51703ad76eb799b597f2ff580fac52dd";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Simple Queue Service SDK";
license = "unknown";

}) {};
"amazonka-ssm" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-ssm";
version = "1.4.5";
sha256 = "fbd16ca62f55f53904e78db6e6e3832b94b84541ca22271cd73c51ab7150df52";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Simple Systems Manager (SSM) SDK";
license = "unknown";

}) {};
"amazonka-stepfunctions" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-stepfunctions";
version = "1.4.5";
sha256 = "990379c5baff3e530eea53dbd00a43bf49868d81bdc4abd057e6d9ea6ef05218";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Step Functions SDK";
license = "unknown";

}) {};
"amazonka-storagegateway" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-storagegateway";
version = "1.4.5";
sha256 = "8cdf92d74e7911efabb6cc67bbcdaecbcf71363fc1277b5eb1cadc8c4cf21aeb";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Storage Gateway SDK";
license = "unknown";

}) {};
"amazonka-sts" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-sts";
version = "1.4.5";
sha256 = "b83baf2122c0c30f52a5e7f9d896b2d9b623ed768e61bf7e9d246534f36de3d5";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Security Token Service SDK";
license = "unknown";

}) {};
"amazonka-support" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-support";
version = "1.4.5";
sha256 = "135f841dfa793226d7b5d166dfa1d8f0c4fce632228329052178389791db8e2b";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Support SDK";
license = "unknown";

}) {};
"amazonka-swf" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-swf";
version = "1.4.5";
sha256 = "4397c168cb7bb864e8819ac12e76b9b86885721fda9bc97f42bd6482d7279928";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Simple Workflow Service SDK";
license = "unknown";

}) {};
"amazonka-test" = callPackage
({
  mkDerivation
, aeson
, amazonka-core
, base
, bifunctors
, bytestring
, case-insensitive
, conduit
, conduit-extra
, groom
, http-client
, http-types
, process
, resourcet
, stdenv
, tasty
, tasty-hunit
, template-haskell
, temporary
, text
, time
, unordered-containers
, yaml
}:
mkDerivation {

pname = "amazonka-test";
version = "1.4.5";
sha256 = "988872cbcd4b102f1fd45a5160b81026087bf4eec1c982dcaaa3df8296b75e3a";
libraryHaskellDepends = [
aeson
amazonka-core
base
bifunctors
bytestring
case-insensitive
conduit
conduit-extra
groom
http-client
http-types
process
resourcet
tasty
tasty-hunit
template-haskell
temporary
text
time
unordered-containers
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Common functionality for Amazonka library test-suites";
license = "unknown";

}) {};
"amazonka-waf" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-waf";
version = "1.4.5";
sha256 = "fdc63d12726b015627b135539c732116e96b947be9a774df72ee1d1646cff155";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon WAF SDK";
license = "unknown";

}) {};
"amazonka-workspaces" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-workspaces";
version = "1.4.5";
sha256 = "356c5f0267aa61f4cc3181a8719f7e3a3d9244c473c728aaaba0b4babcb7a7df";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon WorkSpaces SDK";
license = "unknown";

}) {};
"amazonka-xray" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-xray";
version = "1.4.5";
sha256 = "e133389857343433d017950ec6b9c853d884d391b91986691f9e6afeeecee250";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon X-Ray SDK";
license = "unknown";

}) {};
"amqp" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, clock
, connection
, containers
, data-binary-ieee754
, monad-control
, network
, network-uri
, split
, stdenv
, stm
, text
, vector
, xml
}:
mkDerivation {

pname = "amqp";
version = "0.14.1";
sha256 = "500465d278790117e08b7c5aa2c9f917a93cf3a87e81c079d509cd5fd52d300b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
binary
bytestring
clock
connection
containers
data-binary-ieee754
monad-control
network
network-uri
split
stm
text
vector
];
executableHaskellDepends = [
base
containers
xml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hreinhardt/amqp";
description = "Client library for AMQP servers (currently only RabbitMQ)";
license = stdenv.lib.licenses.bsd3;

}) {};
"annotated-wl-pprint" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "annotated-wl-pprint";
version = "0.7.0";
sha256 = "0c262d7fe13a9a50216438ec882c13e25f31236b886a5692e3c35b85cd773d18";
revision = "1";
editedCabalFile = "138k24qxvl90l7dwdw1b3w36mpw93n0xi0nljblqg88pxg7jcvjx";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/david-christiansen/annotated-wl-pprint";
description = "The Wadler/Leijen Pretty Printer, with annotation support";
license = stdenv.lib.licenses.bsd3;

}) {};
"anonymous-sums" = callPackage
({
  mkDerivation
, base
, lens
, stdenv
, template-haskell
}:
mkDerivation {

pname = "anonymous-sums";
version = "0.6.0.0";
sha256 = "c7c5c13cb19ce97fdb621794cd1de7e34ab7aba8bdc5bcc9309107b1ff3ec2ad";
libraryHaskellDepends = [
base
lens
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/massysett/anonymous-sums";
description = "Anonymous sum types";
license = stdenv.lib.licenses.bsd3;

}) {};
"ansi-terminal" = callPackage
({
  mkDerivation
, base
, stdenv
, unix
}:
mkDerivation {

pname = "ansi-terminal";
version = "0.6.2.3";
sha256 = "4dc02cb53e9ca7c8800bbdfc0337b961e5a945382cd09a6a40c6170126e0ee42";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/ansi-terminal";
description = "Simple ANSI terminal support, with Windows compatibility";
license = stdenv.lib.licenses.bsd3;

}) {};
"ansi-wl-pprint" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, stdenv
}:
mkDerivation {

pname = "ansi-wl-pprint";
version = "0.6.7.3";
sha256 = "3789ecaa89721eabef58ddc5711f7fd1ff67e262da1659f3b20d38a9e1f5b708";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-terminal
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/ansi-wl-pprint";
description = "The Wadler/Leijen Pretty Printer for colored ANSI terminal output";
license = stdenv.lib.licenses.bsd3;

}) {};
"ansigraph" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, stdenv
}:
mkDerivation {

pname = "ansigraph";
version = "0.3.0.2";
sha256 = "d3cefc45710751473685ca621969e04e9bc27218ecc581d3c38164c81df05a20";
libraryHaskellDepends = [
ansi-terminal
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/BlackBrane/ansigraph";
description = "Terminal-based graphing via ANSI and Unicode";
license = stdenv.lib.licenses.mit;

}) {};
"app-settings" = callPackage
({
  mkDerivation
, base
, containers
, directory
, mtl
, parsec
, stdenv
, text
}:
mkDerivation {

pname = "app-settings";
version = "0.2.0.10";
sha256 = "88dd9df76930467c14b764108cda92676a6702f68ad38a09c26e740bce29ac28";
libraryHaskellDepends = [
base
containers
directory
mtl
parsec
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/emmanueltouzery/app-settings";
description = "A library to manage application settings (INI file-like)";
license = stdenv.lib.licenses.bsd3;

}) {};
"appar" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "appar";
version = "0.1.4";
sha256 = "58ea66abe4dd502d2fc01eecdb0828d5e214704a3c1b33b1f8b33974644c4b26";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "A simple applicative parser";
license = stdenv.lib.licenses.bsd3;

}) {};
"arbtt" = callPackage
({
  mkDerivation
, aeson
, array
, base
, binary
, bytestring
, bytestring-progress
, containers
, deepseq
, directory
, filepath
, libXScrnSaver
, parsec
, pcre-light
, stdenv
, strict
, terminal-progress-bar
, time
, transformers
, unix
, utf8-string
, X11
}:
mkDerivation {

pname = "arbtt";
version = "0.9.0.12";
sha256 = "3bdd4171a6d68ff3604eb752d04fdc6e819ab90f021e65ff12f5f6c7e62e87cf";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
aeson
array
base
binary
bytestring
bytestring-progress
containers
deepseq
directory
filepath
parsec
pcre-light
strict
terminal-progress-bar
time
transformers
unix
utf8-string
X11
];
executableSystemDepends = [
libXScrnSaver
];
doHaddock = false;
doCheck = false;
homepage = "http://arbtt.nomeata.de/";
description = "Automatic Rule-Based Time Tracker";
license = "GPL";

}) {inherit (pkgs) libXScrnSaver;};
"arithmoi" = callPackage
({
  mkDerivation
, array
, base
, containers
, ghc-prim
, integer-gmp
, mtl
, random
, stdenv
}:
mkDerivation {

pname = "arithmoi";
version = "0.4.3.0";
sha256 = "daa3343d4be19d0a8574c542c9188f6f3075098c86c69d3bc66acd5091d5d196";
configureFlags = [
"-f-llvm"
];
libraryHaskellDepends = [
array
base
containers
ghc-prim
integer-gmp
mtl
random
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cartazio/arithmoi";
description = "Efficient basic number-theoretic functions. Primes, powers, integer logarithms.";
license = stdenv.lib.licenses.mit;

}) {};
"array-memoize" = callPackage
({
  mkDerivation
, array
, base
, stdenv
}:
mkDerivation {

pname = "array-memoize";
version = "0.6.0";
sha256 = "76c88cb3ed04875821a5601f6a1c40f4e15ef8cb36e8a3d4004df956d1db05dc";
libraryHaskellDepends = [
array
base
];
doHaddock = false;
doCheck = false;
description = "Memoization combinators using arrays for finite sub-domains of functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"arrow-list" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
}:
mkDerivation {

pname = "arrow-list";
version = "0.7";
sha256 = "33f836f23648aa2cea11533f7a9941127c397eecdca105b2084dded9e039d5d8";
libraryHaskellDepends = [
base
containers
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/silkapp/arrow-list";
description = "List arrows for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"ascii-progress" = callPackage
({
  mkDerivation
, async
, base
, concurrent-output
, data-default
, stdenv
, time
}:
mkDerivation {

pname = "ascii-progress";
version = "0.3.3.0";
sha256 = "7e3fa6b80c09a83c9ba8a0644ef304ca92d65b76383b8dd023ff9f89ebec913e";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
async
base
concurrent-output
data-default
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yamadapc/haskell-ascii-progress";
description = "A simple progress bar for the console";
license = stdenv.lib.licenses.mit;

}) {};
"asciidiagram" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, filepath
, FontyFruity
, JuicyPixels
, lens
, linear
, mtl
, optparse-applicative
, rasterific-svg
, stdenv
, svg-tree
, text
, vector
}:
mkDerivation {

pname = "asciidiagram";
version = "1.3.3";
sha256 = "694948f5f408aa7dfcab17ffefb74e413f1d3dacf2c523bfbf9ecaf972645f18";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
FontyFruity
JuicyPixels
lens
linear
mtl
rasterific-svg
svg-tree
text
vector
];
executableHaskellDepends = [
base
bytestring
directory
filepath
FontyFruity
JuicyPixels
optparse-applicative
rasterific-svg
svg-tree
text
];
doHaddock = false;
doCheck = false;
description = "Pretty rendering of Ascii diagram into svg or png";
license = stdenv.lib.licenses.bsd3;

}) {};
"asn1-encoding" = callPackage
({
  mkDerivation
, asn1-types
, base
, bytestring
, hourglass
, stdenv
}:
mkDerivation {

pname = "asn1-encoding";
version = "0.9.4";
sha256 = "a78058f7db08fbd72f2b40c72af324a4d31ea95d70b4bfa372107b980394dde8";
libraryHaskellDepends = [
asn1-types
base
bytestring
hourglass
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-asn1";
description = "ASN1 data reader and writer in RAW, BER and DER forms";
license = stdenv.lib.licenses.bsd3;

}) {};
"asn1-parse" = callPackage
({
  mkDerivation
, asn1-encoding
, asn1-types
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "asn1-parse";
version = "0.9.4";
sha256 = "c6a328f570c69db73f8d2416f9251e8a03753f90d5d19e76cbe69509a3ceb708";
libraryHaskellDepends = [
asn1-encoding
asn1-types
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-asn1";
description = "Simple monadic parser for ASN1 stream types";
license = stdenv.lib.licenses.bsd3;

}) {};
"asn1-types" = callPackage
({
  mkDerivation
, base
, bytestring
, hourglass
, memory
, stdenv
}:
mkDerivation {

pname = "asn1-types";
version = "0.3.2";
sha256 = "0c571fff4a10559c6a630d4851ba3cdf1d558185ce3dcfca1136f9883d647217";
libraryHaskellDepends = [
base
bytestring
hourglass
memory
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-asn1-types";
description = "ASN.1 types";
license = stdenv.lib.licenses.bsd3;

}) {};
"async" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
}:
mkDerivation {

pname = "async";
version = "2.1.1";
sha256 = "24134b36921f9874abb73be90886b4c23a67a9b4990f2d8e32d08dbfa5f74f90";
libraryHaskellDepends = [
base
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/simonmar/async";
description = "Run IO operations asynchronously and wait for their results";
license = stdenv.lib.licenses.bsd3;

}) {};
"async-dejafu" = callPackage
({
  mkDerivation
, base
, concurrency
, exceptions
, stdenv
}:
mkDerivation {

pname = "async-dejafu";
version = "0.1.3.0";
sha256 = "d893a14c85af9cb947e3b3298b77c3665112a54cc8876dca8fc08e6871952afd";
libraryHaskellDepends = [
base
concurrency
exceptions
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/dejafu";
description = "Run MonadConc operations asynchronously and wait for their results";
license = stdenv.lib.licenses.bsd3;

}) {};
"async-extra" = callPackage
({
  mkDerivation
, async
, base
, containers
, deepseq
, stdenv
}:
mkDerivation {

pname = "async-extra";
version = "0.1.0.0";
sha256 = "47cf509bc09d106cd229c4568e4c02ce085b2541e856b3be0c75cf62217dc02a";
libraryHaskellDepends = [
async
base
containers
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/async-extra#readme";
description = "Useful concurrent combinators";
license = stdenv.lib.licenses.mit;

}) {};
"atom-basic" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, network
, network-uri
, stdenv
, text
, time
}:
mkDerivation {

pname = "atom-basic";
version = "0.2.4";
sha256 = "b37fb9757b78ff4a8e6586815cb2b9768c73f58cc3f27f635a4ab63736d529eb";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
network
network-uri
text
time
];
doHaddock = false;
doCheck = false;
description = "Basic Atom feed construction";
license = stdenv.lib.licenses.bsd3;

}) {};
"atom-conduit" = callPackage
({
  mkDerivation
, base
, blaze-builder
, conduit
, conduit-combinators
, lens-simple
, mono-traversable
, parsers
, safe-exceptions
, stdenv
, text
, time
, timerep
, uri-bytestring
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "atom-conduit";
version = "0.4.0.1";
sha256 = "62965b9adac9b4fefda18a2aceb464b15e15c0ef267edba80372e8c3225b5ccf";
libraryHaskellDepends = [
base
blaze-builder
conduit
conduit-combinators
lens-simple
mono-traversable
parsers
safe-exceptions
text
time
timerep
uri-bytestring
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
description = "Streaming parser/renderer for the Atom 1.0 standard (RFC 4287).";
license = stdenv.lib.licenses.publicDomain;

}) {};
"atomic-primops" = callPackage
({
  mkDerivation
, base
, ghc-prim
, primitive
, stdenv
}:
mkDerivation {

pname = "atomic-primops";
version = "0.8.0.4";
sha256 = "47e1e393848c0538aa1733a90a63bd08a00915ec7499d90014aaecc792db9864";
libraryHaskellDepends = [
base
ghc-prim
primitive
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
description = "A safe approach to CAS and other atomic ops in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"atomic-write" = callPackage
({
  mkDerivation
, base
, bytestring
, directory
, filepath
, stdenv
, temporary
, text
, unix-compat
}:
mkDerivation {

pname = "atomic-write";
version = "0.2.0.5";
sha256 = "dbc7b4c31c734ad12d8f6c05b5d1384ee57f50ad8ff1a703d560b39e2f0458c5";
libraryHaskellDepends = [
base
bytestring
directory
filepath
temporary
text
unix-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/stackbuilders/atomic-write";
description = "Atomically write to a file";
license = stdenv.lib.licenses.mit;

}) {};
"attoparsec" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, deepseq
, scientific
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "attoparsec";
version = "0.13.1.0";
sha256 = "52dc74d4955e457ce4f76f5c9d6dba05c1d07e2cd2a542d6251c6dbc66ce3f64";
libraryHaskellDepends = [
array
base
bytestring
containers
deepseq
scientific
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/attoparsec";
description = "Fast combinator parsing for bytestrings and text";
license = stdenv.lib.licenses.bsd3;

}) {};
"attoparsec-binary" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "attoparsec-binary";
version = "0.2";
sha256 = "05e6445b20b396c99275de3e37bf8bb18559a5666ad5136907857bf574e77a0b";
libraryHaskellDepends = [
attoparsec
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "Binary processing extensions to Attoparsec";
license = stdenv.lib.licenses.bsd3;

}) {};
"attoparsec-expr" = callPackage
({
  mkDerivation
, attoparsec
, base
, stdenv
}:
mkDerivation {

pname = "attoparsec-expr";
version = "0.1.1.2";
sha256 = "8d4cd436112ce9007d2831776d4c5102a5322c48993229d2d41e259c07bb457c";
libraryHaskellDepends = [
attoparsec
base
];
doHaddock = false;
doCheck = false;
description = "Port of parsec's expression parser to attoparsec";
license = stdenv.lib.licenses.bsd3;

}) {};
"authenticate" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, blaze-builder
, bytestring
, case-insensitive
, conduit
, containers
, http-conduit
, http-types
, monad-control
, network-uri
, resourcet
, stdenv
, tagstream-conduit
, text
, transformers
, unordered-containers
, xml-conduit
}:
mkDerivation {

pname = "authenticate";
version = "1.3.3.2";
sha256 = "a65ff7791e646ea847fc6b8369addeecf6d2c3055a0b7ebe1421881103656e30";
libraryHaskellDepends = [
aeson
attoparsec
base
blaze-builder
bytestring
case-insensitive
conduit
containers
http-conduit
http-types
monad-control
network-uri
resourcet
tagstream-conduit
text
transformers
unordered-containers
xml-conduit
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yesodweb/authenticate";
description = "Authentication methods for Haskell web applications";
license = stdenv.lib.licenses.mit;

}) {};
"authenticate-oauth" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, blaze-builder
, bytestring
, crypto-pubkey-types
, data-default
, http-client
, http-types
, random
, RSA
, SHA
, stdenv
, time
, transformers
, transformers-compat
}:
mkDerivation {

pname = "authenticate-oauth";
version = "1.6";
sha256 = "d26d9f10fd57e06fa2af066df65e578ff3ec7541efc3e6648b29a743b13f8375";
revision = "1";
editedCabalFile = "1fxwn8bn6qs8dhxq0q04psq7zp1qvw1b6g3vmsclgyj9p7kr77ms";
libraryHaskellDepends = [
base
base64-bytestring
blaze-builder
bytestring
crypto-pubkey-types
data-default
http-client
http-types
random
RSA
SHA
time
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yesodweb/authenticate";
description = "Library to authenticate with OAuth for Haskell web applications";
license = stdenv.lib.licenses.bsd3;

}) {};
"auto" = callPackage
({
  mkDerivation
, base
, base-orphans
, bytestring
, cereal
, containers
, deepseq
, MonadRandom
, profunctors
, random
, semigroups
, stdenv
, transformers
}:
mkDerivation {

pname = "auto";
version = "0.4.3.1";
sha256 = "c6e26d1cbb17e3645e55bc8e9432b124520fbcba5ff32445acd4260c25cd3b41";
libraryHaskellDepends = [
base
base-orphans
bytestring
cereal
containers
deepseq
MonadRandom
profunctors
random
semigroups
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mstksg/auto";
description = "Denotative, locally stateful programming DSL & platform";
license = stdenv.lib.licenses.mit;

}) {};
"auto-update" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "auto-update";
version = "0.1.4";
sha256 = "5e96c151024e8bcaf4eaa932e16995872b2017f46124b967e155744d9580b425";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/wai";
description = "Efficiently run periodic, on-demand actions";
license = stdenv.lib.licenses.mit;

}) {};
"autoexporter" = callPackage
({
  mkDerivation
, base
, Cabal
, directory
, filepath
, stdenv
}:
mkDerivation {

pname = "autoexporter";
version = "1.0.0";
sha256 = "459baf1bbb143a92a25f1de7b9ec416a5ee214bb763bfb5f5e49e10678aba0f3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
Cabal
directory
filepath
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/autoexporter#readme";
description = "Automatically re-export modules";
license = stdenv.lib.licenses.mit;

}) {};
"avers" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, clock
, containers
, cryptonite
, filepath
, inflections
, memory
, MonadRandom
, mtl
, network
, network-uri
, resource-pool
, rethinkdb-client-driver
, safe
, scrypt
, stdenv
, stm
, template-haskell
, text
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "avers";
version = "0.0.17.1";
sha256 = "1b45d8aa036b3c2ec7ea180327ff3cdce28dc1e1ef319c062be79f0ffa7626f5";
revision = "22";
editedCabalFile = "040kvq16wknnjq0kr5j6y17xvjfh87y22hska3whs3ci6zw1fr30";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
clock
containers
cryptonite
filepath
inflections
memory
MonadRandom
mtl
network
network-uri
resource-pool
rethinkdb-client-driver
safe
scrypt
stm
template-haskell
text
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
description = "Server-side implementation of the Avers storage model";
license = stdenv.lib.licenses.gpl3;

}) {};
"avers-api" = callPackage
({
  mkDerivation
, aeson
, avers
, base
, bytestring
, cookie
, http-api-data
, servant
, stdenv
, text
, time
, vector
}:
mkDerivation {

pname = "avers-api";
version = "0.0.18.0";
sha256 = "b1ba2ad32420636bf298efa7d4ff42fda9501672306f04b11c91aee1fe7805c5";
revision = "1";
editedCabalFile = "0znsxj4igjrgs1xg8x8s9vg88830cvrqb880v9gchn1wp34lfihv";
libraryHaskellDepends = [
aeson
avers
base
bytestring
cookie
http-api-data
servant
text
time
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/wereHamster/avers-api";
description = "Types describing the core and extended Avers APIs";
license = stdenv.lib.licenses.mit;

}) {};
"avers-api-docs" = callPackage
({
  mkDerivation
, aeson
, avers
, avers-api
, base
, cookie
, lens
, servant
, servant-swagger
, stdenv
, swagger2
, text
, unordered-containers
}:
mkDerivation {

pname = "avers-api-docs";
version = "0.0.18.0";
sha256 = "38a9f290cfd92ee922253337b30297dd5d3fa0db28c5aad5a0e6d01a205efca1";
revision = "1";
editedCabalFile = "04j51gdx19bi3pcqj4dh70xw7fjjimvps75mihf8aq5ixmyxxbr3";
libraryHaskellDepends = [
aeson
avers
avers-api
base
cookie
lens
servant
servant-swagger
swagger2
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/wereHamster/avers-api-docs";
description = "Swagger documentation for the Avers API";
license = stdenv.lib.licenses.mit;

}) {};
"avers-server" = callPackage
({
  mkDerivation
, aeson
, avers
, avers-api
, base
, base64-bytestring
, bytestring
, bytestring-conversion
, containers
, cookie
, cryptonite
, either
, http-types
, memory
, mtl
, resource-pool
, rethinkdb-client-driver
, servant
, servant-server
, stdenv
, stm
, text
, time
, transformers
, wai
, wai-websockets
, websockets
}:
mkDerivation {

pname = "avers-server";
version = "0.0.18.0";
sha256 = "44ea17fd5f2351ae0c63d630f3c4a4879541f47b63b57bd447683d4644901cf7";
revision = "1";
editedCabalFile = "0ngmb2w7yql2gix5hq5jk057xazdq8ffax39gw20pa68npfgg1g6";
libraryHaskellDepends = [
aeson
avers
avers-api
base
base64-bytestring
bytestring
bytestring-conversion
containers
cookie
cryptonite
either
http-types
memory
mtl
resource-pool
rethinkdb-client-driver
servant
servant-server
stm
text
time
transformers
wai
wai-websockets
websockets
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/wereHamster/avers-server";
description = "Server implementation of the Avers API";
license = stdenv.lib.licenses.mit;

}) {};
"avwx" = callPackage
({
  mkDerivation
, attoparsec
, base
, HTTP
, lens
, optparse-applicative
, parsers
, pretty-show
, stdenv
, text
}:
mkDerivation {

pname = "avwx";
version = "0.3.0.2";
sha256 = "b4299cc4e05a4c94f53d06f05b30baac1e15c59663b59afd1dd32417a280fb0a";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
attoparsec
base
HTTP
lens
parsers
text
];
executableHaskellDepends = [
base
optparse-applicative
pretty-show
text
];
doHaddock = false;
doCheck = false;
homepage = "https://www.hcesperer.org/posts/2016-09-20-avwx.html";
description = "Parse aviation weather reports";
license = stdenv.lib.licenses.mit;

}) {};
"b9" = callPackage
({
  mkDerivation
, aeson
, async
, base
, bifunctors
, binary
, boxes
, bytestring
, conduit
, conduit-extra
, ConfigFile
, directory
, filepath
, free
, hashable
, mtl
, optparse-applicative
, parallel
, parsec
, pretty
, pretty-show
, process
, QuickCheck
, random
, semigroups
, stdenv
, syb
, template
, text
, time
, transformers
, unordered-containers
, vector
, yaml
}:
mkDerivation {

pname = "b9";
version = "0.5.31";
sha256 = "8dcc9b68a88f6f73a0c1af060bbc7607e8894e741665fdecd40dfa842c187c95";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
async
base
bifunctors
binary
boxes
bytestring
conduit
conduit-extra
ConfigFile
directory
filepath
free
hashable
mtl
parallel
parsec
pretty
pretty-show
process
QuickCheck
random
semigroups
syb
template
text
time
transformers
unordered-containers
vector
yaml
];
executableHaskellDepends = [
base
bytestring
directory
optparse-applicative
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sheyll/b9-vm-image-builder";
description = "A tool and library for building virtual machine images";
license = stdenv.lib.licenses.mit;

}) {};
"bake" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, cmdargs
, containers
, deepseq
, direct-sqlite
, directory
, disk-free-space
, extra
, filepath
, hashable
, HTTP
, http-client
, http-conduit
, http-types
, old-locale
, process
, random
, safe
, shake
, smtp-mail
, sqlite-simple
, stdenv
, text
, time
, transformers
, unordered-containers
, wai
, wai-extra
, warp
}:
mkDerivation {

pname = "bake";
version = "0.5";
sha256 = "1cc3b57b6270a2c80f0b0a8b90fc3929eb0d1da9e113d18bc10d92b40a2d60f5";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
bytestring
cmdargs
containers
deepseq
direct-sqlite
directory
disk-free-space
extra
filepath
hashable
HTTP
http-client
http-conduit
http-types
old-locale
random
safe
shake
smtp-mail
sqlite-simple
text
time
transformers
unordered-containers
wai
wai-extra
warp
];
executableHaskellDepends = [
aeson
base
bytestring
cmdargs
containers
deepseq
direct-sqlite
directory
disk-free-space
extra
filepath
hashable
HTTP
http-client
http-conduit
http-types
old-locale
process
random
safe
shake
smtp-mail
sqlite-simple
text
time
transformers
unordered-containers
wai
wai-extra
warp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/bake#readme";
description = "Continuous integration system";
license = stdenv.lib.licenses.bsd3;

}) {};
"bank-holidays-england" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, time
}:
mkDerivation {

pname = "bank-holidays-england";
version = "0.1.0.5";
sha256 = "0619db7812762ea3af48db434dbcad81e26525d733126073dfe3dbd357a83760";
libraryHaskellDepends = [
base
containers
time
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/davecturner/bank-holidays-england";
description = "Calculation of bank holidays in England and Wales";
license = stdenv.lib.licenses.bsd3;

}) {};
"base-compat" = callPackage
({
  mkDerivation
, base
, stdenv
, unix
}:
mkDerivation {

pname = "base-compat";
version = "0.9.1";
sha256 = "1033b48146b9ffcf4f7c75a321ea0b1525c1b662230f46c41957a1b501b6464a";
libraryHaskellDepends = [
base
unix
];
doHaddock = false;
doCheck = false;
description = "A compatibility layer for base";
license = stdenv.lib.licenses.mit;

}) {};
"base-noprelude" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "base-noprelude";
version = "4.9.1.0";
sha256 = "11611df31326a31694f13393d1ee1d3c684c2688eeaca8d8627f40ac9435f895";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/base-noprelude";
description = "\"base\" package sans \"Prelude\" module";
license = stdenv.lib.licenses.bsd3;

}) {};
"base-orphans" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "base-orphans";
version = "0.5.4";
sha256 = "04075283606b3633f4b0c72f849a6df1b0519421ad099d07d3e72de589056263";
libraryHaskellDepends = [
base
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-compat/base-orphans#readme";
description = "Backwards-compatible orphan instances for base";
license = stdenv.lib.licenses.mit;

}) {};
"base-prelude" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "base-prelude";
version = "1.0.1.1";
sha256 = "dccf0a9a3b45f950bac92b6d87997c0a2a4304e40027204b12d018698b7a31b5";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/base-prelude";
description = "The most complete prelude formed solely from the \"base\" package";
license = stdenv.lib.licenses.mit;

}) {};
"base-unicode-symbols" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "base-unicode-symbols";
version = "0.2.2.4";
sha256 = "a2f841430fec32edba778b74bde83bf0170ada7c5e2e59d7187c8f06d92dcca9";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
description = "Unicode alternatives for common functions and operators";
license = stdenv.lib.licenses.bsd3;

}) {};
"base16-bytestring" = callPackage
({
  mkDerivation
, base
, bytestring
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "base16-bytestring";
version = "0.1.1.6";
sha256 = "5afe65a152c5418f5f4e3579a5e0d5ca19c279dc9bf31c1a371ccbe84705c449";
libraryHaskellDepends = [
base
bytestring
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/bos/base16-bytestring";
description = "Fast base16 (hex) encoding and decoding for ByteStrings";
license = stdenv.lib.licenses.bsd3;

}) {};
"base32string" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "base32string";
version = "0.9.1";
sha256 = "9e931613aeba5f630f9292fc99131388f406e4b34d8f050515ed93aaf632ea32";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
binary
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Fast and safe representation of a Base-32 string";
license = stdenv.lib.licenses.mit;

}) {};
"base58string" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "base58string";
version = "0.10.0";
sha256 = "3b72607dd76e30a5054acea656c3805f7191e27d67884a7db5fbc73c17e9c088";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
binary
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Fast and safe representation of a Base-58 string";
license = stdenv.lib.licenses.mit;

}) {};
"base64-bytestring" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "base64-bytestring";
version = "1.0.0.1";
sha256 = "ab25abf4b00a2f52b270bc3ed43f1d59f16c8eec9d7dffb14df1e9265b233b50";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/base64-bytestring";
description = "Fast base64 encoding and decoding for ByteStrings";
license = stdenv.lib.licenses.bsd3;

}) {};
"base64-string" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "base64-string";
version = "0.2";
sha256 = "3ec896ca7261ad4ddeffbaa3bdf4d5cb61775250c303fca9929aa9a56acc705e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://urchin.earth.li/~ian/cabal/base64-string/";
description = "Base64 implementation for String's";
license = "unknown";

}) {};
"basic-prelude" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, filepath
, hashable
, lifted-base
, ReadArgs
, safe
, stdenv
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "basic-prelude";
version = "0.6.1";
sha256 = "6c2b905777d6e22157da48d7e3d5f3862e0698736afbf4f237fff9d14e803061";
libraryHaskellDepends = [
base
bytestring
containers
filepath
hashable
lifted-base
ReadArgs
safe
text
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/basic-prelude";
description = "An enhanced core prelude; a common foundation for alternate preludes";
license = stdenv.lib.licenses.mit;

}) {};
"bcrypt" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default
, entropy
, memory
, stdenv
}:
mkDerivation {

pname = "bcrypt";
version = "0.0.10";
sha256 = "0498f9ff8df2bd0bcb4cd718c6fccd01f29837de164e24624fa32e0bfeed0eb6";
libraryHaskellDepends = [
base
bytestring
data-default
entropy
memory
];
doHaddock = false;
doCheck = false;
description = "Haskell bindings to the bcrypt password hash";
license = stdenv.lib.licenses.bsd3;

}) {};
"benchpress" = callPackage
({
  mkDerivation
, base
, bytestring
, mtl
, stdenv
, time
}:
mkDerivation {

pname = "benchpress";
version = "0.2.2.9";
sha256 = "15c696bdde79a1acf31633a81def65cec8c04bee14cf8b0d0fa6a32d995a4aab";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
mtl
time
];
executableHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/WillSewell/benchpress";
description = "Micro-benchmarking with detailed statistics";
license = stdenv.lib.licenses.bsd3;

}) {};
"bencode" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, parsec
, stdenv
}:
mkDerivation {

pname = "bencode";
version = "0.6.0.0";
sha256 = "3b8efdfecee9bc486d9bcdbb633b7128ca235360f102478a7e0f8c895281f68a";
libraryHaskellDepends = [
base
binary
bytestring
containers
parsec
];
doHaddock = false;
doCheck = false;
description = "Parser and printer for bencoded data";
license = stdenv.lib.licenses.bsd3;

}) {};
"bento" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "bento";
version = "0.1.0";
sha256 = "eba28420daba13af9de264ec0e3d605535496536b9aff9bc23798cdbcc209192";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/bento#readme";
description = "🍱 Manage stateful components";
license = stdenv.lib.licenses.mit;

}) {};
"bifunctors" = callPackage
({
  mkDerivation
, base
, base-orphans
, comonad
, containers
, semigroups
, stdenv
, tagged
, template-haskell
, transformers
, transformers-compat
}:
mkDerivation {

pname = "bifunctors";
version = "5.4.1";
sha256 = "3746f971f69ce31ced23d12e4785d96985f5c620ac7a26d5f4efead970c43b87";
revision = "1";
editedCabalFile = "01b5wd1cvyp121rwyf6iqzlicpwrfxfjp6qahqsq0ll794w95ib4";
libraryHaskellDepends = [
base
base-orphans
comonad
containers
semigroups
tagged
template-haskell
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/bifunctors/";
description = "Bifunctors";
license = stdenv.lib.licenses.bsd3;

}) {};
"bimap" = callPackage
({
  mkDerivation
, base
, containers
, exceptions
, stdenv
}:
mkDerivation {

pname = "bimap";
version = "0.3.2";
sha256 = "148fc2d9784aa79faf49a979881a2304102a70d13e32fa8ce9f18ab466dc3db8";
libraryHaskellDepends = [
base
containers
exceptions
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/joelwilliamson/bimap";
description = "Bidirectional mapping between two key types";
license = stdenv.lib.licenses.bsd3;

}) {};
"bimap-server" = callPackage
({
  mkDerivation
, aeson
, base
, bimap
, binary
, directory
, http-types
, stdenv
, unix
, wai
, warp
}:
mkDerivation {

pname = "bimap-server";
version = "0.1.0.1";
sha256 = "09dfd1865812f40e317b610cbe05cc65ba6ea7215428748e1038ff7fc38ef535";
libraryHaskellDepends = [
aeson
base
bimap
binary
directory
http-types
unix
wai
warp
];
doHaddock = false;
doCheck = false;
description = "Two-column database server";
license = stdenv.lib.licenses.bsd3;

}) {};
"binary-bits" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, stdenv
}:
mkDerivation {

pname = "binary-bits";
version = "0.5";
sha256 = "16534a018a4754d8d1eab051711c23fb741f41a0d141b289001c52824b5be794";
libraryHaskellDepends = [
base
binary
bytestring
];
doHaddock = false;
doCheck = false;
description = "Bit parsing/writing on top of binary";
license = stdenv.lib.licenses.bsd3;

}) {};
"binary-conduit" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, conduit
, resourcet
, stdenv
, vector
}:
mkDerivation {

pname = "binary-conduit";
version = "1.2.4.1";
sha256 = "445cbb60bcff6da468e27b1db6a8d576b0b43ff284c3dcca4ae4c13f1ca6ca82";
libraryHaskellDepends = [
base
binary
bytestring
conduit
resourcet
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/qnikst/binary-conduit/";
description = "data serialization/deserialization conduit library";
license = stdenv.lib.licenses.mit;

}) {};
"binary-ieee754" = callPackage
({
  mkDerivation
, array
, base
, binary
, stdenv
}:
mkDerivation {

pname = "binary-ieee754";
version = "0.1.0.0";
sha256 = "15c489898bcd346b4067a27579cb5fc62e2fafecbec81ea0446165a24aee4d54";
libraryHaskellDepends = [
array
base
binary
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/binary-ieee754";
description = "Backport ieee754 float double combinators to older binary";
license = stdenv.lib.licenses.bsd3;

}) {};
"binary-list" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, deepseq
, phantom-state
, stdenv
, transformers
}:
mkDerivation {

pname = "binary-list";
version = "1.1.1.2";
sha256 = "6b21e58ea4091b9572cb24a92dfb1ddc14fcea82d2272d30a83eb1b430dd1878";
libraryHaskellDepends = [
base
binary
bytestring
deepseq
phantom-state
transformers
];
doHaddock = false;
doCheck = false;
description = "Lists of length a power of two";
license = stdenv.lib.licenses.bsd3;

}) {};
"binary-orphans" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, case-insensitive
, hashable
, scientific
, stdenv
, tagged
, text
, text-binary
, time
, unordered-containers
, vector
, vector-binary-instances
}:
mkDerivation {

pname = "binary-orphans";
version = "0.1.6.0";
sha256 = "e0e1dc7e5f00feb225efde400988d5e0e199cc910446f05a40fecba7d55684a5";
revision = "1";
editedCabalFile = "1knb7lxgvhkai7p2qgb2zmqnrfm08liga6y794p9l5b5j0kcy55i";
libraryHaskellDepends = [
aeson
base
binary
case-insensitive
hashable
scientific
tagged
text
text-binary
time
unordered-containers
vector
vector-binary-instances
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/binary-orphans#readme";
description = "Orphan instances for binary";
license = stdenv.lib.licenses.bsd3;

}) {};
"binary-parser" = callPackage
({
  mkDerivation
, base-prelude
, bytestring
, stdenv
, success
, text
, transformers
}:
mkDerivation {

pname = "binary-parser";
version = "0.5.2";
sha256 = "712d30f26f8423704437e02bd5cc98cfff48fdbac0499e8cb41998f289245545";
libraryHaskellDepends = [
base-prelude
bytestring
success
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/binary-parser";
description = "A highly-efficient but limited parser API specialised for bytestrings";
license = stdenv.lib.licenses.mit;

}) {};
"binary-parsers" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, bytestring-lexing
, scientific
, stdenv
}:
mkDerivation {

pname = "binary-parsers";
version = "0.2.3.0";
sha256 = "bc6195493b950efcbeb9ef54dfe47a6badf894dff934cf02a4b170331c1b217a";
revision = "1";
editedCabalFile = "09ag18yr1m26fl3w7ab1d5q5j201ygbw7qsbsy41bwd6iq87rq15";
libraryHaskellDepends = [
base
binary
bytestring
bytestring-lexing
scientific
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/binary-parsers";
description = "Extends binary with parsec/attoparsec style parsing combinators";
license = stdenv.lib.licenses.bsd3;

}) {};
"binary-search" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, transformers
}:
mkDerivation {

pname = "binary-search";
version = "1.0.0.3";
sha256 = "b0e32df46aeddceac57bd6afa940f84f275f82fb251479e10fadd7c14414f6fa";
libraryHaskellDepends = [
base
containers
transformers
];
doHaddock = false;
doCheck = false;
description = "Binary and exponential searches";
license = stdenv.lib.licenses.bsd3;

}) {};
"binary-tagged" = callPackage
({
  mkDerivation
, aeson
, array
, base
, base16-bytestring
, binary
, bytestring
, containers
, generics-sop
, hashable
, nats
, scientific
, semigroups
, SHA
, stdenv
, tagged
, text
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "binary-tagged";
version = "0.1.4.2";
sha256 = "311fab8c2bac00cb6785cb144e25ed58b2efce85e5dc64e30e2b5a2a16cdc784";
revision = "8";
editedCabalFile = "0a8xcrx2lm8yzcnrf76c1wynn238i87yz3lqlgrg5n9csdc0bhj1";
libraryHaskellDepends = [
aeson
array
base
base16-bytestring
binary
bytestring
containers
generics-sop
hashable
nats
scientific
semigroups
SHA
tagged
text
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/binary-tagged#readme";
description = "Tagged binary serialisation";
license = stdenv.lib.licenses.bsd3;

}) {};
"binary-typed" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, murmur-hash
, stdenv
}:
mkDerivation {

pname = "binary-typed";
version = "1.0";
sha256 = "85f3708802c52bca66bc5fdc560704cedd1cc63e313fcaab7638196ff7d05609";
revision = "1";
editedCabalFile = "1jnmdi3bnyiyvqlmgh5k8cdcbnl594yq3wrs6cjipw0ik06ar0y2";
libraryHaskellDepends = [
base
binary
bytestring
murmur-hash
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/quchen/binary-typed";
description = "Type-safe binary serialization";
license = stdenv.lib.licenses.bsd2;

}) {};
"bindings-DSL" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "bindings-DSL";
version = "1.0.23";
sha256 = "eb6c76448eeb2a9a17135b08eec0dd09e1917a9f6ab702cea0b2070bd19c10e7";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jwiegley/bindings-dsl/wiki";
description = "FFI domain specific language, on top of hsc2hs";
license = stdenv.lib.licenses.bsd3;

}) {};
"bindings-GLFW" = callPackage
({
  mkDerivation
, base
, bindings-DSL
, libGL
, libX11
, libXcursor
, libXext
, libXfixes
, libXi
, libXinerama
, libXrandr
, libXxf86vm
, stdenv
, template-haskell
}:
mkDerivation {

pname = "bindings-GLFW";
version = "3.1.2.2";
sha256 = "537385a35b0ca0f6980f9a785434dcca5e0f8b75475dafa2e9c9d719dd503fc9";
libraryHaskellDepends = [
base
bindings-DSL
template-haskell
];
librarySystemDepends = [
libGL
libX11
libXcursor
libXext
libXfixes
libXi
libXinerama
libXrandr
libXxf86vm
];
doHaddock = false;
doCheck = false;
description = "Low-level bindings to GLFW OpenGL library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) libGL; inherit (pkgs) libX11;
inherit (pkgs) libXcursor; inherit (pkgs) libXi;
inherit (pkgs) libXinerama; inherit (pkgs) libXrandr;
inherit (pkgs) libXxf86vm;};
"bindings-libzip" = callPackage
({
  mkDerivation
, base
, bindings-DSL
, libzip
, stdenv
}:
mkDerivation {

pname = "bindings-libzip";
version = "1.0.1";
sha256 = "908d060360d66974b1d9400dea28a1dce35a88baf5d73a6e3c12be8e74cda2ec";
libraryHaskellDepends = [
base
bindings-DSL
];
libraryPkgconfigDepends = [
libzip
];
doHaddock = false;
doCheck = false;
homepage = "http://bitbucket.org/astanin/hs-libzip/";
description = "Low level bindings to libzip";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) libzip;};
"bioace" = callPackage
({
  mkDerivation
, base
, bioalign
, biocore
, bytestring
, parsec
, stdenv
}:
mkDerivation {

pname = "bioace";
version = "0.0.1";
sha256 = "6f43645b2a0ccbca20069aa25fae6fc2ae1704a3a0c48b069852fbfb8ce16222";
libraryHaskellDepends = [
base
bioalign
biocore
bytestring
parsec
];
doHaddock = false;
doCheck = false;
homepage = "https://patch-tag.com/r/dfornika/bioace/home";
description = "Library for reading ace assembly files";
license = "GPL";

}) {};
"bioalign" = callPackage
({
  mkDerivation
, base
, biocore
, bytestring
, stdenv
}:
mkDerivation {

pname = "bioalign";
version = "0.0.5";
sha256 = "b9152e81abbd7c79099520b69aeca3ff21970f1151b3c072a2994ea31b7acf00";
libraryHaskellDepends = [
base
biocore
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://patch-tag.com/r/dfornika/biophd/home";
description = "Data structures and helper functions for calculating alignments";
license = "GPL";

}) {};
"biocore" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, stringable
}:
mkDerivation {

pname = "biocore";
version = "0.3.1";
sha256 = "212b7d7395138d4c231968e1f5bb047c03f61adc6c5eb36162602f42c24db41a";
libraryHaskellDepends = [
base
bytestring
stringable
];
doHaddock = false;
doCheck = false;
description = "A bioinformatics library";
license = "LGPL";

}) {};
"biofasta" = callPackage
({
  mkDerivation
, base
, biocore
, bytestring
, stdenv
}:
mkDerivation {

pname = "biofasta";
version = "0.0.3";
sha256 = "6221a89cde259e8f9a2d4da11230a8a53d78b24d3367e70be5e7b1279e06e7d0";
libraryHaskellDepends = [
base
biocore
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://patch-tag.com/r/dfornika/biofasta/home";
description = "Library for reading fasta sequence files";
license = "GPL";

}) {};
"biofastq" = callPackage
({
  mkDerivation
, base
, biocore
, bytestring
, stdenv
}:
mkDerivation {

pname = "biofastq";
version = "0.1";
sha256 = "74e51887569c4900f5de266eca0dd28082c8abdf6ef0f34787a91baec562a310";
libraryHaskellDepends = [
base
biocore
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://biohaskell.org/";
description = "A library for reading FASTQ files";
license = "LGPL";

}) {};
"biopsl" = callPackage
({
  mkDerivation
, base
, biocore
, bytestring
, cmdargs
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "biopsl";
version = "0.4";
sha256 = "b2be254020a276df342ede835a1c1b1b989763098d7d8a5536c0b86c5f7a3bed";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
biocore
bytestring
];
executableHaskellDepends = [
cmdargs
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://biohaskell.org/";
description = "Library and executables for working with PSL files";
license = "LGPL";

}) {};
"bitarray" = callPackage
({
  mkDerivation
, array
, base
, stdenv
}:
mkDerivation {

pname = "bitarray";
version = "0.0.1.1";
sha256 = "b27f6f1065053a0e8e24fbf9382b7060af9962d8d150b631c682c0c58469d802";
revision = "1";
editedCabalFile = "10fk92v9afjqk43zi621jxl0n8kci0xjj32lz3vqa9xbh67zjz45";
libraryHaskellDepends = [
array
base
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~bkomuves/";
description = "Mutable and immutable bit arrays";
license = stdenv.lib.licenses.bsd3;

}) {};
"bitcoin-block" = callPackage
({
  mkDerivation
, base
, binary
, bitcoin-tx
, bitcoin-types
, bytestring
, cryptohash
, hexstring
, largeword
, lens
, stdenv
}:
mkDerivation {

pname = "bitcoin-block";
version = "0.13.1";
sha256 = "d7f57c0fe71045dab85d223dc15d64db3a15cc7fd8446bfe4ebd98cd9d417d5a";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
binary
bitcoin-tx
bitcoin-types
bytestring
cryptohash
hexstring
largeword
lens
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Utility functions for manipulating bitcoin blocks";
license = stdenv.lib.licenses.mit;

}) {};
"bitcoin-script" = callPackage
({
  mkDerivation
, base
, base16-bytestring
, binary
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "bitcoin-script";
version = "0.11.1";
sha256 = "398c1d86e918731b5b2026351bb3b0b90b20606517e7c21e42f05d6c6e197b4c";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
base16-bytestring
binary
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Compilation, manipulation and decompilation of Bitcoin scripts";
license = stdenv.lib.licenses.mit;

}) {};
"bitcoin-tx" = callPackage
({
  mkDerivation
, base
, binary
, bitcoin-script
, bitcoin-types
, bytestring
, cryptohash
, hexstring
, lens
, stdenv
}:
mkDerivation {

pname = "bitcoin-tx";
version = "0.13.1";
sha256 = "3bb88265353066c394e96a56b2dc555fa13d37ca7f820978b793196c6829cc00";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
binary
bitcoin-script
bitcoin-types
bytestring
cryptohash
hexstring
lens
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Utility functions for manipulating bitcoin transactions";
license = stdenv.lib.licenses.mit;

}) {};
"bitcoin-types" = callPackage
({
  mkDerivation
, base
, base58string
, binary
, bytestring
, hexstring
, stdenv
, text
}:
mkDerivation {

pname = "bitcoin-types";
version = "0.9.2";
sha256 = "b72f9448508b64706d5f443748dc9b8abde8e749959187ce3d8356cde0d6c40b";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
base58string
binary
bytestring
hexstring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Provides consistent low-level types used commonly among Bitcoin implementations";
license = stdenv.lib.licenses.mit;

}) {};
"bits" = callPackage
({
  mkDerivation
, base
, bytes
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "bits";
version = "0.5";
sha256 = "5834fbf0c5b4c5d0259f9aae9631c906e184a50606786132896307f15e406f1a";
libraryHaskellDepends = [
base
bytes
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/bits";
description = "Various bit twiddling and bitwise serialization primitives";
license = stdenv.lib.licenses.bsd3;

}) {};
"bitx-bitcoin" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, deepseq
, exceptions
, http-client
, http-client-tls
, http-types
, microlens
, microlens-th
, network
, QuickCheck
, scientific
, split
, stdenv
, text
, time
}:
mkDerivation {

pname = "bitx-bitcoin";
version = "0.11.0.0";
sha256 = "9f46782f5a9688b7c1681789d7165c9a21247dc5fc67807cf847bf526414ce20";
libraryHaskellDepends = [
aeson
base
bytestring
deepseq
exceptions
http-client
http-client-tls
http-types
microlens
microlens-th
network
QuickCheck
scientific
split
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tebello-thejane/bitx.hs";
description = "A Haskell library for working with the BitX bitcoin exchange";
license = stdenv.lib.licenses.bsd3;

}) {};
"blake2" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "blake2";
version = "0.2.0";
sha256 = "07d910e3f5c6e98f5a6b9d53dbe5f52506c3859b513bc7493b52552a28382cfc";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/centromere/blake2";
description = "A library providing BLAKE2";
license = stdenv.lib.licenses.publicDomain;

}) {};
"blank-canvas" = callPackage
({
  mkDerivation
, aeson
, base
, base-compat
, base64-bytestring
, bytestring
, colour
, containers
, data-default-class
, http-types
, kansas-comet
, mime-types
, scotty
, stdenv
, stm
, text
, text-show
, transformers
, vector
, wai
, wai-extra
, warp
}:
mkDerivation {

pname = "blank-canvas";
version = "0.6";
sha256 = "2a0e5c4fc50b1ce43e56b1a11056186c21d565e225da36f90c58f8c0a70f48b3";
revision = "12";
editedCabalFile = "011gssnsg4svv0mz58cvkmy2nr994d4v6ch29yilgh6rna0qfkd9";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
base-compat
base64-bytestring
bytestring
colour
containers
data-default-class
http-types
kansas-comet
mime-types
scotty
stm
text
text-show
transformers
vector
wai
wai-extra
warp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ku-fpg/blank-canvas/wiki";
description = "HTML5 Canvas Graphics Library";
license = stdenv.lib.licenses.bsd3;

}) {};
"blastxml" = callPackage
({
  mkDerivation
, base
, biocore
, bytestring
, parallel
, stdenv
, tagsoup
}:
mkDerivation {

pname = "blastxml";
version = "0.3.2";
sha256 = "0c0089c42306c8189a9a26905677372d26adfde03772ae79b4742771d0de986a";
libraryHaskellDepends = [
base
biocore
bytestring
parallel
tagsoup
];
doHaddock = false;
doCheck = false;
homepage = "http://biohaskell.org/";
description = "Library for reading Blast XML output";
license = "LGPL";

}) {};
"blaze-bootstrap" = callPackage
({
  mkDerivation
, base
, blaze-html
, stdenv
, text
}:
mkDerivation {

pname = "blaze-bootstrap";
version = "0.1.0.1";
sha256 = "53b54c0b55ae7a436ec7e5d4e29d50fceb1ccd459ef715236358a3c661d05163";
libraryHaskellDepends = [
base
blaze-html
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/agrafix/blaze-bootstrap";
description = "Blaze helper functions for bootstrap pages";
license = stdenv.lib.licenses.mit;

}) {};
"blaze-builder" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, stdenv
, text
}:
mkDerivation {

pname = "blaze-builder";
version = "0.4.0.2";
sha256 = "9ad3e4661bf5556d650fb9aa56a3ad6e6eec7575e87d472e8ab6d15eaef163d4";
revision = "1";
editedCabalFile = "1n8z1zcvrslsa9dvflx8528hsialmnljl1zzdjf1azs24xdq2npm";
libraryHaskellDepends = [
base
bytestring
deepseq
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/lpsmith/blaze-builder";
description = "Efficient buffered output";
license = stdenv.lib.licenses.bsd3;

}) {};
"blaze-html" = callPackage
({
  mkDerivation
, base
, blaze-builder
, blaze-markup
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "blaze-html";
version = "0.8.1.3";
sha256 = "8c16e717d353f981e0cd67b50f89ef6f94ab9c56662b3e58bd8a6c552433d637";
libraryHaskellDepends = [
base
blaze-builder
blaze-markup
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://jaspervdj.be/blaze";
description = "A blazingly fast HTML combinator library for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"blaze-markup" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "blaze-markup";
version = "0.7.1.1";
sha256 = "638da5984ecd5bcc87f5836786ff93352058a8856bea428d7ffd25bc26c54303";
libraryHaskellDepends = [
base
blaze-builder
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://jaspervdj.be/blaze";
description = "A blazingly fast markup combinator library for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"blaze-svg" = callPackage
({
  mkDerivation
, base
, blaze-markup
, mtl
, stdenv
}:
mkDerivation {

pname = "blaze-svg";
version = "0.3.6";
sha256 = "90dff37d78bffe5ee2587bab4281c158d5d1bd3901fe359bfdcc1cb6fb387179";
libraryHaskellDepends = [
base
blaze-markup
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/deepakjois/blaze-svg";
description = "SVG combinator library";
license = stdenv.lib.licenses.bsd3;

}) {};
"blaze-textual" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, ghc-prim
, integer-gmp
, old-locale
, stdenv
, text
, time
, vector
}:
mkDerivation {

pname = "blaze-textual";
version = "0.2.1.0";
sha256 = "1042795ab0bab891c034c24a51bafecbb89870ccd28af39534ab3d9ae7f46c2d";
libraryHaskellDepends = [
base
blaze-builder
bytestring
ghc-prim
integer-gmp
old-locale
text
time
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/bos/blaze-textual";
description = "Fast rendering of common datatypes";
license = stdenv.lib.licenses.bsd3;

}) {};
"bloodhound" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-builder
, bytestring
, containers
, data-default-class
, exceptions
, hashable
, http-client
, http-types
, mtl
, mtl-compat
, network-uri
, scientific
, semigroups
, stdenv
, text
, time
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "bloodhound";
version = "0.12.1.0";
sha256 = "da3ed23c1cc9cfc1d1b44c1255522f6c164b8ed53d2e008c92789e72a232e46c";
libraryHaskellDepends = [
aeson
base
blaze-builder
bytestring
containers
data-default-class
exceptions
hashable
http-client
http-types
mtl
mtl-compat
network-uri
scientific
semigroups
text
time
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bitemyapp/bloodhound";
description = "ElasticSearch client library for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"blosum" = callPackage
({
  mkDerivation
, base
, containers
, fasta
, lens
, optparse-applicative
, pipes
, pipes-text
, split
, stdenv
, text
, text-show
}:
mkDerivation {

pname = "blosum";
version = "0.1.1.4";
sha256 = "44b12d24d56bfadec7a53c1d620e1cc52f4126ba01ab541a135b187846c10380";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
fasta
lens
text
text-show
];
executableHaskellDepends = [
base
containers
fasta
optparse-applicative
pipes
pipes-text
split
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/GregorySchwartz/blosum#readme";
description = "BLOSUM generator";
license = stdenv.lib.licenses.gpl2;

}) {};
"bmp" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, stdenv
}:
mkDerivation {

pname = "bmp";
version = "1.2.6.3";
sha256 = "3cc63de40fe088ce4d1c869180fd2309bcec35a940c9e3d1904d3520ca2fdacc";
libraryHaskellDepends = [
base
binary
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/benl23x5/bmp";
description = "Read and write uncompressed BMP image files";
license = stdenv.lib.licenses.mit;

}) {};
"bool-extras" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "bool-extras";
version = "0.4.0";
sha256 = "c1e8cfc6e716f089a7d24fe0cb33e2f4792ff97f81084604139d5902dc201501";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://tom.lokhorst.eu/bool-extras";
description = "A fold function for Bool";
license = stdenv.lib.licenses.bsd3;

}) {};
"boolean-like" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, containers
, semigroups
, stdenv
, text
, vector
}:
mkDerivation {

pname = "boolean-like";
version = "0.1.1.0";
sha256 = "6ca47b21a6d98161edfd94f4d5a19daacc13d229b87a0c107e868ff0259658b8";
libraryHaskellDepends = [
attoparsec
base
bytestring
containers
semigroups
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/Shou/boolean-like";
description = "Logical combinatory operations dealing with datatypes representing booleans by their constructors";
license = stdenv.lib.licenses.bsd3;

}) {};
"boolsimplifier" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "boolsimplifier";
version = "0.1.8";
sha256 = "096fa9377241520ee114403fd53b51a7369187fb4dca65f19f85a727d689828f";
revision = "1";
editedCabalFile = "0xqm0vn9i49b75fnvnvcnr9m4zwvhqynrkcjdxghrsxayg420lnh";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
description = "Simplification tools for simple propositional formulas";
license = stdenv.lib.licenses.bsd3;

}) {};
"boomerang" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, template-haskell
, text
}:
mkDerivation {

pname = "boomerang";
version = "1.4.5.2";
sha256 = "86de45d4407deba2f5441e3867fdc603a7b0cee35080bed181fdefe2c8a0a2be";
libraryHaskellDepends = [
base
mtl
template-haskell
text
];
doHaddock = false;
doCheck = false;
description = "Library for invertible parsing and printing";
license = stdenv.lib.licenses.bsd3;

}) {};
"both" = callPackage
({
  mkDerivation
, base
, semigroups
, stdenv
, zero
}:
mkDerivation {

pname = "both";
version = "0.1.1.0";
sha256 = "6f4ee8b7745fb3054282240fe941dd74cf2481f1a07b170d211c2b8791340e8e";
libraryHaskellDepends = [
base
semigroups
zero
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/both";
description = "Like Maybe, but with a different Monoid instance";
license = stdenv.lib.licenses.mit;

}) {};
"boundingboxes" = callPackage
({
  mkDerivation
, base
, lens
, stdenv
}:
mkDerivation {

pname = "boundingboxes";
version = "0.2.3";
sha256 = "e80947aa2c2c7f11e7eb2eb088a463d1cd1cdf03790e4c2746b629dcb1737564";
libraryHaskellDepends = [
base
lens
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fumieval/boundingboxes";
description = "A generic boundingbox for an arbitrary vector";
license = stdenv.lib.licenses.bsd3;

}) {};
"bower-json" = callPackage
({
  mkDerivation
, aeson
, aeson-better-errors
, base
, bytestring
, deepseq
, ghc-prim
, mtl
, scientific
, stdenv
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "bower-json";
version = "1.0.0.1";
sha256 = "7aa954e2b1bf79307db710c158108bd9ddb45b333ca96072cdbfaf96c77b7e73";
libraryHaskellDepends = [
aeson
aeson-better-errors
base
bytestring
deepseq
ghc-prim
mtl
scientific
text
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hdgarrood/bower-json";
description = "Read bower.json from Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"boxes" = callPackage
({
  mkDerivation
, base
, split
, stdenv
}:
mkDerivation {

pname = "boxes";
version = "0.1.4";
sha256 = "4e3ee9a88a28ed14a61b2c885b111922f201f56392ff68d350418ff6e98dfdd8";
revision = "1";
editedCabalFile = "073kkci1pm6rci7mnq9v006679jk41bfzc0jfi7my4c7idwd1ijd";
libraryHaskellDepends = [
base
split
];
doHaddock = false;
doCheck = false;
description = "2D text pretty-printing library";
license = stdenv.lib.licenses.bsd3;

}) {};
"brick" = callPackage
({
  mkDerivation
, base
, containers
, contravariant
, deepseq
, dlist
, microlens
, microlens-mtl
, microlens-th
, stdenv
, stm
, template-haskell
, text
, text-zipper
, transformers
, vector
, vty
}:
mkDerivation {

pname = "brick";
version = "0.17";
sha256 = "891cb3323b1de2ed27849399cf8ab1ed1467560813a6182edb53b3726e4b3b68";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
containers
contravariant
deepseq
dlist
microlens
microlens-mtl
microlens-th
stm
template-haskell
text
text-zipper
transformers
vector
vty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jtdaugherty/brick/";
description = "A declarative terminal user interface library";
license = stdenv.lib.licenses.bsd3;

}) {};
"broadcast-chan" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "broadcast-chan";
version = "0.1.1";
sha256 = "ad5bd65a301aff6df38c4111f02e73cce3bcfed7bfae6c66c2e70310f1e985f2";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/merijn/broadcast-chan";
description = "Broadcast channel type that avoids 0 reader space leaks";
license = stdenv.lib.licenses.bsd3;

}) {};
"bson" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, cryptohash
, data-binary-ieee754
, mtl
, network
, stdenv
, text
, time
}:
mkDerivation {

pname = "bson";
version = "0.3.2.3";
sha256 = "9b3aba435365cdfbbd0ba8ccb3400e961d56329da57f6de2e1e391004c374982";
libraryHaskellDepends = [
base
binary
bytestring
cryptohash
data-binary-ieee754
mtl
network
text
time
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/mongodb-haskell/bson";
description = "BSON documents are JSON-like objects with a standard binary encoding";
license = "unknown";

}) {};
"bson-lens" = callPackage
({
  mkDerivation
, base
, bson
, lens
, stdenv
, text
}:
mkDerivation {

pname = "bson-lens";
version = "0.1.1";
sha256 = "d73bb417def2d8cb1efebfc22482a859e119bcc4005dd10106c82dff5ceeb160";
libraryHaskellDepends = [
base
bson
lens
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jb55/bson-lens";
description = "BSON lenses";
license = stdenv.lib.licenses.mit;

}) {};
"btrfs" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, time
, unix
}:
mkDerivation {

pname = "btrfs";
version = "0.1.2.3";
sha256 = "7efc0b5c65623dcf60910baf896aec7da7ac2df4231f03a3072c78fb5b2fb88d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/redneb/hs-btrfs";
description = "Bindings to the btrfs API";
license = stdenv.lib.licenses.bsd3;

}) {};
"buffer-builder" = callPackage
({
  mkDerivation
, base
, bytestring
, mtl
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "buffer-builder";
version = "0.2.4.4";
sha256 = "01c0bafb776784a08c041abfc89c3eaee3236bf5555b98e9542676dc43db2dd8";
libraryHaskellDepends = [
base
bytestring
mtl
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chadaustin/buffer-builder";
description = "Library for efficiently building up buffers, one piece at a time";
license = stdenv.lib.licenses.bsd3;

}) {};
"bumper" = callPackage
({
  mkDerivation
, base
, Cabal
, containers
, fclabels
, process
, regex-compat
, split
, stdenv
, strict
}:
mkDerivation {

pname = "bumper";
version = "0.6.0.3";
sha256 = "7cfce3a38be30744a2eb322ad1e5271cd665fa62b4fe21bdf9aa00fcdbc4daa8";
revision = "3";
editedCabalFile = "0r4fj5mxl452786jw6pr2nwhs5sszlxb9nwcrakr44jysm181lhw";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
Cabal
containers
fclabels
process
regex-compat
split
strict
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/silkapp/bumper";
description = "Automatically bump package versions, also transitively";
license = stdenv.lib.licenses.bsd3;

}) {};
"bv" = callPackage
({
  mkDerivation
, base
, ghc-prim
, integer-gmp
, stdenv
}:
mkDerivation {

pname = "bv";
version = "0.4.1";
sha256 = "dd092150f1792e76e168365d69798d3a27b911ce9de8b21a47c5fed42acf45bb";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
ghc-prim
integer-gmp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/iagoabal/haskell-bv";
description = "Bit-vector arithmetic library";
license = stdenv.lib.licenses.bsd3;

}) {};
"byteable" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "byteable";
version = "0.1.1";
sha256 = "243b34a1b5b64b39e39fe58f75c18f6cad5b668b10cabcd86816cbde27783fe2";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-byteable";
description = "Type class for sequence of bytes";
license = stdenv.lib.licenses.bsd3;

}) {};
"bytedump" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "bytedump";
version = "1.0";
sha256 = "ae17b5040f0423eec792505f14d1d3e53f5ff81ddf83524f1c5dc7a16c0dc0dd";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-bytedump";
description = "Flexible byte dump helpers for human readers";
license = stdenv.lib.licenses.bsd3;

}) {};
"byteorder" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "byteorder";
version = "1.0.4";
sha256 = "bd20bbb586947f99c38a4c93d9d0266f49f6fc581767b51ba568f6d5d52d2919";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://community.haskell.org/~aslatter/code/byteorder";
description = "Exposes the native endianness or byte ordering of the system";
license = stdenv.lib.licenses.bsd3;

}) {};
"bytes" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, cereal
, containers
, hashable
, mtl
, scientific
, stdenv
, text
, time
, transformers
, transformers-compat
, unordered-containers
, void
}:
mkDerivation {

pname = "bytes";
version = "0.15.2";
sha256 = "0bfaaf70154d3622be1ee620dd75e9c93cf4d4a21544d83f281d01439f261f34";
revision = "1";
editedCabalFile = "15lwy9l91rvzqpq3q174bxljwaby049mkilica3bp78m7b5wnb0h";
libraryHaskellDepends = [
base
binary
bytestring
cereal
containers
hashable
mtl
scientific
text
time
transformers
transformers-compat
unordered-containers
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ekmett/bytes";
description = "Sharing code for serialization between binary and cereal";
license = stdenv.lib.licenses.bsd3;

}) {};
"byteset" = callPackage
({
  mkDerivation
, base
, binary
, stdenv
}:
mkDerivation {

pname = "byteset";
version = "0.1.1.0";
sha256 = "13499c5b279f022097e9ae1d0aeef3fcea12b7f18f50157d4950aec58741afa1";
libraryHaskellDepends = [
base
binary
];
doHaddock = false;
doCheck = false;
description = "Set of bytes";
license = stdenv.lib.licenses.bsd3;

}) {};
"bytestring-builder" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, stdenv
}:
mkDerivation {

pname = "bytestring-builder";
version = "0.10.8.1.0";
sha256 = "6d7404773621efb88b256ff88912a7dbcebc7fb86d27868ef58478249892dbc2";
libraryHaskellDepends = [
base
bytestring
deepseq
];
doHaddock = false;
doCheck = false;
description = "The new bytestring builder, packaged outside of GHC";
license = stdenv.lib.licenses.bsd3;

}) {};
"bytestring-conversion" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, case-insensitive
, double-conversion
, stdenv
, text
}:
mkDerivation {

pname = "bytestring-conversion";
version = "0.3.1";
sha256 = "13b7ea48737dc7a7fd4c894ff1fb9344cf8d9ef8f4201e813d578b613e874ef8";
revision = "2";
editedCabalFile = "1x8c42cfzb6fdvgkxxdxcpdf16csimlzsgahb1axnplmr6b3ba63";
libraryHaskellDepends = [
attoparsec
base
bytestring
case-insensitive
double-conversion
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/twittner/bytestring-conversion/";
description = "Type-classes to convert values to and from ByteString";
license = stdenv.lib.licenses.mpl20;

}) {};
"bytestring-handle" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "bytestring-handle";
version = "0.1.0.5";
sha256 = "a2c426f35ba32822e45bcc2e6d4945bbb2ee10b8540bb0965ab6f3304325bb83";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/ganesh/bytestring-handle";
description = "ByteString-backed Handles";
license = stdenv.lib.licenses.bsd3;

}) {};
"bytestring-lexing" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "bytestring-lexing";
version = "0.5.0.2";
sha256 = "01f9add3f25067a89c5ae9ab1f2fd8ab75ec9f386987ee0d83f73ec855b43f73";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "Parse and produce literals efficiently from strict or lazy bytestrings";
license = stdenv.lib.licenses.bsd2;

}) {};
"bytestring-progress" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, terminal-progress-bar
, time
}:
mkDerivation {

pname = "bytestring-progress";
version = "1.0.7";
sha256 = "97b0950b6dff0154aa463f1e2921dc560478e1156e482bd5bde8a62bd3f83730";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
terminal-progress-bar
time
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/acw/bytestring-progress";
description = "A library for tracking the consumption of a lazy ByteString";
license = stdenv.lib.licenses.bsd3;

}) {};
"bytestring-tree-builder" = callPackage
({
  mkDerivation
, base
, base-prelude
, bytestring
, semigroups
, stdenv
, text
}:
mkDerivation {

pname = "bytestring-tree-builder";
version = "0.2.7.1";
sha256 = "ae03a5b2e24068870dfcff6c6dc8d6d243aaebdb7c66746d499e7cf6cfd16bd5";
libraryHaskellDepends = [
base
base-prelude
bytestring
semigroups
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/bytestring-tree-builder";
description = "A very efficient ByteString builder implementation based on the binary tree";
license = stdenv.lib.licenses.mit;

}) {};
"bytestring-trie" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, stdenv
}:
mkDerivation {

pname = "bytestring-trie";
version = "0.2.4.1";
sha256 = "2fe4feb526a03d32aaf673506623b3af4ce3fee126f745a8852c5fd676a61363";
revision = "1";
editedCabalFile = "0f56pb1k1va7bs9rpn0b8hclxhn5pcjln857k50myhyzrwz8qg7r";
libraryHaskellDepends = [
base
binary
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "An efficient finite map from (byte)strings to values";
license = stdenv.lib.licenses.bsd3;

}) {};
"bzlib" = callPackage
({
  mkDerivation
, base
, bytestring
, bzip2
, stdenv
}:
mkDerivation {

pname = "bzlib";
version = "0.5.0.5";
sha256 = "9ee7d0ac7461b330820af928c13c6668bf4fe3601f171c42432a85c33718017e";
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
bzip2
];
doHaddock = false;
doCheck = false;
description = "Compression and decompression in the bzip2 format";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) bzip2;};
"bzlib-conduit" = callPackage
({
  mkDerivation
, base
, bindings-DSL
, bytestring
, bzip2
, conduit
, conduit-extra
, data-default
, mtl
, resourcet
, stdenv
}:
mkDerivation {

pname = "bzlib-conduit";
version = "0.2.1.4";
sha256 = "2d707004ccc83d9aa283805574c7253db5089854abb3a7350587de62f2b2fd1d";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bindings-DSL
bytestring
conduit
conduit-extra
data-default
mtl
resourcet
];
librarySystemDepends = [
bzip2
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/bzlib-conduit";
description = "Streaming compression/decompression via conduits";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) bzip2;};
"c2hs" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, directory
, dlist
, filepath
, language-c
, pretty
, process
, stdenv
}:
mkDerivation {

pname = "c2hs";
version = "0.28.1";
sha256 = "95b04ef42cf43a1078e9c8a4bf9264dd26e8653b441b3fb7f2296c8b3a0752bb";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
array
base
bytestring
containers
directory
dlist
filepath
language-c
pretty
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell/c2hs";
description = "C->Haskell FFI tool that gives some cross-language type safety";
license = stdenv.lib.licenses.gpl2;

}) {};
"cabal-dependency-licenses" = callPackage
({
  mkDerivation
, base
, Cabal
, containers
, directory
, filepath
, stdenv
}:
mkDerivation {

pname = "cabal-dependency-licenses";
version = "0.2.0.0";
sha256 = "1731299d3764dd56fe93da2df0b32ce6d4e794e9a68a3dff96cf84a63fb5341e";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
Cabal
containers
directory
filepath
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jaspervdj/cabal-dependency-licenses";
description = "Compose a list of a project's transitive dependencies with their licenses";
license = stdenv.lib.licenses.bsd3;

}) {};
"cabal-doctest" = callPackage
({
  mkDerivation
, base
, Cabal
, directory
, filepath
, stdenv
}:
mkDerivation {

pname = "cabal-doctest";
version = "1";
sha256 = "7c769d62029d10f8861d88f48080a64f875346b74028ed2fd808d674accc6147";
revision = "1";
editedCabalFile = "0g17mir6wa8vk2sgdhxba2f4g6wscbp7pib8rdpkq2asx48qbsnf";
libraryHaskellDepends = [
base
Cabal
directory
filepath
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/cabal-doctests";
description = "A Setup.hs helper for doctests running";
license = stdenv.lib.licenses.bsd3;

}) {};
"cabal-file-th" = callPackage
({
  mkDerivation
, base
, Cabal
, directory
, pretty
, stdenv
, template-haskell
}:
mkDerivation {

pname = "cabal-file-th";
version = "0.2.4";
sha256 = "0b55d7ffacd0c6324fa7c8b8f148e788e6b899fb9bf8795285dea66575bed91c";
libraryHaskellDepends = [
base
Cabal
directory
pretty
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/nkpart/cabal-file-th";
description = "Template Haskell expressions for reading fields from a project's cabal file";
license = stdenv.lib.licenses.bsd3;

}) {};
"cabal-helper" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, directory
, filepath
, ghc-prim
, mtl
, process
, stdenv
, template-haskell
, temporary
, transformers
, utf8-string
}:
mkDerivation {

pname = "cabal-helper";
version = "0.7.3.0";
sha256 = "794055f5205dd029aceb2fe9aac183880d2b4ef005d1096ee3052710d01192a4";
revision = "1";
editedCabalFile = "0jhv5hx807zqrsa7fpzmhrhl6l1zjrpm96bvfsq0sq1bmi9y9h0y";
isLibrary = true;
isExecutable = true;
setupHaskellDepends = [
base
Cabal
containers
directory
filepath
process
template-haskell
transformers
];
libraryHaskellDepends = [
base
Cabal
directory
filepath
ghc-prim
mtl
process
transformers
];
executableHaskellDepends = [
base
bytestring
Cabal
directory
filepath
ghc-prim
mtl
process
template-haskell
temporary
transformers
utf8-string
];
doHaddock = false;
doCheck = false;
description = "Simple interface to some of Cabal's configuration state used by ghc-mod";
license = stdenv.lib.licenses.agpl3;

}) {};
"cabal-install" = callPackage
({
  mkDerivation
, array
, async
, base
, base16-bytestring
, binary
, bytestring
, Cabal
, containers
, cryptohash-sha256
, directory
, filepath
, hackage-security
, hashable
, HTTP
, mtl
, network
, network-uri
, pretty
, process
, random
, stdenv
, stm
, tar
, time
, unix
, zlib
}:
mkDerivation {

pname = "cabal-install";
version = "1.24.0.2";
sha256 = "2ac8819238a0e57fff9c3c857e97b8705b1b5fef2e46cd2829e85d96e2a00fe0";
revision = "1";
editedCabalFile = "0v112hvvppa31sklpzg54vr0hfidy1334kg5p3jc0gbgl8in1n90";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
array
async
base
base16-bytestring
binary
bytestring
Cabal
containers
cryptohash-sha256
directory
filepath
hackage-security
hashable
HTTP
mtl
network
network-uri
pretty
process
random
stm
tar
time
unix
zlib
];
doHaddock = false;
doCheck = false;
postInstall = ''
  mkdir $out/etc
  mv bash-completion $out/etc/bash_completion.d
'';
homepage = "http://www.haskell.org/cabal/";
description = "The command-line interface for Cabal and Hackage";
license = stdenv.lib.licenses.bsd3;

}) {};
"cabal-rpm" = callPackage
({
  mkDerivation
, base
, Cabal
, directory
, filepath
, old-locale
, process
, stdenv
, time
, unix
}:
mkDerivation {

pname = "cabal-rpm";
version = "0.11";
sha256 = "c705a4fc4bcdf64989d26b94b52381ab465db542e0a99e8614ced9fe872ed9d5";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
Cabal
directory
filepath
old-locale
process
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/juhp/cabal-rpm";
description = "RPM packaging tool for Haskell Cabal-based packages";
license = stdenv.lib.licenses.gpl3;

}) {};
"cabal2nix" = callPackage
({
  mkDerivation
, aeson
, ansi-wl-pprint
, base
, bytestring
, Cabal
, containers
, deepseq
, directory
, distribution-nixpkgs
, filepath
, hackage-db
, language-nix
, lens
, monad-par
, monad-par-extras
, mtl
, optparse-applicative
, pretty
, process
, SHA
, split
, stdenv
, text
, time
, transformers
, utf8-string
, yaml
}:
mkDerivation {

pname = "cabal2nix";
version = "2.0.4";
sha256 = "b20b597df92787ba878073cd7cc855b3c0186f1781ac65056f261c420a1c7fe3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
ansi-wl-pprint
base
bytestring
Cabal
containers
deepseq
directory
distribution-nixpkgs
filepath
hackage-db
language-nix
lens
optparse-applicative
pretty
process
SHA
split
text
transformers
yaml
];
executableHaskellDepends = [
aeson
ansi-wl-pprint
base
bytestring
Cabal
containers
deepseq
directory
distribution-nixpkgs
filepath
hackage-db
language-nix
lens
monad-par
monad-par-extras
mtl
optparse-applicative
pretty
process
SHA
split
text
time
transformers
utf8-string
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nixos/cabal2nix#readme";
description = "Convert Cabal files into Nix build instructions";
license = stdenv.lib.licenses.bsd3;

}) {};
"cache" = callPackage
({
  mkDerivation
, base
, clock
, hashable
, stdenv
, stm
, transformers
, unordered-containers
}:
mkDerivation {

pname = "cache";
version = "0.1.0.0";
sha256 = "149ee40a6452297c61bfba2aa2ee9d7c18cf1a3d51f59cf1a8765d6dddb0fbd0";
libraryHaskellDepends = [
base
clock
hashable
stm
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hverr/haskell-cache";
description = "An in-memory key/value store with expiration support";
license = stdenv.lib.licenses.bsd3;

}) {};
"cacophony" = callPackage
({
  mkDerivation
, base
, bytestring
, cryptonite
, exceptions
, free
, lens
, memory
, monad-coroutine
, mtl
, safe-exceptions
, stdenv
, transformers
}:
mkDerivation {

pname = "cacophony";
version = "0.9.1";
sha256 = "cb60834c8b0571f2b2b54b6f9847960c71ffe5350c60791c439de6ba54c67c02";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
cryptonite
exceptions
free
lens
memory
monad-coroutine
mtl
safe-exceptions
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/centromere/cacophony";
description = "A library implementing the Noise protocol";
license = stdenv.lib.licenses.publicDomain;

}) {};
"cairo" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, Cabal
, cairo
, gtk2hs-buildtools
, mtl
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "cairo";
version = "0.13.3.1";
sha256 = "a3ca197c6d63875686ed8129530771f945fbd954ab8283841ad238da233d675a";
enableSeparateDataOutput = true;
setupHaskellDepends = [
base
Cabal
gtk2hs-buildtools
];
libraryHaskellDepends = [
array
base
bytestring
mtl
text
utf8-string
];
libraryPkgconfigDepends = [
cairo
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/gtk2hs/";
description = "Binding to the Cairo library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) cairo;};
"call-stack" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "call-stack";
version = "0.1.0";
sha256 = "f25f5e0992a39371079cc25c2a14b5abb872fa7d868a32753aac3a258b83b1e2";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sol/call-stack#readme";
description = "Use GHC call-stacks in a backward compatible way";
license = stdenv.lib.licenses.mit;

}) {};
"camfort" = callPackage
({
  mkDerivation
, alex
, array
, base
, bytestring
, containers
, directory
, fgl
, filepath
, fortran-src
, GenericPretty
, ghc-prim
, happy
, hmatrix
, matrix
, mtl
, QuickCheck
, stdenv
, syb
, syz
, text
, transformers
, uniplate
, vector
}:
mkDerivation {

pname = "camfort";
version = "0.901";
sha256 = "2aaf96c527f649e209b9fbe46e6d31cd4707b9d2aa514b4dfac55422bdf4992c";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
base
bytestring
containers
directory
fgl
filepath
fortran-src
GenericPretty
ghc-prim
hmatrix
matrix
mtl
syb
syz
text
transformers
uniplate
vector
];
libraryToolDepends = [
alex
happy
];
executableHaskellDepends = [
array
base
bytestring
containers
directory
fgl
filepath
fortran-src
GenericPretty
ghc-prim
hmatrix
matrix
mtl
QuickCheck
syb
syz
text
transformers
uniplate
vector
];
doHaddock = false;
doCheck = false;
description = "CamFort - Cambridge Fortran infrastructure";
license = stdenv.lib.licenses.asl20;

}) {};
"cardano-crypto" = callPackage
({
  mkDerivation
, base
, bytestring
, cryptonite
, cryptonite-openssl
, deepseq
, fetchgit
, hashable
, memory
, stdenv
}:
mkDerivation {

pname = "cardano-crypto";
version = "1.0.0";
src = fetchgit {

url = "https://github.com/input-output-hk/cardano-crypto";
sha256 = "02gjaj7889y30g2qfdh96ywrsdpmgfgyqyajw49zaklwjvkh87sv";
rev = "838b064d8a59286142aa2fe14434fe7601896ddb";

};
libraryHaskellDepends = [
base
bytestring
cryptonite
cryptonite-openssl
deepseq
hashable
memory
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/input-output-hk/cardano-crypto#readme";
description = "Cryptography primitives for cardano";
license = stdenv.lib.licenses.mit;

}) {};
"carray" = callPackage
({
  mkDerivation
, array
, base
, binary
, bytestring
, ix-shapable
, QuickCheck
, stdenv
, syb
}:
mkDerivation {

pname = "carray";
version = "0.1.6.5";
sha256 = "6b253bd77cbe3cf1ed05ed60fa45f72f2ed5f6a0db5395ba26d58317b146786b";
revision = "1";
editedCabalFile = "161qczm8lp16v5v7mar67qwsd3vmiaz9fp26kl1vxhsyj7svpjln";
libraryHaskellDepends = [
array
base
binary
bytestring
ix-shapable
QuickCheck
syb
];
doHaddock = false;
doCheck = false;
description = "A C-compatible array library";
license = stdenv.lib.licenses.bsd3;

}) {};
"cartel" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, optparse-applicative
, pretty-show
, process
, split
, stdenv
, time
, transformers
}:
mkDerivation {

pname = "cartel";
version = "0.18.0.2";
sha256 = "7b27aa2cbeb73b1d5bf93214f290275025c3231fee23b32d80de104ec76ec270";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
filepath
optparse-applicative
pretty-show
process
split
time
transformers
];
executableHaskellDepends = [
base
directory
filepath
optparse-applicative
pretty-show
process
split
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/massysett/cartel";
description = "Specify Cabal files in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"case-insensitive" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, hashable
, stdenv
, text
}:
mkDerivation {

pname = "case-insensitive";
version = "1.2.0.8";
sha256 = "27aa610a7e0128c346d4a5cddb5d395a85b0889e4a9912acbb3b9ccbc4e99f68";
libraryHaskellDepends = [
base
bytestring
deepseq
hashable
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/basvandijk/case-insensitive";
description = "Case insensitive string comparison";
license = stdenv.lib.licenses.bsd3;

}) {};
"cased" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "cased";
version = "0.1.0.0";
sha256 = "8394e6705ed83152875e1de1c51c54c26b04a2359919d8958d66997b2b60ad23";
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jb55/cased";
description = "Track string casing in its type";
license = stdenv.lib.licenses.mit;

}) {};
"cases" = callPackage
({
  mkDerivation
, attoparsec
, base-prelude
, loch-th
, stdenv
, text
}:
mkDerivation {

pname = "cases";
version = "0.1.3.2";
sha256 = "9ecf632f7751aac2ed7ec93407f9499237316f2eb50f331bb4969abf3359a8a9";
libraryHaskellDepends = [
attoparsec
base-prelude
loch-th
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/cases";
description = "A converter for spinal, snake and camel cases";
license = stdenv.lib.licenses.mit;

}) {};
"cassava" = callPackage
({
  mkDerivation
, array
, attoparsec
, base
, blaze-builder
, bytestring
, containers
, deepseq
, hashable
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "cassava";
version = "0.4.5.1";
sha256 = "7c622ae9dc647508662a1cda3fe3f6d7032786e4e3d15f8488de9e9330cf9d9f";
revision = "2";
editedCabalFile = "0n94n43yvn3jghkja2diimh4jil2698721wclih78kak9832lsh3";
configureFlags = [
"-f-bytestring--lt-0_10_4"
];
libraryHaskellDepends = [
array
attoparsec
base
blaze-builder
bytestring
containers
deepseq
hashable
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/cassava";
description = "A CSV parsing and encoding library";
license = stdenv.lib.licenses.bsd3;

}) {};
"cassava-conduit" = callPackage
({
  mkDerivation
, array
, base
, bifunctors
, bytestring
, cassava
, conduit
, conduit-extra
, containers
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "cassava-conduit";
version = "0.3.5.1";
sha256 = "45853e32dbac212d41d800c539c7d9184e05d0b7b48df458a7963138449a75d5";
libraryHaskellDepends = [
array
base
bifunctors
bytestring
cassava
conduit
conduit-extra
containers
mtl
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/domdere/cassava-conduit";
description = "Conduit interface for cassava package";
license = stdenv.lib.licenses.bsd3;

}) {};
"cassava-megaparsec" = callPackage
({
  mkDerivation
, base
, bytestring
, cassava
, containers
, megaparsec
, stdenv
, unordered-containers
, vector
}:
mkDerivation {

pname = "cassava-megaparsec";
version = "0.1.0";
sha256 = "8d77229766aec5e9e31e145138be981cca791699a3d66010619604827c590702";
revision = "4";
editedCabalFile = "17hi4p5bwpfpvh3va80xwp0icpspvg58g05w8ibh3mihdxr6sqff";
libraryHaskellDepends = [
base
bytestring
cassava
containers
megaparsec
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/stackbuilders/cassava-megaparsec";
description = "Megaparsec parser of CSV files that plays nicely with Cassava";
license = stdenv.lib.licenses.mit;

}) {};
"cassette" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "cassette";
version = "0.1.0";
sha256 = "fd40b3fd44eebce549216f3a4c1852f5b109edddfff3d6d7e243b64574981613";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A combinator library for simultaneously defining parsers and pretty printers";
license = stdenv.lib.licenses.bsd3;

}) {};
"cayley-client" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, binary
, bytestring
, exceptions
, http-client
, http-conduit
, lens
, lens-aeson
, mtl
, stdenv
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "cayley-client";
version = "0.4.0";
sha256 = "bdd21a245b6db5102d11096746edd85545d150ee835c0324e554d8b812ee6571";
libraryHaskellDepends = [
aeson
attoparsec
base
binary
bytestring
exceptions
http-client
http-conduit
lens
lens-aeson
mtl
text
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/MichelBoucey/cayley-client";
description = "A Haskell client for the Cayley graph database";
license = stdenv.lib.licenses.bsd3;

}) {};
"cereal" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "cereal";
version = "0.5.4.0";
sha256 = "daca6c5aeff21ca233bebe006c158b0e4421b239c722768b568fca9b32cafee7";
revision = "1";
editedCabalFile = "1i791xd80l9rmhrs3x79brpjfy30jw5l70ys94vh63nwl47qpyjc";
libraryHaskellDepends = [
array
base
bytestring
containers
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/GaloisInc/cereal";
description = "A binary serialization library";
license = stdenv.lib.licenses.bsd3;

}) {};
"cereal-conduit" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, conduit
, resourcet
, stdenv
, transformers
}:
mkDerivation {

pname = "cereal-conduit";
version = "0.7.3";
sha256 = "05bf926a6292ad6e17f2667c248c33f820266ea8a703749923cc936a824c00a2";
libraryHaskellDepends = [
base
bytestring
cereal
conduit
resourcet
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/conduit";
description = "Turn Data.Serialize Gets and Puts into Sources, Sinks, and Conduits";
license = stdenv.lib.licenses.bsd3;

}) {};
"cereal-text" = callPackage
({
  mkDerivation
, base
, cereal
, stdenv
, text
}:
mkDerivation {

pname = "cereal-text";
version = "0.1.0.2";
sha256 = "3c7a15f4681fa53b66dcd5165f31f56ff9751a752ac5123ecc5bcf5c3ea0354c";
libraryHaskellDepends = [
base
cereal
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ulikoehler/cereal-text";
description = "Data.Text instances for the cereal serialization library";
license = stdenv.lib.licenses.asl20;

}) {};
"cereal-vector" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, stdenv
, vector
}:
mkDerivation {

pname = "cereal-vector";
version = "0.2.0.1";
sha256 = "ff0685a6c39e7aae32f8b4165e2ae06f284c867298ad4f7b776c1c1b2859f933";
libraryHaskellDepends = [
base
bytestring
cereal
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/acfoltzer/cereal-vector";
description = "Serialize instances for Data.Vector types.";
license = stdenv.lib.licenses.bsd3;

}) {};
"cgi" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, exceptions
, mtl
, multipart
, network
, network-uri
, parsec
, stdenv
, time
, xhtml
}:
mkDerivation {

pname = "cgi";
version = "3001.3.0.2";
sha256 = "92111387216c4941271a833a1214d61ad21aaf3337ae48ea6d99d4a035bd77c1";
libraryHaskellDepends = [
base
bytestring
containers
exceptions
mtl
multipart
network
network-uri
parsec
time
xhtml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cheecheeo/haskell-cgi";
description = "A library for writing CGI programs";
license = stdenv.lib.licenses.bsd3;

}) {};
"charset" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, semigroups
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "charset";
version = "0.3.7.1";
sha256 = "3d415d2883bd7bf0cc9f038e8323f19c71e07dd12a3c712f449ccb8b4daac0be";
libraryHaskellDepends = [
array
base
bytestring
containers
semigroups
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/charset";
description = "Fast unicode character sets based on complemented PATRICIA tries";
license = stdenv.lib.licenses.bsd3;

}) {};
"charsetdetect-ae" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "charsetdetect-ae";
version = "1.1.0.2";
sha256 = "1393fae432a88fbc5fda643cf545a91469a341218e72464960bde48b27ba0fbe";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/charsetdetect-ae";
description = "Character set detection using Mozilla's Universal Character Set Detector";
license = "LGPL";

}) {};
"chart-unit" = callPackage
({
  mkDerivation
, base
, colour
, containers
, data-default
, diagrams
, diagrams-core
, diagrams-lib
, diagrams-rasterific
, diagrams-svg
, foldl
, lens
, primitive
, protolude
, random-fu
, stdenv
, text
}:
mkDerivation {

pname = "chart-unit";
version = "0.1.0.0";
sha256 = "623d5e89b846bacc55a659e1e976da6c5c9de686ae5b088d5b9660dc082d5e8e";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
colour
containers
data-default
diagrams
diagrams-core
diagrams-lib
diagrams-rasterific
diagrams-svg
foldl
lens
primitive
protolude
text
];
executableHaskellDepends = [
base
containers
diagrams
diagrams-core
diagrams-lib
diagrams-rasterific
diagrams-svg
foldl
lens
primitive
protolude
random-fu
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tonyday567/chart-unit";
description = "A set of native haskell charts";
license = stdenv.lib.licenses.bsd3;

}) {};
"cheapskate" = callPackage
({
  mkDerivation
, base
, blaze-html
, bytestring
, containers
, data-default
, mtl
, stdenv
, syb
, text
, uniplate
, xss-sanitize
}:
mkDerivation {

pname = "cheapskate";
version = "0.1.0.5";
sha256 = "7a63b7ffc4976d006c5f693569a5ffd7a887e83d126d1dce9bbe8b5fbaabfa32";
revision = "1";
editedCabalFile = "1m88nnrdd2bzvpnaypzi38xa1criwyj5j6c6pzqjkkivmhk3bw99";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
blaze-html
containers
data-default
mtl
syb
text
uniplate
xss-sanitize
];
executableHaskellDepends = [
base
blaze-html
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jgm/cheapskate";
description = "Experimental markdown processor";
license = stdenv.lib.licenses.bsd3;

}) {};
"cheapskate-highlight" = callPackage
({
  mkDerivation
, base
, blaze-html
, cheapskate
, highlighting-kate
, stdenv
, text
}:
mkDerivation {

pname = "cheapskate-highlight";
version = "0.1.0.0";
sha256 = "5af7afb26b4ea80952963b44db695cbf18da34d3e8a7d32382a7dbfa4832d370";
revision = "1";
editedCabalFile = "1c8kxqdqf0j962xjdrrjfcbjsl0c1kax31rjykymv7w16d6hmlj4";
libraryHaskellDepends = [
base
blaze-html
cheapskate
highlighting-kate
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/cheapskate-highlight";
description = "Code highlighting for cheapskate";
license = stdenv.lib.licenses.bsd3;

}) {};
"cheapskate-lucid" = callPackage
({
  mkDerivation
, base
, blaze-html
, cheapskate
, lucid
, stdenv
}:
mkDerivation {

pname = "cheapskate-lucid";
version = "0.1.0.0";
sha256 = "f582e512befd2707a7056c1d15541967de2e0ce5702bc2197a3fced58a777245";
revision = "1";
editedCabalFile = "197nx95xw21i7zyvgzcgnr36ab6vrk17c66iz8ndwz61vp1jf6hc";
libraryHaskellDepends = [
base
blaze-html
cheapskate
lucid
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/cheapskate-lucid";
description = "Use cheapskate with Lucid";
license = stdenv.lib.licenses.bsd3;

}) {};
"check-email" = callPackage
({
  mkDerivation
, base
, bytestring
, email-validate
, resolv
, stdenv
}:
mkDerivation {

pname = "check-email";
version = "1.0";
sha256 = "dfbba577c18ca1180d8d4b38cd0a54a6f0ca5a886e502cb83c8ab07675463cb7";
revision = "1";
editedCabalFile = "0x8dq8ja9di728b2fcqji655xrp9ckw58ryd02286rg7xrp63y1r";
libraryHaskellDepends = [
base
bytestring
email-validate
];
librarySystemDepends = [
resolv
];
doHaddock = false;
doCheck = false;
description = "Confirm whether an email is valid and probably existant";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) resolv;};
"checkers" = callPackage
({
  mkDerivation
, array
, base
, QuickCheck
, random
, stdenv
}:
mkDerivation {

pname = "checkers";
version = "0.4.6";
sha256 = "2adc9cd2bfcc5c7bf8dbcf79160344757392a29b55ca131cda48e60168df970f";
libraryHaskellDepends = [
array
base
QuickCheck
random
];
doHaddock = false;
doCheck = false;
description = "Check properties on standard classes and data structures";
license = stdenv.lib.licenses.bsd3;

}) {};
"chell" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, bytestring
, options
, patience
, random
, stdenv
, template-haskell
, text
, transformers
}:
mkDerivation {

pname = "chell";
version = "0.4.0.1";
sha256 = "5f0abd31f4b00483e4667090c89828eda6a1c6ba5d77ecec418ad0fe972a6951";
libraryHaskellDepends = [
ansi-terminal
base
bytestring
options
patience
random
template-haskell
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://john-millikin.com/software/chell/";
description = "A simple and intuitive library for automated testing";
license = stdenv.lib.licenses.mit;

}) {};
"choice" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "choice";
version = "0.2.0";
sha256 = "89a70894e54acc8e1a178e6110f46b0efed6e8389c7fec9060048d154aa1f72e";
revision = "1";
editedCabalFile = "1bv77nhabm33jfaqhpl77jdcbfl7zxz4daphsmqb0pi6z85man7p";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mboes/choice#readme";
description = "A solution to boolean blindness";
license = stdenv.lib.licenses.publicDomain;

}) {};
"chunked-data" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, semigroups
, stdenv
, text
, transformers
, vector
}:
mkDerivation {

pname = "chunked-data";
version = "0.3.0";
sha256 = "e1be9da64c3682fd907aa9f1a118e8bfba7964d509fddf54bd245b199dc15f2f";
libraryHaskellDepends = [
base
bytestring
containers
semigroups
text
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/mono-traversable";
description = "Typeclasses for dealing with various chunked data representations";
license = stdenv.lib.licenses.mit;

}) {};
"cipher-aes" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, crypto-cipher-types
, securemem
, stdenv
}:
mkDerivation {

pname = "cipher-aes";
version = "0.2.11";
sha256 = "d3b171895698c73da24d7ce97543f725d26637f038de670c0fd4012ca7f95015";
libraryHaskellDepends = [
base
byteable
bytestring
crypto-cipher-types
securemem
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-cipher-aes";
description = "Fast AES cipher implementation with advanced mode of operations";
license = stdenv.lib.licenses.bsd3;

}) {};
"cipher-aes128" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, cereal
, crypto-api
, process
, stdenv
, tagged
}:
mkDerivation {

pname = "cipher-aes128";
version = "0.7.0.3";
sha256 = "6f27bea8bcd1987072fc75b6b423ae9c691574324b6a328ec1e2866f84412e3a";
revision = "1";
editedCabalFile = "1c3lr80vcdrajlvks9ny9s8m2n2kc9jw14nh65668dfikp0pqc61";
isLibrary = true;
isExecutable = true;
setupHaskellDepends = [
base
Cabal
process
];
libraryHaskellDepends = [
base
bytestring
cereal
crypto-api
tagged
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/TomMD/cipher-aes128";
description = "AES and common modes using AES-NI when available";
license = stdenv.lib.licenses.bsd3;

}) {};
"cipher-blowfish" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, crypto-cipher-types
, securemem
, stdenv
, vector
}:
mkDerivation {

pname = "cipher-blowfish";
version = "0.0.3";
sha256 = "8f41170a851dba6d0b6f07298af3213baca09ab2a8aaf2adb733631feb3b6641";
libraryHaskellDepends = [
base
byteable
bytestring
crypto-cipher-types
securemem
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-cipher";
description = "Blowfish cipher";
license = stdenv.lib.licenses.bsd3;

}) {};
"cipher-camellia" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, crypto-cipher-types
, securemem
, stdenv
, vector
}:
mkDerivation {

pname = "cipher-camellia";
version = "0.0.2";
sha256 = "8d0cd137cdb890646bb5d3bb52b20fa6d74e1b0c35d7d524d60edd9d43ace2a7";
libraryHaskellDepends = [
base
byteable
bytestring
crypto-cipher-types
securemem
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-cipher";
description = "Camellia block cipher primitives";
license = stdenv.lib.licenses.bsd3;

}) {};
"cipher-des" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, crypto-cipher-types
, securemem
, stdenv
}:
mkDerivation {

pname = "cipher-des";
version = "0.0.6";
sha256 = "85f1bccdec625a120ecf83b861afcb6478f8f899ceaa06fc083e642b54ff4ac7";
libraryHaskellDepends = [
base
byteable
bytestring
crypto-cipher-types
securemem
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-cipher";
description = "DES and 3DES primitives";
license = stdenv.lib.licenses.bsd3;

}) {};
"cipher-rc4" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, crypto-cipher-types
, stdenv
}:
mkDerivation {

pname = "cipher-rc4";
version = "0.1.4";
sha256 = "c67e731bc9e7f3882e33609c3d9ec97b4e9bbd2f95cd882926acfb621970384d";
libraryHaskellDepends = [
base
byteable
bytestring
crypto-cipher-types
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-cipher-rc4";
description = "Fast RC4 cipher implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"circle-packing" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "circle-packing";
version = "0.1.0.5";
sha256 = "041ad1ce696a66f747bb4c65102387cd15b7b026a4b1462d19b341733c2f5c9f";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Simple heuristic for packing discs of varying radii in a circle";
license = stdenv.lib.licenses.bsd3;

}) {};
"clang-pure" = callPackage
({
  mkDerivation
, base
, bytestring
, clang
, containers
, contravariant
, inline-c
, microlens
, microlens-contra
, singletons
, stdenv
, stm
, template-haskell
, vector
}:
mkDerivation {

pname = "clang-pure";
version = "0.2.0.2";
sha256 = "fad48f3ba3fad6a99d73923a6034a3d2a6610812404b39c05e6dc3dd20e0604c";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
contravariant
inline-c
microlens
microlens-contra
singletons
stm
template-haskell
vector
];
librarySystemDepends = [
clang
];
doHaddock = false;
doCheck = false;
description = "Pure C++ code analysis with libclang";
license = stdenv.lib.licenses.asl20;

}) {inherit (self.llvmPackages) clang;};
"clash-ghc" = callPackage
({
  mkDerivation
, array
, base
, bifunctors
, bytestring
, clash-lib
, clash-prelude
, clash-systemverilog
, clash-verilog
, clash-vhdl
, containers
, deepseq
, directory
, filepath
, ghc
, ghc-boot
, ghc-typelits-extra
, ghc-typelits-knownnat
, ghc-typelits-natnormalise
, ghci
, hashable
, haskeline
, lens
, mtl
, process
, stdenv
, text
, time
, transformers
, unbound-generics
, uniplate
, unix
, unordered-containers
}:
mkDerivation {

pname = "clash-ghc";
version = "0.7.0.1";
sha256 = "74ccedf030ca1ee3c09c51b6e9fbb7caef4693f1ae0610694d03b9398d9ced56";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
array
base
bifunctors
bytestring
clash-lib
clash-prelude
clash-systemverilog
clash-verilog
clash-vhdl
containers
deepseq
directory
filepath
ghc
ghc-boot
ghc-typelits-extra
ghc-typelits-knownnat
ghc-typelits-natnormalise
ghci
hashable
haskeline
lens
mtl
process
text
time
transformers
unbound-generics
uniplate
unix
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.clash-lang.org/";
description = "CAES Language for Synchronous Hardware";
license = stdenv.lib.licenses.bsd2;

}) {};
"clash-lib" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, clash-prelude
, concurrent-supply
, containers
, data-binary-ieee754
, deepseq
, directory
, errors
, fgl
, filepath
, ghc
, hashable
, integer-gmp
, lens
, mtl
, pretty
, process
, stdenv
, template-haskell
, text
, time
, transformers
, unbound-generics
, unordered-containers
, uu-parsinglib
, wl-pprint-text
}:
mkDerivation {

pname = "clash-lib";
version = "0.7";
sha256 = "867a976ec5a436e953cd342ee3cff0fbeb54d32fb412ae5cade43bcb80aaab96";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
clash-prelude
concurrent-supply
containers
data-binary-ieee754
deepseq
directory
errors
fgl
filepath
ghc
hashable
integer-gmp
lens
mtl
pretty
process
template-haskell
text
time
transformers
unbound-generics
unordered-containers
uu-parsinglib
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.clash-lang.org/";
description = "CAES Language for Synchronous Hardware - As a Library";
license = stdenv.lib.licenses.bsd2;

}) {};
"clash-prelude" = callPackage
({
  mkDerivation
, array
, base
, constraints
, data-binary-ieee754
, data-default
, deepseq
, ghc-prim
, ghc-typelits-extra
, ghc-typelits-knownnat
, ghc-typelits-natnormalise
, integer-gmp
, lens
, QuickCheck
, reflection
, singletons
, stdenv
, template-haskell
}:
mkDerivation {

pname = "clash-prelude";
version = "0.11";
sha256 = "e73490ee73228af3b2a7dca432a226a45bf5d8a52791134a99d4eeb32ac8043a";
libraryHaskellDepends = [
array
base
constraints
data-binary-ieee754
data-default
deepseq
ghc-prim
ghc-typelits-extra
ghc-typelits-knownnat
ghc-typelits-natnormalise
integer-gmp
lens
QuickCheck
reflection
singletons
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://www.clash-lang.org/";
description = "CAES Language for Synchronous Hardware - Prelude library";
license = stdenv.lib.licenses.bsd2;

}) {};
"clash-systemverilog" = callPackage
({
  mkDerivation
, base
, clash-lib
, clash-prelude
, fgl
, hashable
, lens
, mtl
, stdenv
, text
, unordered-containers
, wl-pprint-text
}:
mkDerivation {

pname = "clash-systemverilog";
version = "0.7";
sha256 = "1189f40348bb48d002614c3d9fbed3c228e71ab5a9a33c056256e1e763bf47bb";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
clash-lib
clash-prelude
fgl
hashable
lens
mtl
text
unordered-containers
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.clash-lang.org/";
description = "CAES Language for Synchronous Hardware - SystemVerilog backend";
license = stdenv.lib.licenses.bsd2;

}) {};
"clash-verilog" = callPackage
({
  mkDerivation
, base
, clash-lib
, clash-prelude
, fgl
, hashable
, lens
, mtl
, stdenv
, text
, unordered-containers
, wl-pprint-text
}:
mkDerivation {

pname = "clash-verilog";
version = "0.7";
sha256 = "4a10084bd2333333af2c1616a030c57fb959f73639647ae2b6788d1d5f79e4ef";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
clash-lib
clash-prelude
fgl
hashable
lens
mtl
text
unordered-containers
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.clash-lang.org/";
description = "CAES Language for Synchronous Hardware - Verilog backend";
license = stdenv.lib.licenses.bsd2;

}) {};
"clash-vhdl" = callPackage
({
  mkDerivation
, base
, clash-lib
, clash-prelude
, fgl
, hashable
, lens
, mtl
, stdenv
, text
, unordered-containers
, wl-pprint-text
}:
mkDerivation {

pname = "clash-vhdl";
version = "0.7";
sha256 = "6fb6c1dfa951021307bf121cb9ed622c3b726c20d2f0b873751fbd9329458af1";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
clash-lib
clash-prelude
fgl
hashable
lens
mtl
text
unordered-containers
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.clash-lang.org/";
description = "CAES Language for Synchronous Hardware - VHDL backend";
license = stdenv.lib.licenses.bsd2;

}) {};
"classy-prelude" = callPackage
({
  mkDerivation
, async
, base
, basic-prelude
, bifunctors
, bytestring
, chunked-data
, containers
, deepseq
, dlist
, exceptions
, ghc-prim
, hashable
, lifted-async
, lifted-base
, monad-unlift
, mono-traversable
, mono-traversable-instances
, mtl
, mutable-containers
, primitive
, safe-exceptions
, say
, semigroups
, stdenv
, stm
, stm-chans
, text
, time
, time-locale-compat
, transformers
, transformers-base
, unordered-containers
, vector
, vector-instances
}:
mkDerivation {

pname = "classy-prelude";
version = "1.2.0";
sha256 = "74ca864563ae2b6e048f86ec3be256192e81d12fbef0723d2aa2ee3d1d71fd70";
libraryHaskellDepends = [
async
base
basic-prelude
bifunctors
bytestring
chunked-data
containers
deepseq
dlist
exceptions
ghc-prim
hashable
lifted-async
lifted-base
monad-unlift
mono-traversable
mono-traversable-instances
mtl
mutable-containers
primitive
safe-exceptions
say
semigroups
stm
stm-chans
text
time
time-locale-compat
transformers
transformers-base
unordered-containers
vector
vector-instances
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/mono-traversable";
description = "A typeclass-based Prelude";
license = stdenv.lib.licenses.mit;

}) {};
"classy-prelude-conduit" = callPackage
({
  mkDerivation
, base
, bytestring
, classy-prelude
, conduit
, conduit-combinators
, monad-control
, resourcet
, stdenv
, transformers
, void
}:
mkDerivation {

pname = "classy-prelude-conduit";
version = "1.2.0";
sha256 = "24090dd042cd74d2663a5870482a60746b9096754f598b5171b800511230ec7f";
libraryHaskellDepends = [
base
bytestring
classy-prelude
conduit
conduit-combinators
monad-control
resourcet
transformers
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/mono-traversable";
description = "classy-prelude together with conduit functions";
license = stdenv.lib.licenses.mit;

}) {};
"classy-prelude-yesod" = callPackage
({
  mkDerivation
, aeson
, base
, classy-prelude
, classy-prelude-conduit
, data-default
, http-conduit
, http-types
, persistent
, stdenv
, yesod
, yesod-newsfeed
, yesod-static
}:
mkDerivation {

pname = "classy-prelude-yesod";
version = "1.2.0";
sha256 = "01cfe84ab5de0b803dc68a2bee5f5bfa4b9daf948974113ef9af9dd99c003fd5";
libraryHaskellDepends = [
aeson
base
classy-prelude
classy-prelude-conduit
data-default
http-conduit
http-types
persistent
yesod
yesod-newsfeed
yesod-static
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/mono-traversable";
description = "Provide a classy prelude including common Yesod functionality";
license = stdenv.lib.licenses.mit;

}) {};
"clay" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "clay";
version = "0.12.1";
sha256 = "ede3726dd63325e491fec82490929f2d084442290251f4b978293df1e42b867a";
revision = "1";
editedCabalFile = "01r47y51bdp3wnif1hx81yj34nkd1sdphqzapncd060r1dbb5l9l";
libraryHaskellDepends = [
base
mtl
text
];
doHaddock = false;
doCheck = false;
homepage = "http://fvisser.nl/clay";
description = "CSS preprocessor as embedded Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"clckwrks" = callPackage
({
  mkDerivation
, acid-state
, aeson
, aeson-qq
, attoparsec
, base
, blaze-html
, bytestring
, cereal
, containers
, directory
, filepath
, happstack-authenticate
, happstack-hsp
, happstack-jmacro
, happstack-server
, happstack-server-tls
, hsp
, hsx-jmacro
, hsx2hs
, ixset
, jmacro
, lens
, mtl
, network
, network-uri
, old-locale
, openssl
, process
, random
, reform
, reform-happstack
, reform-hsp
, safecopy
, stdenv
, stm
, text
, time
, time-locale-compat
, unordered-containers
, userid
, utf8-string
, uuid-orphans
, uuid-types
, vector
, web-plugins
, web-routes
, web-routes-happstack
, web-routes-hsp
, web-routes-th
, xss-sanitize
}:
mkDerivation {

pname = "clckwrks";
version = "0.24.0.3";
sha256 = "aeeaf7c0275295ae45d21721fe9a454ab9fa67991495849eff076344b84a1eb0";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
acid-state
aeson
aeson-qq
attoparsec
base
blaze-html
bytestring
cereal
containers
directory
filepath
happstack-authenticate
happstack-hsp
happstack-jmacro
happstack-server
happstack-server-tls
hsp
hsx-jmacro
hsx2hs
ixset
jmacro
lens
mtl
network
network-uri
old-locale
process
random
reform
reform-happstack
reform-hsp
safecopy
stm
text
time
time-locale-compat
unordered-containers
userid
utf8-string
uuid-orphans
uuid-types
vector
web-plugins
web-routes
web-routes-happstack
web-routes-hsp
web-routes-th
xss-sanitize
];
librarySystemDepends = [
openssl
];
doHaddock = false;
doCheck = false;
homepage = "http://www.clckwrks.com/";
description = "A secure, reliable content management system (CMS) and blogging platform";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) openssl;};
"clckwrks-cli" = callPackage
({
  mkDerivation
, acid-state
, base
, clckwrks
, haskeline
, mtl
, network
, parsec
, stdenv
}:
mkDerivation {

pname = "clckwrks-cli";
version = "0.2.17.1";
sha256 = "d3f5546425c363b8d25d9d5060839431176829c017994709fc0060868ced25ea";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
acid-state
base
clckwrks
haskeline
mtl
network
parsec
];
doHaddock = false;
doCheck = false;
homepage = "http://www.clckwrks.com/";
description = "a command-line interface for adminstrating some aspects of clckwrks";
license = stdenv.lib.licenses.bsd3;

}) {};
"clckwrks-plugin-media" = callPackage
({
  mkDerivation
, acid-state
, attoparsec
, base
, blaze-html
, cereal
, clckwrks
, containers
, directory
, filepath
, gd
, happstack-server
, hsp
, hsx2hs
, ixset
, magic
, mtl
, reform
, reform-happstack
, reform-hsp
, safecopy
, stdenv
, text
, web-plugins
, web-routes
, web-routes-th
}:
mkDerivation {

pname = "clckwrks-plugin-media";
version = "0.6.16.3";
sha256 = "26f77337fa1e9c429462f49616432b2bace533cced64961f32761abe7d9054cf";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
acid-state
attoparsec
base
blaze-html
cereal
clckwrks
containers
directory
filepath
gd
happstack-server
hsp
ixset
magic
mtl
reform
reform-happstack
reform-hsp
safecopy
text
web-plugins
web-routes
web-routes-th
];
libraryToolDepends = [
hsx2hs
];
doHaddock = false;
doCheck = false;
homepage = "http://clckwrks.com/";
description = "media plugin for clckwrks";
license = stdenv.lib.licenses.bsd3;

}) {};
"clckwrks-plugin-page" = callPackage
({
  mkDerivation
, acid-state
, aeson
, attoparsec
, base
, clckwrks
, containers
, directory
, filepath
, happstack-hsp
, happstack-server
, hsp
, hsx2hs
, ixset
, mtl
, old-locale
, random
, reform
, reform-happstack
, reform-hsp
, safecopy
, stdenv
, tagsoup
, template-haskell
, text
, time
, time-locale-compat
, uuid
, uuid-orphans
, web-plugins
, web-routes
, web-routes-happstack
, web-routes-th
}:
mkDerivation {

pname = "clckwrks-plugin-page";
version = "0.4.3.9";
sha256 = "4e3095f11f8b627cb74779aaa7356a5a19ed6ce9eade1af741e7417aab4b43e4";
libraryHaskellDepends = [
acid-state
aeson
attoparsec
base
clckwrks
containers
directory
filepath
happstack-hsp
happstack-server
hsp
hsx2hs
ixset
mtl
old-locale
random
reform
reform-happstack
reform-hsp
safecopy
tagsoup
template-haskell
text
time
time-locale-compat
uuid
uuid-orphans
web-plugins
web-routes
web-routes-happstack
web-routes-th
];
doHaddock = false;
doCheck = false;
homepage = "http://www.clckwrks.com/";
description = "support for CMS/Blogging in clckwrks";
license = stdenv.lib.licenses.bsd3;

}) {};
"clckwrks-theme-bootstrap" = callPackage
({
  mkDerivation
, base
, clckwrks
, happstack-authenticate
, hsp
, hsx-jmacro
, hsx2hs
, jmacro
, mtl
, stdenv
, text
, web-plugins
}:
mkDerivation {

pname = "clckwrks-theme-bootstrap";
version = "0.4.2.1";
sha256 = "44c1fda59c72b807c4abe63d19c98de1b0523d78dd3392bb68064dd3f18878d6";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
clckwrks
happstack-authenticate
hsp
hsx-jmacro
hsx2hs
jmacro
mtl
text
web-plugins
];
doHaddock = false;
doCheck = false;
homepage = "http://www.clckwrks.com/";
description = "simple bootstrap based template for clckwrks";
license = stdenv.lib.licenses.bsd3;

}) {};
"cli" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, terminfo
, transformers
}:
mkDerivation {

pname = "cli";
version = "0.1.2";
sha256 = "580a31fc25eb988dbb5ad3aebfb72d49f089cbee9693edf78dae722b2fde4acb";
libraryHaskellDepends = [
base
mtl
terminfo
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-cli";
description = "Command Line Interface";
license = stdenv.lib.licenses.bsd3;

}) {};
"clientsession" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, cereal
, cipher-aes
, cprng-aes
, crypto-api
, crypto-random
, directory
, entropy
, setenv
, skein
, stdenv
, tagged
}:
mkDerivation {

pname = "clientsession";
version = "0.9.1.2";
sha256 = "5915adc4de26d2a8b03f1a445bac0b0f5d10a5b0380a4eed71b79a20a727d068";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
base64-bytestring
bytestring
cereal
cipher-aes
cprng-aes
crypto-api
crypto-random
directory
entropy
setenv
skein
tagged
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yesodweb/clientsession/tree/master";
description = "Securely store session data in a client-side cookie";
license = stdenv.lib.licenses.mit;

}) {};
"clock" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "clock";
version = "0.7.2";
sha256 = "886601978898d3a91412fef895e864576a7125d661e1f8abc49a2a08840e691f";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/corsis/clock";
description = "High-resolution clock functions: monotonic, realtime, cputime";
license = stdenv.lib.licenses.bsd3;

}) {};
"clock-extras" = callPackage
({
  mkDerivation
, base
, clock
, stdenv
}:
mkDerivation {

pname = "clock-extras";
version = "0.1.0.2";
sha256 = "a9ed097aa9d48b53c6a555bc5f67e347249b08e2252dd4fc998fb4ab42edda59";
libraryHaskellDepends = [
base
clock
];
doHaddock = false;
doCheck = false;
description = "A couple functions that probably should be in the 'clock' package";
license = stdenv.lib.licenses.bsd3;

}) {};
"clumpiness" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, tree-fun
}:
mkDerivation {

pname = "clumpiness";
version = "0.17.0.0";
sha256 = "fd4b303d206eaf242c779bb65c42256e42220c8497a6bcf3bc59589b9396c495";
libraryHaskellDepends = [
base
containers
tree-fun
];
doHaddock = false;
doCheck = false;
description = "Calculate the clumpiness of leaf properties in a tree";
license = stdenv.lib.licenses.gpl3;

}) {};
"clustering" = callPackage
({
  mkDerivation
, base
, binary
, containers
, matrices
, mwc-random
, parallel
, primitive
, stdenv
, unordered-containers
, vector
}:
mkDerivation {

pname = "clustering";
version = "0.3.1";
sha256 = "bc69248083d4c7f7ed32b1f0971d18a52414fd0ee8bc1f05fea8e4538fe87f86";
libraryHaskellDepends = [
base
binary
containers
matrices
mwc-random
parallel
primitive
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
description = "High performance clustering algorithms";
license = stdenv.lib.licenses.mit;

}) {};
"cmark" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "cmark";
version = "0.5.5";
sha256 = "03bd6fc962bb92127f64a9c597a904492a16fb3f34587775a741d22311fe53e2";
libraryHaskellDepends = [
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jgm/cmark-hs";
description = "Fast, accurate CommonMark (Markdown) parser and renderer";
license = stdenv.lib.licenses.bsd3;

}) {};
"cmark-highlight" = callPackage
({
  mkDerivation
, base
, blaze-html
, cmark
, highlighting-kate
, stdenv
, text
}:
mkDerivation {

pname = "cmark-highlight";
version = "0.2.0.0";
sha256 = "de769cd703d3fcd5d69428477184fad57019db55a71b1315a9bbb54317f0812b";
revision = "1";
editedCabalFile = "1zdxr3bfj9bn2yclm5m17aa7wid6zwhvg6mj245wd2y34p696znw";
libraryHaskellDepends = [
base
blaze-html
cmark
highlighting-kate
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/cmark-highlight";
description = "Code highlighting for cmark";
license = stdenv.lib.licenses.bsd3;

}) {};
"cmark-lucid" = callPackage
({
  mkDerivation
, base
, cmark
, lucid
, stdenv
}:
mkDerivation {

pname = "cmark-lucid";
version = "0.1.0.0";
sha256 = "d2927b9fed0e32fe7afc539e7b427e0a95f8c9297bb6bc531101b476ba8a3c03";
revision = "1";
editedCabalFile = "1mizbv18bl8qrgz27wlz7sb6cfhblmp7p7gh7dqq8g0r4djrvqg5";
libraryHaskellDepends = [
base
cmark
lucid
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/cmark-lucid";
description = "Use cmark with Lucid";
license = stdenv.lib.licenses.bsd3;

}) {};
"cmdargs" = callPackage
({
  mkDerivation
, base
, filepath
, process
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "cmdargs";
version = "0.10.14";
sha256 = "38b60053c11394a1876d2744950eece66ca9e4364298c1383f247894044bce58";
revision = "3";
editedCabalFile = "0r26jrlyqbj6x28b7ykrq0ns1f7srklyljazah6b9lf1zbmiy77b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
filepath
process
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/cmdargs#readme";
description = "Command line argument processing";
license = stdenv.lib.licenses.bsd3;

}) {};
"code-builder" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "code-builder";
version = "0.1.3";
sha256 = "559e47a44cec85a8e95df92e5d2693cacc9761503c30be3b83eaebd95360a4ab";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
description = "Simple system for generating code";
license = stdenv.lib.licenses.bsd3;

}) {};
"code-page" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "code-page";
version = "0.1.1";
sha256 = "16b8b802bca21b71dd782560978b7ac88866c129df83b760e9059a7da04d70f7";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RyanGlScott/code-page";
description = "Windows code page library for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"codo-notation" = callPackage
({
  mkDerivation
, base
, comonad
, haskell-src-meta
, parsec
, stdenv
, template-haskell
, uniplate
}:
mkDerivation {

pname = "codo-notation";
version = "0.5.2";
sha256 = "78eb57004541ed29eb4c54196b91ac2dd1028a3315f51cd4dc00debfc0938eaf";
libraryHaskellDepends = [
base
comonad
haskell-src-meta
parsec
template-haskell
uniplate
];
doHaddock = false;
doCheck = false;
description = "A notation for comonads, analogous to the do-notation for monads";
license = stdenv.lib.licenses.bsd3;

}) {};
"colorful-monoids" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "colorful-monoids";
version = "0.2.1.0";
sha256 = "426e36c9219ebc19108f0968aee8900bad7642937b5800d6045c5085c2b06532";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/colorful-monoids#readme";
description = "Styled console text output using ANSI escape sequences";
license = stdenv.lib.licenses.mit;

}) {};
"colour" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "colour";
version = "2.3.3";
sha256 = "8d15a63494f8e2a06fe6dc38baee8e948adfae0e93749b9e3ce0fd8ece09b6e2";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Colour";
description = "A model for human colour/color perception";
license = stdenv.lib.licenses.mit;

}) {};
"commutative" = callPackage
({
  mkDerivation
, base
, random
, semigroups
, stdenv
}:
mkDerivation {

pname = "commutative";
version = "0.0.1.4";
sha256 = "0de746012c73543b5dcf649434046e36d5e158e0967e8e2ae122e85d5457c9cf";
libraryHaskellDepends = [
base
random
semigroups
];
doHaddock = false;
doCheck = false;
description = "Commutative binary operations";
license = stdenv.lib.licenses.mit;

}) {};
"comonad" = callPackage
({
  mkDerivation
, base
, containers
, contravariant
, distributive
, semigroups
, stdenv
, tagged
, transformers
, transformers-compat
}:
mkDerivation {

pname = "comonad";
version = "5";
sha256 = "78e5b19da5b701d14ceb2ca19191cc6205b2024ff2f71b754f5e949faa19cb2a";
revision = "1";
editedCabalFile = "1ngm8v146mw6q3vill4sx6m2p2hmcn65c80v7ygh8bza87gf6zd0";
libraryHaskellDepends = [
base
containers
contravariant
distributive
semigroups
tagged
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/comonad/";
description = "Comonads";
license = stdenv.lib.licenses.bsd3;

}) {};
"comonad-transformers" = callPackage
({
  mkDerivation
, base
, comonad
, stdenv
}:
mkDerivation {

pname = "comonad-transformers";
version = "4.0";
sha256 = "dfec0c4ce1eccd34c228951454a8f2ebab0bfbdf1cde68a70688196db2b9ff8f";
libraryHaskellDepends = [
base
comonad
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/comonad-transformers/";
description = "This package has been merged into comonad 4.0";
license = stdenv.lib.licenses.bsd3;

}) {};
"comonads-fd" = callPackage
({
  mkDerivation
, base
, comonad
, stdenv
}:
mkDerivation {

pname = "comonads-fd";
version = "4.0";
sha256 = "3a70386e2ef3d6f444585f082de42e842a47dfe7bdbd807550839faf1bd8b7a7";
libraryHaskellDepends = [
base
comonad
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/comonads-fd/";
description = "This package has been merged into comonad 4.0";
license = stdenv.lib.licenses.bsd3;

}) {};
"compactmap" = callPackage
({
  mkDerivation
, base
, stdenv
, vector
}:
mkDerivation {

pname = "compactmap";
version = "0.1.4.2";
sha256 = "36fd80c2f29446bba183c3b7182de9d869a1718c456ae3463ea66b332e6cf6ec";
libraryHaskellDepends = [
base
vector
];
doHaddock = false;
doCheck = false;
description = "A read-only memory-efficient key-value store";
license = stdenv.lib.licenses.bsd3;

}) {};
"composition" = callPackage
({
  mkDerivation
, stdenv
}:
mkDerivation {

pname = "composition";
version = "1.0.2.1";
sha256 = "7123300f5eca5a7cec4eb731dc0e9c2c44aabe26b37e6579582a7267d9f7ad6a";
doHaddock = false;
doCheck = false;
description = "Combinators for unorthodox function composition";
license = stdenv.lib.licenses.bsd3;

}) {};
"composition-extra" = callPackage
({
  mkDerivation
, base
, composition
, contravariant
, stdenv
}:
mkDerivation {

pname = "composition-extra";
version = "2.0.0";
sha256 = "c998244a8fd160af3dd7ee93c417f665af51a46a04ce6b7d4623f46596ba7129";
libraryHaskellDepends = [
base
composition
contravariant
];
doHaddock = false;
doCheck = false;
description = "Combinators for unorthodox structure composition";
license = stdenv.lib.licenses.bsd3;

}) {};
"concurrency" = callPackage
({
  mkDerivation
, array
, atomic-primops
, base
, exceptions
, monad-control
, mtl
, stdenv
, stm
, transformers
}:
mkDerivation {

pname = "concurrency";
version = "1.0.0.0";
sha256 = "541f9e730c18464ec8399214097a5fb62cfce319baa3495bf3349e0f4d9cf19d";
revision = "1";
editedCabalFile = "140wmmhg9gxlw15h92jnqiq19wpdkj7dii16613bllc40kmzmq1x";
libraryHaskellDepends = [
array
atomic-primops
base
exceptions
monad-control
mtl
stm
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/dejafu";
description = "Typeclasses, functions, and data types for concurrency and STM";
license = stdenv.lib.licenses.mit;

}) {};
"concurrent-output" = callPackage
({
  mkDerivation
, ansi-terminal
, async
, base
, directory
, exceptions
, process
, stdenv
, stm
, terminal-size
, text
, transformers
, unix
}:
mkDerivation {

pname = "concurrent-output";
version = "1.7.9";
sha256 = "343c9685d24795bb38761f5c3600df5c67dbc6d410e5e0b862aa8d092e4e10d5";
libraryHaskellDepends = [
ansi-terminal
async
base
directory
exceptions
process
stm
terminal-size
text
transformers
unix
];
doHaddock = false;
doCheck = false;
description = "Ungarble output from several threads or commands";
license = stdenv.lib.licenses.bsd2;

}) {};
"concurrent-supply" = callPackage
({
  mkDerivation
, base
, ghc-prim
, hashable
, stdenv
}:
mkDerivation {

pname = "concurrent-supply";
version = "0.1.8";
sha256 = "ccf827dcd221298ae93fad6021c63a06707456de0671706b44f1f2fed867f21f";
libraryHaskellDepends = [
base
ghc-prim
hashable
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/concurrent-supply/";
description = "A fast concurrent unique identifier supply with a pure API";
license = stdenv.lib.licenses.bsd3;

}) {};
"conduit" = callPackage
({
  mkDerivation
, base
, exceptions
, lifted-base
, mmorph
, monad-control
, mtl
, resourcet
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "conduit";
version = "1.2.9";
sha256 = "8adf9d8916dcb7abf86c4c82cc1c92e99dea8d0a9a5835302a824142d214cf06";
libraryHaskellDepends = [
base
exceptions
lifted-base
mmorph
monad-control
mtl
resourcet
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/conduit";
description = "Streaming data processing library";
license = stdenv.lib.licenses.mit;

}) {};
"conduit-combinators" = callPackage
({
  mkDerivation
, base
, base16-bytestring
, base64-bytestring
, bytestring
, chunked-data
, conduit
, conduit-extra
, filepath
, monad-control
, mono-traversable
, mwc-random
, primitive
, resourcet
, stdenv
, text
, transformers
, transformers-base
, unix
, unix-compat
, vector
, void
}:
mkDerivation {

pname = "conduit-combinators";
version = "1.1.0";
sha256 = "ff1f16f24e2c186ce5d61f079b318e2f58c4bc3a4a2c8d9011d001512786335a";
libraryHaskellDepends = [
base
base16-bytestring
base64-bytestring
bytestring
chunked-data
conduit
conduit-extra
filepath
monad-control
mono-traversable
mwc-random
primitive
resourcet
text
transformers
transformers-base
unix
unix-compat
vector
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/mono-traversable";
description = "Commonly used conduit functions, for both chunked and unchunked data";
license = stdenv.lib.licenses.mit;

}) {};
"conduit-connection" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, connection
, resourcet
, stdenv
, transformers
}:
mkDerivation {

pname = "conduit-connection";
version = "0.1.0.3";
sha256 = "798eb9c87a37f8f8a15a8edc6674f975dad38ed8c19acf52b6439f88c280439a";
libraryHaskellDepends = [
base
bytestring
conduit
connection
resourcet
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sdroege/conduit-connection";
description = "Conduit source and sink for Network.Connection.";
license = stdenv.lib.licenses.bsd3;

}) {};
"conduit-extra" = callPackage
({
  mkDerivation
, async
, attoparsec
, base
, blaze-builder
, bytestring
, conduit
, directory
, exceptions
, filepath
, monad-control
, network
, primitive
, process
, resourcet
, stdenv
, stm
, streaming-commons
, text
, transformers
, transformers-base
}:
mkDerivation {

pname = "conduit-extra";
version = "1.1.15";
sha256 = "7bef29eb0db59c236519b0c5cac82183ed7741a535a57e0772aac1158e90bb8d";
revision = "2";
editedCabalFile = "0wz0g2mrrzdfr3ypr0h0q7i7r0my2dzyxi5fl58nx4as7kjcyhqx";
libraryHaskellDepends = [
async
attoparsec
base
blaze-builder
bytestring
conduit
directory
exceptions
filepath
monad-control
network
primitive
process
resourcet
stm
streaming-commons
text
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/conduit";
description = "Batteries included conduit: adapters for common libraries";
license = stdenv.lib.licenses.mit;

}) {};
"conduit-iconv" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, stdenv
}:
mkDerivation {

pname = "conduit-iconv";
version = "0.1.1.1";
sha256 = "54a25274f4f3590a6b35ac86a3753dc867a505867cae5d363f775781f4b6ac05";
libraryHaskellDepends = [
base
bytestring
conduit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sdroege/conduit-iconv";
description = "Conduit for character encoding conversion";
license = stdenv.lib.licenses.bsd3;

}) {};
"conduit-parse" = callPackage
({
  mkDerivation
, base
, conduit
, dlist
, mtl
, parsers
, safe
, safe-exceptions
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "conduit-parse";
version = "0.1.2.0";
sha256 = "15621f6b0e452d30fbd7738d98a6dfcdcb078f4d51044ed6e32ea227f07bce17";
revision = "1";
editedCabalFile = "0bsvcxpnv4z2cj4nzzisbh5mk9gp0lrf5f4xsnzg44ddr431525p";
libraryHaskellDepends = [
base
conduit
dlist
mtl
parsers
safe
safe-exceptions
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/k0ral/conduit-parse";
description = "Parsing framework based on conduit";
license = "unknown";

}) {};
"configuration-tools" = callPackage
({
  mkDerivation
, aeson
, ansi-wl-pprint
, attoparsec
, base
, base-unicode-symbols
, base64-bytestring
, bytestring
, Cabal
, case-insensitive
, connection
, data-default
, deepseq
, directory
, dlist
, enclosed-exceptions
, filepath
, http-client
, http-client-tls
, http-types
, monad-control
, mtl
, network-uri
, optparse-applicative
, process
, profunctors
, stdenv
, text
, tls
, transformers
, unordered-containers
, x509
, x509-system
, x509-validation
, yaml
}:
mkDerivation {

pname = "configuration-tools";
version = "0.2.15";
sha256 = "8231a7a893add8ae78ccb2b25e0fa98b0c0fd7d7a5f6e2e88d3711e93576121e";
libraryHaskellDepends = [
aeson
ansi-wl-pprint
attoparsec
base
base-unicode-symbols
base64-bytestring
bytestring
Cabal
case-insensitive
connection
data-default
deepseq
directory
dlist
enclosed-exceptions
filepath
http-client
http-client-tls
http-types
monad-control
mtl
network-uri
optparse-applicative
process
profunctors
text
tls
transformers
unordered-containers
x509
x509-system
x509-validation
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/alephcloud/hs-configuration-tools";
description = "Tools for specifying and parsing configurations";
license = stdenv.lib.licenses.mit;

}) {};
"configurator" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, directory
, hashable
, stdenv
, text
, unix-compat
, unordered-containers
}:
mkDerivation {

pname = "configurator";
version = "0.3.0.0";
sha256 = "6eb9996b672e9f7112ca23482c42fa533553312c3c13f38a8a06476e67c031b4";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
attoparsec
base
bytestring
directory
hashable
text
unix-compat
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/bos/configurator";
description = "Configuration management";
license = stdenv.lib.licenses.bsd3;

}) {};
"configurator-export" = callPackage
({
  mkDerivation
, base
, base-compat
, configurator
, pretty
, semigroups
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "configurator-export";
version = "0.1.0.1";
sha256 = "9dbd62ef29c97792ccdfdb1b3b79aedfa527dce49a9ac5054f21b29a7f9b824c";
libraryHaskellDepends = [
base
base-compat
configurator
pretty
semigroups
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/mstksg/configurator-export";
description = "Pretty printer and exporter for configurations from the \"configurator\" library";
license = stdenv.lib.licenses.bsd3;

}) {};
"connection" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, containers
, data-default-class
, network
, socks
, stdenv
, tls
, x509
, x509-store
, x509-system
, x509-validation
}:
mkDerivation {

pname = "connection";
version = "0.2.7";
sha256 = "46d452dc92ebc6e851a9f9ac01dd2d29df846795dfce039cf07ba7102a323235";
libraryHaskellDepends = [
base
byteable
bytestring
containers
data-default-class
network
socks
tls
x509
x509-store
x509-system
x509-validation
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-connection";
description = "Simple and easy network connections API";
license = stdenv.lib.licenses.bsd3;

}) {};
"console-style" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "console-style";
version = "0.0.2.1";
sha256 = "6d818ea841d7acfe6c42cc3fc7751e324656abfd0509ce470bc8bdbf52d1bd7f";
libraryHaskellDepends = [
base
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/console-style#readme";
description = "Styled console text output using ANSI escape sequences";
license = stdenv.lib.licenses.mit;

}) {};
"constraints" = callPackage
({
  mkDerivation
, base
, binary
, deepseq
, ghc-prim
, hashable
, mtl
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "constraints";
version = "0.9";
sha256 = "b7b4135ceacdd18d291bbd83277cc21bbb066d0e16ce35f879619f17c1c8d29d";
libraryHaskellDepends = [
base
binary
deepseq
ghc-prim
hashable
mtl
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/constraints/";
description = "Constraint manipulation";
license = stdenv.lib.licenses.bsd2;

}) {};
"consul-haskell" = callPackage
({
  mkDerivation
, aeson
, base
, base64-bytestring
, bytestring
, connection
, either
, exceptions
, http-client
, http-client-tls
, http-types
, lifted-async
, lifted-base
, monad-control
, network
, retry
, stdenv
, stm
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "consul-haskell";
version = "0.4.2";
sha256 = "b10812b70dfbce7037f9f23eda71fa2fa6fc97ed309bd63c00f226522d30d80a";
libraryHaskellDepends = [
aeson
base
base64-bytestring
bytestring
connection
either
exceptions
http-client
http-client-tls
http-types
lifted-async
lifted-base
monad-control
network
retry
stm
text
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/alphaHeavy/consul-haskell";
description = "A consul client for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"containers-unicode-symbols" = callPackage
({
  mkDerivation
, base
, base-unicode-symbols
, containers
, stdenv
}:
mkDerivation {

pname = "containers-unicode-symbols";
version = "0.3.1.1";
sha256 = "4655f286a2d116cb5f2b89f472df54df739bf904ac8e932b2fd34d3f713e9b31";
libraryHaskellDepends = [
base
base-unicode-symbols
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
description = "Unicode alternatives for common functions and operators";
license = stdenv.lib.licenses.bsd3;

}) {};
"contravariant" = callPackage
({
  mkDerivation
, base
, semigroups
, StateVar
, stdenv
, transformers
, transformers-compat
, void
}:
mkDerivation {

pname = "contravariant";
version = "1.4";
sha256 = "e1666df1373ed784baa7d1e8e963bbc2d1f3c391578ac550ae74e7399173ee84";
revision = "1";
editedCabalFile = "0pki1z2aqqgb126wdia6fcsr2ccslvyxxs6s1fc4dxvg6qskpj9d";
libraryHaskellDepends = [
base
semigroups
StateVar
transformers
transformers-compat
void
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/contravariant/";
description = "Contravariant functors";
license = stdenv.lib.licenses.bsd3;

}) {};
"contravariant-extras" = callPackage
({
  mkDerivation
, base
, base-prelude
, contravariant
, stdenv
, template-haskell
, tuple-th
}:
mkDerivation {

pname = "contravariant-extras";
version = "0.3.3.1";
sha256 = "f35d9df4d1c0fa767afca6500c6ab598f052128abc513259930ef5b6bc7c79d5";
revision = "1";
editedCabalFile = "0i7gwns134vbi11xja0sv5vqnc4kgd8zzaqyynd3m0rys0waqrik";
libraryHaskellDepends = [
base
base-prelude
contravariant
template-haskell
tuple-th
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/contravariant-extras";
description = "Extras for the \"contravariant\" package";
license = stdenv.lib.licenses.mit;

}) {};
"control-bool" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "control-bool";
version = "0.2.1";
sha256 = "e46a85d2985a65f8d7ecbcdab0cfb12734b4d6e4c558631e6ab01fe742ed5581";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fumieval/control-bool";
description = "Useful combinators for boolean expressions";
license = stdenv.lib.licenses.bsd3;

}) {};
"control-monad-free" = callPackage
({
  mkDerivation
, base
, prelude-extras
, stdenv
, transformers
}:
mkDerivation {

pname = "control-monad-free";
version = "0.6.1";
sha256 = "fea9173d3c29729a8e0789d654bf3b16928e0b740465bd8798ac2cfeec492286";
revision = "1";
editedCabalFile = "1901lm2md7flri4ms745lgla18x2k7v0xh51jbjbx6202ppcx3fh";
libraryHaskellDepends = [
base
prelude-extras
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/pepeiborra/control-monad-free";
description = "Free monads and monad transformers";
license = stdenv.lib.licenses.publicDomain;

}) {};
"control-monad-loop" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "control-monad-loop";
version = "0.1";
sha256 = "f29b08497897268daf4c547390dad69f4ee00032082e3d5305c33e6eee257300";
libraryHaskellDepends = [
base
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/joeyadams/haskell-control-monad-loop";
description = "Simple monad transformer for imperative-style loops";
license = stdenv.lib.licenses.bsd3;

}) {};
"control-monad-omega" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "control-monad-omega";
version = "0.3.1";
sha256 = "383b98ecf5db5add42f318672af9eb1c8b9d99ec42d48c240e209a93b5cf1186";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/luqui/control-monad-omega";
description = "A breadth-first list monad";
license = stdenv.lib.licenses.publicDomain;

}) {};
"convert-annotation" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, cassava
, containers
, deepseq
, HTTP
, inline-r
, lens
, lens-aeson
, optparse-generic
, pipes
, pipes-bytestring
, pipes-csv
, req
, safe
, stdenv
, text
, vector
}:
mkDerivation {

pname = "convert-annotation";
version = "0.5.0.1";
sha256 = "11a2eb8d8f02fd28bb1772aa42fea95dcc9ef8e4c8843f44e401c8a0749c1fa5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
deepseq
HTTP
inline-r
lens
lens-aeson
req
safe
text
];
executableHaskellDepends = [
base
bytestring
cassava
inline-r
lens
optparse-generic
pipes
pipes-bytestring
pipes-csv
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/GregorySchwartz/convert-annotation#readme";
description = "Convert the annotation of a gene to another in a delimited file using a variety of different databases";
license = stdenv.lib.licenses.gpl3;

}) {};
"convertible" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, mtl
, old-locale
, old-time
, stdenv
, text
, time
}:
mkDerivation {

pname = "convertible";
version = "1.1.1.0";
sha256 = "e9f9a70904b9995314c2aeb41580d654a2c76293feb955fb6bd63256c355286c";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
mtl
old-locale
old-time
text
time
];
doHaddock = false;
doCheck = false;
homepage = "http://hackage.haskell.org/package/convertible";
description = "Typeclasses and instances for converting between types";
license = stdenv.lib.licenses.bsd3;

}) {};
"cookie" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, data-default-class
, deepseq
, old-locale
, stdenv
, text
, time
}:
mkDerivation {

pname = "cookie";
version = "0.4.2.1";
sha256 = "06413091908e20ce154effdcd354d7eea1447380e29a8acdb15c3347512852e4";
libraryHaskellDepends = [
base
blaze-builder
bytestring
data-default-class
deepseq
old-locale
text
time
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/cookie";
description = "HTTP cookie parsing and rendering";
license = stdenv.lib.licenses.mit;

}) {};
"countable" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "countable";
version = "1.0";
sha256 = "f9a0eb6f697a044bdf72e9c08126d4cb0f2d6de82cce07e55cb87ddbae6a0e6c";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AshleyYakeley/countable";
description = "Countable, Searchable, Finite, Empty classes";
license = stdenv.lib.licenses.bsd3;

}) {};
"courier" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, cereal
, containers
, hslogger
, network
, stdenv
, stm
, text
, uuid
}:
mkDerivation {

pname = "courier";
version = "0.1.1.4";
sha256 = "e4e808d564166d79b819c6736fb445486530be1271365c3e75cb5f3e3a2ed9a3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
async
base
bytestring
cereal
containers
hslogger
network
stm
text
uuid
];
executableHaskellDepends = [
base
cereal
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/hargettp/courier";
description = "A message-passing library for simplifying network applications";
license = stdenv.lib.licenses.mit;

}) {};
"cpphs" = callPackage
({
  mkDerivation
, base
, directory
, old-locale
, old-time
, polyparse
, stdenv
}:
mkDerivation {

pname = "cpphs";
version = "1.20.3";
sha256 = "c63f0edb351f0977c2af6ad17c7164c44dc7c7499c0effe91d839fc7973dad91";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
old-locale
old-time
polyparse
];
executableHaskellDepends = [
base
directory
old-locale
old-time
polyparse
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/cpphs/";
description = "A liberalised re-implementation of cpp, the C pre-processor";
license = "LGPL";

}) {};
"cprng-aes" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, cipher-aes
, crypto-random
, stdenv
}:
mkDerivation {

pname = "cprng-aes";
version = "0.6.1";
sha256 = "64592a01de8c6683c5e29f538dceee918887ffe211d87214a2e38559d72c21f3";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
byteable
bytestring
cipher-aes
crypto-random
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-cprng-aes";
description = "Crypto Pseudo Random Number Generator using AES in counter mode";
license = stdenv.lib.licenses.bsd3;

}) {};
"cpu" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "cpu";
version = "0.1.2";
sha256 = "5627feb4974a3ff8499c42cc958927e88761a2e004c4000d34e9cd6a15ad2974";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-cpu";
description = "Cpu information and properties helpers";
license = stdenv.lib.licenses.bsd3;

}) {};
"cpuinfo" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, deepseq
, stdenv
}:
mkDerivation {

pname = "cpuinfo";
version = "0.1.0.1";
sha256 = "d1b3e3992cc0c82edfb21f30e1684bb66e6a3cb23a26b777a079702362d05655";
libraryHaskellDepends = [
attoparsec
base
bytestring
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/TravisWhitaker/cpuinfo";
description = "Haskell Library for Checking CPU Information";
license = stdenv.lib.licenses.mit;

}) {};
"cql" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, Decimal
, iproute
, network
, stdenv
, template-haskell
, text
, time
, transformers
, uuid
, vector
}:
mkDerivation {

pname = "cql";
version = "3.1.1";
sha256 = "45b0d9599dfb6b5df02eb17e18d45cef8abd7e175d4eb7f99ab94f9d50866da3";
libraryHaskellDepends = [
base
bytestring
cereal
Decimal
iproute
network
template-haskell
text
time
transformers
uuid
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/twittner/cql/";
description = "Cassandra CQL binary protocol";
license = "unknown";

}) {};
"cql-io" = callPackage
({
  mkDerivation
, async
, auto-update
, base
, bytestring
, containers
, cql
, cryptohash
, data-default-class
, exceptions
, hashable
, HsOpenSSL
, iproute
, lens
, monad-control
, mtl
, mwc-random
, network
, retry
, semigroups
, stdenv
, stm
, text
, time
, tinylog
, transformers
, transformers-base
, uuid
, vector
}:
mkDerivation {

pname = "cql-io";
version = "0.16.0";
sha256 = "82e5aff9b929fd9dec92760b9d0e75ca509ce2619942628e5c7e3a66f4204004";
revision = "1";
editedCabalFile = "07vrizkarip8ap5hp6ngp7yf8xfdmm3r6zbaxafk48raxyfkl8xd";
libraryHaskellDepends = [
async
auto-update
base
bytestring
containers
cql
cryptohash
data-default-class
exceptions
hashable
HsOpenSSL
iproute
lens
monad-control
mtl
mwc-random
network
retry
semigroups
stm
text
time
tinylog
transformers
transformers-base
uuid
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/twittner/cql-io/";
description = "Cassandra CQL client";
license = stdenv.lib.licenses.mpl20;

}) {};
"crackNum" = callPackage
({
  mkDerivation
, base
, data-binary-ieee754
, FloatingHex
, ieee754
, stdenv
}:
mkDerivation {

pname = "crackNum";
version = "1.9";
sha256 = "a5a78b774e17837513b7c6048856c375457095898a59b7f3bbb7f49abb1639c5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
data-binary-ieee754
FloatingHex
ieee754
];
executableHaskellDepends = [
base
data-binary-ieee754
FloatingHex
ieee754
];
doHaddock = false;
doCheck = false;
description = "Crack various integer, floating-point data formats";
license = stdenv.lib.licenses.bsd3;

}) {};
"criterion" = callPackage
({
  mkDerivation
, aeson
, ansi-wl-pprint
, base
, binary
, bytestring
, cassava
, code-page
, containers
, deepseq
, directory
, filepath
, Glob
, hastache
, js-flot
, js-jquery
, mtl
, mwc-random
, optparse-applicative
, parsec
, statistics
, stdenv
, text
, time
, transformers
, transformers-compat
, vector
, vector-algorithms
}:
mkDerivation {

pname = "criterion";
version = "1.1.4.0";
sha256 = "53a243fc759ed3100e71f96a5f6649658d076d91d52ce2853a6f8587aa3cfa76";
revision = "1";
editedCabalFile = "0hgy2rbrb0dg1sjdvqk2zivdq075fih4zlf51ffdmqzgcdj3i9b1";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
ansi-wl-pprint
base
binary
bytestring
cassava
code-page
containers
deepseq
directory
filepath
Glob
hastache
js-flot
js-jquery
mtl
mwc-random
optparse-applicative
parsec
statistics
text
time
transformers
transformers-compat
vector
vector-algorithms
];
doHaddock = false;
doCheck = false;
homepage = "http://www.serpentine.com/criterion";
description = "Robust, reliable performance measurement and analysis";
license = stdenv.lib.licenses.bsd3;

}) {};
"cron" = callPackage
({
  mkDerivation
, attoparsec
, base
, data-default-class
, mtl
, mtl-compat
, old-locale
, semigroups
, stdenv
, text
, time
}:
mkDerivation {

pname = "cron";
version = "0.5.0";
sha256 = "ebffcf17d4ce054b50e97034ca94e73c82803494e0a507b49844740a968535b7";
libraryHaskellDepends = [
attoparsec
base
data-default-class
mtl
mtl-compat
old-locale
semigroups
text
time
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/michaelxavier/cron";
description = "Cron datatypes and Attoparsec parser";
license = stdenv.lib.licenses.mit;

}) {};
"crypto-api" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, entropy
, stdenv
, tagged
, transformers
}:
mkDerivation {

pname = "crypto-api";
version = "0.13.2";
sha256 = "5331d511a9761d5073e6661148234228d88f8ace14e2994171f0bcf5183e82ed";
libraryHaskellDepends = [
base
bytestring
cereal
entropy
tagged
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/TomMD/crypto-api";
description = "A generic interface for cryptographic operations";
license = stdenv.lib.licenses.bsd3;

}) {};
"crypto-api-tests" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, crypto-api
, directory
, filepath
, HUnit
, QuickCheck
, stdenv
, test-framework
, test-framework-hunit
, test-framework-quickcheck2
}:
mkDerivation {

pname = "crypto-api-tests";
version = "0.3";
sha256 = "f44aecdd4ceb9da9f38330e84d9c17745a82b0611085ebb34442d2dce4207270";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
cereal
crypto-api
directory
filepath
HUnit
QuickCheck
test-framework
test-framework-hunit
test-framework-quickcheck2
];
doHaddock = false;
doCheck = false;
homepage = "http://trac.haskell.org/crypto-api/wiki";
description = "A test framework and KATs for cryptographic operations";
license = stdenv.lib.licenses.bsd3;

}) {};
"crypto-cipher-tests" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, crypto-cipher-types
, HUnit
, mtl
, QuickCheck
, securemem
, stdenv
, test-framework
, test-framework-hunit
, test-framework-quickcheck2
}:
mkDerivation {

pname = "crypto-cipher-tests";
version = "0.0.11";
sha256 = "dfb670b73d4091b8683634d0d4d5a40576d573ad160650d5e518244ced8b98a7";
libraryHaskellDepends = [
base
byteable
bytestring
crypto-cipher-types
HUnit
mtl
QuickCheck
securemem
test-framework
test-framework-hunit
test-framework-quickcheck2
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-cipher";
description = "Generic cryptography cipher tests";
license = stdenv.lib.licenses.bsd3;

}) {};
"crypto-cipher-types" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, securemem
, stdenv
}:
mkDerivation {

pname = "crypto-cipher-types";
version = "0.0.9";
sha256 = "2073f6b70df7916aebe2da49d224497183662d56d19da87b76f70039430c0a0f";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
byteable
bytestring
securemem
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-cipher";
description = "Generic cryptography cipher types";
license = stdenv.lib.licenses.bsd3;

}) {};
"crypto-enigma" = callPackage
({
  mkDerivation
, base
, containers
, MissingH
, mtl
, split
, stdenv
}:
mkDerivation {

pname = "crypto-enigma";
version = "0.0.2.8";
sha256 = "7868ad36d39243fef45e1f76be73709778442ad69dc18ad8066650a748c6e837";
revision = "4";
editedCabalFile = "1rvcphwavb3ns46fankpdlkz8rwl3rn591zlkmx0zdy3vygpwsfg";
libraryHaskellDepends = [
base
containers
MissingH
mtl
split
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/orome/crypto-enigma-hs";
description = "An Enigma machine simulator with display";
license = stdenv.lib.licenses.bsd3;

}) {};
"crypto-numbers" = callPackage
({
  mkDerivation
, base
, bytestring
, crypto-random
, ghc-prim
, integer-gmp
, stdenv
, vector
}:
mkDerivation {

pname = "crypto-numbers";
version = "0.2.7";
sha256 = "420aeb17e9cdcfdf8c950c6c6f10c54503c5524d36f611aa7238e3fd65f189a6";
revision = "1";
editedCabalFile = "1jjkhid8kwrz5894nad537rqxzzyx6b687bmgyk70nv0ny336j9b";
libraryHaskellDepends = [
base
bytestring
crypto-random
ghc-prim
integer-gmp
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-crypto-numbers";
description = "Cryptographic numbers: functions and algorithms";
license = stdenv.lib.licenses.bsd3;

}) {};
"crypto-pubkey" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, crypto-numbers
, crypto-pubkey-types
, crypto-random
, cryptohash
, stdenv
}:
mkDerivation {

pname = "crypto-pubkey";
version = "0.2.8";
sha256 = "c0ccf2f5c38517de1f1626cb0a2542f35aefad8842f8ad5c1fac0b8c9de8b56e";
libraryHaskellDepends = [
base
byteable
bytestring
crypto-numbers
crypto-pubkey-types
crypto-random
cryptohash
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-crypto-pubkey";
description = "Public Key cryptography";
license = stdenv.lib.licenses.bsd3;

}) {};
"crypto-pubkey-types" = callPackage
({
  mkDerivation
, asn1-encoding
, asn1-types
, base
, stdenv
}:
mkDerivation {

pname = "crypto-pubkey-types";
version = "0.4.3";
sha256 = "7ed9f52281ec4e34021a91818fe45288e33d65bff937f60334a3f45be5a71c60";
libraryHaskellDepends = [
asn1-encoding
asn1-types
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-pubkey-types";
description = "Generic cryptography Public keys algorithm types";
license = stdenv.lib.licenses.bsd3;

}) {};
"crypto-random" = callPackage
({
  mkDerivation
, base
, bytestring
, securemem
, stdenv
, unix
, vector
}:
mkDerivation {

pname = "crypto-random";
version = "0.0.9";
sha256 = "170a7a18441379c2d1c19b502ee5919026a19adc6e78641cd4fb40b1d69a6904";
libraryHaskellDepends = [
base
bytestring
securemem
unix
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-random";
description = "Simple cryptographic random related types";
license = stdenv.lib.licenses.bsd3;

}) {};
"crypto-random-api" = callPackage
({
  mkDerivation
, base
, bytestring
, entropy
, stdenv
}:
mkDerivation {

pname = "crypto-random-api";
version = "0.2.0";
sha256 = "56e9777061bd9ce553683d097ba3a11fdc371724060b62ca103f1f291f9f897c";
libraryHaskellDepends = [
base
bytestring
entropy
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-random-api";
description = "Simple random generators API for cryptography related code";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptocipher" = callPackage
({
  mkDerivation
, base
, cipher-aes
, cipher-blowfish
, cipher-camellia
, cipher-des
, cipher-rc4
, crypto-cipher-types
, stdenv
}:
mkDerivation {

pname = "cryptocipher";
version = "0.6.2";
sha256 = "34b9e62dee36c4019dd0c0e86576295d0bd1bb573eeb24686ec635a09550e346";
libraryHaskellDepends = [
base
cipher-aes
cipher-blowfish
cipher-camellia
cipher-des
cipher-rc4
crypto-cipher-types
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-cipher";
description = "Symmetrical block and stream ciphers";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptohash" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, cryptonite
, ghc-prim
, memory
, stdenv
}:
mkDerivation {

pname = "cryptohash";
version = "0.11.9";
sha256 = "c28f847fc1fcd65b6eea2e74a100300af940919f04bb21d391f6a773968f22fb";
libraryHaskellDepends = [
base
byteable
bytestring
cryptonite
ghc-prim
memory
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-cryptohash";
description = "collection of crypto hashes, fast, pure and practical";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptohash-conduit" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-extra
, cryptohash
, resourcet
, stdenv
, transformers
}:
mkDerivation {

pname = "cryptohash-conduit";
version = "0.1.1";
sha256 = "ea516d898d3e34dae6be3e8bc59c9f61a61cb1222233dbfe84a84bb0ded4b4ce";
libraryHaskellDepends = [
base
bytestring
conduit
conduit-extra
cryptohash
resourcet
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-cryptohash-conduit";
description = "cryptohash conduit";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptohash-cryptoapi" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, crypto-api
, cryptonite
, memory
, stdenv
, tagged
}:
mkDerivation {

pname = "cryptohash-cryptoapi";
version = "0.1.4";
sha256 = "717a8664ebfaa1c31aaec1d78c9b7c776a5adcfdfc50ad88e21a34566f72058e";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
cereal
crypto-api
cryptonite
memory
tagged
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-cryptohash-cryptoapi";
description = "Crypto-api interfaces for cryptohash";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptohash-md5" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "cryptohash-md5";
version = "0.11.100.1";
sha256 = "710bd48770fa3e9a3b05428c6dc77fb72c91956d334a1eb89ded11bb843e18f9";
revision = "2";
editedCabalFile = "0vyb9cfvpfxpslxvvhd48gw37i9g8ry5x63xwxd9q7xfiqhs7p3a";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/cryptohash-md5";
description = "Fast, pure and practical MD5 implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptohash-sha1" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "cryptohash-sha1";
version = "0.11.100.1";
sha256 = "3c79af33542512442f8f87f6abb1faef7cd43bbfb2859260a33251d861eb0dab";
revision = "2";
editedCabalFile = "0xas0nbq9bfdzlj6k565ibizv1cqvzfzsdj6q9pdiiwyxqblqc3m";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/cryptohash-sha1";
description = "Fast, pure and practical SHA-1 implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptohash-sha256" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "cryptohash-sha256";
version = "0.11.100.1";
sha256 = "57b02338e9648639335788b422dd4c744543cb0991347472e2e3628a33c2f5d6";
revision = "1";
editedCabalFile = "0ywdlxf2y46pi2p502zkqwf6zpiamxg5s2l178xkpjy1r02d9lhg";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/cryptohash-sha256";
description = "Fast, pure and practical SHA-256 implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptol" = callPackage
({
  mkDerivation
, alex
, ansi-terminal
, array
, async
, base
, base-compat
, bytestring
, containers
, deepseq
, directory
, filepath
, gitrev
, GraphSCC
, happy
, haskeline
, heredoc
, monad-control
, monadLib
, old-time
, presburger
, pretty
, process
, QuickCheck
, random
, sbv
, simple-smt
, smtLib
, stdenv
, syb
, template-haskell
, text
, tf-random
, transformers
, transformers-base
, utf8-string
}:
mkDerivation {

pname = "cryptol";
version = "2.4.0";
sha256 = "d34471f734429c25b52ca71ce63270ec3157a8413eeaf7f65dd7abe3cb27014d";
revision = "1";
editedCabalFile = "1waln79xzki1l2r1xziy2dd007q8yfsbihhp9qsxxpcpl6qmzvib";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
array
async
base
base-compat
bytestring
containers
deepseq
directory
filepath
gitrev
GraphSCC
heredoc
monad-control
monadLib
old-time
presburger
pretty
process
QuickCheck
random
sbv
simple-smt
smtLib
syb
template-haskell
text
tf-random
transformers
transformers-base
utf8-string
];
libraryToolDepends = [
alex
happy
];
executableHaskellDepends = [
ansi-terminal
base
base-compat
containers
deepseq
directory
filepath
haskeline
monad-control
monadLib
process
random
sbv
tf-random
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.cryptol.net/";
description = "Cryptol: The Language of Cryptography";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptonite" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, ghc-prim
, integer-gmp
, memory
, stdenv
}:
mkDerivation {

pname = "cryptonite";
version = "0.22";
sha256 = "4be312a42a12ccd2ca60272ef485664f242c7ed89fa1909ba36a54c5fb6ff5f0";
libraryHaskellDepends = [
base
bytestring
deepseq
ghc-prim
integer-gmp
memory
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-crypto/cryptonite";
description = "Cryptography Primitives sink";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptonite-conduit" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-extra
, cryptonite
, memory
, resourcet
, stdenv
, transformers
}:
mkDerivation {

pname = "cryptonite-conduit";
version = "0.2.0";
sha256 = "15edae989ad62b0bdaf817bba8e711323b22d3a3466025f778a54757ba567628";
libraryHaskellDepends = [
base
bytestring
conduit
conduit-extra
cryptonite
memory
resourcet
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-crypto/cryptonite-conduit";
description = "cryptonite conduit";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptonite-openssl" = callPackage
({
  mkDerivation
, base
, bytestring
, cryptonite
, memory
, openssl
, stdenv
}:
mkDerivation {

pname = "cryptonite-openssl";
version = "0.5";
sha256 = "a10bc2030bd3696c190562853a794c392ff1e5ab9b4adc6c05697526dc9ce25c";
libraryHaskellDepends = [
base
bytestring
cryptonite
memory
];
librarySystemDepends = [
openssl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-crypto/cryptonite-openssl";
description = "Crypto stuff using OpenSSL cryptographic library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) openssl;};
"css-syntax" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, scientific
, stdenv
, text
}:
mkDerivation {

pname = "css-syntax";
version = "0.0.5";
sha256 = "3969e0bf83c81dd970cdde9bb07386071264f0f390215078eb86a5cfa1e50b9e";
revision = "3";
editedCabalFile = "0p32287dxngmz6bk2xpvj8vh0kawjcrdxxdnczmay6pa1bzyhrik";
libraryHaskellDepends = [
attoparsec
base
bytestring
scientific
text
];
doHaddock = false;
doCheck = false;
description = "This package implments a parser for the CSS syntax";
license = stdenv.lib.licenses.mit;

}) {};
"css-text" = callPackage
({
  mkDerivation
, attoparsec
, base
, stdenv
, text
}:
mkDerivation {

pname = "css-text";
version = "0.1.2.2";
sha256 = "dff564ac08587950dab4fedf07c357d9907099f60c87bf465d648a8965e61987";
libraryHaskellDepends = [
attoparsec
base
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "CSS parser and renderer";
license = stdenv.lib.licenses.mit;

}) {};
"csv" = callPackage
({
  mkDerivation
, base
, filepath
, parsec
, stdenv
}:
mkDerivation {

pname = "csv";
version = "0.1.2";
sha256 = "8cf43442325faa1368f9b55ad952beccf677d9980cdffa3d70a7f204a23ae600";
libraryHaskellDepends = [
base
filepath
parsec
];
doHaddock = false;
doCheck = false;
description = "CSV loader and dumper";
license = stdenv.lib.licenses.mit;

}) {};
"csv-conduit" = callPackage
({
  mkDerivation
, array
, attoparsec
, base
, blaze-builder
, bytestring
, conduit
, conduit-extra
, containers
, data-default
, ghc-prim
, mmorph
, monad-control
, mtl
, primitive
, resourcet
, stdenv
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "csv-conduit";
version = "0.6.7";
sha256 = "501e6b0b7c6f0e80ba381b5f18af5ec343eb5e1afb4f5fc4e5e318ce51eeb33d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
attoparsec
base
blaze-builder
bytestring
conduit
conduit-extra
containers
data-default
ghc-prim
mmorph
monad-control
mtl
primitive
resourcet
text
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ozataman/csv-conduit";
description = "A flexible, fast, conduit-based CSV parser library for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"ctrie" = callPackage
({
  mkDerivation
, atomic-primops
, base
, hashable
, primitive
, stdenv
}:
mkDerivation {

pname = "ctrie";
version = "0.1.1.0";
sha256 = "8434b34f6c5980a8885eb0565c0d421c825a2b30574a367db2d121ed42fa5bb8";
libraryHaskellDepends = [
atomic-primops
base
hashable
primitive
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mcschroeder/ctrie";
description = "Non-blocking concurrent map";
license = stdenv.lib.licenses.mit;

}) {};
"cubicbezier" = callPackage
({
  mkDerivation
, base
, containers
, integration
, matrices
, microlens
, microlens-mtl
, microlens-th
, mtl
, stdenv
, vector
}:
mkDerivation {

pname = "cubicbezier";
version = "0.5.0.0";
sha256 = "96c2792707bc80a45a428886af97c1b4c7524a2e9ba0be13fa60d7bac879e508";
libraryHaskellDepends = [
base
containers
integration
matrices
microlens
microlens-mtl
microlens-th
mtl
vector
];
doHaddock = false;
doCheck = false;
description = "Efficient manipulating of 2D cubic bezier curves";
license = stdenv.lib.licenses.bsd3;

}) {};
"cubicspline" = callPackage
({
  mkDerivation
, base
, hmatrix
, safe
, stdenv
}:
mkDerivation {

pname = "cubicspline";
version = "0.1.2";
sha256 = "5b6ced9ca65b0d01ddceaf18605c8f915491d8d4a6aaef73475c4e8d4b1a9b79";
libraryHaskellDepends = [
base
hmatrix
safe
];
doHaddock = false;
doCheck = false;
description = "Natural cubic spline interpolation";
license = stdenv.lib.licenses.bsd3;

}) {};
"cue-sheet" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, data-default-class
, exceptions
, megaparsec
, mtl
, QuickCheck
, stdenv
, text
}:
mkDerivation {

pname = "cue-sheet";
version = "0.1.0";
sha256 = "cb4d369b3eb3859b9006dce4f9b45a3b9dafb75370d02bf5f178f06905dd05f1";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
containers
data-default-class
exceptions
megaparsec
mtl
QuickCheck
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/cue-sheet";
description = "Support for construction, rendering, and parsing of CUE sheets";
license = stdenv.lib.licenses.bsd3;

}) {};
"curl" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, curl
, stdenv
}:
mkDerivation {

pname = "curl";
version = "1.3.8";
sha256 = "9087c936bfcdb865bad3166baa3f12bf37acf076fa76010e3b5f82a1d485446e";
revision = "1";
editedCabalFile = "02sq2bjw5igc2k9f9ssh58k2ivii2xsvk5r00ky3cxh8j61qy86q";
libraryHaskellDepends = [
base
bytestring
containers
];
librarySystemDepends = [
curl
];
doHaddock = false;
doCheck = false;
description = "Haskell binding to libcurl";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) curl;};
"darcs" = callPackage
({
  mkDerivation
, array
, async
, attoparsec
, base
, base16-bytestring
, binary
, bytestring
, containers
, cryptohash
, curl
, data-ordlist
, directory
, fgl
, filepath
, graphviz
, hashable
, haskeline
, html
, HTTP
, mmap
, mtl
, network
, network-uri
, old-time
, parsec
, process
, random
, regex-applicative
, regex-compat-tdfa
, sandi
, stdenv
, tar
, terminfo
, text
, time
, transformers
, transformers-compat
, unix
, unix-compat
, utf8-string
, vector
, zip-archive
, zlib
}:
mkDerivation {

pname = "darcs";
version = "2.12.5";
sha256 = "355b04c85c27bca43c8c380212988d9c1e9a984b0b593ceb2884de4295063553";
revision = "1";
editedCabalFile = "0if3ww0xhi8k5c8a9yb687gjjdp2k4q2896qn7vgwwzg360slx8n";
configureFlags = [
"-fforce-char8-encoding"
"-flibrary"
];
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
async
attoparsec
base
base16-bytestring
binary
bytestring
containers
cryptohash
data-ordlist
directory
fgl
filepath
graphviz
hashable
haskeline
html
HTTP
mmap
mtl
network
network-uri
old-time
parsec
process
random
regex-applicative
regex-compat-tdfa
sandi
tar
terminfo
text
time
transformers
transformers-compat
unix
unix-compat
utf8-string
vector
zip-archive
zlib
];
librarySystemDepends = [
curl
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
postInstall = ''
  mkdir -p $out/etc/bash_completion.d
  mv contrib/darcs_completion $out/etc/bash_completion.d/darcs
'';
homepage = "http://darcs.net/";
description = "a distributed, interactive, smart revision control system";
license = "GPL";

}) {inherit (pkgs) curl;};
"data-accessor" = callPackage
({
  mkDerivation
, array
, base
, containers
, stdenv
, transformers
}:
mkDerivation {

pname = "data-accessor";
version = "0.2.2.7";
sha256 = "3465227ad5f81059a885d354e2f3c108d550287580e6939e18350fa65e78c2ed";
libraryHaskellDepends = [
array
base
containers
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Record_access";
description = "Utilities for accessing and manipulating fields of records";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-accessor-mtl" = callPackage
({
  mkDerivation
, base
, data-accessor
, mtl
, stdenv
}:
mkDerivation {

pname = "data-accessor-mtl";
version = "0.2.0.4";
sha256 = "10cf9166e2e046076b7e58987718e57b31408e7cada9f26c8ff111e0379814c5";
libraryHaskellDepends = [
base
data-accessor
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Record_access";
description = "Use Accessor to access state in mtl State monad class";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-binary-ieee754" = callPackage
({
  mkDerivation
, base
, binary
, stdenv
}:
mkDerivation {

pname = "data-binary-ieee754";
version = "0.4.4";
sha256 = "59975abed8f4caa602f0780c10a9b2493479e6feb71ad189bb10c3ac5678df0a";
libraryHaskellDepends = [
base
binary
];
doHaddock = false;
doCheck = false;
homepage = "https://john-millikin.com/software/data-binary-ieee754/";
description = "Parser/Serialiser for IEEE-754 floating-point values";
license = stdenv.lib.licenses.mit;

}) {};
"data-check" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "data-check";
version = "0.1.0";
sha256 = "587cd23689719faeee59c94d7ca4b79bdbe293ea43bf7e64f547160a66bc9ae7";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/data-check";
description = "Library for checking and normalization of data (e.g. from web forms)";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-default" = callPackage
({
  mkDerivation
, base
, data-default-class
, data-default-instances-containers
, data-default-instances-dlist
, data-default-instances-old-locale
, stdenv
}:
mkDerivation {

pname = "data-default";
version = "0.7.1.1";
sha256 = "b0f95d279cd75cacaa8152a01590dc3460f7134f6840b37052abb3ba3cb2a511";
libraryHaskellDepends = [
base
data-default-class
data-default-instances-containers
data-default-instances-dlist
data-default-instances-old-locale
];
doHaddock = false;
doCheck = false;
description = "A class for types with a default value";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-default-class" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "data-default-class";
version = "0.1.2.0";
sha256 = "4f01b423f000c3e069aaf52a348564a6536797f31498bb85c3db4bd2d0973e56";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A class for types with a default value";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-default-instances-containers" = callPackage
({
  mkDerivation
, base
, containers
, data-default-class
, stdenv
}:
mkDerivation {

pname = "data-default-instances-containers";
version = "0.0.1";
sha256 = "a55e07af005c9815d82f3fc95e125db82994377c9f4a769428878701d4ec081a";
libraryHaskellDepends = [
base
containers
data-default-class
];
doHaddock = false;
doCheck = false;
description = "Default instances for types in containers";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-default-instances-dlist" = callPackage
({
  mkDerivation
, base
, data-default-class
, dlist
, stdenv
}:
mkDerivation {

pname = "data-default-instances-dlist";
version = "0.0.1";
sha256 = "7d683711cbf08abd7adcd5ac2be825381308d220397315a5570fe61b719b5959";
libraryHaskellDepends = [
base
data-default-class
dlist
];
doHaddock = false;
doCheck = false;
description = "Default instances for types in dlist";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-default-instances-old-locale" = callPackage
({
  mkDerivation
, base
, data-default-class
, old-locale
, stdenv
}:
mkDerivation {

pname = "data-default-instances-old-locale";
version = "0.0.1";
sha256 = "60d3b02922958c4908d7bf2b24ddf61511665745f784227d206745784b0c0802";
libraryHaskellDepends = [
base
data-default-class
old-locale
];
doHaddock = false;
doCheck = false;
description = "Default instances for types in old-locale";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-hash" = callPackage
({
  mkDerivation
, array
, base
, containers
, stdenv
}:
mkDerivation {

pname = "data-hash";
version = "0.2.0.1";
sha256 = "9117dd49013ca28ff188fc71c3595ac3af23d56d301c1f39bac93d44d8c60bbe";
libraryHaskellDepends = [
array
base
containers
];
doHaddock = false;
doCheck = false;
description = "Combinators for building fast hashing functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-inttrie" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "data-inttrie";
version = "0.1.2";
sha256 = "8ddae7ad7d3cafdf349d93c0eed5767ab1213d854980bc28d7d935163c5f1df9";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/luqui/data-inttrie";
description = "A lazy, infinite trie of integers";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-lens-light" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, template-haskell
}:
mkDerivation {

pname = "data-lens-light";
version = "0.1.2.2";
sha256 = "72d3e6a73bde4a32eccd2024eb58ca96da962d4b659d76baed4ab37f28dcb36e";
libraryHaskellDepends = [
base
mtl
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/data-lens-light";
description = "Simple lenses, minimum dependencies";
license = stdenv.lib.licenses.mit;

}) {};
"data-memocombinators" = callPackage
({
  mkDerivation
, array
, base
, data-inttrie
, stdenv
}:
mkDerivation {

pname = "data-memocombinators";
version = "0.5.1";
sha256 = "b4341d2024b84a43f92edc39f6d6766bf4f0f00a40fd834b9f6f8e987b606ed7";
libraryHaskellDepends = [
array
base
data-inttrie
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/luqui/data-memocombinators";
description = "Combinators for building memo tables";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-msgpack" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, data-binary-ieee754
, deepseq
, groom
, hashable
, QuickCheck
, stdenv
, text
, unordered-containers
, vector
, void
}:
mkDerivation {

pname = "data-msgpack";
version = "0.0.9";
sha256 = "432b1e3f1cfbfe7cb165b139cb7379906b0f3126c381a64160aeb1f393b04b5c";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
binary
bytestring
containers
data-binary-ieee754
deepseq
hashable
QuickCheck
text
unordered-containers
vector
void
];
executableHaskellDepends = [
base
bytestring
groom
];
doHaddock = false;
doCheck = false;
homepage = "http://msgpack.org/";
description = "A Haskell implementation of MessagePack";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-or" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "data-or";
version = "1.0.0.5";
sha256 = "9defb64f1c7210460a940beb7f32ba1c79f363fbf3a5bd126feb876930c6e672";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "A data type for non-exclusive disjunction";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-ordlist" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "data-ordlist";
version = "0.4.7.0";
sha256 = "6f6c1e7a9a9155ad78ca78cb9abd6f7e2e1c78b3e549b179dc0874e6428f490d";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Set and bag operations on ordered lists";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-reify" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "data-reify";
version = "0.6.1";
sha256 = "61350a1e96cb1276c2b6b8b13fa1bade5d4e63c702509a3f5e90bbc19ad9b202";
revision = "1";
editedCabalFile = "0ixlibqrz7fd4bg9vnnd431a9kqvz4ajx8sbgyvpx9l2yjrabwzp";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://ku-fpg.github.io/software/data-reify/";
description = "Reify a recursive data structure into an explicit graph";
license = stdenv.lib.licenses.bsd3;

}) {};
"datasets" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, cassava
, directory
, file-embed
, filepath
, hashable
, HTTP
, stdenv
, stringsearch
, text
, time
, vector
}:
mkDerivation {

pname = "datasets";
version = "0.2.1";
sha256 = "af3d9e9093358b9b1a320645a0411c750e9b7ed723f3d29088b5addaeeeb1277";
libraryHaskellDepends = [
aeson
base
bytestring
cassava
directory
file-embed
filepath
hashable
HTTP
stringsearch
text
time
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/glutamate/datasets";
description = "Classical data sets for statistics and machine learning";
license = stdenv.lib.licenses.mit;

}) {};
"dataurl" = callPackage
({
  mkDerivation
, attoparsec
, base
, base64-bytestring
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "dataurl";
version = "0.1.0.0";
sha256 = "b1e72b48dbe72520f0b43b06ae75cb025e9750213982583f527e16b605660fb2";
libraryHaskellDepends = [
attoparsec
base
base64-bytestring
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/agrafix/dataurl#readme";
description = "Handle data-urls";
license = stdenv.lib.licenses.mit;

}) {};
"dawg-ord" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
, transformers
, vector
}:
mkDerivation {

pname = "dawg-ord";
version = "0.5.1.0";
sha256 = "d9129acfb71ce41b6994d2c72a040319fc85af408226122d3958d5617e8922e9";
libraryHaskellDepends = [
base
containers
mtl
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kawu/dawg-ord";
description = "Directed acyclic word graphs";
license = stdenv.lib.licenses.bsd3;

}) {};
"debian-build" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, process
, split
, stdenv
, transformers
}:
mkDerivation {

pname = "debian-build";
version = "0.10.1.0";
sha256 = "a41033dee53346bda2f77a4192f85b54dbe3d25ef9b1fd158fdc09b4411e90b4";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
filepath
process
split
transformers
];
executableHaskellDepends = [
base
filepath
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://twitter.com/khibino/";
description = "Debian package build sequence tools";
license = stdenv.lib.licenses.bsd3;

}) {};
"declarative" = callPackage
({
  mkDerivation
, base
, hasty-hamiltonian
, kan-extensions
, lens
, mcmc-types
, mighty-metropolis
, mwc-probability
, pipes
, primitive
, speedy-slice
, stdenv
, transformers
}:
mkDerivation {

pname = "declarative";
version = "0.5.1";
sha256 = "4ed591067e741682da3f319284dbf1d77c70bdf9d5c78e32575d5018d3f4c624";
libraryHaskellDepends = [
base
hasty-hamiltonian
kan-extensions
lens
mcmc-types
mighty-metropolis
mwc-probability
pipes
primitive
speedy-slice
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jtobin/declarative";
description = "DIY Markov Chains";
license = stdenv.lib.licenses.mit;

}) {};
"deepseq-generics" = callPackage
({
  mkDerivation
, base
, deepseq
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "deepseq-generics";
version = "0.2.0.0";
sha256 = "b0b3ef5546c0768ef9194519a90c629f8f2ba0348487e620bb89d512187c7c9d";
revision = "2";
editedCabalFile = "1pnidf8w8x0w5fsqgv8hhrw07slmhxwy5x4fikgk0bd6k76aqicb";
libraryHaskellDepends = [
base
deepseq
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/deepseq-generics";
description = "GHC.Generics-based Control.DeepSeq.rnf implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"dejafu" = callPackage
({
  mkDerivation
, base
, concurrency
, containers
, deepseq
, dpor
, exceptions
, monad-loops
, mtl
, ref-fd
, semigroups
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "dejafu";
version = "0.4.0.0";
sha256 = "876c92c590cce573cb600a1bb575b42ed2c2fb332c59803c5f0667a675df80d4";
libraryHaskellDepends = [
base
concurrency
containers
deepseq
dpor
exceptions
monad-loops
mtl
ref-fd
semigroups
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/dejafu";
description = "Systematic testing for Haskell concurrency";
license = stdenv.lib.licenses.mit;

}) {};
"dependent-map" = callPackage
({
  mkDerivation
, base
, containers
, dependent-sum
, stdenv
}:
mkDerivation {

pname = "dependent-map";
version = "0.2.4.0";
sha256 = "5db396bdb5d156434af920c074316c3b84b4d39ba8e1cd349c7bb6679cb28246";
libraryHaskellDepends = [
base
containers
dependent-sum
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/dependent-map";
description = "Dependent finite maps (partial dependent products)";
license = "unknown";

}) {};
"dependent-sum" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "dependent-sum";
version = "0.4";
sha256 = "a8deecb4153a1878173f8d0a18de0378ab068bc15e5035b9e4cb478e8e4e1a1e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/dependent-sum";
description = "Dependent sum type";
license = stdenv.lib.licenses.publicDomain;

}) {};
"deriving-compat" = callPackage
({
  mkDerivation
, base
, containers
, ghc-boot-th
, ghc-prim
, stdenv
, template-haskell
, transformers
, transformers-compat
}:
mkDerivation {

pname = "deriving-compat";
version = "0.3.5";
sha256 = "0a165c8eeb78349ded41cf51750753cdd0e25c139171789f7a4b0c6be4ccd231";
libraryHaskellDepends = [
base
containers
ghc-boot-th
ghc-prim
template-haskell
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-compat/deriving-compat";
description = "Backports of GHC deriving extensions";
license = stdenv.lib.licenses.bsd3;

}) {};
"descriptive" = callPackage
({
  mkDerivation
, aeson
, base
, bifunctors
, containers
, mtl
, scientific
, stdenv
, text
, transformers
, vector
}:
mkDerivation {

pname = "descriptive";
version = "0.9.4";
sha256 = "795ec65756bf87ec6ea4c92d85a25d0eb0d8cfa1df40685ddcf74b83099bba2f";
libraryHaskellDepends = [
aeson
base
bifunctors
containers
mtl
scientific
text
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chrisdone/descriptive";
description = "Self-describing consumers/parsers; forms, cmd-line args, JSON, etc";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams" = callPackage
({
  mkDerivation
, diagrams-contrib
, diagrams-core
, diagrams-lib
, diagrams-svg
, stdenv
}:
mkDerivation {

pname = "diagrams";
version = "1.4";
sha256 = "8608f6fa682b8c43b9fbe7c42c033c7a6de0680bd7383f6a81ea8bca37999139";
libraryHaskellDepends = [
diagrams-contrib
diagrams-core
diagrams-lib
diagrams-svg
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams";
description = "Embedded domain-specific language for declarative vector graphics";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams-builder" = callPackage
({
  mkDerivation
, base
, base-orphans
, bytestring
, cmdargs
, diagrams-cairo
, diagrams-lib
, diagrams-postscript
, diagrams-rasterific
, diagrams-svg
, directory
, exceptions
, filepath
, hashable
, haskell-src-exts
, haskell-src-exts-simple
, hint
, JuicyPixels
, lens
, mtl
, split
, stdenv
, svg-builder
, transformers
}:
mkDerivation {

pname = "diagrams-builder";
version = "0.8.0.1";
sha256 = "6e9b0eba4c9aa698ffdd21d55492b4cfd867cd4107ed8ccc591888cba7fe5b1c";
revision = "3";
editedCabalFile = "00lpy8ch7zjc2z3ifwg8j1jfsrf4sg1fk9pngykl8bqb79hm5h3i";
configureFlags = [
"-fcairo"
"-fps"
"-frasterific"
"-fsvg"
];
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
base-orphans
cmdargs
diagrams-lib
directory
exceptions
filepath
hashable
haskell-src-exts
haskell-src-exts-simple
hint
lens
mtl
split
transformers
];
executableHaskellDepends = [
base
bytestring
cmdargs
diagrams-cairo
diagrams-lib
diagrams-postscript
diagrams-rasterific
diagrams-svg
directory
filepath
JuicyPixels
lens
svg-builder
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams";
description = "hint-based build service for the diagrams graphics EDSL";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams-cairo" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, cairo
, colour
, containers
, data-default-class
, diagrams-core
, diagrams-lib
, filepath
, hashable
, JuicyPixels
, lens
, mtl
, optparse-applicative
, pango
, split
, statestack
, stdenv
, transformers
, unix
, vector
}:
mkDerivation {

pname = "diagrams-cairo";
version = "1.4";
sha256 = "a94ec8bfdba325cf317368355eaa282bef3c75ed78e153ef400b8627575cea81";
revision = "2";
editedCabalFile = "1h21l3wa4vbl7p6n7sk949jpxvxikkhf81y2qjqgn904564w73r6";
libraryHaskellDepends = [
array
base
bytestring
cairo
colour
containers
data-default-class
diagrams-core
diagrams-lib
filepath
hashable
JuicyPixels
lens
mtl
optparse-applicative
pango
split
statestack
transformers
unix
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams";
description = "Cairo backend for diagrams drawing EDSL";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams-canvas" = callPackage
({
  mkDerivation
, base
, blank-canvas
, cmdargs
, containers
, data-default-class
, diagrams-core
, diagrams-lib
, lens
, mtl
, NumInstances
, optparse-applicative
, statestack
, stdenv
, text
}:
mkDerivation {

pname = "diagrams-canvas";
version = "1.4";
sha256 = "30622ff2478391caf31dd8cc6842043f33409e97a3e5fd9f9ca6ee8264b576e9";
revision = "1";
editedCabalFile = "174nkb6ki100zh0hbrj8p4n52031jny6683n80i602544iikvbn9";
libraryHaskellDepends = [
base
blank-canvas
cmdargs
containers
data-default-class
diagrams-core
diagrams-lib
lens
mtl
NumInstances
optparse-applicative
statestack
text
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams/";
description = "HTML5 canvas backend for diagrams drawing EDSL";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams-contrib" = callPackage
({
  mkDerivation
, base
, circle-packing
, colour
, containers
, cubicbezier
, data-default
, data-default-class
, diagrams-core
, diagrams-lib
, diagrams-solve
, force-layout
, hashable
, lens
, linear
, mfsolve
, MonadRandom
, monoid-extras
, mtl
, mtl-compat
, parsec
, random
, semigroups
, split
, stdenv
, text
}:
mkDerivation {

pname = "diagrams-contrib";
version = "1.4.0.1";
sha256 = "1194be9ab13c8660ef1c56c35b3a6578953db51e173de96eb8d49603e855750c";
revision = "4";
editedCabalFile = "147khgcda2kxv9qd2l0866af43fxikb4nclv9c25gys888r1mc5k";
libraryHaskellDepends = [
base
circle-packing
colour
containers
cubicbezier
data-default
data-default-class
diagrams-core
diagrams-lib
diagrams-solve
force-layout
hashable
lens
linear
mfsolve
MonadRandom
monoid-extras
mtl
mtl-compat
parsec
random
semigroups
split
text
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams/";
description = "Collection of user contributions to diagrams EDSL";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams-core" = callPackage
({
  mkDerivation
, adjunctions
, base
, containers
, distributive
, dual-tree
, lens
, linear
, monoid-extras
, mtl
, profunctors
, semigroups
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "diagrams-core";
version = "1.4";
sha256 = "e5502f483dadb86056523d601a1037596ff49380b4c1cd00600183eab7992ae7";
libraryHaskellDepends = [
adjunctions
base
containers
distributive
dual-tree
lens
linear
monoid-extras
mtl
profunctors
semigroups
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams";
description = "Core libraries for diagrams EDSL";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams-gtk" = callPackage
({
  mkDerivation
, base
, cairo
, diagrams-cairo
, diagrams-lib
, gtk
, stdenv
}:
mkDerivation {

pname = "diagrams-gtk";
version = "1.4";
sha256 = "b66bde621a09b79b99185af50b2d1ed0b2bd3988c95ed27c7e92e5383917eae9";
revision = "2";
editedCabalFile = "0hblrqvwk1pbssaci97v36r71kpm7kkcghh5ijmq52lmjfq72jqm";
libraryHaskellDepends = [
base
cairo
diagrams-cairo
diagrams-lib
gtk
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams/";
description = "Backend for rendering diagrams directly to GTK windows";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams-html5" = callPackage
({
  mkDerivation
, base
, cmdargs
, containers
, data-default-class
, diagrams-core
, diagrams-lib
, lens
, mtl
, NumInstances
, optparse-applicative
, split
, statestack
, static-canvas
, stdenv
, text
}:
mkDerivation {

pname = "diagrams-html5";
version = "1.4";
sha256 = "43653c946a4c2215d1fdf62e93f4b65ccd19c960aa8e1c7b8a4bd638fd71c1aa";
libraryHaskellDepends = [
base
cmdargs
containers
data-default-class
diagrams-core
diagrams-lib
lens
mtl
NumInstances
optparse-applicative
split
statestack
static-canvas
text
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams/";
description = "HTML5 canvas backend for diagrams drawing EDSL";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams-lib" = callPackage
({
  mkDerivation
, active
, adjunctions
, array
, base
, cereal
, colour
, containers
, data-default-class
, diagrams-core
, diagrams-solve
, directory
, distributive
, dual-tree
, exceptions
, filepath
, fingertree
, fsnotify
, hashable
, intervals
, JuicyPixels
, lens
, linear
, monoid-extras
, mtl
, optparse-applicative
, process
, profunctors
, semigroups
, stdenv
, tagged
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "diagrams-lib";
version = "1.4.0.1";
sha256 = "5140b590c83047058d4253842ef1105b2ecf71d8dd72a280123c00b030a32dc6";
revision = "1";
editedCabalFile = "12jyrrfsxz8mmjf55m7r53vinam88g1rm430ybldldfv7b6sp6dh";
libraryHaskellDepends = [
active
adjunctions
array
base
cereal
colour
containers
data-default-class
diagrams-core
diagrams-solve
directory
distributive
dual-tree
exceptions
filepath
fingertree
fsnotify
hashable
intervals
JuicyPixels
lens
linear
monoid-extras
mtl
optparse-applicative
process
profunctors
semigroups
tagged
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams";
description = "Embedded domain-specific language for declarative graphics";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams-postscript" = callPackage
({
  mkDerivation
, base
, containers
, data-default-class
, diagrams-core
, diagrams-lib
, dlist
, filepath
, hashable
, lens
, monoid-extras
, mtl
, semigroups
, split
, statestack
, stdenv
}:
mkDerivation {

pname = "diagrams-postscript";
version = "1.4";
sha256 = "fe58f0010520716f66802adb0c1f70f48e77e9c4fcea5441e5343f4c1a5f8db4";
revision = "1";
editedCabalFile = "0vmiv3b74nml0ahb7dicq0m0vz2lahzfapln9aby0jb2saa0sf58";
libraryHaskellDepends = [
base
containers
data-default-class
diagrams-core
diagrams-lib
dlist
filepath
hashable
lens
monoid-extras
mtl
semigroups
split
statestack
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams/";
description = "Postscript backend for diagrams drawing EDSL";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams-rasterific" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, data-default-class
, diagrams-core
, diagrams-lib
, file-embed
, filepath
, FontyFruity
, hashable
, JuicyPixels
, lens
, mtl
, optparse-applicative
, Rasterific
, stdenv
}:
mkDerivation {

pname = "diagrams-rasterific";
version = "1.4";
sha256 = "daea2cddf5175044f606c36388e12a14b13fe0aa2b5ce9c039c349e9c46015a4";
revision = "1";
editedCabalFile = "0y4hf13l9y4179vhdsak8zq69wyn3rgmwnz9wp0x4rj32gdjjp3j";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
containers
data-default-class
diagrams-core
diagrams-lib
file-embed
filepath
FontyFruity
hashable
JuicyPixels
lens
mtl
optparse-applicative
Rasterific
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams/";
description = "Rasterific backend for diagrams";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams-solve" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "diagrams-solve";
version = "0.1.0.1";
sha256 = "71e53a4c8c2794719d057e6bf52b996b13d52ac9d62191df134ba05062453bde";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams";
description = "Pure Haskell solver routines used by diagrams";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams-svg" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, colour
, containers
, diagrams-core
, diagrams-lib
, filepath
, hashable
, JuicyPixels
, lens
, monoid-extras
, mtl
, optparse-applicative
, semigroups
, split
, stdenv
, svg-builder
, text
}:
mkDerivation {

pname = "diagrams-svg";
version = "1.4.1";
sha256 = "ce691378025835c7e794898a5f03299341f5f1e35a20de4afd12b1f9b0667f87";
revision = "1";
editedCabalFile = "12cp0898pplap5skhq43xsxh0m2ilv5lz9zw2fhkkjmnr4pbl2dx";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
colour
containers
diagrams-core
diagrams-lib
filepath
hashable
JuicyPixels
lens
monoid-extras
mtl
optparse-applicative
semigroups
split
svg-builder
text
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams/";
description = "SVG backend for diagrams drawing EDSL";
license = stdenv.lib.licenses.bsd3;

}) {};
"dice" = callPackage
({
  mkDerivation
, base
, parsec
, random-fu
, stdenv
, transformers
}:
mkDerivation {

pname = "dice";
version = "0.1";
sha256 = "e13fe7dec8394aeddb71fb0e0ac68d8750096bfcc198a80d7bc30d94e01edde5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
parsec
random-fu
transformers
];
doHaddock = false;
doCheck = false;
description = "Simplistic D&D style dice-rolling system";
license = stdenv.lib.licenses.publicDomain;

}) {};
"diff3" = callPackage
({
  mkDerivation
, base
, Diff
, stdenv
}:
mkDerivation {

pname = "diff3";
version = "0.3.0";
sha256 = "8dc57a5f7070efe7227d3afaf5cf4d084c134e2cc0426e98421cdb720cacea25";
libraryHaskellDepends = [
base
Diff
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ocharles/diff3.git";
description = "Perform a 3-way difference of documents";
license = stdenv.lib.licenses.bsd3;

}) {};
"digest" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, zlib
}:
mkDerivation {

pname = "digest";
version = "0.0.1.2";
sha256 = "641717eb16392abf8965986a9e8dc21eebf1d97775bbb6923c7b7f8fee17fe11";
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
zlib
];
doHaddock = false;
doCheck = false;
description = "Various cryptographic hashes for bytestrings; CRC32 and Adler32 for now";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) zlib;};
"digits" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "digits";
version = "0.3.1";
sha256 = "a8499c9745dcf8a4e6c48594f555e6c6276e8d91c457dcc562a370ccadcd6a2c";
libraryHaskellDepends = [
base
QuickCheck
];
doHaddock = false;
doCheck = false;
description = "Converts integers to lists of digits and back";
license = stdenv.lib.licenses.bsd3;

}) {};
"dimensional" = callPackage
({
  mkDerivation
, base
, deepseq
, exact-pi
, numtype-dk
, stdenv
, vector
}:
mkDerivation {

pname = "dimensional";
version = "1.0.1.3";
sha256 = "3bc566a59227115325caec0ea00a35e025e5ea471a3ab531cf595e5365aa93a7";
libraryHaskellDepends = [
base
deepseq
exact-pi
numtype-dk
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bjornbm/dimensional/";
description = "Statically checked physical dimensions, using Type Families and Data Kinds";
license = stdenv.lib.licenses.bsd3;

}) {};
"direct-sqlite" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "direct-sqlite";
version = "2.3.19";
sha256 = "f47e9b99888ddd9e3f3811a575590cbc35f4e41f0897f01f0d0b9b44c2e6eb3c";
revision = "1";
editedCabalFile = "1rhbccsm1k9gr60ahd1k4ljnb4jvbmqrn2v2pha0qnjzr85394z6";
libraryHaskellDepends = [
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/IreneKnapp/direct-sqlite";
description = "Low-level binding to SQLite3. Includes UTF8 and BLOB support.";
license = stdenv.lib.licenses.bsd3;

}) {};
"directory-tree" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
}:
mkDerivation {

pname = "directory-tree";
version = "0.12.1";
sha256 = "e2084495b3a226cf54d949635c86fc14e89daa09d86cce39e3c3cf898ae6e517";
libraryHaskellDepends = [
base
directory
filepath
];
doHaddock = false;
doCheck = false;
homepage = "http://brandon.si/code/directory-tree-module-released/";
description = "A simple directory-like tree datatype, with useful IO functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"discount" = callPackage
({
  mkDerivation
, base
, bytestring
, markdown
, stdenv
, text
}:
mkDerivation {

pname = "discount";
version = "0.1.1";
sha256 = "e99cb7fdd1896dd1e525616597f936c1305a657cea1ef82cc0b3dcfe5afa34e0";
libraryHaskellDepends = [
base
bytestring
text
];
librarySystemDepends = [
markdown
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/lightquake/discount";
description = "Haskell bindings to the discount Markdown library";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) markdown;};
"disk-free-space" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "disk-free-space";
version = "0.1.0.1";
sha256 = "f17a4f9c3b41083ccbb6c11b2debdbc705f86097b7459ff0f46cc01d2692381f";
revision = "3";
editedCabalFile = "0x0wjycr3rhw9vcq51b4sz8cf7mcvx7whhywv72y25r9385lxb3i";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/redneb/disk-free-space";
description = "Retrieve information about disk space usage";
license = stdenv.lib.licenses.bsd3;

}) {};
"distance" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "distance";
version = "0.1.0.0";
sha256 = "007cfb1c56ff8e8f905dad7c1630630162ffb8520925f028cf82e93ba7cd4a58";
revision = "1";
editedCabalFile = "0iysmnl4p1fsb4zd0mmr6q7zc7w90jrwcxxm7vi38658x19r8qmq";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/distance#readme";
description = "Useful distance datatype and functions";
license = stdenv.lib.licenses.mit;

}) {};
"distributed-closure" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, constraints
, stdenv
, syb
, template-haskell
}:
mkDerivation {

pname = "distributed-closure";
version = "0.3.3.0";
sha256 = "bc675fd3b93c7e51a923969220821ea1676c639ff9fd4e742bd864e90f2e368f";
libraryHaskellDepends = [
base
binary
bytestring
constraints
syb
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tweag/distributed-closure";
description = "Serializable closures for distributed programming";
license = stdenv.lib.licenses.bsd3;

}) {};
"distributed-process" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, data-accessor
, deepseq
, distributed-static
, exceptions
, hashable
, mtl
, network-transport
, random
, rank1dynamic
, stdenv
, stm
, syb
, template-haskell
, time
, transformers
}:
mkDerivation {

pname = "distributed-process";
version = "0.6.6";
sha256 = "e881775dabea50ccd3370242c8a3acd87c9b8ce9e47f3d4c2d0a6b2ec7b3b7d0";
revision = "1";
editedCabalFile = "1rx1igg8rf0qgdnkfx2az011308winjji67bx4w8zcff9cg6cn2r";
libraryHaskellDepends = [
base
binary
bytestring
containers
data-accessor
deepseq
distributed-static
exceptions
hashable
mtl
network-transport
random
rank1dynamic
stm
syb
template-haskell
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com/";
description = "Cloud Haskell: Erlang-style concurrency in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"distributed-process-simplelocalnet" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, data-accessor
, distributed-process
, network
, network-multicast
, network-transport
, network-transport-tcp
, stdenv
, transformers
}:
mkDerivation {

pname = "distributed-process-simplelocalnet";
version = "0.2.3.3";
sha256 = "7b98498f2d6ce185ae0a855ff35e97a9ad1bd1ec7872b2d75aa0bb1f1fb24316";
revision = "1";
editedCabalFile = "0w4gz945pv45hkvc73z62xgj2zkm5w73gdhi4lr1w50i4shh7ksc";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
binary
bytestring
containers
data-accessor
distributed-process
network
network-multicast
network-transport
network-transport-tcp
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com";
description = "Simple zero-configuration backend for Cloud Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"distributed-static" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, deepseq
, rank1dynamic
, stdenv
}:
mkDerivation {

pname = "distributed-static";
version = "0.3.5.0";
sha256 = "e57b27ddd13ae033a6de5513b5bba75ff123ebb381cf6ab79fe887899f1e51f9";
libraryHaskellDepends = [
base
binary
bytestring
containers
deepseq
rank1dynamic
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com";
description = "Compositional, type-safe, polymorphic static values and closures";
license = stdenv.lib.licenses.bsd3;

}) {};
"distribution-nixpkgs" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, Cabal
, containers
, deepseq
, language-nix
, lens
, pretty
, process
, split
, stdenv
}:
mkDerivation {

pname = "distribution-nixpkgs";
version = "1.0.0.1";
sha256 = "b69bfe3fcb58d484a2d35f36d918a9596256aa11f050ac2b93bc63058ffb1b48";
libraryHaskellDepends = [
aeson
base
bytestring
Cabal
containers
deepseq
language-nix
lens
pretty
process
split
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/peti/distribution-nixpkgs#readme";
description = "Types and functions to manipulate the Nixpkgs distribution";
license = stdenv.lib.licenses.bsd3;

}) {};
"distributive" = callPackage
({
  mkDerivation
, base
, base-orphans
, Cabal
, cabal-doctest
, stdenv
, tagged
, transformers
, transformers-compat
}:
mkDerivation {

pname = "distributive";
version = "0.5.2";
sha256 = "ade2be6a5e81950ab2918d938037dde0ce09d04dc399cefbf191ce6cb5f76cd9";
revision = "5";
editedCabalFile = "1n1d4lpa6mnxqx1ky6h5jk52vrz496n8540mipaq694ssq0pqbbv";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
base-orphans
tagged
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/distributive/";
description = "Distributive functors -- Dual to Traversable";
license = stdenv.lib.licenses.bsd3;

}) {};
"diversity" = callPackage
({
  mkDerivation
, base
, containers
, data-ordlist
, fasta
, math-functions
, MonadRandom
, optparse-applicative
, parsec
, pipes
, random-shuffle
, scientific
, semigroups
, split
, stdenv
}:
mkDerivation {

pname = "diversity";
version = "0.8.0.2";
sha256 = "f8bea710958aff9169f150efc112ec871230eccf464315b956dccdd8460c7324";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
data-ordlist
fasta
math-functions
MonadRandom
parsec
random-shuffle
scientific
split
];
executableHaskellDepends = [
base
containers
fasta
optparse-applicative
pipes
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/GregorySchwartz/diversity";
description = "Quantify the diversity of a population";
license = stdenv.lib.licenses.gpl3;

}) {};
"djinn-ghc" = callPackage
({
  mkDerivation
, async
, base
, containers
, djinn-lib
, ghc
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "djinn-ghc";
version = "0.0.2.3";
sha256 = "cb956aed69bc5c342b45ef1b1142b6555fd2865dde1a80ac6ab3ef86aca314a4";
libraryHaskellDepends = [
async
base
containers
djinn-lib
ghc
mtl
transformers
];
doHaddock = false;
doCheck = false;
description = "Generate Haskell code from a type. Bridge from Djinn to GHC API.";
license = stdenv.lib.licenses.bsd3;

}) {};
"djinn-lib" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, pretty
, stdenv
}:
mkDerivation {

pname = "djinn-lib";
version = "0.0.1.2";
sha256 = "c0fe10b7aa5cb39f828e933925fc5bbf86c290bb7661021e4d9250ae8ed01011";
libraryHaskellDepends = [
base
containers
mtl
pretty
];
doHaddock = false;
doCheck = false;
homepage = "http://www.augustsson.net/Darcs/Djinn/";
description = "Generate Haskell code from a type. Library extracted from djinn package.";
license = stdenv.lib.licenses.bsd3;

}) {};
"dlist" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "dlist";
version = "0.8.0.2";
sha256 = "77397ecfb9a7cbfac15226cbe09ec156a3deb6e21c7af948bc8ab459e88641b1";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/spl/dlist";
description = "Difference lists";
license = stdenv.lib.licenses.bsd3;

}) {};
"dlist-instances" = callPackage
({
  mkDerivation
, base
, dlist
, semigroups
, stdenv
}:
mkDerivation {

pname = "dlist-instances";
version = "0.1.1.1";
sha256 = "d14a10c06f52fb412b2c1066d729f5534aa43204221e7ba7d81d935c44ce4f5b";
libraryHaskellDepends = [
base
dlist
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/gregwebs/dlist-instances";
description = "Difference lists instances";
license = stdenv.lib.licenses.bsd3;

}) {};
"dmenu" = callPackage
({
  mkDerivation
, base
, containers
, directory
, lens
, mtl
, process
, stdenv
, transformers
}:
mkDerivation {

pname = "dmenu";
version = "0.3.1.1";
sha256 = "21447fcdd14d6355c5c6dd9b2d79f49f38bb24a81874a7c38dc05cdd5abbe634";
libraryHaskellDepends = [
base
containers
directory
lens
mtl
process
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/m0rphism/haskell-dmenu";
description = "Complete bindings to the dmenu and dmenu2 command line tools";
license = stdenv.lib.licenses.bsd3;

}) {};
"dmenu-pkill" = callPackage
({
  mkDerivation
, base
, containers
, directory
, dmenu
, lens
, mtl
, process
, stdenv
, transformers
}:
mkDerivation {

pname = "dmenu-pkill";
version = "0.1.0.1";
sha256 = "e36f1317fa67dd56c2daf5193a91f33c26ffac481c90d1aadbdceecc5d9ebb78";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
containers
directory
dmenu
lens
mtl
process
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/m0rphism/haskell-dmenu-pkill";
description = "dmenu script for killing applications. Sortable by process id or CPU/MEM usage.";
license = stdenv.lib.licenses.bsd3;

}) {};
"dmenu-pmount" = callPackage
({
  mkDerivation
, base
, containers
, directory
, dmenu
, lens
, mtl
, process
, stdenv
, transformers
}:
mkDerivation {

pname = "dmenu-pmount";
version = "0.1.0.1";
sha256 = "c5cbdbea006bc4f62256b907c6845cbdabe6425116949f9af398770ba57f6643";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
containers
directory
dmenu
lens
mtl
process
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/m0rphism/haskell-dmenu-pmount";
description = "Mounting and unmounting linux devices as user with dmenu and pmount";
license = stdenv.lib.licenses.bsd3;

}) {};
"dmenu-search" = callPackage
({
  mkDerivation
, base
, containers
, directory
, dmenu
, lens
, mtl
, process
, stdenv
, transformers
}:
mkDerivation {

pname = "dmenu-search";
version = "0.1.0.1";
sha256 = "8ab29fe89764bab3ed4f0d4f8d99145c9c43945ea37db4d04b313c74e4b33ec9";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
containers
directory
dmenu
lens
mtl
process
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/m0rphism/haskell-dmenu-search";
description = "dmenu script for searching the web with customizable search engines";
license = stdenv.lib.licenses.bsd3;

}) {};
"dns" = callPackage
({
  mkDerivation
, attoparsec
, base
, binary
, bytestring
, bytestring-builder
, conduit
, conduit-extra
, containers
, iproute
, mtl
, network
, random
, resourcet
, safe
, stdenv
}:
mkDerivation {

pname = "dns";
version = "2.0.10";
sha256 = "ba03bc8fe25b58fd066588569eb5707a245cb098181e2d5cca72c239849aa6a3";
libraryHaskellDepends = [
attoparsec
base
binary
bytestring
bytestring-builder
conduit
conduit-extra
containers
iproute
mtl
network
random
resourcet
safe
];
doHaddock = false;
doCheck = false;
testTarget = "spec";
description = "DNS library in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"do-list" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "do-list";
version = "1.0.1";
sha256 = "b377193461b0ad7a81f9e66bcf10f8838b6f1e39f4a5de3b2e2f45c749c5b694";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tserduke/do-list#readme";
description = "Do notation for free";
license = stdenv.lib.licenses.bsd3;

}) {};
"dockerfile" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "dockerfile";
version = "0.1.0.1";
sha256 = "294ac0b6c0546da15bf5453d6006979aeb6f6b36f0566be75767f5021de00025";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A simple DSL for describing and generating Dockerfile containers in Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"docopt" = callPackage
({
  mkDerivation
, base
, containers
, parsec
, stdenv
, template-haskell
, th-lift
}:
mkDerivation {

pname = "docopt";
version = "0.7.0.5";
sha256 = "15790808a4896bbf0748c1c0f3ab63c07aea4621d95b93a39886813f829d05ee";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
containers
parsec
template-haskell
th-lift
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/docopt/docopt.hs";
description = "A command-line interface parser that will make you smile";
license = stdenv.lib.licenses.mit;

}) {};
"doctemplates" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-html
, blaze-markup
, bytestring
, containers
, parsec
, scientific
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "doctemplates";
version = "0.1.0.2";
sha256 = "b752f52350daaa9bcf261a1f1af5852f75572093c3d0cdeb4822282fb3a18a6b";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
blaze-html
blaze-markup
bytestring
containers
parsec
scientific
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jgm/doctemplates#readme";
description = "Pandoc-style document templates";
license = stdenv.lib.licenses.bsd3;

}) {};
"doctest" = callPackage
({
  mkDerivation
, base
, base-compat
, code-page
, deepseq
, directory
, filepath
, ghc
, ghc-paths
, process
, stdenv
, syb
, transformers
}:
mkDerivation {

pname = "doctest";
version = "0.11.1";
sha256 = "5b6ab30f0bf4061707b7bb33445da4c8a00df3e8b3ed04cf7c86f18a6007ad2a";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
base-compat
code-page
deepseq
directory
filepath
ghc
ghc-paths
process
syb
transformers
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sol/doctest#readme";
description = "Test interactive Haskell examples";
license = stdenv.lib.licenses.mit;

}) {};
"doctest-discover" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, directory
, doctest
, filepath
, stdenv
}:
mkDerivation {

pname = "doctest-discover";
version = "0.1.0.7";
sha256 = "ac6a65da517db7f264e65607a50b080b54f008ba592746ac11b7bb40107fbd70";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
directory
doctest
filepath
];
executableHaskellDepends = [
aeson
base
bytestring
directory
doctest
filepath
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/karun012/doctest-discover";
description = "Easy way to run doctests via cabal";
license = stdenv.lib.licenses.publicDomain;

}) {};
"dotenv" = callPackage
({
  mkDerivation
, base
, base-compat
, exceptions
, megaparsec
, optparse-applicative
, process
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "dotenv";
version = "0.3.1.0";
sha256 = "7f4e7c1717e486fd71a6d5507494d314a541e1c308787c7b49bfdbd77c868476";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
base-compat
exceptions
megaparsec
text
transformers
];
executableHaskellDepends = [
base
base-compat
megaparsec
optparse-applicative
process
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/stackbuilders/dotenv-hs";
description = "Loads environment variables from dotenv files";
license = stdenv.lib.licenses.mit;

}) {};
"dotnet-timespan" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "dotnet-timespan";
version = "0.0.1.0";
sha256 = "d8ca8dffbc916ff5139d6f0df4a22c947ab5f996c376f1ab8c2e120789209ac3";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/YoEight/dotnet-timespan";
description = ".NET TimeSpan";
license = stdenv.lib.licenses.bsd3;

}) {};
"double-conversion" = callPackage
({
  mkDerivation
, base
, bytestring
, ghc-prim
, stdenv
, text
}:
mkDerivation {

pname = "double-conversion";
version = "2.0.2.0";
sha256 = "44cde172395401169e844d6791b6eb0ef2c2e55a08de8dda96551cfe029ba26b";
libraryHaskellDepends = [
base
bytestring
ghc-prim
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/double-conversion";
description = "Fast conversion between double precision floating point and text";
license = stdenv.lib.licenses.bsd3;

}) {};
"download" = callPackage
({
  mkDerivation
, base
, bytestring
, feed
, stdenv
, tagsoup
, xml
}:
mkDerivation {

pname = "download";
version = "0.3.2.5";
sha256 = "9ae6d92ae4fe7ec4ff7281896254a7794e4caf85b6743280afd2074865dd99c0";
libraryHaskellDepends = [
base
bytestring
feed
tagsoup
xml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/psibi/download";
description = "High-level file download based on URLs";
license = stdenv.lib.licenses.bsd3;

}) {};
"dpor" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, random
, semigroups
, stdenv
}:
mkDerivation {

pname = "dpor";
version = "0.2.0.0";
sha256 = "6efbcc42b845541148886ee92656bbfe6b90b1a0483180b9165d4b0b691ac8e2";
libraryHaskellDepends = [
base
containers
deepseq
random
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/dejafu";
description = "A generic implementation of dynamic partial-order reduction (DPOR) for testing arbitrary models of concurrency";
license = stdenv.lib.licenses.mit;

}) {};
"drawille" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "drawille";
version = "0.1.2.0";
sha256 = "b8188ee87a06c168974c9655188450eb86c331c556decb31cf084efa846237df";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yamadapc/haskell-drawille#readme";
description = "A port of asciimoo's drawille to haskell";
license = stdenv.lib.licenses.gpl3;

}) {};
"drifter" = callPackage
({
  mkDerivation
, base
, containers
, fgl
, stdenv
, text
}:
mkDerivation {

pname = "drifter";
version = "0.2.2";
sha256 = "e47e0ceff7ff4e33c681719c6a1af3052f0c123c847dae2cb1fb73e08d3311e1";
libraryHaskellDepends = [
base
containers
fgl
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AndrewRademacher/drifter";
description = "Simple schema management for arbitrary databases";
license = stdenv.lib.licenses.mit;

}) {};
"drifter-postgresql" = callPackage
({
  mkDerivation
, base
, containers
, drifter
, either
, mtl
, postgresql-simple
, stdenv
, time
}:
mkDerivation {

pname = "drifter-postgresql";
version = "0.1.0";
sha256 = "10df8309986c23f947949a28f9fb16ec6632f1d509ab0fe010a74f9068b90325";
revision = "1";
editedCabalFile = "1dmww54pfd6xk4zrc60yl9kfcrd5mmms8z7xskamvh8zi1whfgcz";
libraryHaskellDepends = [
base
containers
drifter
either
mtl
postgresql-simple
time
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/michaelxavier/drifter-postgresql";
description = "PostgreSQL support for the drifter schema migration tool";
license = stdenv.lib.licenses.mit;

}) {};
"dual-tree" = callPackage
({
  mkDerivation
, base
, monoid-extras
, newtype
, semigroups
, stdenv
}:
mkDerivation {

pname = "dual-tree";
version = "0.2.0.9";
sha256 = "5e7d0abb471962df00c5adc53fa9a48f70c9695d5fdf225deecfa040116576a4";
libraryHaskellDepends = [
base
monoid-extras
newtype
semigroups
];
doHaddock = false;
doCheck = false;
description = "Rose trees with cached and accumulating monoidal annotations";
license = stdenv.lib.licenses.bsd3;

}) {};
"dynamic-state" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, hashable
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "dynamic-state";
version = "0.2.2.0";
sha256 = "48834fa08130e614764b8d675d0c98866c53425a4c50a0333d7ce21a7c1ac7cf";
libraryHaskellDepends = [
base
binary
bytestring
hashable
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Optionally serializable dynamic state keyed by type";
license = stdenv.lib.licenses.gpl2;

}) {};
"dyre" = callPackage
({
  mkDerivation
, base
, binary
, directory
, executable-path
, filepath
, ghc-paths
, io-storage
, process
, stdenv
, time
, unix
, xdg-basedir
}:
mkDerivation {

pname = "dyre";
version = "0.8.12";
sha256 = "e224305cc6b38b4143f49489931c2ea94b326915206d34eddf5b2ee2b5a71682";
libraryHaskellDepends = [
base
binary
directory
executable-path
filepath
ghc-paths
io-storage
process
time
unix
xdg-basedir
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/willdonnelly/dyre";
description = "Dynamic reconfiguration in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"easy-file" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
, time
, unix
}:
mkDerivation {

pname = "easy-file";
version = "0.2.1";
sha256 = "ff86e1b29284499bea5f1d0ff539b3ed64fa6d1a06c2243ca61f93be0202e56c";
libraryHaskellDepends = [
base
directory
filepath
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/kazu-yamamoto/easy-file";
description = "Cross-platform File handling";
license = stdenv.lib.licenses.bsd3;

}) {};
"echo" = callPackage
({
  mkDerivation
, base
, process
, stdenv
}:
mkDerivation {

pname = "echo";
version = "0.1.3";
sha256 = "704f07310f8272d170f8ab7fb2a2c13f15d8501ef8310801e36964c8eff485ef";
revision = "1";
editedCabalFile = "0br8wfiybcw5hand4imiw0i5hacdmrax1dv8g95f35gazffbx42l";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RyanGlScott/echo";
description = "A cross-platform, cross-console way to handle echoing terminal input";
license = stdenv.lib.licenses.bsd3;

}) {};
"ed25519" = callPackage
({
  mkDerivation
, base
, bytestring
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "ed25519";
version = "0.0.5.0";
sha256 = "d8a5958ebfa9309790efade64275dc5c441b568645c45ceed1b0c6ff36d6156d";
revision = "2";
editedCabalFile = "1cq6h3jqkb1kvd9fjfhsllg5gq78sdiyf2gy9862xhlbv6wil19f";
libraryHaskellDepends = [
base
bytestring
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "http://thoughtpolice.github.com/hs-ed25519";
description = "Ed25519 cryptographic signatures";
license = stdenv.lib.licenses.mit;

}) {};
"ede" = callPackage
({
  mkDerivation
, aeson
, ansi-wl-pprint
, base
, bifunctors
, bytestring
, comonad
, directory
, double-conversion
, filepath
, free
, lens
, mtl
, parsers
, scientific
, semigroups
, stdenv
, text
, text-format
, text-manipulate
, trifecta
, unordered-containers
, vector
}:
mkDerivation {

pname = "ede";
version = "0.2.8.7";
sha256 = "8b6be46bb0ef2b6503124fb1ae63c26e377013686fbb19ddd0ffeec3d3365e0a";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
ansi-wl-pprint
base
bifunctors
bytestring
comonad
directory
double-conversion
filepath
free
lens
mtl
parsers
scientific
semigroups
text
text-format
text-manipulate
trifecta
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/brendanhay/ede";
description = "Templating language with similar syntax and features to Liquid or Jinja2";
license = "unknown";

}) {};
"edit-distance" = callPackage
({
  mkDerivation
, array
, base
, containers
, random
, stdenv
}:
mkDerivation {

pname = "edit-distance";
version = "0.2.2.1";
sha256 = "3e8885ee2f56ad4da940f043ae8f981ee2fe336b5e8e4ba3f7436cff4f526c4a";
revision = "1";
editedCabalFile = "1vjn4ryzdilz7l1ad7czh11nw48h5mj8if7ij3q0mmc3sffa8csd";
libraryHaskellDepends = [
array
base
containers
random
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/phadej/edit-distance";
description = "Levenshtein and restricted Damerau-Levenshtein edit distances";
license = stdenv.lib.licenses.bsd3;

}) {};
"editor-open" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-extra
, directory
, process
, resourcet
, stdenv
, temporary
, transformers
, unix
}:
mkDerivation {

pname = "editor-open";
version = "0.6.0.0";
sha256 = "2fc5d19bce2d477935202a5a4522671529d0352a0ee28be1307f8ab391065265";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
conduit
conduit-extra
directory
process
resourcet
temporary
transformers
unix
];
executableHaskellDepends = [
base
bytestring
conduit
conduit-extra
resourcet
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pharpend/editor-open";
description = "Open the user's $VISUAL or $EDITOR for text input";
license = stdenv.lib.licenses.asl20;

}) {};
"effect-handlers" = callPackage
({
  mkDerivation
, base
, free
, kan-extensions
, mtl
, stdenv
}:
mkDerivation {

pname = "effect-handlers";
version = "0.1.0.8";
sha256 = "2439a77b6ec8db236fc2809cb91219305a7071c72bfd68de795e01b3df9aa80c";
libraryHaskellDepends = [
base
free
kan-extensions
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/edofic/effect-handlers";
description = "A library for writing extensible algebraic effects and handlers. Similar to extensible-effects but with deep handlers.";
license = stdenv.lib.licenses.mit;

}) {};
"either" = callPackage
({
  mkDerivation
, base
, bifunctors
, exceptions
, free
, mmorph
, monad-control
, MonadRandom
, mtl
, profunctors
, semigroupoids
, semigroups
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "either";
version = "4.4.1.1";
sha256 = "b087cb0fb63fec2fbdcac05fef0d03751daef5deb86cda3c732b9a6a31e634d3";
revision = "2";
editedCabalFile = "1n7792mcrvfh31qrbj8mpnx372s03kz83mypj7l4fm5h6zi4a3hs";
libraryHaskellDepends = [
base
bifunctors
exceptions
free
mmorph
monad-control
MonadRandom
mtl
profunctors
semigroupoids
semigroups
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/either/";
description = "An either monad transformer";
license = stdenv.lib.licenses.bsd3;

}) {};
"either-unwrap" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "either-unwrap";
version = "1.1";
sha256 = "ccabd6f87118abc8dcba481b316c76b8195ac9e8a8f3ddb478de5eb64e2d2e3c";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/gcross/either-unwrap";
description = "Functions for probing and unwrapping values inside of Either";
license = stdenv.lib.licenses.bsd3;

}) {};
"ekg" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, ekg-core
, ekg-json
, filepath
, network
, snap-core
, snap-server
, stdenv
, text
, time
, transformers
, unordered-containers
}:
mkDerivation {

pname = "ekg";
version = "0.4.0.12";
sha256 = "f30e8c1e76410c3c76ec8cf59f0e1a381a83d302c02b5a95049238aa50eb9844";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
bytestring
ekg-core
ekg-json
filepath
network
snap-core
snap-server
text
time
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tibbe/ekg";
description = "Remote monitoring of processes";
license = stdenv.lib.licenses.bsd3;

}) {};
"ekg-core" = callPackage
({
  mkDerivation
, base
, containers
, ghc-prim
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "ekg-core";
version = "0.1.1.1";
sha256 = "54de3df4b1b027aa2f3760b64f6a8c8134f3275b6d95bf1cf1fc0e74282939d6";
libraryHaskellDepends = [
base
containers
ghc-prim
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tibbe/ekg-core";
description = "Tracking of system metrics";
license = stdenv.lib.licenses.bsd3;

}) {};
"ekg-json" = callPackage
({
  mkDerivation
, aeson
, base
, ekg-core
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "ekg-json";
version = "0.1.0.4";
sha256 = "6afc7c146e4891824bb672af94ef3cade56ebf17cc51a3ca9ffdd2ce4345e479";
libraryHaskellDepends = [
aeson
base
ekg-core
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tibbe/ekg-json";
description = "JSON encoding of ekg metrics";
license = stdenv.lib.licenses.bsd3;

}) {};
"ekg-statsd" = callPackage
({
  mkDerivation
, base
, bytestring
, ekg-core
, network
, stdenv
, text
, time
, unordered-containers
}:
mkDerivation {

pname = "ekg-statsd";
version = "0.2.1.0";
sha256 = "d042792757f603a8b6d176ed04802b3c4f27079e90bc1ba9b78ea83a666d7711";
libraryHaskellDepends = [
base
bytestring
ekg-core
network
text
time
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tibbe/ekg-statsd";
description = "Push metrics to statsd";
license = stdenv.lib.licenses.bsd3;

}) {};
"elerea" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "elerea";
version = "2.9.0";
sha256 = "901221660b32597803b20fe2e78bb6f1f60f064d04671fb3f0baa05c87446681";
libraryHaskellDepends = [
base
containers
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
description = "A minimalistic FRP library";
license = stdenv.lib.licenses.bsd3;

}) {};
"elm-bridge" = callPackage
({
  mkDerivation
, aeson
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "elm-bridge";
version = "0.4.0";
sha256 = "45721d5ee406b21c9b9cab180a7a0ee618d8492aecd131080345d772e6b51fd9";
libraryHaskellDepends = [
aeson
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/elm-bridge";
description = "Derive Elm types from Haskell types";
license = stdenv.lib.licenses.bsd3;

}) {};
"elm-core-sources" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, file-embed
, stdenv
, template-haskell
}:
mkDerivation {

pname = "elm-core-sources";
version = "1.0.0";
sha256 = "a403505d50cd6ff0d21243db55c6decc6dde14b88a6a393e2b6243f09f6620fb";
libraryHaskellDepends = [
base
bytestring
containers
file-embed
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/JoeyEremondi/elm-build-lib";
description = "Source files for the Elm runtime and standard libraries";
license = stdenv.lib.licenses.bsd3;

}) {};
"elm-export" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, formatting
, mtl
, stdenv
, text
, time
, wl-pprint-text
}:
mkDerivation {

pname = "elm-export";
version = "0.6.0.1";
sha256 = "bf9862015918c72b54b421efcd9d858969dcd94ef0a3d0cb92d9bc0c4363f9d5";
libraryHaskellDepends = [
base
bytestring
containers
directory
formatting
mtl
text
time
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/krisajenkins/elm-export";
description = "A library to generate Elm types from Haskell source";
license = "unknown";

}) {};
"elm-export-persistent" = callPackage
({
  mkDerivation
, aeson
, base
, elm-export
, persistent
, scientific
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "elm-export-persistent";
version = "0.1.2";
sha256 = "bc45ef54b7538b0c8223a1b966cbd10a69dac3879897d2a75b148dcdc7d8de9d";
libraryHaskellDepends = [
aeson
base
elm-export
persistent
scientific
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jb55/elm-export-persistent";
description = "elm-export persistent entities";
license = stdenv.lib.licenses.mit;

}) {};
"email-validate" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "email-validate";
version = "2.2.0";
sha256 = "aa7fd3f02c015bbc4ae67c2f3586f16c757d54a8cf09f7a04e70045828d9cb69";
libraryHaskellDepends = [
attoparsec
base
bytestring
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "http://porg.es/blog/email-address-validation-simpler-faster-more-correct";
description = "Validating an email address string against RFC 5322";
license = stdenv.lib.licenses.bsd3;

}) {};
"emailaddress" = callPackage
({
  mkDerivation
, aeson
, base
, bifunctors
, bytestring
, email-validate
, http-api-data
, opaleye
, path-pieces
, persistent
, postgresql-simple
, product-profunctors
, profunctors
, stdenv
, text
}:
mkDerivation {

pname = "emailaddress";
version = "0.2.0.0";
sha256 = "390b0aaf8fa2d3a694b812ad83fc0f26ed5c7172cc318a7d46c1fc3456d9c15c";
libraryHaskellDepends = [
aeson
base
bifunctors
bytestring
email-validate
http-api-data
opaleye
path-pieces
persistent
postgresql-simple
product-profunctors
profunctors
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/emailaddress#readme";
description = "Wrapper around email-validate library adding instances for common type classes";
license = stdenv.lib.licenses.bsd3;

}) {};
"enclosed-exceptions" = callPackage
({
  mkDerivation
, base
, deepseq
, lifted-base
, monad-control
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "enclosed-exceptions";
version = "1.0.2";
sha256 = "7b9beab82d219c0dd879dfdef70fb74a4a7595b4dbd0baf7adb12cdbbe8189f1";
revision = "1";
editedCabalFile = "0rjm8g2bm9a7qzklkp0rh5az4qh8nsl0hl119gjik671knygkdj0";
libraryHaskellDepends = [
base
deepseq
lifted-base
monad-control
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jcristovao/enclosed-exceptions";
description = "Catching all exceptions from within an enclosed computation";
license = stdenv.lib.licenses.mit;

}) {};
"encoding-io" = callPackage
({
  mkDerivation
, base
, chunked-data
, deepseq
, stdenv
, transformers-base
}:
mkDerivation {

pname = "encoding-io";
version = "0.0.1";
sha256 = "7c567ca9cca8351bfec106ebb9aa79266d48ba7f46cf40d1cac05636985826fb";
libraryHaskellDepends = [
base
chunked-data
deepseq
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/TerrorJack/encoding-io#readme";
description = "Encoding-aware file I/O";
license = stdenv.lib.licenses.bsd3;

}) {};
"entropy" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, directory
, filepath
, process
, stdenv
, unix
}:
mkDerivation {

pname = "entropy";
version = "0.3.7";
sha256 = "1ff020eba2edbb93c4b23297470f8c11d69d0ff1e1642d17cbab9d54a24befef";
revision = "1";
editedCabalFile = "01lyh4cbpqlcj1y8mnkw6vk4vid5rzqg1vcf9kwxwd88zj86cgjg";
setupHaskellDepends = [
base
Cabal
directory
filepath
process
];
libraryHaskellDepends = [
base
bytestring
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/TomMD/entropy";
description = "A platform independent entropy source";
license = stdenv.lib.licenses.bsd3;

}) {};
"enummapset-th" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, stdenv
, template-haskell
}:
mkDerivation {

pname = "enummapset-th";
version = "0.6.1.1";
sha256 = "7cc2028dfb41b1450be788f4b600f602965c3f7f70428c586a7ba3c97556d52a";
libraryHaskellDepends = [
base
containers
deepseq
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tsurucapital/enummapset-th";
description = "TH-generated EnumSet/EnumMap wrappers around IntSet/IntMap";
license = stdenv.lib.licenses.bsd3;

}) {};
"envelope" = callPackage
({
  mkDerivation
, aeson
, base
, http-api-data
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "envelope";
version = "0.2.1.0";
sha256 = "af8a043b4a1890e927ecc23827c2018d816071cd2cc5344543287897457276fe";
libraryHaskellDepends = [
aeson
base
http-api-data
mtl
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/envelope#readme";
description = "Defines generic 'Envelope' type to wrap reponses from a JSON API";
license = stdenv.lib.licenses.bsd3;

}) {};
"envparse" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "envparse";
version = "0.4";
sha256 = "bf9dd7cd0ed3c38f63ea45cbb496b58ad3d83022b5eab5a66bfeebec5982803d";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://supki.github.io/envparse";
description = "Parse environment variables";
license = stdenv.lib.licenses.bsd3;

}) {};
"envy" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, mtl
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "envy";
version = "1.3.0.1";
sha256 = "ac630e03e9f4c8c99c39e622b9638c3bdc3b71300ef92597d60acac7ace8e85c";
libraryHaskellDepends = [
base
bytestring
containers
mtl
text
time
transformers
];
doHaddock = false;
doCheck = false;
description = "An environmentally friendly way to deal with environment variables";
license = stdenv.lib.licenses.bsd3;

}) {};
"epub-metadata" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, filepath
, hxt
, mtl
, regex-compat-tdfa
, stdenv
, utf8-string
, zip-archive
}:
mkDerivation {

pname = "epub-metadata";
version = "4.5";
sha256 = "19ae3914df5936908c8d7264ae5f1e310262fa06bd7e4390838892840e4c0349";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
directory
filepath
hxt
mtl
regex-compat-tdfa
utf8-string
zip-archive
];
executableHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/dino/epub-metadata";
description = "Library for parsing epub document metadata";
license = stdenv.lib.licenses.bsd3;

}) {};
"eq" = callPackage
({
  mkDerivation
, base
, semigroupoids
, stdenv
}:
mkDerivation {

pname = "eq";
version = "4.0.4";
sha256 = "042f4c1e9eeb25a52c20623fc482cc00e3235198089c5b60bc36fa47ebacbde5";
libraryHaskellDepends = [
base
semigroupoids
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/eq/";
description = "Leibnizian equality";
license = stdenv.lib.licenses.bsd3;

}) {};
"equivalence" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
, STMonadTrans
, transformers
, transformers-compat
}:
mkDerivation {

pname = "equivalence";
version = "0.3.2";
sha256 = "7da21ed5f980caa18c995190dd527c69822050390e4237c92f1acbed7d5b0529";
revision = "1";
editedCabalFile = "010n0gpk2rpninggdnnx0j7fys6hzn80s789b16iw0a55h4z0gn8";
libraryHaskellDepends = [
base
containers
mtl
STMonadTrans
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pa-ba/equivalence";
description = "Maintaining an equivalence relation implemented as union-find using STT";
license = stdenv.lib.licenses.bsd3;

}) {};
"erf" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "erf";
version = "2.0.0.0";
sha256 = "24f0b79c7e1d25cb2cd44c2258d7a464bf6db8079775b50b60b54a254616b337";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "The error function, erf, and related functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"errors" = callPackage
({
  mkDerivation
, base
, safe
, stdenv
, transformers
, transformers-compat
, unexceptionalio
}:
mkDerivation {

pname = "errors";
version = "2.1.3";
sha256 = "201a1d9d2fba16dff734eb79e07f138718ed62f5a0a846cf0cee743828844df1";
libraryHaskellDepends = [
base
safe
transformers
transformers-compat
unexceptionalio
];
doHaddock = false;
doCheck = false;
description = "Simplified error-handling";
license = stdenv.lib.licenses.bsd3;

}) {};
"ersatz" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, data-default
, lens
, mtl
, parsec
, process
, stdenv
, temporary
, transformers
, unordered-containers
}:
mkDerivation {

pname = "ersatz";
version = "0.3.1";
sha256 = "e9014d577c8bf077fdce57d60cc18c254635b9897513f1c7209c57e8687aa8c0";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
array
base
bytestring
containers
data-default
lens
mtl
process
temporary
transformers
unordered-containers
];
executableHaskellDepends = [
array
base
containers
lens
mtl
parsec
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/ersatz";
description = "A monad for expressing SAT or QSAT problems using observable sharing";
license = stdenv.lib.licenses.bsd3;

}) {};
"esqueleto" = callPackage
({
  mkDerivation
, base
, blaze-html
, bytestring
, conduit
, monad-logger
, persistent
, resourcet
, stdenv
, tagged
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "esqueleto";
version = "2.5.1";
sha256 = "76a75c84c4b4e0d41b28d8f8e73cc746282f5e7e50cfb11fcc252286950c87d9";
revision = "1";
editedCabalFile = "1f0h4x07j6gz1d3fizys5lh9r6b4nmfav23x39b6jzbywm1vq4nn";
libraryHaskellDepends = [
base
blaze-html
bytestring
conduit
monad-logger
persistent
resourcet
tagged
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bitemyapp/esqueleto";
description = "Type-safe EDSL for SQL queries on persistent backends";
license = stdenv.lib.licenses.bsd3;

}) {};
"etcd" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, http-conduit
, stdenv
, text
, time
}:
mkDerivation {

pname = "etcd";
version = "1.0.5";
sha256 = "916fc01e40cc5488f54fea8c623b31087b364432a78acffd95825f5bd1311f2f";
revision = "1";
editedCabalFile = "1ylq3wsl4ghjv1ib2zzfny7wdhwhwfnczl64wy18xipd5a6vrnsw";
libraryHaskellDepends = [
aeson
base
bytestring
http-conduit
text
time
];
doHaddock = false;
doCheck = false;
description = "Client for etcd, a highly-available key value store";
license = "unknown";

}) {};
"ether" = callPackage
({
  mkDerivation
, base
, exceptions
, mmorph
, monad-control
, mtl
, stdenv
, template-haskell
, transformers
, transformers-base
, transformers-lift
}:
mkDerivation {

pname = "ether";
version = "0.4.0.2";
sha256 = "8b9dce4d444613dc46df988fa3a437297503e63ff29fd28113b35b98a8dcd953";
revision = "1";
editedCabalFile = "0wqk9l2vkyfkpx3iad10qh1y725vnkn46gd6nrrq6xyrf5ky8xm8";
libraryHaskellDepends = [
base
exceptions
mmorph
monad-control
mtl
template-haskell
transformers
transformers-base
transformers-lift
];
doHaddock = false;
doCheck = false;
homepage = "https://int-index.github.io/ether/";
description = "Monad transformers and classes";
license = stdenv.lib.licenses.bsd3;

}) {};
"euphoria" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, elerea
, enummapset-th
, hashable
, HUnit
, stdenv
, transformers
, unordered-containers
}:
mkDerivation {

pname = "euphoria";
version = "0.8.0.0";
sha256 = "30703f7bc6063fbce127b0b1631ca4236ec59adfc2d7de436c7c5daaeafe118a";
libraryHaskellDepends = [
base
containers
deepseq
elerea
enummapset-th
hashable
HUnit
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/tsurucapital/euphoria";
description = "Dynamic network FRP with events and continuous values";
license = stdenv.lib.licenses.publicDomain;

}) {};
"event" = callPackage
({
  mkDerivation
, base
, containers
, semigroups
, stdenv
, transformers
}:
mkDerivation {

pname = "event";
version = "0.1.4";
sha256 = "6791d1402b4d77a11407ab592f65cb61ee60c5a80b99751c5d775afcc9d1824a";
libraryHaskellDepends = [
base
containers
semigroups
transformers
];
doHaddock = false;
doCheck = false;
description = "Monoidal, monadic and first-class events";
license = stdenv.lib.licenses.bsd3;

}) {};
"eventstore" = callPackage
({
  mkDerivation
, aeson
, array
, base
, cereal
, classy-prelude
, connection
, containers
, dns
, dotnet-timespan
, http-client
, mtl
, protobuf
, random
, semigroups
, stdenv
, stm
, time
, unordered-containers
, uuid
}:
mkDerivation {

pname = "eventstore";
version = "0.14.0.1";
sha256 = "0daf1e7c51405053cbcb35ab53f8b1eaaa4e937b985c49762e9e6814f9b380d0";
libraryHaskellDepends = [
aeson
array
base
cereal
classy-prelude
connection
containers
dns
dotnet-timespan
http-client
mtl
protobuf
random
semigroups
stm
time
unordered-containers
uuid
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/YoEight/eventstore";
description = "EventStore TCP Client";
license = stdenv.lib.licenses.bsd3;
platforms = [
"x86_64-darwin"
"x86_64-linux"
];

}) {};
"exact-combinatorics" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "exact-combinatorics";
version = "0.2.0.8";
sha256 = "32a822b109ab6e9f62fe23d76bd5af593c20ba0e589005d3985ccda00dd4475e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "Efficient exact computation of combinatoric functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"exact-pi" = callPackage
({
  mkDerivation
, base
, numtype-dk
, stdenv
}:
mkDerivation {

pname = "exact-pi";
version = "0.4.1.2";
sha256 = "b2bbe6725fba3bd2f3a9506e2ff4f194fa6cdb918d59debabd5e1fc452fc45e3";
libraryHaskellDepends = [
base
numtype-dk
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dmcclean/exact-pi/";
description = "Exact rational multiples of pi (and integer powers of pi)";
license = stdenv.lib.licenses.mit;

}) {};
"exception-mtl" = callPackage
({
  mkDerivation
, base
, exception-transformers
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "exception-mtl";
version = "0.4.0.1";
sha256 = "ec13bcbae6cdde218a7118a2bd3058493af09a330b86e28469a278c9b2cea134";
libraryHaskellDepends = [
base
exception-transformers
mtl
transformers
];
doHaddock = false;
doCheck = false;
description = "Exception monad transformer instances for mtl classes";
license = stdenv.lib.licenses.bsd3;

}) {};
"exception-transformers" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
, transformers
, transformers-compat
}:
mkDerivation {

pname = "exception-transformers";
version = "0.4.0.5";
sha256 = "564caaaac6c2d1759a13d2c2c8a1d7a4b0109035558c4641fa7a8a378961088b";
libraryHaskellDepends = [
base
stm
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
description = "Type classes and monads for unchecked extensible exceptions";
license = stdenv.lib.licenses.bsd3;

}) {};
"exceptional" = callPackage
({
  mkDerivation
, base
, exceptions
, stdenv
}:
mkDerivation {

pname = "exceptional";
version = "0.3.0.0";
sha256 = "da866ed28ea14d245cc065271f4ddd6da0a91b83e8d83daddcd1ef0623e99f06";
libraryHaskellDepends = [
base
exceptions
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/";
description = "Essentially the Maybe type with error messages";
license = stdenv.lib.licenses.bsd2;

}) {};
"exceptions" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, stm
, template-haskell
, transformers
, transformers-compat
}:
mkDerivation {

pname = "exceptions";
version = "0.8.3";
sha256 = "4d6ad97e8e3d5dc6ce9ae68a469dc2fd3f66e9d312bc6faa7ab162eddcef87be";
revision = "5";
editedCabalFile = "1kfgp41i6mfz9gjczp3flvqxfhnznd81rwldv8j05807n6mnqqii";
libraryHaskellDepends = [
base
mtl
stm
template-haskell
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/exceptions/";
description = "Extensible optionally-pure exceptions";
license = stdenv.lib.licenses.bsd3;

}) {};
"executable-hash" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, cryptohash
, directory
, executable-path
, file-embed
, filepath
, stdenv
, template-haskell
}:
mkDerivation {

pname = "executable-hash";
version = "0.2.0.4";
sha256 = "34eaf5662d90d3b7841f66b322ac5bc54900b0e3cb06792852b08b3c05a42ba4";
isLibrary = true;
isExecutable = true;
setupHaskellDepends = [
base
bytestring
Cabal
cryptohash
directory
file-embed
filepath
template-haskell
];
libraryHaskellDepends = [
base
bytestring
cryptohash
directory
executable-path
file-embed
template-haskell
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/fpco/executable-hash";
description = "Provides the SHA1 hash of the program executable";
license = stdenv.lib.licenses.mit;

}) {};
"executable-path" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
, unix
}:
mkDerivation {

pname = "executable-path";
version = "0.0.3";
sha256 = "8c7215ed4c3cd558f89dc862d21cf9dab3c6b762f4f90c0c1be9e3141c46e5c9";
libraryHaskellDepends = [
base
directory
filepath
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~bkomuves/";
description = "Finding out the full path of the executable";
license = stdenv.lib.licenses.publicDomain;

}) {};
"exhaustive" = callPackage
({
  mkDerivation
, base
, generics-sop
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "exhaustive";
version = "1.1.3";
sha256 = "4cda23481da99bf008046726ed4c31ecec5eb41222a11e067a4d7e0f2dda783a";
libraryHaskellDepends = [
base
generics-sop
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ocharles/exhaustive";
description = "Compile time checks that a computation considers producing data through all possible constructors";
license = stdenv.lib.licenses.bsd3;

}) {};
"exp-pairs" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, ghc-prim
, stdenv
, wl-pprint
}:
mkDerivation {

pname = "exp-pairs";
version = "0.1.5.2";
sha256 = "8dadc2dc4b4f666c9fe70068634a1eb07598943d6ace86560878ed8ec0aeac9d";
libraryHaskellDepends = [
base
containers
deepseq
ghc-prim
wl-pprint
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Bodigrim/exp-pairs";
description = "Linear programming over exponent pairs";
license = stdenv.lib.licenses.gpl3;

}) {};
"expiring-cache-map" = callPackage
({
  mkDerivation
, base
, containers
, hashable
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "expiring-cache-map";
version = "0.0.6.1";
sha256 = "0e3bc294978b46ee59bf0b4a7e7a5bd7ed5da7bc261ffebdb0cb1b60353c64b9";
libraryHaskellDepends = [
base
containers
hashable
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/elblake/expiring-cache-map";
description = "General purpose simple caching";
license = stdenv.lib.licenses.bsd3;

}) {};
"extensible" = callPackage
({
  mkDerivation
, base
, constraints
, monad-skeleton
, profunctors
, stdenv
, tagged
, template-haskell
, transformers
}:
mkDerivation {

pname = "extensible";
version = "0.3.7";
sha256 = "05ae22329761fe7b455544013d13439fd5208b0191a97d9b3e3e81ec7a32e38e";
libraryHaskellDepends = [
base
constraints
monad-skeleton
profunctors
tagged
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fumieval/extensible";
description = "Extensible, efficient, optics-friendly data types";
license = stdenv.lib.licenses.bsd3;

}) {};
"extensible-effects" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
, transformers-base
, type-aligned
, void
}:
mkDerivation {

pname = "extensible-effects";
version = "1.11.0.4";
sha256 = "af92fba899d4414f615341a7b4df6808d4f13140330f0962c9e0ef53f9227913";
libraryHaskellDepends = [
base
transformers
transformers-base
type-aligned
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/suhailshergill/extensible-effects";
description = "An Alternative to Monad Transformers";
license = stdenv.lib.licenses.mit;

}) {};
"extensible-exceptions" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "extensible-exceptions";
version = "0.1.1.4";
sha256 = "6ce5e8801760385a408dab71b53550f87629e661b260bdc2cd41c6a439b6e388";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Extensible exceptions";
license = stdenv.lib.licenses.bsd3;

}) {};
"extra" = callPackage
({
  mkDerivation
, base
, clock
, directory
, filepath
, process
, stdenv
, time
, unix
}:
mkDerivation {

pname = "extra";
version = "1.5.1";
sha256 = "8f3397c7a176045f1bb3b2a181e36b54192cb6fb5e99a9d28552975130ec49fc";
libraryHaskellDepends = [
base
clock
directory
filepath
process
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/extra#readme";
description = "Extra functions I use";
license = stdenv.lib.licenses.bsd3;

}) {};
"fail" = callPackage
({
  mkDerivation
, stdenv
}:
mkDerivation {

pname = "fail";
version = "4.9.0.0";
sha256 = "6d5cdb1a5c539425a9665f740e364722e1d9d6ae37fbc55f30fe3dbbbb91d4a2";
doHaddock = false;
doCheck = false;
homepage = "https://prime.haskell.org/wiki/Libraries/Proposals/MonadFail";
description = "Forward-compatible MonadFail class";
license = stdenv.lib.licenses.bsd3;

}) {};
"farmhash" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "farmhash";
version = "0.1.0.5";
sha256 = "0e685a5445f7bce88682d209bccb47d03f06065a627475df44a8e2af8bc20fa1";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/abhinav/farmhash";
description = "Fast hash functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"fast-builder" = callPackage
({
  mkDerivation
, base
, bytestring
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "fast-builder";
version = "0.0.0.6";
sha256 = "4a83c2fb4e21ec43d7cf9b2412286e1fea036f7c5cbfd4dcee8914f8b2ae9e1c";
libraryHaskellDepends = [
base
bytestring
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/takano-akio/fast-builder";
description = "Fast ByteString Builder";
license = stdenv.lib.licenses.publicDomain;

}) {};
"fast-digits" = callPackage
({
  mkDerivation
, base
, integer-gmp
, stdenv
}:
mkDerivation {

pname = "fast-digits";
version = "0.2.1.0";
sha256 = "ec84576e479202de8257c7c499b66e91bcf18444f7683475d74b575e166dd83b";
libraryHaskellDepends = [
base
integer-gmp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Bodigrim/fast-digits";
description = "The fast library for integer-to-digits conversion";
license = stdenv.lib.licenses.gpl3;

}) {};
"fast-logger" = callPackage
({
  mkDerivation
, array
, auto-update
, base
, bytestring
, directory
, easy-file
, filepath
, stdenv
, text
, unix
, unix-time
}:
mkDerivation {

pname = "fast-logger";
version = "2.4.10";
sha256 = "dec4a5d1a88f822d08d334ee870a08a8bb63b2b226d145cd24a7f08676ce678d";
libraryHaskellDepends = [
array
auto-update
base
bytestring
directory
easy-file
filepath
text
unix
unix-time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kazu-yamamoto/logger";
description = "A fast logging system";
license = stdenv.lib.licenses.bsd3;

}) {};
"fasta" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, containers
, foldl
, lens
, parsec
, pipes
, pipes-attoparsec
, pipes-bytestring
, pipes-group
, pipes-text
, split
, stdenv
, text
}:
mkDerivation {

pname = "fasta";
version = "0.10.4.2";
sha256 = "2b760dfd5029dee94d56010f8125f4317d6fa675a84817c352311d308d1897be";
libraryHaskellDepends = [
attoparsec
base
bytestring
containers
foldl
lens
parsec
pipes
pipes-attoparsec
pipes-bytestring
pipes-group
pipes-text
split
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/GregorySchwartz/fasta";
description = "A simple, mindless parser for fasta files";
license = stdenv.lib.licenses.gpl3;

}) {};
"fay" = callPackage
({
  mkDerivation
, aeson
, base
, base-compat
, bytestring
, containers
, data-default
, data-lens-light
, directory
, filepath
, ghc-paths
, haskell-src-exts
, language-ecmascript
, mtl
, mtl-compat
, optparse-applicative
, process
, safe
, sourcemap
, split
, spoon
, stdenv
, syb
, text
, time
, transformers
, transformers-compat
, traverse-with-class
, type-eq
, uniplate
, unordered-containers
, utf8-string
, vector
}:
mkDerivation {

pname = "fay";
version = "0.23.1.16";
sha256 = "c46ef8cb7980bcf62ef7ccc9897e9c4246e6bec8cafc06d49ebe1d5bcd618a64";
revision = "8";
editedCabalFile = "1ybc4vv0d3vya4a1xgr2sbq1zx1bzm82acxivs458i9pj56wp87j";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
base-compat
bytestring
containers
data-default
data-lens-light
directory
filepath
ghc-paths
haskell-src-exts
language-ecmascript
mtl
mtl-compat
process
safe
sourcemap
split
spoon
syb
text
time
transformers
transformers-compat
traverse-with-class
type-eq
uniplate
unordered-containers
utf8-string
vector
];
executableHaskellDepends = [
base
mtl
optparse-applicative
split
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/faylang/fay/wiki";
description = "A compiler for Fay, a Haskell subset that compiles to JavaScript";
license = stdenv.lib.licenses.bsd3;

}) {};
"fay-base" = callPackage
({
  mkDerivation
, base
, fay
, stdenv
}:
mkDerivation {

pname = "fay-base";
version = "0.20.0.1";
sha256 = "59ce66ae8de469e47ff16e2b565a719c92a93bb0c06ef3f748164a40325dae9e";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
fay
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/faylang/fay/";
description = "The base package for Fay";
license = stdenv.lib.licenses.bsd3;

}) {};
"fay-builder" = callPackage
({
  mkDerivation
, base
, Cabal
, data-default
, directory
, fay
, filepath
, safe
, split
, stdenv
, text
}:
mkDerivation {

pname = "fay-builder";
version = "0.2.0.5";
sha256 = "116dea6dc304834be81d70faec7e3de1fd867ebbda0d02d3c1c6a0f96d2b31a2";
revision = "4";
editedCabalFile = "09ix1rqm23l2ksc9zx6qj6m2pw789rzs6b3q41m60bcxh8xik9km";
libraryHaskellDepends = [
base
Cabal
data-default
directory
fay
filepath
safe
split
text
];
doHaddock = false;
doCheck = false;
description = "Compile Fay code on cabal install, and ad-hoc recompile during development";
license = stdenv.lib.licenses.bsd3;

}) {};
"fay-dom" = callPackage
({
  mkDerivation
, fay-base
, stdenv
}:
mkDerivation {

pname = "fay-dom";
version = "0.5.0.1";
sha256 = "e0f2e4dc11a13c4a9c43d707a3cf24bc1badb585540d24b29e8a6bc6ace1a6fe";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
fay-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/faylang/fay-dom";
description = "DOM FFI wrapper library for Fay";
license = stdenv.lib.licenses.bsd3;

}) {};
"fay-jquery" = callPackage
({
  mkDerivation
, fay-base
, fay-text
, stdenv
}:
mkDerivation {

pname = "fay-jquery";
version = "0.6.1.0";
sha256 = "0ff57ef8115e5c3fce1c14cca2509713e945874a2a2976e4646559ff51006f13";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
fay-base
fay-text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/faylang/fay-jquery";
description = "jQuery bindings for Fay";
license = stdenv.lib.licenses.bsd3;

}) {};
"fay-text" = callPackage
({
  mkDerivation
, fay
, fay-base
, stdenv
, text
}:
mkDerivation {

pname = "fay-text";
version = "0.3.2.2";
sha256 = "da2a75e803d6d41249f49fa7dd420bc984faaff5e44f697056c93336bf443be0";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
fay
fay-base
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/faylang/fay-text";
description = "Fay Text type represented as JavaScript strings";
license = stdenv.lib.licenses.mit;

}) {};
"fay-uri" = callPackage
({
  mkDerivation
, fay-base
, stdenv
}:
mkDerivation {

pname = "fay-uri";
version = "0.2.0.0";
sha256 = "d906cd3d903a8aa98388b4488a039a2a380bd4b0da3c63978da8b3f4e79364ef";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
fay-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/faylang/fay-uri";
description = "Persistent FFI bindings for using jsUri in Fay";
license = stdenv.lib.licenses.bsd3;

}) {};
"fclabels" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "fclabels";
version = "2.0.3.2";
sha256 = "4d5d83ffc3c8bc610e9c42e19c2e07a1ca68666310261de15703c605047182b0";
revision = "3";
editedCabalFile = "19gd2jwjpfrmq80gpjk05djhn42vvj88fgka5yr7yaq6mfx103by";
libraryHaskellDepends = [
base
mtl
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sebastiaanvisser/fclabels";
description = "First class accessor labels implemented as lenses";
license = stdenv.lib.licenses.bsd3;

}) {};
"feature-flags" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "feature-flags";
version = "0.1.0.1";
sha256 = "0e4cf7db6791b0875975dfa001d71bf31797b2edbfd2424f6b6202ace7935ad3";
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/iand675/feature-flags";
description = "A simple library for dynamically enabling and disabling functionality";
license = stdenv.lib.licenses.mit;

}) {};
"feed" = callPackage
({
  mkDerivation
, base
, old-locale
, old-time
, stdenv
, time
, time-locale-compat
, utf8-string
, xml
}:
mkDerivation {

pname = "feed";
version = "0.3.12.0";
sha256 = "cc2d6a3b91027d75b91a0a4c0f83f2df68bee3ce0d7338ea5ae0bcab6dd47942";
revision = "2";
editedCabalFile = "0ggpqv0i2k38dl8dqwn159n7ys0xr8shrsr3l838883rs8rrnf1j";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
old-locale
old-time
time
time-locale-compat
utf8-string
xml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bergmark/feed";
description = "Interfacing with RSS (v 0.9x, 2.x, 1.0) + Atom feeds.";
license = stdenv.lib.licenses.bsd3;

}) {};
"fft" = callPackage
({
  mkDerivation
, array
, base
, carray
, fftw
, fftwFloat
, ix-shapable
, stdenv
, storable-complex
, syb
, transformers
}:
mkDerivation {

pname = "fft";
version = "0.1.8.4";
sha256 = "2ea96d3150c1fca6ae2d8f0cead263ea1deddc0be18727a0cf4030f2ef07e1b4";
libraryHaskellDepends = [
array
base
carray
ix-shapable
storable-complex
syb
transformers
];
libraryPkgconfigDepends = [
fftw
fftwFloat
];
doHaddock = false;
doCheck = false;
description = "Bindings to the FFTW library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) fftw; inherit (pkgs) fftwFloat;};
"fgl" = callPackage
({
  mkDerivation
, array
, base
, containers
, deepseq
, stdenv
, transformers
}:
mkDerivation {

pname = "fgl";
version = "5.5.3.0";
sha256 = "d70cd8e2694311fae0b44fe0d1b342c95706ceffd3be66767e9027dfa5597e39";
libraryHaskellDepends = [
array
base
containers
deepseq
transformers
];
doHaddock = false;
doCheck = false;
description = "Martin Erwig's Functional Graph Library";
license = stdenv.lib.licenses.bsd3;

}) {};
"fgl-arbitrary" = callPackage
({
  mkDerivation
, base
, fgl
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "fgl-arbitrary";
version = "0.2.0.2";
sha256 = "501d77f1f5efd952aaf06d35fc95bfd3a9bc93906f78a363766ec74d14d50b8b";
libraryHaskellDepends = [
base
fgl
QuickCheck
];
doHaddock = false;
doCheck = false;
description = "QuickCheck support for fgl";
license = stdenv.lib.licenses.bsd3;

}) {};
"file-embed" = callPackage
({
  mkDerivation
, base
, bytestring
, directory
, filepath
, stdenv
, template-haskell
}:
mkDerivation {

pname = "file-embed";
version = "0.0.10";
sha256 = "f751925cec5773a4fad5a48ca0a86a21091ee5f1efccf618a64a89fa2cf5f711";
libraryHaskellDepends = [
base
bytestring
directory
filepath
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/file-embed";
description = "Use Template Haskell to embed file contents directly";
license = stdenv.lib.licenses.bsd3;

}) {};
"file-modules" = callPackage
({
  mkDerivation
, async
, base
, directory
, filepath
, haskell-src-exts
, MissingH
, regex-compat
, regex-pcre
, stdenv
}:
mkDerivation {

pname = "file-modules";
version = "0.1.2.4";
sha256 = "ffea2dbd51f77ed76f8559d8519674a1210611a35e2dbea72dfb41d7d5f0f235";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
async
base
directory
filepath
haskell-src-exts
MissingH
regex-compat
regex-pcre
];
executableHaskellDepends = [
async
base
directory
filepath
haskell-src-exts
MissingH
regex-compat
regex-pcre
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yamadapc/stack-run-auto";
description = "Takes a Haskell source-code file and outputs its modules";
license = stdenv.lib.licenses.mit;

}) {};
"filecache" = callPackage
({
  mkDerivation
, base
, exceptions
, hashable
, hinotify
, lens
, mtl
, stdenv
, stm
, strict-base-types
, unordered-containers
}:
mkDerivation {

pname = "filecache";
version = "0.2.9";
sha256 = "02e6cd64adeeab38b7f6425905332deb8f03824cb4f47a8b8855b846e195dd81";
libraryHaskellDepends = [
base
exceptions
hashable
hinotify
lens
mtl
stm
strict-base-types
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://lpuppet.banquise.net/";
description = "A Linux-only cache system associating values to files";
license = stdenv.lib.licenses.bsd3;

}) {};
"filelock" = callPackage
({
  mkDerivation
, base
, stdenv
, unix
}:
mkDerivation {

pname = "filelock";
version = "0.1.0.1";
sha256 = "ad8c63f27fec6396ac83981a67d5a799b6b614c119a35ebdf2d82b379795d763";
libraryHaskellDepends = [
base
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/takano-akio/filelock";
description = "Portable interface to file locking (flock / LockFileEx)";
license = stdenv.lib.licenses.publicDomain;

}) {};
"filemanip" = callPackage
({
  mkDerivation
, base
, bytestring
, directory
, filepath
, mtl
, stdenv
, unix-compat
}:
mkDerivation {

pname = "filemanip";
version = "0.3.6.3";
sha256 = "8836da17baaaf02ca080c9990ece4e0b0c8d6a128f458f8b64fd07b225ca9846";
libraryHaskellDepends = [
base
bytestring
directory
filepath
mtl
unix-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/filemanip";
description = "Expressive file and directory manipulation for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"fingertree" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "fingertree";
version = "0.1.1.0";
sha256 = "160c5ba370d781dbf2920ddca870ce8596ab76729972535595bef835ee1cddf0";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Generic finger-tree structure, with example instances";
license = stdenv.lib.licenses.bsd3;

}) {};
"fingertree-psqueue" = callPackage
({
  mkDerivation
, base
, fingertree
, stdenv
}:
mkDerivation {

pname = "fingertree-psqueue";
version = "0.3";
sha256 = "9f8c2f1965ea7a618d969db6506c8f373c95e09072b2182de40713d265046c92";
libraryHaskellDepends = [
base
fingertree
];
doHaddock = false;
doCheck = false;
description = "Implementation of priority search queues as finger trees";
license = stdenv.lib.licenses.bsd3;

}) {};
"finite-typelits" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "finite-typelits";
version = "0.1.1.0";
sha256 = "40cbe752fa659fdebd5afeb7a15177746b08227cf6add085481b94f53f8c858b";
revision = "1";
editedCabalFile = "0ksvsm7pyax6yq9qxpmwagxlp6l31pxvjclcd0lxxkhdjrmycnjc";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mniip/finite-typelits";
description = "A type inhabited by finitely many values, indexed by type-level naturals";
license = stdenv.lib.licenses.bsd3;

}) {};
"fixed" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "fixed";
version = "0.2.1.1";
sha256 = "24a9e1e251998c9d06037bb771d9eab2980a91132de59a19d0166a1c51e715e2";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/fixed";
description = "Signed 15.16 precision fixed point arithmetic";
license = stdenv.lib.licenses.bsd3;

}) {};
"fixed-vector" = callPackage
({
  mkDerivation
, base
, deepseq
, primitive
, stdenv
}:
mkDerivation {

pname = "fixed-vector";
version = "0.9.0.0";
sha256 = "2cb64bfaa4c916c681c9a8240bb6edfad4878742003c3d099e770c592e8d4c87";
libraryHaskellDepends = [
base
deepseq
primitive
];
doHaddock = false;
doCheck = false;
description = "Generic vectors with statically known size";
license = stdenv.lib.licenses.bsd3;

}) {};
"fixed-vector-hetero" = callPackage
({
  mkDerivation
, base
, deepseq
, fixed-vector
, ghc-prim
, primitive
, stdenv
, transformers
}:
mkDerivation {

pname = "fixed-vector-hetero";
version = "0.3.1.1";
sha256 = "894c7364ea270326dc3e030559ec94e5c6e9f974c9345188cbeba8365a45deaf";
revision = "2";
editedCabalFile = "1rw0p12qlj4zw3vms00zddgj4bbdanw3dg41scl0j70p78blf1hq";
libraryHaskellDepends = [
base
deepseq
fixed-vector
ghc-prim
primitive
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.org/Shimuuar/fixed-vector-hetero";
description = "Generic heterogeneous vectors";
license = stdenv.lib.licenses.bsd3;

}) {};
"flac" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, data-default-class
, directory
, exceptions
, filepath
, FLAC
, mtl
, stdenv
, text
, transformers
, vector
, wave
}:
mkDerivation {

pname = "flac";
version = "0.1.1";
sha256 = "58b7287cb39bdfc39cf7aab95b87d81111234fed502a8d1743ecfbcef001873e";
revision = "2";
editedCabalFile = "1l0mldkciqx5p3crzsyxn174znaygx56drqsmvrydp81gn2mv99a";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
containers
data-default-class
directory
exceptions
filepath
mtl
text
transformers
vector
wave
];
librarySystemDepends = [
FLAC
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/flac";
description = "Complete high-level binding to libFLAC";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) FLAC;};
"flac-picture" = callPackage
({
  mkDerivation
, base
, bytestring
, flac
, JuicyPixels
, stdenv
}:
mkDerivation {

pname = "flac-picture";
version = "0.1.0";
sha256 = "3c36dff9cebb44502a69e300f233e792900d051bd7eadc2c7390feb53efb3293";
revision = "1";
editedCabalFile = "006dailwwrgq7pi3rcd5m0ly7c6568hyr5q45srhaa31pqpz7zxa";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
flac
JuicyPixels
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/flac-picture";
description = "Support for writing picture to FLAC metadata blocks with JuicyPixels";
license = stdenv.lib.licenses.bsd3;

}) {};
"flat-mcmc" = callPackage
({
  mkDerivation
, base
, formatting
, mcmc-types
, monad-par
, monad-par-extras
, mwc-probability
, pipes
, primitive
, stdenv
, text
, transformers
, vector
}:
mkDerivation {

pname = "flat-mcmc";
version = "1.5.0";
sha256 = "87cea9deac6e2d32d9984741ba222ccb2fb0d5f8c58e843684476bfe7632f1fd";
revision = "1";
editedCabalFile = "1pjkyvs4c6yx6jva08zw2b1qfhhv9q71sy806f5lddjsknnym2fn";
libraryHaskellDepends = [
base
formatting
mcmc-types
monad-par
monad-par-extras
mwc-probability
pipes
primitive
text
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jtobin/flat-mcmc";
description = "Painless general-purpose sampling";
license = stdenv.lib.licenses.mit;

}) {};
"flexible-defaults" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, template-haskell
, th-extras
, transformers
}:
mkDerivation {

pname = "flexible-defaults";
version = "0.0.1.2";
sha256 = "827032cecf5e937d673f3a0b84fbbaba7c03fce6a567c15faf36865da9b76dc2";
libraryHaskellDepends = [
base
containers
template-haskell
th-extras
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/flexible-defaults";
description = "Generate default function implementations for complex type classes";
license = stdenv.lib.licenses.publicDomain;

}) {};
"flock" = callPackage
({
  mkDerivation
, base
, lifted-base
, monad-control
, stdenv
, transformers
, unix
}:
mkDerivation {

pname = "flock";
version = "0.3.1.8";
sha256 = "9634ce605c3b5579f4f1e53af7d93850ec23ffb2fd5b24e02974626af1712fbc";
revision = "4";
editedCabalFile = "02jqldkxg366v0gljiqg7zv5sd3zhswabcvg5xx6h8ns67kn3my6";
libraryHaskellDepends = [
base
lifted-base
monad-control
transformers
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/hesselink/flock";
description = "Wrapper for flock(2)";
license = "unknown";

}) {};
"flow" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "flow";
version = "1.0.7";
sha256 = "f1964913c5bbd81748610c2f66a7aa9750b25953e6940c0933b25d4b2f1b1f62";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/flow#readme";
description = "Write more understandable Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"fmlist" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "fmlist";
version = "0.9";
sha256 = "581153395a71e3c139365ffbebbeac6d880a6fdfee23e7f5d942ccbeb2aefcbf";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sjoerdvisscher/fmlist";
description = "FoldMap lists";
license = stdenv.lib.licenses.bsd3;

}) {};
"fn" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, directory
, filepath
, http-types
, stdenv
, text
, unordered-containers
, wai
, wai-extra
}:
mkDerivation {

pname = "fn";
version = "0.3.0.1";
sha256 = "72cfbb697e52324f092a4436468f8f63dc063eeb6edbd4885a05d604af62d4bd";
libraryHaskellDepends = [
base
blaze-builder
bytestring
directory
filepath
http-types
text
unordered-containers
wai
wai-extra
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/positiondev/fn#readme";
description = "A functional web framework";
license = stdenv.lib.licenses.isc;

}) {};
"focus" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "focus";
version = "0.1.5";
sha256 = "ef4b641e06207e4b3bfc2c1cbce062db86fe02956ca2294a3ae8c6b1e1ace7b1";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/focus";
description = "A general abstraction for manipulating elements of container data structures";
license = stdenv.lib.licenses.mit;

}) {};
"fold-debounce" = callPackage
({
  mkDerivation
, base
, data-default-class
, stdenv
, stm
, stm-delay
, time
}:
mkDerivation {

pname = "fold-debounce";
version = "0.2.0.5";
sha256 = "78c0ff60d8a69193fbd298ece7a20351566c0a5a9adadfae96ff15e902fa594d";
libraryHaskellDepends = [
base
data-default-class
stm
stm-delay
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/debug-ito/fold-debounce";
description = "Fold multiple events that happen in a given period of time";
license = stdenv.lib.licenses.bsd3;

}) {};
"fold-debounce-conduit" = callPackage
({
  mkDerivation
, base
, conduit
, fold-debounce
, resourcet
, stdenv
, stm
, transformers
, transformers-base
}:
mkDerivation {

pname = "fold-debounce-conduit";
version = "0.1.0.5";
sha256 = "253e73bcf6e1cb281acce2c9e39b00b2419032e4f1e0234bd19a473d210f84cc";
libraryHaskellDepends = [
base
conduit
fold-debounce
resourcet
stm
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/debug-ito/fold-debounce-conduit";
description = "Regulate input traffic from conduit Source with Control.FoldDebounce";
license = stdenv.lib.licenses.bsd3;

}) {};
"foldl" = callPackage
({
  mkDerivation
, base
, bytestring
, comonad
, containers
, contravariant
, mwc-random
, primitive
, profunctors
, stdenv
, text
, transformers
, vector
}:
mkDerivation {

pname = "foldl";
version = "1.2.3";
sha256 = "fb081168f7736a04dc68db348d2e0bc58d535da5ed74c4394a022dbaa46d3f25";
revision = "1";
editedCabalFile = "07vlfl64rl2jrcki7pc2z58byxc57ff60qsjbx6w32cyjpi9n99l";
libraryHaskellDepends = [
base
bytestring
comonad
containers
contravariant
mwc-random
primitive
profunctors
text
transformers
vector
];
doHaddock = false;
doCheck = false;
description = "Composable, streaming, and efficient left folds";
license = stdenv.lib.licenses.bsd3;

}) {};
"foldl-statistics" = callPackage
({
  mkDerivation
, base
, foldl
, math-functions
, profunctors
, semigroups
, stdenv
}:
mkDerivation {

pname = "foldl-statistics";
version = "0.1.4.2";
sha256 = "1cfa6d6d36ff40529319a6f790bf130b6b4d650f1b8db5ee739cf4b44d5c8be0";
libraryHaskellDepends = [
base
foldl
math-functions
profunctors
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/Data61/foldl-statistics#readme";
description = "Statistical functions from the statistics package implemented as Folds";
license = stdenv.lib.licenses.bsd3;

}) {};
"folds" = callPackage
({
  mkDerivation
, adjunctions
, base
, bifunctors
, comonad
, constraints
, contravariant
, data-reify
, distributive
, lens
, mtl
, pointed
, profunctors
, reflection
, semigroupoids
, stdenv
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "folds";
version = "0.7.1";
sha256 = "e07adf0c9834b5f78180250d7fec6a56ba84c752cbe4c991d52efc6c60b7d25a";
revision = "1";
editedCabalFile = "0pzhr85nzmqz63f14q4qr845qn9gk6jvzhrnah2ld7ifs7njzy0y";
configureFlags = [
"-f-test-hlint"
];
libraryHaskellDepends = [
adjunctions
base
bifunctors
comonad
constraints
contravariant
data-reify
distributive
lens
mtl
pointed
profunctors
reflection
semigroupoids
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/folds";
description = "Beautiful Folding";
license = stdenv.lib.licenses.bsd3;

}) {};
"force-layout" = callPackage
({
  mkDerivation
, base
, containers
, data-default-class
, lens
, linear
, stdenv
}:
mkDerivation {

pname = "force-layout";
version = "0.4.0.6";
sha256 = "f7729855b1b14e0b255325faaca9f4834004e02bd21def6a865d2c55c734259d";
revision = "3";
editedCabalFile = "0rp5ggzdqy9i8bsjz7i36l8l2b04vjy6sqm6gxmb4pqmakj1x8q6";
libraryHaskellDepends = [
base
containers
data-default-class
lens
linear
];
doHaddock = false;
doCheck = false;
description = "Simple force-directed layout";
license = stdenv.lib.licenses.bsd3;

}) {};
"foreign-store" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "foreign-store";
version = "0.2";
sha256 = "06718a214d068eaa494cc82376f23b2059a141b01048cd7efcf2176a6c3383dc";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chrisdone/foreign-store";
description = "Store a stable pointer in a foreign context to be retrieved later";
license = stdenv.lib.licenses.bsd3;

}) {};
"format-numbers" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "format-numbers";
version = "0.1.0.0";
sha256 = "0ca4561b55c888552f7bf0eb68e97b62acedcb0d5e5e1cc4afd94402d01231a6";
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/format-numbers#readme";
description = "Various number formatting functions";
license = stdenv.lib.licenses.mit;

}) {};
"formatting" = callPackage
({
  mkDerivation
, base
, clock
, old-locale
, scientific
, stdenv
, text
, text-format
, time
}:
mkDerivation {

pname = "formatting";
version = "6.2.4";
sha256 = "432db74037d3bc326ab70e6e033502f818d9694535dbfc4c949cb50f72f33367";
libraryHaskellDepends = [
base
clock
old-locale
scientific
text
text-format
time
];
doHaddock = false;
doCheck = false;
description = "Combinator-based type-safe formatting (like printf() or FORMAT)";
license = stdenv.lib.licenses.bsd3;

}) {};
"fortran-src" = callPackage
({
  mkDerivation
, alex
, array
, base
, bytestring
, containers
, fgl
, GenericPretty
, happy
, mtl
, pretty
, stdenv
, text
, uniplate
}:
mkDerivation {

pname = "fortran-src";
version = "0.1.0.4";
sha256 = "4e20fae7ff4448a98cb3e2a16ff66514d3510b82d58f4c7bc998ff24c2ac5708";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
base
bytestring
containers
fgl
GenericPretty
mtl
pretty
text
uniplate
];
libraryToolDepends = [
alex
happy
];
executableHaskellDepends = [
array
base
bytestring
containers
fgl
GenericPretty
mtl
pretty
text
uniplate
];
doHaddock = false;
doCheck = false;
description = "Parser and anlyses for Fortran standards 66, 77, 90";
license = stdenv.lib.licenses.asl20;

}) {};
"free" = callPackage
({
  mkDerivation
, base
, bifunctors
, comonad
, containers
, distributive
, exceptions
, mtl
, prelude-extras
, profunctors
, semigroupoids
, semigroups
, stdenv
, template-haskell
, transformers
, transformers-compat
}:
mkDerivation {

pname = "free";
version = "4.12.4";
sha256 = "c9fe45aae387855626ecb5a0fea6afdb207143cb00af3b1f715d1032d2d08784";
revision = "2";
editedCabalFile = "0gmib9bmswrqhl47cp5b871v9f44v9yidzxpljkszy49y9qdf560";
libraryHaskellDepends = [
base
bifunctors
comonad
containers
distributive
exceptions
mtl
prelude-extras
profunctors
semigroupoids
semigroups
template-haskell
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/free/";
description = "Monads for free";
license = stdenv.lib.licenses.bsd3;

}) {};
"free-vl" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "free-vl";
version = "0.1.4";
sha256 = "57f63ed35b42fc54fefb3cc183d0655e0d6c4a28d5371dba00fc9c9d3fa602bf";
revision = "1";
editedCabalFile = "1711k76b6w7gfqvc8z9jnylj4hhk3rvx7ap31y1mmq4g2a4s82qm";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aaronlevin/free-vl";
description = "van Laarhoven encoded Free Monad with Extensible Effects";
license = stdenv.lib.licenses.bsd3;

}) {};
"freenect" = callPackage
({
  mkDerivation
, base
, freenect
, freenect_sync
, libfreenect
, stdenv
, vector
}:
mkDerivation {

pname = "freenect";
version = "1.2.1";
sha256 = "fca7aa958ec04396334b101679f8603850d7c6629770d5206d774e115cd70759";
libraryHaskellDepends = [
base
vector
];
librarySystemDepends = [
freenect
freenect_sync
];
libraryPkgconfigDepends = [
libfreenect
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chrisdone/freenect";
description = "Interface to the Kinect device";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) freenect; inherit (pkgs) freenect_sync;
inherit (pkgs) libfreenect;};
"friendly-time" = callPackage
({
  mkDerivation
, base
, old-locale
, stdenv
, time
}:
mkDerivation {

pname = "friendly-time";
version = "0.4";
sha256 = "05da52b12137473d643798e4f651f7939cef8d3c4775efac0849bdaad394e3f4";
libraryHaskellDepends = [
base
old-locale
time
];
doHaddock = false;
doCheck = false;
description = "Print time information in friendly ways";
license = stdenv.lib.licenses.bsd3;

}) {};
"frisby" = callPackage
({
  mkDerivation
, array
, base
, containers
, mtl
, stdenv
}:
mkDerivation {

pname = "frisby";
version = "0.2";
sha256 = "a3389559849cfc3284923d9b543897abc924c5c076a383890a6a8f21cf4d5247";
revision = "1";
editedCabalFile = "1ip1bykcrnqzfjbsi4gfj59lc24k3kvyn949ryczpqshlpgnbnqj";
libraryHaskellDepends = [
array
base
containers
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://repetae.net/computer/frisby/";
description = "Linear time composable parser for PEG grammars";
license = stdenv.lib.licenses.bsd3;

}) {};
"from-sum" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "from-sum";
version = "0.2.1.0";
sha256 = "a1ed8a433b98df8a70be2f9199abae3e5ed7fb4c2f2b3fb1268b6b588f326667";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/from-sum";
description = "Canonical fromMaybeM and fromEitherM functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"frontmatter" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, stdenv
, yaml
}:
mkDerivation {

pname = "frontmatter";
version = "0.1.0.2";
sha256 = "66eb97b0d5097397f0238b9af764a8c6ea2bb9a4a16cd1214051719fc313b99d";
libraryHaskellDepends = [
attoparsec
base
bytestring
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yamadapc/haskell-frontmatter";
description = "Parses frontmatter as used in Jekyll markdown files";
license = stdenv.lib.licenses.mit;

}) {};
"fsnotify" = callPackage
({
  mkDerivation
, async
, base
, containers
, directory
, filepath
, hinotify
, stdenv
, text
, time
, unix-compat
}:
mkDerivation {

pname = "fsnotify";
version = "0.2.1";
sha256 = "ebcf1b7bd825f269510850f20508a2ba0f640a41af08de0c171d8ba24618542b";
revision = "1";
editedCabalFile = "10gbrqb178bdrwaa6nqhhmlaz5ajal0ry6389zajq0xvpvc3cjd0";
libraryHaskellDepends = [
async
base
containers
directory
filepath
hinotify
text
time
unix-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-fswatch/hfsnotify";
description = "Cross platform library for file change notification";
license = stdenv.lib.licenses.bsd3;

}) {};
"fsnotify-conduit" = callPackage
({
  mkDerivation
, base
, conduit
, directory
, filepath
, fsnotify
, resourcet
, stdenv
, transformers
}:
mkDerivation {

pname = "fsnotify-conduit";
version = "0.1.0.0";
sha256 = "925bd952deddc9728461c8b5e32b36be57b64693757c4d2ce03a58bdca090e9f";
libraryHaskellDepends = [
base
conduit
directory
filepath
fsnotify
resourcet
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/fsnotify-conduit#readme";
description = "Get filesystem notifications as a stream of events";
license = stdenv.lib.licenses.mit;

}) {};
"funcmp" = callPackage
({
  mkDerivation
, base
, filepath
, process
, stdenv
}:
mkDerivation {

pname = "funcmp";
version = "1.8";
sha256 = "33fc37e8c05d665bc6a7a5b4406e433e19fe2c58421a034b76e1b412e8737526";
revision = "1";
editedCabalFile = "1fkjmx4mmfmf2y08w7mgw1rp6q6w9zxdj95zfydgxgkmvk9b37c4";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
filepath
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/peti/funcmp";
description = "Functional MetaPost";
license = stdenv.lib.licenses.gpl3;

}) {};
"fuzzcheck" = callPackage
({
  mkDerivation
, base
, lifted-base
, monad-control
, QuickCheck
, random
, stdenv
, transformers
}:
mkDerivation {

pname = "fuzzcheck";
version = "0.1.1";
sha256 = "ecd664796e9cf5c608ca904897dd9ec18b471a86fcfb4216328382b28023d961";
libraryHaskellDepends = [
base
lifted-base
monad-control
QuickCheck
random
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/fuzzcheck";
description = "A simple checker for stress testing monadic code";
license = stdenv.lib.licenses.bsd3;

}) {};
"gd" = callPackage
({
  mkDerivation
, base
, bytestring
, expat
, fontconfig
, freetype
, gd
, libjpeg
, libpng
, stdenv
, zlib
}:
mkDerivation {

pname = "gd";
version = "3000.7.3";
sha256 = "14aecb600d9a058b1905dfdef3d51a1eb11fb92f804fbaaa041103a0bfd97fb6";
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
expat
fontconfig
freetype
gd
libjpeg
libpng
zlib
];
doHaddock = false;
doCheck = false;
description = "A Haskell binding to a subset of the GD graphics library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) expat; inherit (pkgs) fontconfig;
inherit (pkgs) freetype; inherit (pkgs) gd;
inherit (pkgs) libjpeg; inherit (pkgs) libpng; inherit (pkgs) zlib;};
"generic-aeson" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, generic-deriving
, mtl
, stdenv
, tagged
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "generic-aeson";
version = "0.2.0.8";
sha256 = "de29fa648b9eb6c9e678b0715a530efaf70aac8f1ad8becc22d7ef1411ded5cb";
revision = "3";
editedCabalFile = "0qr21mvknnkhnmg7p80vhcxa8xvy2b5zcc8b8zzhp6kq07j755gd";
libraryHaskellDepends = [
aeson
attoparsec
base
generic-deriving
mtl
tagged
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
description = "Derivation of Aeson instances using GHC generics";
license = stdenv.lib.licenses.bsd3;

}) {};
"generic-deriving" = callPackage
({
  mkDerivation
, base
, containers
, ghc-prim
, stdenv
, template-haskell
}:
mkDerivation {

pname = "generic-deriving";
version = "1.11.1";
sha256 = "b38d427f990f3080108c565a81284217290a47be63bab7bf59036ece2e2cb0e9";
revision = "1";
editedCabalFile = "1pyqrkqvvpk6xgka66bshc62d8pl2hy3gczknlhkszshk5s8mdgf";
libraryHaskellDepends = [
base
containers
ghc-prim
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dreixel/generic-deriving";
description = "Generic programming library for generalised deriving";
license = stdenv.lib.licenses.bsd3;

}) {};
"generic-random" = callPackage
({
  mkDerivation
, ad
, base
, containers
, hashable
, hmatrix
, ieee754
, MonadRandom
, mtl
, QuickCheck
, stdenv
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "generic-random";
version = "0.4.0.0";
sha256 = "68c5036f55584c5164c79a6adf6d9dc4435844fc98d206be80a1683cc4929f22";
libraryHaskellDepends = [
ad
base
containers
hashable
hmatrix
ieee754
MonadRandom
mtl
QuickCheck
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/lysxia/generic-random";
description = "Generic random generators";
license = stdenv.lib.licenses.mit;

}) {};
"generic-xmlpickler" = callPackage
({
  mkDerivation
, base
, generic-deriving
, hxt
, stdenv
, text
}:
mkDerivation {

pname = "generic-xmlpickler";
version = "0.1.0.5";
sha256 = "d51760f5650051eebe561f2b18670657e8398014fa2a623c0e0169bfeca336af";
revision = "8";
editedCabalFile = "1hpcglml4b5yv192syxazminr5v7qjrgqwb2wk0cf7f0sjpm5d0q";
libraryHaskellDepends = [
base
generic-deriving
hxt
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/silkapp/generic-xmlpickler";
description = "Generic generation of HXT XmlPickler instances using GHC Generics";
license = stdenv.lib.licenses.bsd3;

}) {};
"generics-eot" = callPackage
({
  mkDerivation
, base
, markdown-unlit
, stdenv
}:
mkDerivation {

pname = "generics-eot";
version = "0.2.1.1";
sha256 = "89af298dd2ad37bc86ab240f3309451a6e66dd13dbf79227eb01832c3748d0d8";
libraryHaskellDepends = [
base
markdown-unlit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/soenkehahn/generics-eot#readme";
description = "A library for generic programming that aims to be easy to understand";
license = stdenv.lib.licenses.bsd3;

}) {};
"generics-sop" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
, template-haskell
}:
mkDerivation {

pname = "generics-sop";
version = "0.2.4.0";
sha256 = "481f73f122970efc24fe9dea71077e265d260834d975dd41395671d9a86a1863";
revision = "1";
editedCabalFile = "0bsd3nxlg5vr5vgbflq881l0w0w888qy06gr7v159y4p582316hy";
libraryHaskellDepends = [
base
ghc-prim
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Generic Programming using True Sums of Products";
license = stdenv.lib.licenses.bsd3;

}) {};
"generics-sop-lens" = callPackage
({
  mkDerivation
, base
, generics-sop
, lens
, stdenv
}:
mkDerivation {

pname = "generics-sop-lens";
version = "0.1.2.1";
sha256 = "4e49d4cc580d45e25e0abdeee12b1191ae75937af1c7ca03333979584a8a525c";
revision = "3";
editedCabalFile = "1phq0hjpgxfvb8ay9v4ix6axk07mbd266javss9nmqmqmn3vnb51";
libraryHaskellDepends = [
base
generics-sop
lens
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/generics-sop-lens#readme";
description = "Lenses for types in generics-sop";
license = stdenv.lib.licenses.bsd3;

}) {};
"geniplate-mirror" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, template-haskell
}:
mkDerivation {

pname = "geniplate-mirror";
version = "0.7.4";
sha256 = "1bbfc296d598d604e0cf4da0b4a23e36e73f019f83b7911e18621443f04e2c5f";
libraryHaskellDepends = [
base
mtl
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/danr/geniplate";
description = "Use Template Haskell to generate Uniplate-like functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"getopt-generics" = callPackage
({
  mkDerivation
, base
, base-compat
, base-orphans
, generics-sop
, stdenv
, tagged
}:
mkDerivation {

pname = "getopt-generics";
version = "0.13";
sha256 = "d193384dca0c9fdd8492ee888b1b8954b247f83ead6e4f3f81ded94377aaa34a";
libraryHaskellDepends = [
base
base-compat
base-orphans
generics-sop
tagged
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/soenkehahn/getopt-generics#readme";
description = "Create command line interfaces with ease";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghc-events" = callPackage
({
  mkDerivation
, array
, base
, binary
, bytestring
, containers
, mtl
, stdenv
}:
mkDerivation {

pname = "ghc-events";
version = "0.4.4.0";
sha256 = "ab2bf624848165872375954f6b67379991557a58dff66959f585ee9807c84f6d";
revision = "1";
editedCabalFile = "0rfwiy10mjl4vyv3gjsi6chz34ra4qicq3px2nm5vrzmlalla8d5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
base
binary
bytestring
containers
mtl
];
executableHaskellDepends = [
array
base
binary
bytestring
containers
mtl
];
doHaddock = false;
doCheck = false;
description = "Library and tool for parsing .eventlog files from GHC";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghc-exactprint" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, filepath
, free
, ghc
, ghc-boot
, ghc-paths
, mtl
, stdenv
, syb
}:
mkDerivation {

pname = "ghc-exactprint";
version = "0.5.3.0";
sha256 = "90e088b04a5b72d7c502049a201180bd593912d831d48b605582882dc9bc332d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
directory
filepath
free
ghc
ghc-boot
ghc-paths
mtl
syb
];
doHaddock = false;
doCheck = false;
description = "ExactPrint for GHC";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghc-heap-view" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, ghc
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "ghc-heap-view";
version = "0.5.7";
sha256 = "4b6cbb42c256987e55b5d6136f4c7efb560a5ea1fd34d4878dcec1fe9aa71524";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
binary
bytestring
containers
ghc
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
description = "Extract the heap representation of Haskell values and thunks";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghc-mod" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, Cabal
, cabal-helper
, containers
, deepseq
, directory
, djinn-ghc
, extra
, fclabels
, filepath
, ghc
, ghc-boot
, ghc-paths
, ghc-syb-utils
, haskell-src-exts
, hlint
, monad-control
, monad-journal
, mtl
, old-time
, optparse-applicative
, pipes
, pretty
, process
, safe
, semigroups
, split
, stdenv
, syb
, template-haskell
, temporary
, text
, time
, transformers
, transformers-base
}:
mkDerivation {

pname = "ghc-mod";
version = "5.7.0.0";
sha256 = "2aab240c89ab6513807cea4e2065d474274a5ae20f8edc4f77df8e2eafb9e5ca";
revision = "1";
editedCabalFile = "1qyijh62wny3vxs72caqfphj10ld11zcf929gdaqs3ip5ixjb61a";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
setupHaskellDepends = [
base
Cabal
containers
filepath
process
template-haskell
transformers
];
libraryHaskellDepends = [
base
binary
bytestring
cabal-helper
containers
deepseq
directory
djinn-ghc
extra
fclabels
filepath
ghc
ghc-boot
ghc-paths
ghc-syb-utils
haskell-src-exts
hlint
monad-control
monad-journal
mtl
old-time
optparse-applicative
pipes
pretty
process
safe
split
syb
template-haskell
temporary
text
time
transformers
transformers-base
];
executableHaskellDepends = [
base
binary
deepseq
directory
fclabels
filepath
ghc
monad-control
mtl
old-time
optparse-applicative
pretty
process
semigroups
split
time
];
doHaddock = false;
doCheck = false;
homepage = "http://www.mew.org/~kazu/proj/ghc-mod/";
description = "Happy Haskell Programming";
license = stdenv.lib.licenses.agpl3;

}) {};
"ghc-paths" = callPackage
({
  mkDerivation
, base
, Cabal
, directory
, stdenv
}:
mkDerivation {

pname = "ghc-paths";
version = "0.1.0.9";
sha256 = "afa68fb86123004c37c1dc354286af2d87a9dcfb12ddcb80e8bd0cd55bc87945";
revision = "3";
editedCabalFile = "1gx47xbm3qviqccnbsibzkfnlzljvls33jh1ry4l506yvfnf4j10";
setupHaskellDepends = [
base
Cabal
directory
];
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Knowledge of GHC's installation directories";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghc-prof" = callPackage
({
  mkDerivation
, attoparsec
, base
, containers
, scientific
, stdenv
, text
, time
}:
mkDerivation {

pname = "ghc-prof";
version = "1.3.0.2";
sha256 = "99a13463bf12803c02071206b090c1e4a1364f6f0bbc4162155c478a2c740fa1";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
attoparsec
base
containers
scientific
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/maoe/ghc-prof";
description = "Library for parsing GHC time and allocation profiling reports";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghc-syb-utils" = callPackage
({
  mkDerivation
, base
, ghc
, stdenv
, syb
}:
mkDerivation {

pname = "ghc-syb-utils";
version = "0.2.3";
sha256 = "7ef63fcfe829b621d5b947c6a4567de111976a463f2ffaf0fafc5e76776cbc67";
libraryHaskellDepends = [
base
ghc
syb
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/nominolo/ghc-syb";
description = "Scrap Your Boilerplate utilities for the GHC API";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghc-tcplugins-extra" = callPackage
({
  mkDerivation
, base
, ghc
, stdenv
}:
mkDerivation {

pname = "ghc-tcplugins-extra";
version = "0.2";
sha256 = "f3542b6734b20e3e25f851589944d1d185533c0f0a5428eee86f422ad3687374";
libraryHaskellDepends = [
base
ghc
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/clash-lang/ghc-tcplugins-extra";
description = "Utilities for writing GHC type-checker plugins";
license = stdenv.lib.licenses.bsd2;

}) {};
"ghc-typelits-extra" = callPackage
({
  mkDerivation
, base
, ghc
, ghc-tcplugins-extra
, ghc-typelits-knownnat
, ghc-typelits-natnormalise
, integer-gmp
, singletons
, stdenv
, transformers
}:
mkDerivation {

pname = "ghc-typelits-extra";
version = "0.2.2";
sha256 = "2e20c00c0aec2e865d270d39921b66f94cb85610e944a6da068dda5868ef86a2";
libraryHaskellDepends = [
base
ghc
ghc-tcplugins-extra
ghc-typelits-knownnat
ghc-typelits-natnormalise
integer-gmp
singletons
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.clash-lang.org/";
description = "Additional type-level operations on GHC.TypeLits.Nat";
license = stdenv.lib.licenses.bsd2;

}) {};
"ghc-typelits-knownnat" = callPackage
({
  mkDerivation
, base
, ghc
, ghc-tcplugins-extra
, ghc-typelits-natnormalise
, singletons
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "ghc-typelits-knownnat";
version = "0.2.3";
sha256 = "bd7828cf6c3062a785ad5c35a82d2229341acca4c2fd605c4718f6f595316133";
libraryHaskellDepends = [
base
ghc
ghc-tcplugins-extra
ghc-typelits-natnormalise
singletons
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://clash-lang.org/";
description = "Derive KnownNat constraints from other KnownNat constraints";
license = stdenv.lib.licenses.bsd2;

}) {};
"ghc-typelits-natnormalise" = callPackage
({
  mkDerivation
, base
, ghc
, ghc-tcplugins-extra
, integer-gmp
, stdenv
}:
mkDerivation {

pname = "ghc-typelits-natnormalise";
version = "0.5.2";
sha256 = "b12e66e076e6f43eb1a8465e11b406518f86b955de3399ee8822880d4b794383";
libraryHaskellDepends = [
base
ghc
ghc-tcplugins-extra
integer-gmp
];
doHaddock = false;
doCheck = false;
homepage = "http://www.clash-lang.org/";
description = "GHC typechecker plugin for types of kind GHC.TypeLits.Nat";
license = stdenv.lib.licenses.bsd2;

}) {};
"ghcid" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, cmdargs
, containers
, directory
, extra
, filepath
, fsnotify
, process
, stdenv
, terminal-size
, time
, unix
}:
mkDerivation {

pname = "ghcid";
version = "0.6.6";
sha256 = "62f567852111da733b6feedbfb37ff561889e27af63d16df048f37a4bfeb6ab0";
revision = "1";
editedCabalFile = "1wdwxyc3jfsis9fzkn3vrb740lwrbaml5xv17h4m8zh300aghsgg";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
cmdargs
directory
extra
filepath
process
terminal-size
time
unix
];
executableHaskellDepends = [
ansi-terminal
base
cmdargs
containers
directory
extra
filepath
fsnotify
process
terminal-size
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/ghcid#readme";
description = "GHCi based bare bones IDE";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghcjs-codemirror" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "ghcjs-codemirror";
version = "0.0.0.1";
sha256 = "dcd9f5288d7624c8a2a5bf8440d9de6ab8400707d366180b13cc3f472280a513";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ghcjs/CodeMirror";
description = "Installs CodeMirror JavaScript files";
license = stdenv.lib.licenses.mit;

}) {};
"ghcjs-hplay" = callPackage
({
  mkDerivation
, base
, containers
, ghcjs-perch
, mtl
, stdenv
, transformers
, transient
, transient-universe
}:
mkDerivation {

pname = "ghcjs-hplay";
version = "0.3.4.2";
sha256 = "c3d9e5108b4792fc6fd9ef079cb4f4a6e9a21195e68f5b0d53d43ad7f79149d5";
libraryHaskellDepends = [
base
containers
ghcjs-perch
mtl
transformers
transient
transient-universe
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agocorona/ghcjs-hplay";
description = "Client-side web EDSL for transient nodes running in the web browser";
license = stdenv.lib.licenses.mit;

}) {};
"ghcjs-perch" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "ghcjs-perch";
version = "0.3.3.1";
sha256 = "5a9e656474f2b57c18ed028217f7c44d00468ca2b8d433422b049084143a1275";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
description = "GHCJS version of Perch library";
license = stdenv.lib.licenses.mit;

}) {};
"gi-atk" = callPackage
({
  mkDerivation
, atk
, base
, bytestring
, Cabal
, containers
, gi-glib
, gi-gobject
, haskell-gi
, haskell-gi-base
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "gi-atk";
version = "2.0.11";
sha256 = "32594ce32ab70fcf7b7e4d2fd212a4714c72d28776be7649f88a989b40632d9b";
setupHaskellDepends = [
base
Cabal
haskell-gi
];
libraryHaskellDepends = [
base
bytestring
containers
gi-glib
gi-gobject
haskell-gi
haskell-gi-base
text
transformers
];
libraryPkgconfigDepends = [
atk
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "Atk bindings";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) atk;};
"gi-cairo" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, cairo
, containers
, haskell-gi
, haskell-gi-base
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "gi-cairo";
version = "1.0.11";
sha256 = "a70bbb9b120d10c95e1bc603511d542b38cecf1025bed870e6dbe2bd2d7e552f";
setupHaskellDepends = [
base
Cabal
haskell-gi
];
libraryHaskellDepends = [
base
bytestring
containers
haskell-gi
haskell-gi-base
text
transformers
];
libraryPkgconfigDepends = [
cairo
];
doHaddock = false;
doCheck = false;
preCompileBuildDriver = ''
  PKG_CONFIG_PATH+=":${cairo}/lib/pkgconfig"
  setupCompileFlags+=" $(pkg-config --libs cairo-gobject)"
'';
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "Cairo bindings";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) cairo;};
"gi-gdk" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, gi-cairo
, gi-gdkpixbuf
, gi-gio
, gi-glib
, gi-gobject
, gi-pango
, gtk3
, haskell-gi
, haskell-gi-base
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "gi-gdk";
version = "3.0.11";
sha256 = "b1947f5abad3e500ac748ccea44275050c8a7261d0f81e49aee21a4266cf34b1";
setupHaskellDepends = [
base
Cabal
haskell-gi
];
libraryHaskellDepends = [
base
bytestring
containers
gi-cairo
gi-gdkpixbuf
gi-gio
gi-glib
gi-gobject
gi-pango
haskell-gi
haskell-gi-base
text
transformers
];
libraryPkgconfigDepends = [
gtk3
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "Gdk bindings";
license = stdenv.lib.licenses.lgpl21;

}) {gtk3 = pkgs.gnome3.gtk;};
"gi-gdkpixbuf" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, gdk_pixbuf
, gi-gio
, gi-glib
, gi-gobject
, haskell-gi
, haskell-gi-base
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "gi-gdkpixbuf";
version = "2.0.11";
sha256 = "068c4e9df68a03180dc0f174414af010877ffc781d35d2776e01a63bd1a80149";
setupHaskellDepends = [
base
Cabal
haskell-gi
];
libraryHaskellDepends = [
base
bytestring
containers
gi-gio
gi-glib
gi-gobject
haskell-gi
haskell-gi-base
text
transformers
];
libraryPkgconfigDepends = [
gdk_pixbuf
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "GdkPixbuf bindings";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) gdk_pixbuf;};
"gi-gio" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, gi-glib
, gi-gobject
, glib
, haskell-gi
, haskell-gi-base
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "gi-gio";
version = "2.0.11";
sha256 = "d63f1c32a935cb818f8f2c1d70dbf4f71cc65a23e200744a93dee66ade50f039";
setupHaskellDepends = [
base
Cabal
haskell-gi
];
libraryHaskellDepends = [
base
bytestring
containers
gi-glib
gi-gobject
haskell-gi
haskell-gi-base
text
transformers
];
libraryPkgconfigDepends = [
glib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "Gio bindings";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) glib;};
"gi-glib" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, glib
, haskell-gi
, haskell-gi-base
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "gi-glib";
version = "2.0.11";
sha256 = "f707cc142c6c7a202b86a5804af38c53fd74c99ee2092946e3f39451220d94e9";
setupHaskellDepends = [
base
Cabal
haskell-gi
];
libraryHaskellDepends = [
base
bytestring
containers
haskell-gi
haskell-gi-base
text
transformers
];
libraryPkgconfigDepends = [
glib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "GLib bindings";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) glib;};
"gi-gobject" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, gi-glib
, glib
, haskell-gi
, haskell-gi-base
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "gi-gobject";
version = "2.0.11";
sha256 = "fcfe35af13e118db109b9b0d969b89bb5c2a0162a1c3d1fc9413cafcd173058c";
setupHaskellDepends = [
base
Cabal
haskell-gi
];
libraryHaskellDepends = [
base
bytestring
containers
gi-glib
haskell-gi
haskell-gi-base
text
transformers
];
libraryPkgconfigDepends = [
glib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "GObject bindings";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) glib;};
"gi-gtk" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, gi-atk
, gi-cairo
, gi-gdk
, gi-gdkpixbuf
, gi-gio
, gi-glib
, gi-gobject
, gi-pango
, gtk3
, haskell-gi
, haskell-gi-base
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "gi-gtk";
version = "3.0.11";
sha256 = "a4bce9a9ea706a880bb9e8f6a2f8eb872b66acf550f8f42dd13a552b4d725f3f";
setupHaskellDepends = [
base
Cabal
haskell-gi
];
libraryHaskellDepends = [
base
bytestring
containers
gi-atk
gi-cairo
gi-gdk
gi-gdkpixbuf
gi-gio
gi-glib
gi-gobject
gi-pango
haskell-gi
haskell-gi-base
text
transformers
];
libraryPkgconfigDepends = [
gtk3
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "Gtk bindings";
license = stdenv.lib.licenses.lgpl21;

}) {gtk3 = pkgs.gnome3.gtk;};
"gi-javascriptcore" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, haskell-gi
, haskell-gi-base
, stdenv
, text
, transformers
, webkitgtk24x-gtk3
}:
mkDerivation {

pname = "gi-javascriptcore";
version = "3.0.11";
sha256 = "88f288c8e70dace97422b7385f77a4d7f856e4a2f5940abc4d41947ec76bb250";
setupHaskellDepends = [
base
Cabal
haskell-gi
];
libraryHaskellDepends = [
base
bytestring
containers
haskell-gi
haskell-gi-base
text
transformers
];
libraryPkgconfigDepends = [
webkitgtk24x-gtk3
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "JavaScriptCore bindings";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) webkitgtk24x-gtk3;};
"gi-pango" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, cairo
, containers
, gi-glib
, gi-gobject
, haskell-gi
, haskell-gi-base
, pango
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "gi-pango";
version = "1.0.11";
sha256 = "8e709c61b8e6a8d2973d7206b15e324327d79ec4b6c301b949837d33d1f7ec66";
setupHaskellDepends = [
base
Cabal
haskell-gi
];
libraryHaskellDepends = [
base
bytestring
containers
gi-glib
gi-gobject
haskell-gi
haskell-gi-base
text
transformers
];
libraryPkgconfigDepends = [
cairo
pango
];
doHaddock = false;
doCheck = false;
preCompileBuildDriver = ''
  PKG_CONFIG_PATH+=":${cairo}/lib/pkgconfig"
  setupCompileFlags+=" $(pkg-config --libs cairo-gobject)"
'';
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "Pango bindings";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) cairo; inherit (pkgs) pango;};
"gi-soup" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, gi-gio
, gi-glib
, gi-gobject
, haskell-gi
, haskell-gi-base
, libsoup
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "gi-soup";
version = "2.4.11";
sha256 = "5488104e98b7a295b44990d0063b162c951b8a1eec5df35a42bd4ba828dbd0ad";
setupHaskellDepends = [
base
Cabal
haskell-gi
];
libraryHaskellDepends = [
base
bytestring
containers
gi-gio
gi-glib
gi-gobject
haskell-gi
haskell-gi-base
text
transformers
];
libraryPkgconfigDepends = [
libsoup
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "Libsoup bindings";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) libsoup;};
"gi-webkit" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, gi-atk
, gi-cairo
, gi-gdk
, gi-gdkpixbuf
, gi-gio
, gi-glib
, gi-gobject
, gi-gtk
, gi-javascriptcore
, gi-soup
, haskell-gi
, haskell-gi-base
, stdenv
, text
, transformers
, webkitgtk24x-gtk3
}:
mkDerivation {

pname = "gi-webkit";
version = "3.0.11";
sha256 = "d707c10a9f758d5bee1fe59639fb6773a1fcdb596bc86b46c7ce19639556ff3f";
setupHaskellDepends = [
base
Cabal
haskell-gi
];
libraryHaskellDepends = [
base
bytestring
containers
gi-atk
gi-cairo
gi-gdk
gi-gdkpixbuf
gi-gio
gi-glib
gi-gobject
gi-gtk
gi-javascriptcore
gi-soup
haskell-gi
haskell-gi-base
text
transformers
];
libraryPkgconfigDepends = [
webkitgtk24x-gtk3
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "WebKit bindings";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) webkitgtk24x-gtk3;};
"ginger" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, data-default
, filepath
, http-types
, mtl
, parsec
, safe
, scientific
, stdenv
, text
, time
, transformers
, unordered-containers
, utf8-string
, vector
}:
mkDerivation {

pname = "ginger";
version = "0.3.9.1";
sha256 = "28f26b37cd2daedd841516f0e538877f84932a9813096a34e8c820de44c0323c";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
bytestring
data-default
filepath
http-types
mtl
parsec
safe
scientific
text
time
transformers
unordered-containers
utf8-string
vector
];
executableHaskellDepends = [
aeson
base
bytestring
data-default
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/tdammers/ginger";
description = "An implementation of the Jinja2 template language in Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"gio" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, Cabal
, containers
, glib
, gtk2hs-buildtools
, mtl
, stdenv
, system-glib
}:
mkDerivation {

pname = "gio";
version = "0.13.3.1";
sha256 = "ac63f42321800731b9dc1f753f27ee877c04fdf7bcbcab0e2c57348a4739d827";
enableSeparateDataOutput = true;
setupHaskellDepends = [
base
Cabal
gtk2hs-buildtools
];
libraryHaskellDepends = [
array
base
bytestring
containers
glib
mtl
];
libraryPkgconfigDepends = [
system-glib
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/gtk2hs/";
description = "Binding to GIO";
license = stdenv.lib.licenses.lgpl21;

}) {system-glib = pkgs.glib;};
"gipeda" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, cassava
, concurrent-output
, containers
, directory
, extra
, file-embed
, filepath
, gitlib
, gitlib-libgit2
, scientific
, shake
, split
, stdenv
, tagged
, text
, transformers
, unordered-containers
, vector
, yaml
}:
mkDerivation {

pname = "gipeda";
version = "0.3.3.1";
sha256 = "be7aafd3390c5d498c39482ff862a302c3bf2d7cecdba4940141297728bbb143";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
aeson
base
bytestring
cassava
concurrent-output
containers
directory
extra
file-embed
filepath
gitlib
gitlib-libgit2
scientific
shake
split
tagged
text
transformers
unordered-containers
vector
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nomeata/gipeda";
description = "Git Performance Dashboard";
license = stdenv.lib.licenses.mit;

}) {};
"giphy-api" = callPackage
({
  mkDerivation
, aeson
, base
, containers
, http-api-data
, http-client
, http-client-tls
, microlens
, microlens-th
, mtl
, network-uri
, servant
, servant-client
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "giphy-api";
version = "0.5.2.0";
sha256 = "447111d3fa32a76ffc50b26fbec59d9e9a097d7e2facb04a7a272cb9abd97ce9";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
containers
http-api-data
http-client
http-client-tls
microlens
microlens-th
mtl
network-uri
servant
servant-client
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/passy/giphy-api#readme";
description = "Giphy HTTP API wrapper and CLI search tool";
license = stdenv.lib.licenses.bsd3;

}) {};
"github" = callPackage
({
  mkDerivation
, aeson
, aeson-compat
, base
, base-compat
, base16-bytestring
, binary
, binary-orphans
, byteable
, bytestring
, containers
, cryptohash
, deepseq
, deepseq-generics
, exceptions
, hashable
, http-client
, http-client-tls
, http-link-header
, http-types
, iso8601-time
, mtl
, network-uri
, semigroups
, stdenv
, text
, time
, tls
, transformers
, transformers-compat
, unordered-containers
, vector
, vector-instances
}:
mkDerivation {

pname = "github";
version = "0.15.0";
sha256 = "f091c35c446619bace51bd4d3831563cccfbda896954ed98d2aed818feead609";
revision = "3";
editedCabalFile = "03x27qmqvs4xc9ic0219d69jhwpsk552nr7wdgzyi005l1jhs12h";
libraryHaskellDepends = [
aeson
aeson-compat
base
base-compat
base16-bytestring
binary
binary-orphans
byteable
bytestring
containers
cryptohash
deepseq
deepseq-generics
exceptions
hashable
http-client
http-client-tls
http-link-header
http-types
iso8601-time
mtl
network-uri
semigroups
text
time
tls
transformers
transformers-compat
unordered-containers
vector
vector-instances
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/github";
description = "Access to the GitHub API, v3";
license = stdenv.lib.licenses.bsd3;

}) {};
"github-release" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, http-client
, http-client-tls
, http-types
, mime-types
, optparse-generic
, stdenv
, text
, unordered-containers
, uri-templater
}:
mkDerivation {

pname = "github-release";
version = "1.0.1";
sha256 = "a0e58b9e855cdf8617ba42436c974776800573951dcf680ec3072651fc10c5b5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
http-client
http-client-tls
http-types
mime-types
optparse-generic
text
unordered-containers
uri-templater
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/github-release#readme";
description = "Upload files to GitHub releases";
license = stdenv.lib.licenses.mit;

}) {};
"github-types" = callPackage
({
  mkDerivation
, aeson
, base
, stdenv
, text
, time
}:
mkDerivation {

pname = "github-types";
version = "0.2.1";
sha256 = "cce4ea461b3ea7c92d130181244cfe7f29c10aecc7e7a980ee6722b6d6af7867";
libraryHaskellDepends = [
aeson
base
text
time
];
doHaddock = false;
doCheck = false;
description = "Type definitions for objects used by the GitHub v3 API";
license = "unknown";

}) {};
"github-webhook-handler" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, cryptohash
, github-types
, stdenv
, text
, transformers
, uuid
, vector
}:
mkDerivation {

pname = "github-webhook-handler";
version = "0.0.8";
sha256 = "1d908854606683c236720c2de3988ae723591be02b1c668bd8ba0ffa03b34fea";
revision = "1";
editedCabalFile = "1nhwindcplcyyffvzw0cig1p0m8165laq3hv94s596rsi3b5pgqr";
libraryHaskellDepends = [
aeson
base
bytestring
cryptohash
github-types
text
transformers
uuid
vector
];
doHaddock = false;
doCheck = false;
description = "GitHub WebHook Handler";
license = stdenv.lib.licenses.mit;

}) {};
"github-webhook-handler-snap" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, github-types
, github-webhook-handler
, snap-core
, stdenv
, uuid
}:
mkDerivation {

pname = "github-webhook-handler-snap";
version = "0.0.7";
sha256 = "d4f526f4027a0c1cd9bdf455fbfb0c1742539eb3379b22ba59f1647133202c91";
revision = "1";
editedCabalFile = "1l0c2xn41pylap7vw33r67pmmcafr1fdm04l9b8h206c270bsinm";
libraryHaskellDepends = [
base
bytestring
case-insensitive
github-types
github-webhook-handler
snap-core
uuid
];
doHaddock = false;
doCheck = false;
description = "GitHub WebHook Handler implementation for Snap";
license = stdenv.lib.licenses.mit;

}) {};
"gitlib" = callPackage
({
  mkDerivation
, base
, base16-bytestring
, bytestring
, conduit
, conduit-combinators
, containers
, directory
, exceptions
, filepath
, hashable
, lifted-async
, lifted-base
, monad-control
, mtl
, resourcet
, semigroups
, stdenv
, tagged
, text
, time
, transformers
, unix
, unordered-containers
}:
mkDerivation {

pname = "gitlib";
version = "3.1.1";
sha256 = "dd68758b62fb0ca52f3ed851d2e68779770b1d83f2dd846528c3538aabf395ef";
libraryHaskellDepends = [
base
base16-bytestring
bytestring
conduit
conduit-combinators
containers
directory
exceptions
filepath
hashable
lifted-async
lifted-base
monad-control
mtl
resourcet
semigroups
tagged
text
time
transformers
unix
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "API library for working with Git repositories";
license = stdenv.lib.licenses.mit;

}) {};
"gitlib-libgit2" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-combinators
, containers
, directory
, exceptions
, fast-logger
, filepath
, gitlib
, hlibgit2
, lifted-async
, lifted-base
, mmorph
, monad-control
, monad-loops
, mtl
, resourcet
, stdenv
, stm
, stm-conduit
, tagged
, template-haskell
, text
, text-icu
, time
, transformers
, transformers-base
}:
mkDerivation {

pname = "gitlib-libgit2";
version = "3.1.1";
sha256 = "fc2806ebc1bb51f5043a0d5091c5045be40bf82cae3296213b353507b8c868bb";
revision = "1";
editedCabalFile = "0v510c4sd6zwwf6mbc6gfv5sin91ckw4v6c844wrfksi9gdq3shm";
libraryHaskellDepends = [
base
bytestring
conduit
conduit-combinators
containers
directory
exceptions
fast-logger
filepath
gitlib
hlibgit2
lifted-async
lifted-base
mmorph
monad-control
monad-loops
mtl
resourcet
stm
stm-conduit
tagged
template-haskell
text
text-icu
time
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
description = "Libgit2 backend for gitlib";
license = stdenv.lib.licenses.mit;

}) {};
"gitlib-test" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-combinators
, exceptions
, gitlib
, hspec
, hspec-expectations
, HUnit
, monad-control
, stdenv
, tagged
, text
, time
, transformers
}:
mkDerivation {

pname = "gitlib-test";
version = "3.1.0.3";
sha256 = "fe0abfa269dabd63d60f856db0a82c88d6bd059de1d4d84dccaf846a1a38291f";
libraryHaskellDepends = [
base
bytestring
conduit
conduit-combinators
exceptions
gitlib
hspec
hspec-expectations
HUnit
monad-control
tagged
text
time
transformers
];
doHaddock = false;
doCheck = false;
description = "Test library for confirming gitlib backend compliance";
license = stdenv.lib.licenses.mit;

}) {};
"gitrev" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, process
, stdenv
, template-haskell
}:
mkDerivation {

pname = "gitrev";
version = "1.2.0";
sha256 = "4391e34edb5caaab901c6faa4369b246b6896c747869f6ab85b6db5524003102";
libraryHaskellDepends = [
base
directory
filepath
process
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/acfoltzer/gitrev";
description = "Compile git revision info into Haskell projects";
license = stdenv.lib.licenses.bsd3;

}) {};
"gitson" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, base-compat
, bytestring
, conduit-combinators
, conduit-extra
, directory
, errors
, filepath
, flock
, lifted-base
, monad-control
, process
, stdenv
, transformers
}:
mkDerivation {

pname = "gitson";
version = "0.5.2";
sha256 = "671dd6e7aa64ea0bb77e2db3d97bbce545a32c132015c81feebb3ff087ec2196";
libraryHaskellDepends = [
aeson
aeson-pretty
base
base-compat
bytestring
conduit-combinators
conduit-extra
directory
errors
filepath
flock
lifted-base
monad-control
process
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/myfreeweb/gitson";
description = "A document store library for Git + JSON";
license = stdenv.lib.licenses.publicDomain;

}) {};
"glabrous" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, attoparsec
, base
, bytestring
, cereal
, cereal-text
, either
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "glabrous";
version = "0.3.1";
sha256 = "419c5ec7c93c981ced838d6711e18565883abbb3b229d34a6fc904722e678ec8";
libraryHaskellDepends = [
aeson
aeson-pretty
attoparsec
base
bytestring
cereal
cereal-text
either
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/MichelBoucey/glabrous";
description = "A template DSL library";
license = stdenv.lib.licenses.bsd3;

}) {};
"glaze" = callPackage
({
  mkDerivation
, base
, lens
, stdenv
}:
mkDerivation {

pname = "glaze";
version = "0.2.0.2";
sha256 = "16b27081d6c2dac74748e6dbcbfdc6855d48c2ebc730648bf74d34ae6a44c92c";
libraryHaskellDepends = [
base
lens
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/glaze#readme";
description = "Framework for rendering things with metadata/headers and values";
license = stdenv.lib.licenses.bsd3;

}) {};
"glazier" = callPackage
({
  mkDerivation
, base
, lens
, mmorph
, mtl
, profunctors
, semigroupoids
, stdenv
, transformers
}:
mkDerivation {

pname = "glazier";
version = "0.7.0.0";
sha256 = "13eb88a1df905d3ea2671803e8c4f456671223c490b0116779af28298e7ab428";
libraryHaskellDepends = [
base
lens
mmorph
mtl
profunctors
semigroupoids
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/glazier#readme";
description = "Composable widgets framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"glazier-pipes" = callPackage
({
  mkDerivation
, base
, glazier
, lens
, mmorph
, mtl
, pipes
, pipes-concurrency
, pipes-misc
, stdenv
, stm
, stm-extras
, transformers
}:
mkDerivation {

pname = "glazier-pipes";
version = "0.1.4.0";
sha256 = "351c8002e893ad8cbb6a8eeb2b54c79b3b13665f110180a52d297f85d0a086cc";
libraryHaskellDepends = [
base
glazier
lens
mmorph
mtl
pipes
pipes-concurrency
pipes-misc
stm
stm-extras
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/glazier-pipes#readme";
description = "Converts Glazier widgets into a Pipe";
license = stdenv.lib.licenses.bsd3;

}) {};
"glib" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, glib
, gtk2hs-buildtools
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "glib";
version = "0.13.4.1";
sha256 = "f57202ed4094cc50caa8b390c8b78a1620b3c43b913edb1e5bda0f3c5be32630";
setupHaskellDepends = [
base
Cabal
gtk2hs-buildtools
];
libraryHaskellDepends = [
base
bytestring
containers
text
utf8-string
];
libraryPkgconfigDepends = [
glib
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/gtk2hs/";
description = "Binding to the GLIB library for Gtk2Hs";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) glib;};
"glob-posix" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "glob-posix";
version = "0.1.0.1";
sha256 = "3245382c77ebaceea958ef62510d073b96e10a43bf69536cf9079d69da363caf";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rdnetto/glob-posix#readme";
description = "Haskell bindings for POSIX glob library";
license = stdenv.lib.licenses.asl20;

}) {};
"gloss" = callPackage
({
  mkDerivation
, base
, bmp
, bytestring
, containers
, ghc-prim
, gloss-rendering
, GLUT
, OpenGL
, stdenv
}:
mkDerivation {

pname = "gloss";
version = "1.10.2.5";
sha256 = "e5c7c345892829f72966b5ade73b98702fe3a0c325e27c7b92e24c1a5ddc42c5";
libraryHaskellDepends = [
base
bmp
bytestring
containers
ghc-prim
gloss-rendering
GLUT
OpenGL
];
doHaddock = false;
doCheck = false;
homepage = "http://gloss.ouroborus.net";
description = "Painless 2D vector graphics, animations and simulations";
license = stdenv.lib.licenses.mit;

}) {};
"gloss-rendering" = callPackage
({
  mkDerivation
, base
, bmp
, bytestring
, containers
, GLUT
, OpenGL
, stdenv
}:
mkDerivation {

pname = "gloss-rendering";
version = "1.10.3.5";
sha256 = "00c68518b2eb62f086257238034a18065faa7939369a5b2986c2f461e6a80d73";
libraryHaskellDepends = [
base
bmp
bytestring
containers
GLUT
OpenGL
];
doHaddock = false;
doCheck = false;
description = "Gloss picture data types and rendering functions";
license = stdenv.lib.licenses.mit;

}) {};
"gogol" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, case-insensitive
, conduit
, conduit-extra
, cryptonite
, directory
, exceptions
, filepath
, gogol-core
, http-client
, http-conduit
, http-media
, http-types
, lens
, memory
, mime-types
, monad-control
, mtl
, resourcet
, stdenv
, text
, time
, transformers
, transformers-base
, unordered-containers
, x509
, x509-store
}:
mkDerivation {

pname = "gogol";
version = "0.1.1";
sha256 = "1dee6d069d6c239c8afa2240bdfc4e9674e9e648822617574732e4dc74834db2";
libraryHaskellDepends = [
aeson
base
bytestring
case-insensitive
conduit
conduit-extra
cryptonite
directory
exceptions
filepath
gogol-core
http-client
http-conduit
http-media
http-types
lens
memory
mime-types
monad-control
mtl
resourcet
text
time
transformers
transformers-base
unordered-containers
x509
x509-store
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Comprehensive Google Services SDK";
license = "unknown";

}) {};
"gogol-adexchange-buyer" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-adexchange-buyer";
version = "0.1.1";
sha256 = "d4c9ce149988ca4b2abce408785bfd43da80b55f125a6fc17b639fa4bb8c9a59";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Ad Exchange Buyer SDK";
license = "unknown";

}) {};
"gogol-adexchange-seller" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-adexchange-seller";
version = "0.1.1";
sha256 = "43b6f2037ef3cb44caf371f7639a7e024f27ee13f3d72c1497e0fe05d8c5920b";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Ad Exchange Seller SDK";
license = "unknown";

}) {};
"gogol-admin-datatransfer" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-admin-datatransfer";
version = "0.1.1";
sha256 = "4c90607116ed177c84c4980c0f14f50873fff2dcae611e3b620457608f1537a9";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Admin Data Transfer SDK";
license = "unknown";

}) {};
"gogol-admin-directory" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-admin-directory";
version = "0.1.1";
sha256 = "7898cdfac19619b73175762cce67d30baf9d1772524daf72b000e834a0cd6ef2";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Admin Directory SDK";
license = "unknown";

}) {};
"gogol-admin-emailmigration" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-admin-emailmigration";
version = "0.1.1";
sha256 = "61e9ccb239c95b1ff9da6d4fe9d6c234468a4c21e13b92f6bff65e9831a15990";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Email Migration API v2 SDK";
license = "unknown";

}) {};
"gogol-admin-reports" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-admin-reports";
version = "0.1.1";
sha256 = "5621ea9daeb864dcd0c5bb576645bbf5b6726da2e9313cd6b2514c7e2e394ccd";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Admin Reports SDK";
license = "unknown";

}) {};
"gogol-adsense" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-adsense";
version = "0.1.1";
sha256 = "725fda77a7215af5828d7f97236b25faf4e1f2120aba1006ede26fcd4c6dd1bc";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google AdSense Management SDK";
license = "unknown";

}) {};
"gogol-adsense-host" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-adsense-host";
version = "0.1.1";
sha256 = "305e3f7df6b3bcca19810ebbf954178f066fb227c7dbf68c16a49ad691578112";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google AdSense Host SDK";
license = "unknown";

}) {};
"gogol-affiliates" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-affiliates";
version = "0.1.1";
sha256 = "b90d360660ecd0ac990fa387575a9c32232a885a7b3ecc8fd3c3cf677e469a1c";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Affiliate Network SDK";
license = "unknown";

}) {};
"gogol-analytics" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-analytics";
version = "0.1.1";
sha256 = "7a557b0fabb3697434ba97aeae564d2a428b19b701dced5176822c0a388d1922";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Analytics SDK";
license = "unknown";

}) {};
"gogol-android-enterprise" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-android-enterprise";
version = "0.1.1";
sha256 = "bc669a71e754e18c3c52099e6101cf882288c365e388cd5f4c208c576aaae124";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Play EMM SDK";
license = "unknown";

}) {};
"gogol-android-publisher" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-android-publisher";
version = "0.1.1";
sha256 = "0e199dffb26576d64183fd0aa40fc16f4cd2fd1e0ee3b7b083002784c03e1efc";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Play Developer SDK";
license = "unknown";

}) {};
"gogol-appengine" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-appengine";
version = "0.1.1";
sha256 = "cbf11c854ea9ba24012260cb0e78c3e09b918a05d5569f39633523852ecd9561";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google App Engine Admin SDK";
license = "unknown";

}) {};
"gogol-apps-activity" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-apps-activity";
version = "0.1.1";
sha256 = "bb9c6aed68dc586ede859a2e71c48037c260fc6df2b1a4d4df22dfd411a0eb13";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Apps Activity SDK";
license = "unknown";

}) {};
"gogol-apps-calendar" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-apps-calendar";
version = "0.1.1";
sha256 = "cbebf7557345799436351e27485f8b4add43e2c449eb0fccb727d921ca16bc67";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Calendar SDK";
license = "unknown";

}) {};
"gogol-apps-licensing" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-apps-licensing";
version = "0.1.1";
sha256 = "dcc448bef918990ea339cdf1ac1cf46a5665254c7aab5e1a12d637c31f0c3bca";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Enterprise License Manager SDK";
license = "unknown";

}) {};
"gogol-apps-reseller" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-apps-reseller";
version = "0.1.1";
sha256 = "70dd84674f162012bf0767fdd610bfd85cac9fb083112e38023a44eab6ceee7b";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Enterprise Apps Reseller SDK";
license = "unknown";

}) {};
"gogol-apps-tasks" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-apps-tasks";
version = "0.1.1";
sha256 = "dc68e8b33ec9f34b4b35af210c05fa5b70aadf0b6d7ee634eda5b1dbc5e9feda";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Tasks SDK";
license = "unknown";

}) {};
"gogol-appstate" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-appstate";
version = "0.1.1";
sha256 = "489c7b6ff30176dbf470509864c1820186cd9c435daef45542dc2d95e429f6e5";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google App State SDK";
license = "unknown";

}) {};
"gogol-autoscaler" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-autoscaler";
version = "0.1.1";
sha256 = "cb9f8bfdb42a3d8a019d006a54b0c94242c029831fc89c3b16cf89c9e0ab69b9";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Compute Engine Autoscaler SDK";
license = "unknown";

}) {};
"gogol-bigquery" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-bigquery";
version = "0.1.1";
sha256 = "0943370cc3d7932bb813156c17bef39e0cb4b7db73ccf4471e114ede297da2d3";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google BigQuery SDK";
license = "unknown";

}) {};
"gogol-billing" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-billing";
version = "0.1.1";
sha256 = "09903877b7e6c3a87e345a26fca0fb7e1da8751f5b19aeb940479dd3f289a9e8";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Cloud Billing SDK";
license = "unknown";

}) {};
"gogol-blogger" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-blogger";
version = "0.1.1";
sha256 = "561dac9e87c7cf0930854e42ef9eb71ae3352a1267896dbee3c63cbcbadd326e";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Blogger SDK";
license = "unknown";

}) {};
"gogol-books" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-books";
version = "0.1.1";
sha256 = "0d6e9b1cecf375bc6503ece1582ffc55e151f182497ac5f6da7a1a8312356926";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Books SDK";
license = "unknown";

}) {};
"gogol-civicinfo" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-civicinfo";
version = "0.1.1";
sha256 = "53c354c9219c87c2864f9da2883657773c4e13aa635d51164bf89fc5e6d5d442";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Civic Information SDK";
license = "unknown";

}) {};
"gogol-classroom" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-classroom";
version = "0.1.1";
sha256 = "7e61a1725d1864df86e00eaadc9c94d885015c5d1310a1374b7cc8e4b2c9769a";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Classroom SDK";
license = "unknown";

}) {};
"gogol-cloudmonitoring" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-cloudmonitoring";
version = "0.1.1";
sha256 = "da90cc22762d8d9b145f06ce2d4861c7b97004730f64a3f7c84b0b0b35c64daa";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Cloud Monitoring SDK";
license = "unknown";

}) {};
"gogol-cloudtrace" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-cloudtrace";
version = "0.1.1";
sha256 = "8977ed4b61beed09daab23f5f2d1ab5495de96963970164153640a4af2e9f095";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Cloud Trace SDK";
license = "unknown";

}) {};
"gogol-compute" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-compute";
version = "0.1.1";
sha256 = "8b84d7cea48923e3df6221ec28ed6f62a31803036cae73449ee16680b6fa51aa";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Compute Engine SDK";
license = "unknown";

}) {};
"gogol-container" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-container";
version = "0.1.1";
sha256 = "9b0eaa239338f3a1c23ef6e7fd1587284060419e91cd13dccf7be088d81923b1";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Container Engine SDK";
license = "unknown";

}) {};
"gogol-core" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bifunctors
, bytestring
, case-insensitive
, conduit
, dlist
, exceptions
, hashable
, http-api-data
, http-client
, http-media
, http-types
, lens
, memory
, resourcet
, scientific
, servant
, stdenv
, text
, time
, unordered-containers
}:
mkDerivation {

pname = "gogol-core";
version = "0.1.1";
sha256 = "8f6c7dee658281c5d006c5ec4b475665544989c4d9141737e040857e15f3d483";
revision = "1";
editedCabalFile = "0dhldpvzdj8kcclzdyqg0b1p7df8jvxlwv244rkxgwd1fgqd7g2l";
libraryHaskellDepends = [
aeson
attoparsec
base
bifunctors
bytestring
case-insensitive
conduit
dlist
exceptions
hashable
http-api-data
http-client
http-media
http-types
lens
memory
resourcet
scientific
servant
text
time
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Core data types and functionality for Gogol libraries";
license = "unknown";

}) {};
"gogol-customsearch" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-customsearch";
version = "0.1.1";
sha256 = "f90d8c865d67c75dea23df6e073c63958ffba49326c72b18b5c0ad50b4c17879";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google CustomSearch SDK";
license = "unknown";

}) {};
"gogol-dataflow" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-dataflow";
version = "0.1.1";
sha256 = "b7903a479c90d03b778d868da6ae2e4a9603203a19dac3fc875195e99ef6b75c";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Dataflow SDK";
license = "unknown";

}) {};
"gogol-dataproc" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-dataproc";
version = "0.1.1";
sha256 = "39fae5e8e1b91b22f1548238cf7974b2c103ade75a8ac138cf203cf8dcde4b8b";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Cloud Dataproc SDK";
license = "unknown";

}) {};
"gogol-datastore" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-datastore";
version = "0.1.1";
sha256 = "bbf5137dc5f4a43c17b65f2320eb075b7a61e8e85f7ebaffbcffe929d8134175";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Cloud Datastore SDK";
license = "unknown";

}) {};
"gogol-debugger" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-debugger";
version = "0.1.1";
sha256 = "51edec5d57f76a4be8769983831ae655332e55f3fec90bd4bdc22a0644bfbca2";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Stackdriver Debugger SDK";
license = "unknown";

}) {};
"gogol-deploymentmanager" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-deploymentmanager";
version = "0.1.1";
sha256 = "73da04a5597395624bf6dfb3d5c73775dab4e8ef857a282efa25f5eaa2439b03";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Cloud Deployment Manager SDK";
license = "unknown";

}) {};
"gogol-dfareporting" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-dfareporting";
version = "0.1.1";
sha256 = "241afa2485a43ee29a93142fc931d8fa4b723389efa99a9c9b8e6f26f278d522";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google DCM/DFA Reporting And Trafficking SDK";
license = "unknown";

}) {};
"gogol-discovery" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-discovery";
version = "0.1.1";
sha256 = "5b8ed6b1ea962001f9b64584aa2334987d974b10073e3211f2f1a510f2dd1bfe";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google APIs Discovery Service SDK";
license = "unknown";

}) {};
"gogol-dns" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-dns";
version = "0.1.1";
sha256 = "77448be65e876e0ab9c9bdc2db24a7847eda846a567ed9f9c63b844917d97136";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Cloud DNS SDK";
license = "unknown";

}) {};
"gogol-doubleclick-bids" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-doubleclick-bids";
version = "0.1.1";
sha256 = "a0e899ecc589df89980868be218741fb2e7ece21e0837ea46618fd970339de2a";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google DoubleClick Bid Manager SDK";
license = "unknown";

}) {};
"gogol-doubleclick-search" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-doubleclick-search";
version = "0.1.1";
sha256 = "15a954b3e17f5592d787ada7997cca04d9249e0ccfd432c1e52ae1d83769af60";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google DoubleClick Search SDK";
license = "unknown";

}) {};
"gogol-drive" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-drive";
version = "0.1.1";
sha256 = "6e46b5ba960ef8481fdcaba84ef006169ff075d63fc6e4dc6cd84e0805e6d46c";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Drive SDK";
license = "unknown";

}) {};
"gogol-firebase-rules" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-firebase-rules";
version = "0.1.1";
sha256 = "981f91ad921d35eb303fb3d9c6d77c7d507ee89bece51baa7d8b8c7951e25fc2";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Firebase Rules SDK";
license = "unknown";

}) {};
"gogol-fitness" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-fitness";
version = "0.1.1";
sha256 = "0826b140ea187306c0d22fc444b98b060191d185ed125f89044d4c56eeec5601";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Fitness SDK";
license = "unknown";

}) {};
"gogol-fonts" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-fonts";
version = "0.1.1";
sha256 = "57f3e537cf035d7fe0355be1014f3df559caec6f736badfcb86e91a58b084167";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Fonts Developer SDK";
license = "unknown";

}) {};
"gogol-freebasesearch" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-freebasesearch";
version = "0.1.1";
sha256 = "0bc23693f49976034cba11ad70a00a76625907856f02c4d9931f1d01cb51751c";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Freebase Search SDK";
license = "unknown";

}) {};
"gogol-fusiontables" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-fusiontables";
version = "0.1.1";
sha256 = "dda5ab1f88dd93e0bfe8acf046d2feaccb0d3d999dd81b3d06c7e2a5cc7c4a14";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Fusion Tables SDK";
license = "unknown";

}) {};
"gogol-games" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-games";
version = "0.1.1";
sha256 = "1292b79718319d125e61ebf1a514c52f72d524c867fce7a8e04b40c98529e0ca";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Play Game Services SDK";
license = "unknown";

}) {};
"gogol-games-configuration" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-games-configuration";
version = "0.1.1";
sha256 = "3abec569eb661666b51ca5585b64adbef3990d8db5991516d6414d6c2068b35f";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Play Game Services Publishing SDK";
license = "unknown";

}) {};
"gogol-games-management" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-games-management";
version = "0.1.1";
sha256 = "ebd148164e36e7d6f42066bce24055029044af1022c906c1f63f99af6dd25e78";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Play Game Services Management SDK";
license = "unknown";

}) {};
"gogol-genomics" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-genomics";
version = "0.1.1";
sha256 = "9adf145bd9534fac9b3a16d177099fc50ba0d914635817e16cd51dfaac578c80";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Genomics SDK";
license = "unknown";

}) {};
"gogol-gmail" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-gmail";
version = "0.1.1";
sha256 = "7459c4abfdbe582f3027fda96821cf0c2baa93cdc4c00a4c3303b0aedf7886f5";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Gmail SDK";
license = "unknown";

}) {};
"gogol-groups-migration" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-groups-migration";
version = "0.1.1";
sha256 = "2670e78a424cac61d6fc948f4fa0d64bfd878878f0130263b74ac22737e385fd";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Groups Migration SDK";
license = "unknown";

}) {};
"gogol-groups-settings" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-groups-settings";
version = "0.1.1";
sha256 = "c8e5efeb91f968fbe5ebe7183f7a2ff362589de03bfa4917417d9707fe6ce1ed";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Groups Settings SDK";
license = "unknown";

}) {};
"gogol-identity-toolkit" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-identity-toolkit";
version = "0.1.1";
sha256 = "25e5c7eba65629c70297c05327cd9321bef58ec3ad5b58559b0064fc8de7915b";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Identity Toolkit SDK";
license = "unknown";

}) {};
"gogol-kgsearch" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-kgsearch";
version = "0.1.1";
sha256 = "851191e764c93914fcda810cd103a4fbaca3b45c6a47c2a1d699198a81d5f337";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Knowledge Graph Search SDK";
license = "unknown";

}) {};
"gogol-latencytest" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-latencytest";
version = "0.1.1";
sha256 = "90caade46451279a4645a71dba459c807d35ded423413e2e2f45078a538ef3cd";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Cloud Network Performance Monitoring SDK";
license = "unknown";

}) {};
"gogol-logging" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-logging";
version = "0.1.1";
sha256 = "2320ad07e231bdbdcb0e39f702917224e29999041266e9b3a4a67b5ee0854456";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Stackdriver Logging SDK";
license = "unknown";

}) {};
"gogol-maps-coordinate" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-maps-coordinate";
version = "0.1.1";
sha256 = "5b60120062e741337e299724aa09153f9c7985fff4fb25486a9f7c57df5e8b89";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Maps Coordinate SDK";
license = "unknown";

}) {};
"gogol-maps-engine" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-maps-engine";
version = "0.1.1";
sha256 = "fb267eb453a2d915629882f448f28488c6d60ccbd8a64071723e5da566616ef4";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Maps Engine SDK";
license = "unknown";

}) {};
"gogol-mirror" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-mirror";
version = "0.1.1";
sha256 = "0fb991b8d71f238d3706d7d944271a291aa41172f3a6730fbd2e411128f44eed";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Mirror SDK";
license = "unknown";

}) {};
"gogol-monitoring" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-monitoring";
version = "0.1.1";
sha256 = "906a513ac17c82c932b50045ca61bf91625d88a8cc962a4d9b0831a218ca3e61";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Stackdriver Monitoring SDK";
license = "unknown";

}) {};
"gogol-oauth2" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-oauth2";
version = "0.1.1";
sha256 = "d2c60dc2976a6d32f980d67d60e54735ac45e265c73956d7b32fa29918c10207";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google OAuth2 SDK";
license = "unknown";

}) {};
"gogol-pagespeed" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-pagespeed";
version = "0.1.1";
sha256 = "a2071deb9101e80f6ffdf6d1945d21df433a256f666e7e0a8e3f1642817c2dd1";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google PageSpeed Insights SDK";
license = "unknown";

}) {};
"gogol-partners" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-partners";
version = "0.1.1";
sha256 = "a292356748aa7e00c35f755e1515409b2848244926630902f5ded0773048c8bc";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Partners SDK";
license = "unknown";

}) {};
"gogol-people" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-people";
version = "0.1.1";
sha256 = "adbb0f4b9df631ddca20f269f7a3518aeefbaab8b0ae51e0568a4e1d0e5abc76";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google People SDK";
license = "unknown";

}) {};
"gogol-play-moviespartner" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-play-moviespartner";
version = "0.1.1";
sha256 = "d674196adb4deb01578cb93290953c8d8fb88a741937f8f5a53ebc57e8552623";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Play Movies Partner SDK";
license = "unknown";

}) {};
"gogol-plus" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-plus";
version = "0.1.1";
sha256 = "a8f2751e8b1c2b55481592b7644672972f3d983fc2c7d3ede9ac696e9c3626d1";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google + SDK";
license = "unknown";

}) {};
"gogol-plus-domains" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-plus-domains";
version = "0.1.1";
sha256 = "7ccfb46bec79938344629a2199df912e6279d8da06f449a16faa69309e49afea";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google + Domains SDK";
license = "unknown";

}) {};
"gogol-prediction" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-prediction";
version = "0.1.1";
sha256 = "7317244d941417971e93b42bc6a4a87220bafdc943e3ab752890380875a37e58";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Prediction SDK";
license = "unknown";

}) {};
"gogol-proximitybeacon" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-proximitybeacon";
version = "0.1.1";
sha256 = "96ef7f2878d294e0d08b2cef02106c40cfc19774dabdee37890b359579d54fb2";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Proximity Beacon SDK";
license = "unknown";

}) {};
"gogol-pubsub" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-pubsub";
version = "0.1.1";
sha256 = "ffc159c780ed332cc287ecc953501f405d77c9cb69074601b51f7e36b1d61d18";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Cloud Pub/Sub SDK";
license = "unknown";

}) {};
"gogol-qpxexpress" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-qpxexpress";
version = "0.1.1";
sha256 = "436863f8807d67f615ff615f3c7a3b38f50f1fbdb3ae9351391c4a559aca24be";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google QPX Express SDK";
license = "unknown";

}) {};
"gogol-replicapool" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-replicapool";
version = "0.1.1";
sha256 = "e2a0a6a0da1ffc95eee4d233d85bbb6097466fc644ae73c7600477d2b2845b75";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Compute Engine Instance Group Manager SDK";
license = "unknown";

}) {};
"gogol-replicapool-updater" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-replicapool-updater";
version = "0.1.1";
sha256 = "2cb4678f91f2c8eff2ebf9c84bcdef003abb3e1fcc120dc4d36879e676c71927";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Compute Engine Instance Group Updater SDK";
license = "unknown";

}) {};
"gogol-resourcemanager" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-resourcemanager";
version = "0.1.1";
sha256 = "b111d37b51d11631d32c0ba201d0483a4693a33d4b805038a74ddca049618577";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Cloud Resource Manager SDK";
license = "unknown";

}) {};
"gogol-resourceviews" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-resourceviews";
version = "0.1.1";
sha256 = "76457816587d173633ae5e421617e384599f104079a7f5db3ce954174a59b823";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Compute Engine Instance Groups SDK";
license = "unknown";

}) {};
"gogol-script" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-script";
version = "0.1.1";
sha256 = "30b61c4088de0564cafe8fea83d9bd3666db7c3236b6c7b153b6794007f1dd0f";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Apps Script Execution SDK";
license = "unknown";

}) {};
"gogol-sheets" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-sheets";
version = "0.1.1";
sha256 = "44b3028332b6bbfa3243e3085777b5a85a3361a75b6733c563b2462a764da678";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Sheets SDK";
license = "unknown";

}) {};
"gogol-shopping-content" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-shopping-content";
version = "0.1.1";
sha256 = "28c77ade1591d243933517cda460edf2f30b2682ccd3e14007cc5383bc65551f";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Content API for Shopping SDK";
license = "unknown";

}) {};
"gogol-siteverification" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-siteverification";
version = "0.1.1";
sha256 = "eb2d75deeb35168af169ed77ce69d1e12e888128c3a3a77df7e0fcc98b0cfbe1";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Site Verification SDK";
license = "unknown";

}) {};
"gogol-spectrum" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-spectrum";
version = "0.1.1";
sha256 = "31329fe1e2304d729bc1c36204d466140ebf6ed68183a22f3527eb609ef82ec1";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Spectrum Database SDK";
license = "unknown";

}) {};
"gogol-sqladmin" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-sqladmin";
version = "0.1.1";
sha256 = "6f7baa334dfe6e2cc430a1692d48ca20ec656ab10ff504f8f77dbde382c241bf";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Cloud SQL Administration SDK";
license = "unknown";

}) {};
"gogol-storage" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-storage";
version = "0.1.1";
sha256 = "7af4f34560e37bbcd7dfb6a872225806afec7736322f20a99497e3817486aa72";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Cloud Storage JSON SDK";
license = "unknown";

}) {};
"gogol-storage-transfer" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-storage-transfer";
version = "0.1.1";
sha256 = "7f32157f51d3b5d3946a70d8015d03004f9d35c7aa5ef614249e516b9acca745";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Storage Transfer SDK";
license = "unknown";

}) {};
"gogol-tagmanager" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-tagmanager";
version = "0.1.1";
sha256 = "8dfe4001b9df03cc812ae11d7c9f91dd063da3fc26242426b409b5dd6ae420ee";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Tag Manager SDK";
license = "unknown";

}) {};
"gogol-taskqueue" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-taskqueue";
version = "0.1.1";
sha256 = "4797b39b38fb82fc7edf0314d2b168d78c05494c68fa81ef0c978e172452de1c";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google TaskQueue SDK";
license = "unknown";

}) {};
"gogol-translate" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-translate";
version = "0.1.1";
sha256 = "208cf8e92f66cfe35502a07eceb929a63f836af5802344d0b43796cf81c4edaa";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Translate SDK";
license = "unknown";

}) {};
"gogol-urlshortener" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-urlshortener";
version = "0.1.1";
sha256 = "d958cba0e06b15512713ad893ae1a8a47f0654b2b734d06c91f23dd781fa7cf8";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google URL Shortener SDK";
license = "unknown";

}) {};
"gogol-useraccounts" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-useraccounts";
version = "0.1.1";
sha256 = "4064ad99cea0db098c6f74fd36b1ba6167354a0e889f7bbc773b08a045ef8647";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Cloud User Accounts SDK";
license = "unknown";

}) {};
"gogol-vision" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-vision";
version = "0.1.1";
sha256 = "e6046ce0d2c131eb0d5c0366577a638eb59e536eb4c4e462a27b0bb05090a565";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Cloud Vision SDK";
license = "unknown";

}) {};
"gogol-webmaster-tools" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-webmaster-tools";
version = "0.1.1";
sha256 = "cfe78f510843473f6195b870de4de782cb5309e58f85af4afcb015c889fc9608";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google Search Console SDK";
license = "unknown";

}) {};
"gogol-youtube" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-youtube";
version = "0.1.1";
sha256 = "a9a9b267bef13f1dcfebd49a2d049a125c5774eba6774e1c8384570e80404f8b";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google YouTube Data SDK";
license = "unknown";

}) {};
"gogol-youtube-analytics" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-youtube-analytics";
version = "0.1.1";
sha256 = "98297021605ee870f20dcd4c8d8724d8390f9564a4acac237210632b70f7c91b";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google YouTube Analytics SDK";
license = "unknown";

}) {};
"gogol-youtube-reporting" = callPackage
({
  mkDerivation
, base
, gogol-core
, stdenv
}:
mkDerivation {

pname = "gogol-youtube-reporting";
version = "0.1.1";
sha256 = "96d1bf151a30efa99e0ee01407ed1d3356bbc61bf696e691ba344a2eeae35e2c";
libraryHaskellDepends = [
base
gogol-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/gogol";
description = "Google YouTube Reporting SDK";
license = "unknown";

}) {};
"google-cloud" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, http-client
, http-client-tls
, http-types
, mtl
, random
, scientific
, stdenv
, stm
, text
, time
, unordered-containers
}:
mkDerivation {

pname = "google-cloud";
version = "0.0.4";
sha256 = "09a77ce6846ea0c5f9d7e5578dcddcbaf4905437445edb45c2da35456324fb9a";
revision = "1";
editedCabalFile = "0512swl7ydlcjdbvcb2xm59q97yr3wxgh3sfdsz3zdm1y88qi18c";
libraryHaskellDepends = [
aeson
base
bytestring
http-client
http-client-tls
http-types
mtl
random
scientific
stm
text
time
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Client for the Google Cloud APIs";
license = stdenv.lib.licenses.mit;

}) {};
"google-oauth2-jwt" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, HsOpenSSL
, RSA
, stdenv
, text
, unix-time
}:
mkDerivation {

pname = "google-oauth2-jwt";
version = "0.1.3";
sha256 = "1597575b4d03fea87e7411dd905b2db59221a6050986bd4cffadf4473da1c00b";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
HsOpenSSL
RSA
text
unix-time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/MichelBoucey/google-oauth2-jwt";
description = "Get a signed JWT for Google Service Accounts";
license = stdenv.lib.licenses.bsd3;

}) {};
"google-translate" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, http-api-data
, http-client
, servant
, servant-client
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "google-translate";
version = "0.3";
sha256 = "b89c6761fe3a8f4331f35a48b6758968449c2228fa00a68a69ccc9b11d9a1f64";
libraryHaskellDepends = [
aeson
base
bytestring
http-api-data
http-client
servant
servant-client
text
transformers
];
doHaddock = false;
doCheck = false;
description = "Google Translate API bindings";
license = stdenv.lib.licenses.bsd3;

}) {};
"gpolyline" = callPackage
({
  mkDerivation
, base
, split
, stdenv
}:
mkDerivation {

pname = "gpolyline";
version = "0.1.0.1";
sha256 = "28b3a644853ba6f0a7d6465d8d62646a10c995008a799ae67e728c8cf4a17a05";
libraryHaskellDepends = [
base
split
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fegu/gpolyline";
description = "Pure module for encoding/decoding Google Polyline";
license = stdenv.lib.licenses.bsd3;

}) {};
"graph-core" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, hashable
, mtl
, safe
, stdenv
, unordered-containers
, vector
}:
mkDerivation {

pname = "graph-core";
version = "0.3.0.0";
sha256 = "378f0baa40ebbb78e8c389f79e363eb573cdf182f799684d2f3d6ac51b10e854";
libraryHaskellDepends = [
base
containers
deepseq
hashable
mtl
safe
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/factisresearch/graph-core";
description = "Fast, memory efficient and persistent graph implementation";
license = stdenv.lib.licenses.mit;

}) {};
"graph-wrapper" = callPackage
({
  mkDerivation
, array
, base
, containers
, stdenv
}:
mkDerivation {

pname = "graph-wrapper";
version = "0.2.5.1";
sha256 = "8361853fca2d2251bd233e18393053dd391d21ca6f210b2bc861b0e0f4c2e113";
libraryHaskellDepends = [
array
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/soenkehahn/graph-wrapper";
description = "A wrapper around the standard Data.Graph with a less awkward interface";
license = stdenv.lib.licenses.bsd3;

}) {};
"graphs" = callPackage
({
  mkDerivation
, array
, base
, containers
, stdenv
, transformers
, transformers-compat
, void
}:
mkDerivation {

pname = "graphs";
version = "0.7";
sha256 = "eea656ac6092eac99bafc0b7817efa34529b895408fc1267a5b573fb332f6f4c";
libraryHaskellDepends = [
array
base
containers
transformers
transformers-compat
void
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/graphs";
description = "A simple monadic graph library";
license = stdenv.lib.licenses.bsd3;

}) {};
"graphviz" = callPackage
({
  mkDerivation
, base
, bytestring
, colour
, containers
, directory
, dlist
, fgl
, filepath
, polyparse
, process
, stdenv
, temporary
, text
, transformers
, wl-pprint-text
}:
mkDerivation {

pname = "graphviz";
version = "2999.18.1.2";
sha256 = "b08c2026d3810c15f6ad49a07fd7b879978d958fa477b369b719ec00741c85fc";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
colour
containers
directory
dlist
fgl
filepath
polyparse
process
temporary
text
transformers
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/graphviz/";
description = "Bindings to Graphviz for graph visualisation";
license = stdenv.lib.licenses.bsd3;

}) {};
"gravatar" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default
, HTTP
, pureMD5
, stdenv
, text
}:
mkDerivation {

pname = "gravatar";
version = "0.8.0";
sha256 = "6f6000acaea47f3fc8711f5a2a62d5fbe96f5bb698fcb997f9f07ffe3102f4d7";
libraryHaskellDepends = [
base
bytestring
data-default
HTTP
pureMD5
text
];
doHaddock = false;
doCheck = false;
description = "Generate Gravatar image URLs";
license = stdenv.lib.licenses.mit;

}) {};
"graylog" = callPackage
({
  mkDerivation
, aeson
, aeson-casing
, base
, bytestring
, network
, random
, scientific
, stdenv
, text
, time
, vector
}:
mkDerivation {

pname = "graylog";
version = "0.1.0.1";
sha256 = "2d8173e61da8d02c39cb95e6ccea8a167c792f682a496aed5fe4edfd0e6a0082";
libraryHaskellDepends = [
aeson
aeson-casing
base
bytestring
network
random
scientific
text
time
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AndrewRademacher/haskell-graylog";
description = "Support for graylog output";
license = "unknown";

}) {};
"groom" = callPackage
({
  mkDerivation
, base
, haskell-src-exts
, stdenv
}:
mkDerivation {

pname = "groom";
version = "0.1.2";
sha256 = "0e820122cad388f31c3ef0815d7ff93b9e95a8fdec0d6c560c379fe0ecfdb010";
libraryHaskellDepends = [
base
haskell-src-exts
];
doHaddock = false;
doCheck = false;
description = "Pretty printing for well-behaved Show instances";
license = stdenv.lib.licenses.publicDomain;

}) {};
"grouped-list" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, pointed
, stdenv
}:
mkDerivation {

pname = "grouped-list";
version = "0.2.1.2";
sha256 = "5bc49f34b1d9759a819c919971d789b14d37a8e22de811a5fc062675e3f8e875";
libraryHaskellDepends = [
base
containers
deepseq
pointed
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Daniel-Diaz/grouped-list/blob/master/README.md";
description = "Grouped lists. Equal consecutive elements are grouped.";
license = stdenv.lib.licenses.bsd3;

}) {};
"groupoids" = callPackage
({
  mkDerivation
, base
, semigroupoids
, stdenv
}:
mkDerivation {

pname = "groupoids";
version = "4.0";
sha256 = "6671953fa0970c13ac8014278fcd6227b4c07e1a69d5a23965e2df1418218a22";
libraryHaskellDepends = [
base
semigroupoids
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/groupoids/";
description = "This package has been absorbed into semigroupoids 4.0";
license = stdenv.lib.licenses.bsd3;

}) {};
"groups" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "groups";
version = "0.4.0.0";
sha256 = "d328395164033e310148d57d5be86fc6cc4dbc97b4296b91f235b213cc80e8ce";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Haskell 98 groups";
license = stdenv.lib.licenses.bsd3;

}) {};
"gtk" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, Cabal
, cairo
, containers
, gio
, glib
, gtk2
, gtk2hs-buildtools
, mtl
, pango
, stdenv
, text
}:
mkDerivation {

pname = "gtk";
version = "0.14.6";
sha256 = "707906120cb8f0aa704fb2045a33600b7636166d74442a9c27c4262bac708327";
enableSeparateDataOutput = true;
setupHaskellDepends = [
base
Cabal
gtk2hs-buildtools
];
libraryHaskellDepends = [
array
base
bytestring
cairo
containers
gio
glib
mtl
pango
text
];
libraryPkgconfigDepends = [
gtk2
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/gtk2hs/";
description = "Binding to the Gtk+ graphical user interface library";
license = stdenv.lib.licenses.lgpl21;

}) {gtk2 = pkgs.gnome2.gtk;};
"gtk2hs-buildtools" = callPackage
({
  mkDerivation
, alex
, array
, base
, Cabal
, containers
, directory
, filepath
, happy
, hashtables
, pretty
, process
, random
, stdenv
}:
mkDerivation {

pname = "gtk2hs-buildtools";
version = "0.13.2.2";
sha256 = "c5e4b59f8711ec4e4e25a91ce4213c5396dd0b56179751ed6da255ac35edfb4b";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
array
base
Cabal
containers
directory
filepath
hashtables
pretty
process
random
];
libraryToolDepends = [
alex
happy
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/gtk2hs/";
description = "Tools to build the Gtk2Hs suite of User Interface libraries";
license = stdenv.lib.licenses.gpl2;

}) {};
"gtk3" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, Cabal
, cairo
, containers
, gio
, glib
, gtk2hs-buildtools
, gtk3
, mtl
, pango
, stdenv
, text
}:
mkDerivation {

pname = "gtk3";
version = "0.14.6";
sha256 = "f4c0d3c51a5e06e5f6a8fcfc2a1303e0a3ed0242309fc6c1b9603be9de1f4258";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
setupHaskellDepends = [
base
Cabal
gtk2hs-buildtools
];
libraryHaskellDepends = [
array
base
bytestring
cairo
containers
gio
glib
mtl
pango
text
];
libraryPkgconfigDepends = [
gtk3
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/gtk2hs/";
description = "Binding to the Gtk+ 3 graphical user interface library";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) gtk3;};
"gtksourceview3" = callPackage
({
  mkDerivation
, array
, base
, Cabal
, containers
, glib
, gtk2hs-buildtools
, gtk3
, gtksourceview3
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "gtksourceview3";
version = "0.13.3.1";
sha256 = "9a7e12fda53d532668ee7f830c0aacf43c8a0c9a65f571fa81088a7372383b7b";
enableSeparateDataOutput = true;
setupHaskellDepends = [
base
Cabal
gtk2hs-buildtools
];
libraryHaskellDepends = [
array
base
containers
glib
gtk3
mtl
text
];
libraryPkgconfigDepends = [
gtksourceview3
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/gtk2hs/";
description = "Binding to the GtkSourceView library";
license = stdenv.lib.licenses.lgpl21;

}) {gtksourceview3 = pkgs.gnome3.gtksourceview;};
"hOpenPGP" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base16-bytestring
, base64-bytestring
, bifunctors
, binary
, binary-conduit
, byteable
, bytestring
, bzlib
, conduit
, conduit-extra
, containers
, crypto-cipher-types
, cryptonite
, data-default-class
, errors
, hashable
, incremental-parser
, ixset-typed
, lens
, memory
, monad-loops
, nettle
, network
, network-uri
, newtype
, openpgp-asciiarmor
, resourcet
, securemem
, semigroups
, split
, stdenv
, text
, time
, time-locale-compat
, transformers
, unordered-containers
, wl-pprint-extras
, zlib
}:
mkDerivation {

pname = "hOpenPGP";
version = "2.5.5";
sha256 = "1801efa965085572197253eb77bfaf2fc2a20c18d93c43c436d506237871ad54";
libraryHaskellDepends = [
aeson
attoparsec
base
base16-bytestring
base64-bytestring
bifunctors
binary
binary-conduit
byteable
bytestring
bzlib
conduit
conduit-extra
containers
crypto-cipher-types
cryptonite
data-default-class
errors
hashable
incremental-parser
ixset-typed
lens
memory
monad-loops
nettle
network
network-uri
newtype
openpgp-asciiarmor
resourcet
securemem
semigroups
split
text
time
time-locale-compat
transformers
unordered-containers
wl-pprint-extras
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://floss.scru.org/hOpenPGP/";
description = "native Haskell implementation of OpenPGP (RFC4880)";
license = stdenv.lib.licenses.mit;

}) {};
"hPDB" = callPackage
({
  mkDerivation
, AC-Vector
, base
, bytestring
, containers
, deepseq
, directory
, ghc-prim
, iterable
, mmap
, mtl
, Octree
, parallel
, QuickCheck
, stdenv
, tagged
, template-haskell
, text
, unordered-containers
, vector
, zlib
}:
mkDerivation {

pname = "hPDB";
version = "1.2.0.9";
sha256 = "444b884c1e9af07ae75784d13c83736bcd94b7d766e2ec11d696e8adef8f8ecd";
libraryHaskellDepends = [
AC-Vector
base
bytestring
containers
deepseq
directory
ghc-prim
iterable
mmap
mtl
Octree
parallel
QuickCheck
tagged
template-haskell
text
unordered-containers
vector
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/BioHaskell/hPDB";
description = "Protein Databank file format library";
license = stdenv.lib.licenses.bsd3;

}) {};
"hPDB-examples" = callPackage
({
  mkDerivation
, AC-Vector
, base
, bytestring
, containers
, deepseq
, directory
, ghc-prim
, GLUT
, hPDB
, iterable
, mtl
, Octree
, OpenGL
, QuickCheck
, stdenv
, template-haskell
, text
, text-format
, vector
}:
mkDerivation {

pname = "hPDB-examples";
version = "1.2.0.7";
sha256 = "3330e001829767acfa862897c4df85d5d349e6fd2630f7d7ac7e6f5d4fde981b";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
AC-Vector
base
bytestring
containers
deepseq
directory
ghc-prim
GLUT
hPDB
iterable
mtl
Octree
OpenGL
QuickCheck
template-haskell
text
text-format
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/BioHaskell/hPDB-examples";
description = "Examples for hPDB library";
license = stdenv.lib.licenses.bsd3;

}) {};
"hackage-db" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, directory
, filepath
, stdenv
, tar
, utf8-string
}:
mkDerivation {

pname = "hackage-db";
version = "1.22";
sha256 = "4d32a368f8d41cba824bc7a1869d9b8df0e845496a4610f6e7f32791083f1066";
revision = "1";
editedCabalFile = "0xj3wwf0wl8qfcz4zsxw0r6f79rg7h010jfv54gsiyzwpf67l9xm";
libraryHaskellDepends = [
base
bytestring
Cabal
containers
directory
filepath
tar
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/peti/hackage-db";
description = "access Hackage's package database via Data.Map";
license = stdenv.lib.licenses.bsd3;

}) {};
"hackage-security" = callPackage
({
  mkDerivation
, base
, base16-bytestring
, base64-bytestring
, bytestring
, Cabal
, containers
, cryptohash-sha256
, directory
, ed25519
, filepath
, ghc-prim
, mtl
, network
, network-uri
, parsec
, pretty
, stdenv
, tar
, template-haskell
, time
, transformers
, zlib
}:
mkDerivation {

pname = "hackage-security";
version = "0.5.2.2";
sha256 = "507a837851264a774c8f4d400f798c3dac5be11dc428fe72d33ef594ca533c41";
revision = "5";
editedCabalFile = "0f1ml7dvwk4xrz3gsf133n67cbxzf0sz5frxfsx9i79x1yrg9zdj";
libraryHaskellDepends = [
base
base16-bytestring
base64-bytestring
bytestring
Cabal
containers
cryptohash-sha256
directory
ed25519
filepath
ghc-prim
mtl
network
network-uri
parsec
pretty
tar
template-haskell
time
transformers
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/well-typed/hackage-security";
description = "Hackage security library";
license = stdenv.lib.licenses.bsd3;

}) {};
"hackernews" = callPackage
({
  mkDerivation
, aeson
, base
, http-client
, http-client-tls
, http-types
, QuickCheck
, quickcheck-instances
, servant
, servant-client
, stdenv
, string-conversions
, text
}:
mkDerivation {

pname = "hackernews";
version = "1.1.1.0";
sha256 = "6544eb03de96d0c9b6de1556b8efba3b4265f84ab65a351068fdad199c9fe844";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
http-client
http-types
QuickCheck
quickcheck-instances
servant
servant-client
string-conversions
text
];
executableHaskellDepends = [
base
http-client
http-client-tls
];
doHaddock = false;
doCheck = false;
description = "API for Hacker News";
license = stdenv.lib.licenses.mit;

}) {};
"haddock-library" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, stdenv
, transformers
}:
mkDerivation {

pname = "haddock-library";
version = "1.4.2";
sha256 = "e8edf0714ef3c0e64ad61db6e9f3c1ca0980941b4e9128c94881588cdb4168dc";
libraryHaskellDepends = [
base
bytestring
deepseq
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haddock/";
description = "Library exposing some functionality of Haddock";
license = stdenv.lib.licenses.bsd3;

}) {};
"hailgun" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, email-validate
, exceptions
, filepath
, http-client
, http-client-tls
, http-types
, stdenv
, tagsoup
, text
, time
, transformers
}:
mkDerivation {

pname = "hailgun";
version = "0.4.1.2";
sha256 = "f0b8e11e2a09d0d737620ed46e8029c5679cfe392c47df4be5ee3ba63a114ff1";
libraryHaskellDepends = [
aeson
base
bytestring
email-validate
exceptions
filepath
http-client
http-client-tls
http-types
tagsoup
text
time
transformers
];
doHaddock = false;
doCheck = false;
description = "Mailgun REST api interface for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"hailgun-simple" = callPackage
({
  mkDerivation
, base
, email-validate
, hailgun
, mtl
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "hailgun-simple";
version = "0.1.0.0";
sha256 = "30526e6b7ec6083b090e880ef6fe942cc8425d3b2700bac565e4fc6629ec2954";
libraryHaskellDepends = [
base
email-validate
hailgun
mtl
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/hailgun-simple";
description = "Easy-to-use wrapper for the hailgun package";
license = stdenv.lib.licenses.bsd3;

}) {};
"hakyll" = callPackage
({
  mkDerivation
, base
, binary
, blaze-html
, blaze-markup
, bytestring
, containers
, cryptohash
, data-default
, deepseq
, directory
, filepath
, fsnotify
, http-conduit
, http-types
, lrucache
, mtl
, network
, network-uri
, optparse-applicative
, pandoc
, pandoc-citeproc
, parsec
, process
, random
, regex-base
, regex-tdfa
, resourcet
, scientific
, stdenv
, system-filepath
, tagsoup
, text
, time
, time-locale-compat
, unordered-containers
, vector
, wai
, wai-app-static
, warp
, yaml
}:
mkDerivation {

pname = "hakyll";
version = "4.9.5.1";
sha256 = "8deca33939717372ca227559dfe82aa0b02af49b19e9ea60051f555dcee2cfe6";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
binary
blaze-html
blaze-markup
bytestring
containers
cryptohash
data-default
deepseq
directory
filepath
fsnotify
http-conduit
http-types
lrucache
mtl
network
network-uri
optparse-applicative
pandoc
pandoc-citeproc
parsec
process
random
regex-base
regex-tdfa
resourcet
scientific
system-filepath
tagsoup
text
time
time-locale-compat
unordered-containers
vector
wai
wai-app-static
warp
yaml
];
executableHaskellDepends = [
base
directory
filepath
];
doHaddock = false;
doCheck = false;
homepage = "http://jaspervdj.be/hakyll";
description = "A static website compiler library";
license = stdenv.lib.licenses.bsd3;

}) {};
"half" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "half";
version = "0.2.2.3";
sha256 = "85c244c80d1c889a3d79073a6f5a99d9e769dbe3c574ca11d992b2b4f7599a5c";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/half";
description = "Half-precision floating-point";
license = stdenv.lib.licenses.bsd3;

}) {};
"hamilton" = callPackage
({
  mkDerivation
, ad
, ansi-wl-pprint
, base
, comonad
, containers
, free
, hmatrix
, hmatrix-gsl
, optparse-applicative
, stdenv
, typelits-witnesses
, vector
, vector-sized
, vty
}:
mkDerivation {

pname = "hamilton";
version = "0.1.0.0";
sha256 = "2c8653d3272e7fa59bfef888771ebafb8e265ba10ee03cdb8b73b5bc3bcf98d7";
revision = "2";
editedCabalFile = "17d4qaib8539pyzagq8vrqyc8g3a1g0jgw67jpzjyjs7v2f0kagh";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ad
base
comonad
free
hmatrix
hmatrix-gsl
typelits-witnesses
vector-sized
];
executableHaskellDepends = [
ansi-wl-pprint
base
containers
hmatrix
optparse-applicative
vector
vector-sized
vty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mstksg/hamilton";
description = "Physics on generalized coordinate systems using Hamiltonian Mechanics and AD";
license = stdenv.lib.licenses.bsd3;

}) {};
"hamlet" = callPackage
({
  mkDerivation
, base
, shakespeare
, stdenv
}:
mkDerivation {

pname = "hamlet";
version = "1.2.0";
sha256 = "d1c94b259163cb37f5c02ef3418ebf4caf8d95c8ee00588d4493aa3aae1a8a66";
libraryHaskellDepends = [
base
shakespeare
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/shakespearean-templates";
description = "Haml-like template files that are compile-time checked (deprecated)";
license = stdenv.lib.licenses.mit;

}) {};
"hapistrano" = callPackage
({
  mkDerivation
, base
, base-compat
, either
, filepath
, mtl
, process
, stdenv
, time
, time-locale-compat
, transformers
}:
mkDerivation {

pname = "hapistrano";
version = "0.2.1.2";
sha256 = "23ad0b7a3702fad6fd19b82ffc2db2ef99308c1ed6b73c3bdad700e08a44ed09";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
either
filepath
mtl
process
time
time-locale-compat
transformers
];
executableHaskellDepends = [
base
base-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/stackbuilders/hapistrano";
description = "A deployment library for Haskell applications";
license = stdenv.lib.licenses.mit;

}) {};
"happstack-authenticate" = callPackage
({
  mkDerivation
, acid-state
, aeson
, authenticate
, base
, base64-bytestring
, boomerang
, bytestring
, containers
, data-default
, email-validate
, filepath
, happstack-hsp
, happstack-jmacro
, happstack-server
, hsp
, hsx-jmacro
, hsx2hs
, http-conduit
, http-types
, ixset-typed
, jmacro
, jwt
, lens
, mime-mail
, mtl
, pwstore-purehaskell
, random
, safecopy
, shakespeare
, stdenv
, text
, time
, unordered-containers
, userid
, web-routes
, web-routes-boomerang
, web-routes-happstack
, web-routes-hsp
, web-routes-th
}:
mkDerivation {

pname = "happstack-authenticate";
version = "2.3.4.7";
sha256 = "6c2d83aa09fe2fb630a1aaca8b25e7e09b0a91b475f24e5dfb0c307c8f34b607";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
acid-state
aeson
authenticate
base
base64-bytestring
boomerang
bytestring
containers
data-default
email-validate
filepath
happstack-hsp
happstack-jmacro
happstack-server
hsp
hsx-jmacro
hsx2hs
http-conduit
http-types
ixset-typed
jmacro
jwt
lens
mime-mail
mtl
pwstore-purehaskell
random
safecopy
shakespeare
text
time
unordered-containers
userid
web-routes
web-routes-boomerang
web-routes-happstack
web-routes-hsp
web-routes-th
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/";
description = "Happstack Authentication Library";
license = stdenv.lib.licenses.bsd3;

}) {};
"happstack-clientsession" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, clientsession
, happstack-server
, monad-control
, mtl
, safecopy
, stdenv
, transformers-base
}:
mkDerivation {

pname = "happstack-clientsession";
version = "7.3.1";
sha256 = "5b83ea0dae41857ec9ba6de68842633e85297660565e15c739d238f51b3f86ea";
libraryHaskellDepends = [
base
bytestring
cereal
clientsession
happstack-server
monad-control
mtl
safecopy
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "http://happstack.com";
description = "client-side session data";
license = stdenv.lib.licenses.bsd3;

}) {};
"happstack-hsp" = callPackage
({
  mkDerivation
, base
, bytestring
, happstack-server
, harp
, hsp
, hsx2hs
, mtl
, stdenv
, syb
, text
, utf8-string
}:
mkDerivation {

pname = "happstack-hsp";
version = "7.3.7.1";
sha256 = "bbc884e4a5ca78faf08e17799c1d037622e377915ece889674004e0e54109617";
libraryHaskellDepends = [
base
bytestring
happstack-server
harp
hsp
hsx2hs
mtl
syb
text
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/";
description = "Support for using HSP templates in Happstack";
license = stdenv.lib.licenses.bsd3;

}) {};
"happstack-jmacro" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, cereal
, digest
, happstack-server
, jmacro
, stdenv
, text
, utf8-string
, wl-pprint-text
}:
mkDerivation {

pname = "happstack-jmacro";
version = "7.0.11";
sha256 = "29c6b844d91fb7288c5264312c0cd203d964cfb0a13f98a5551699350fdbdf1c";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
cereal
digest
happstack-server
jmacro
text
utf8-string
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/";
description = "Support for using JMacro with Happstack";
license = stdenv.lib.licenses.bsd3;

}) {};
"happstack-server" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, blaze-html
, bytestring
, containers
, directory
, exceptions
, extensible-exceptions
, filepath
, hslogger
, html
, monad-control
, mtl
, network
, network-uri
, old-locale
, parsec
, process
, sendfile
, stdenv
, syb
, system-filepath
, template-haskell
, text
, threads
, time
, time-compat
, transformers
, transformers-base
, transformers-compat
, unix
, utf8-string
, xhtml
, zlib
}:
mkDerivation {

pname = "happstack-server";
version = "7.4.6.3";
sha256 = "6dd5f859b114bdbdde00b585800bc4b7ed821dd7bad67bb253e3602d88f5ceef";
libraryHaskellDepends = [
base
base64-bytestring
blaze-html
bytestring
containers
directory
exceptions
extensible-exceptions
filepath
hslogger
html
monad-control
mtl
network
network-uri
old-locale
parsec
process
sendfile
syb
system-filepath
template-haskell
text
threads
time
time-compat
transformers
transformers-base
transformers-compat
unix
utf8-string
xhtml
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://happstack.com";
description = "Web related tools and services";
license = stdenv.lib.licenses.bsd3;

}) {};
"happstack-server-tls" = callPackage
({
  mkDerivation
, base
, bytestring
, extensible-exceptions
, happstack-server
, hslogger
, HsOpenSSL
, network
, openssl
, sendfile
, stdenv
, time
, unix
}:
mkDerivation {

pname = "happstack-server-tls";
version = "7.1.6.2";
sha256 = "bc3e5a908871f1a242e099ff401e45284dcec07e8842e033d5f457ac7bd2f0d5";
libraryHaskellDepends = [
base
bytestring
extensible-exceptions
happstack-server
hslogger
HsOpenSSL
network
sendfile
time
unix
];
librarySystemDepends = [
openssl
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/";
description = "extend happstack-server with https:// support (TLS/SSL)";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) openssl;};
"happy" = callPackage
({
  mkDerivation
, array
, base
, Cabal
, containers
, directory
, filepath
, mtl
, stdenv
}:
mkDerivation {

pname = "happy";
version = "1.19.5";
sha256 = "62f03ac11d7b4b9913f212f5aa2eee1087f3b46dc07d799d41e1854ff02843da";
revision = "2";
editedCabalFile = "1dvhv94lzmya938i5crshg9qbx7dxvkyxkhfbqimxkydxn7l2w7w";
isLibrary = false;
isExecutable = true;
setupHaskellDepends = [
base
Cabal
directory
filepath
];
executableHaskellDepends = [
array
base
containers
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/happy/";
description = "Happy is a parser generator for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"harp" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "harp";
version = "0.4.2";
sha256 = "7faa6236d0381e5caeacb4a7acb912c328b4d5f58944f238d478d972c6f19cf3";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/seereason/harp";
description = "HaRP allows pattern-matching with regular expressions";
license = stdenv.lib.licenses.bsd3;

}) {};
"hashable" = callPackage
({
  mkDerivation
, base
, bytestring
, ghc-prim
, integer-gmp
, stdenv
, text
}:
mkDerivation {

pname = "hashable";
version = "1.2.5.0";
sha256 = "153eb1614a739f3ccf8c5fcd4230a17b8b24862ab727c46dd4acd22bc15fb2bc";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
ghc-prim
integer-gmp
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/tibbe/hashable";
description = "A class for types that can be converted to a hash value";
license = stdenv.lib.licenses.bsd3;

}) {};
"hashable-time" = callPackage
({
  mkDerivation
, base
, hashable
, stdenv
, time
}:
mkDerivation {

pname = "hashable-time";
version = "0.2";
sha256 = "97b722ab467fae0d499de91bfaf3d6e346c7c1cac126796f0031aee5dbfe2b0a";
revision = "1";
editedCabalFile = "0d8xfx6dqliqgj0d6lc6ns9k4rgfz3m0gqzsa8cmm6hvdyjsn9dr";
libraryHaskellDepends = [
base
hashable
time
];
doHaddock = false;
doCheck = false;
description = "Hashable instances for Data.Time";
license = stdenv.lib.licenses.bsd3;

}) {};
"hashmap" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, hashable
, stdenv
}:
mkDerivation {

pname = "hashmap";
version = "1.3.2";
sha256 = "01409d423e27f529602b376cfb506afe7a47f73b2ca1e362638c4fccfbba5796";
libraryHaskellDepends = [
base
containers
deepseq
hashable
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/foxik/hashmap";
description = "Persistent containers Map and Set based on hashing";
license = stdenv.lib.licenses.bsd3;

}) {};
"hashtables" = callPackage
({
  mkDerivation
, base
, ghc-prim
, hashable
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "hashtables";
version = "1.2.1.0";
sha256 = "ef5122c8f3b72d1e817a4f2adb410ad88b30818934a276b7184790697f4fdcac";
libraryHaskellDepends = [
base
ghc-prim
hashable
primitive
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/gregorycollins/hashtables";
description = "Mutable hash tables in the ST monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskeline" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, filepath
, process
, stdenv
, terminfo
, transformers
, unix
}:
mkDerivation {

pname = "haskeline";
version = "0.7.3.1";
sha256 = "7bec719c44d03cc78eb343f7927b1fc0482380384eed506ecb1644b86c62db22";
configureFlags = [
"-fterminfo"
];
libraryHaskellDepends = [
base
bytestring
containers
directory
filepath
process
terminfo
transformers
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://trac.haskell.org/haskeline";
description = "A command-line interface for user input, written in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-gi" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, directory
, filepath
, glib
, gobjectIntrospection
, haskell-gi-base
, mtl
, pretty-show
, process
, regex-tdfa
, safe
, stdenv
, text
, transformers
, xdg-basedir
, xml-conduit
}:
mkDerivation {

pname = "haskell-gi";
version = "0.20";
sha256 = "9eec8bad2539b01d833f31cde7dbbe3cc911ab7ba89b68b20d4b2dfc0716d6f6";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
Cabal
containers
directory
filepath
haskell-gi-base
mtl
pretty-show
process
regex-tdfa
safe
text
transformers
xdg-basedir
xml-conduit
];
libraryPkgconfigDepends = [
glib
gobjectIntrospection
];
executableHaskellDepends = [
base
containers
directory
filepath
haskell-gi-base
pretty-show
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "Generate Haskell bindings for GObject Introspection capable libraries";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) glib; inherit (pkgs) gobjectIntrospection;};
"haskell-gi-base" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, glib
, stdenv
, text
}:
mkDerivation {

pname = "haskell-gi-base";
version = "0.20";
sha256 = "d62e8b11d67441974e7cb52b0a30e7a1efe6051ddde62c48fe276185c670b80a";
libraryHaskellDepends = [
base
bytestring
containers
text
];
libraryPkgconfigDepends = [
glib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi-base";
description = "Foundation for libraries generated by haskell-gi";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) glib;};
"haskell-lexer" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "haskell-lexer";
version = "1.0.1";
sha256 = "d7d42ab3c4bc2f0232ede8b005fb9de57f862ee4c1c83aa61e1022346fc84366";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A fully compliant Haskell 98 lexer";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-names" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, data-lens-light
, filepath
, haskell-src-exts
, mtl
, stdenv
, transformers
, traverse-with-class
, uniplate
}:
mkDerivation {

pname = "haskell-names";
version = "0.8.0";
sha256 = "963b20f77a12fcfc0e8811d891b86aaaa7fe5cbb44365d60eb17f6b7de93ee88";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
data-lens-light
filepath
haskell-src-exts
mtl
transformers
traverse-with-class
uniplate
];
doHaddock = false;
doCheck = false;
homepage = "http://documentup.com/haskell-suite/haskell-names";
description = "Name resolution library for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-neo4j-client" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, data-default
, hashable
, HTTP
, http-client
, http-client-tls
, http-conduit
, http-types
, lifted-base
, mtl
, network-uri
, resourcet
, scientific
, stdenv
, text
, transformers
, transformers-base
, transformers-compat
, unordered-containers
, vector
}:
mkDerivation {

pname = "haskell-neo4j-client";
version = "0.3.2.4";
sha256 = "30eea529b6d8bd4b887cec7a6b210dd80223d97811bb26042b0c1ccfc8c381c2";
libraryHaskellDepends = [
aeson
base
bytestring
containers
data-default
hashable
HTTP
http-client
http-client-tls
http-conduit
http-types
lifted-base
mtl
network-uri
resourcet
scientific
text
transformers
transformers-base
transformers-compat
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/asilvestre/haskell-neo4j-rest-client";
description = "A Haskell neo4j client";
license = stdenv.lib.licenses.mit;

}) {};
"haskell-packages" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, Cabal
, containers
, deepseq
, directory
, filepath
, haskell-src-exts
, hse-cpp
, mtl
, optparse-applicative
, stdenv
, tagged
, transformers
, transformers-compat
}:
mkDerivation {

pname = "haskell-packages";
version = "0.5";
sha256 = "c61f282e6425ba506e5bd288462e63ec14c13d28b1d1d6e9e989198acbffd02c";
libraryHaskellDepends = [
aeson
base
bytestring
Cabal
containers
deepseq
directory
filepath
haskell-src-exts
hse-cpp
mtl
optparse-applicative
tagged
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://documentup.com/haskell-suite/haskell-packages";
description = "Haskell suite library for package management and integration with Cabal";
license = stdenv.lib.licenses.mit;

}) {};
"haskell-spacegoo" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, conduit
, conduit-extra
, mtl
, pretty
, pretty-show
, stdenv
, text
, vector
, vector-space
}:
mkDerivation {

pname = "haskell-spacegoo";
version = "0.2.0.1";
sha256 = "1eb3faa9a7f6a5870337eeb0bb3ad915f58987dfe4643fe95c91cbb2738ddd3c";
libraryHaskellDepends = [
aeson
base
bytestring
conduit
conduit-extra
mtl
pretty
pretty-show
text
vector
vector-space
];
doHaddock = false;
doCheck = false;
description = "Client API for Rocket Scissor Spacegoo";
license = stdenv.lib.licenses.mit;

}) {};
"haskell-src" = callPackage
({
  mkDerivation
, array
, base
, happy
, pretty
, stdenv
, syb
}:
mkDerivation {

pname = "haskell-src";
version = "1.0.2.0";
sha256 = "2a25ee5729230edddb94af8d9881efbc1d8798bd316097f4646749cb2fa491a6";
revision = "1";
editedCabalFile = "13lipvh20r35vcgschkvxl8csfi6bn7nqk6avzp7jwrhmpgi9wi0";
libraryHaskellDepends = [
array
base
pretty
syb
];
libraryToolDepends = [
happy
];
doHaddock = false;
doCheck = false;
description = "Support for manipulating Haskell source code";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-src-exts" = callPackage
({
  mkDerivation
, array
, base
, cpphs
, ghc-prim
, happy
, pretty
, stdenv
}:
mkDerivation {

pname = "haskell-src-exts";
version = "1.18.2";
sha256 = "31583804dcec5c200bcf184db8a2eb33fdcc3354b011c6485370be63b2710943";
libraryHaskellDepends = [
array
base
cpphs
ghc-prim
pretty
];
libraryToolDepends = [
happy
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-suite/haskell-src-exts";
description = "Manipulating Haskell source: abstract syntax, lexer, parser, and pretty-printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-src-exts-simple" = callPackage
({
  mkDerivation
, base
, haskell-src-exts
, stdenv
}:
mkDerivation {

pname = "haskell-src-exts-simple";
version = "1.19.0.0";
sha256 = "41bc9166e7d08bb18b5309eb2af00ce122c70eeffd047da47e9e2d9db89a2406";
libraryHaskellDepends = [
base
haskell-src-exts
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/int-e/haskell-src-exts-simple";
description = "A simplified view on the haskell-src-exts AST";
license = stdenv.lib.licenses.mit;

}) {};
"haskell-src-meta" = callPackage
({
  mkDerivation
, base
, haskell-src-exts
, pretty
, stdenv
, syb
, template-haskell
, th-orphans
}:
mkDerivation {

pname = "haskell-src-meta";
version = "0.7.0.1";
sha256 = "428e5a1c90c645d4c9cb54f984721b1b21e494677d1d7d8e7206f6c0e9286a3a";
revision = "1";
editedCabalFile = "0g6jslwrz934hpq8x0b7r50rk2q96raw5a6s4mxanjx36g19rrgp";
libraryHaskellDepends = [
base
haskell-src-exts
pretty
syb
template-haskell
th-orphans
];
doHaddock = false;
doCheck = false;
description = "Parse source to template-haskell abstract syntax";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-tools-ast" = callPackage
({
  mkDerivation
, base
, ghc
, mtl
, references
, stdenv
, template-haskell
, uniplate
}:
mkDerivation {

pname = "haskell-tools-ast";
version = "0.5.0.0";
sha256 = "69f8feebf6ffbb942f7e0ca9b0e6a258a83f4acda13977e99b4568d36e9dee77";
libraryHaskellDepends = [
base
ghc
mtl
references
template-haskell
uniplate
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nboldi/haskell-tools";
description = "Haskell AST for efficient tooling";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-tools-backend-ghc" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, ghc
, haskell-tools-ast
, mtl
, references
, safe
, split
, stdenv
, template-haskell
, transformers
, uniplate
}:
mkDerivation {

pname = "haskell-tools-backend-ghc";
version = "0.5.0.0";
sha256 = "eb8d8b2367020d851f83a2a9fccda813da6537a38c7065e92237f769e7bd2fe8";
libraryHaskellDepends = [
base
bytestring
containers
ghc
haskell-tools-ast
mtl
references
safe
split
template-haskell
transformers
uniplate
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nboldi/haskell-tools";
description = "Creating the Haskell-Tools AST from GHC's representations";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-tools-cli" = callPackage
({
  mkDerivation
, base
, containers
, directory
, filepath
, ghc
, ghc-paths
, haskell-tools-ast
, haskell-tools-prettyprint
, haskell-tools-refactor
, mtl
, process
, references
, split
, stdenv
}:
mkDerivation {

pname = "haskell-tools-cli";
version = "0.5.0.0";
sha256 = "08796a6d02d06c9cd68936436a452e82c90468e1420d3f02b3ed040f117d2c14";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
directory
filepath
ghc
ghc-paths
haskell-tools-ast
haskell-tools-prettyprint
haskell-tools-refactor
mtl
references
split
];
executableHaskellDepends = [
base
directory
process
split
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-tools/haskell-tools";
description = "Command-line frontend for Haskell-tools Refact";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-tools-daemon" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, directory
, filepath
, ghc
, ghc-paths
, haskell-tools-ast
, haskell-tools-prettyprint
, haskell-tools-refactor
, mtl
, network
, process
, references
, split
, stdenv
}:
mkDerivation {

pname = "haskell-tools-daemon";
version = "0.5.0.0";
sha256 = "588ef66d492b16d6d76a34111dc43fc3243c4bff48d6f5aa2281c72ae365925a";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
directory
filepath
ghc
ghc-paths
haskell-tools-ast
haskell-tools-prettyprint
haskell-tools-refactor
mtl
network
process
references
split
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-tools/haskell-tools";
description = "Background process for Haskell-tools refactor that editors can connect to";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-tools-debug" = callPackage
({
  mkDerivation
, base
, ghc
, ghc-paths
, haskell-tools-ast
, haskell-tools-backend-ghc
, haskell-tools-prettyprint
, haskell-tools-refactor
, references
, stdenv
}:
mkDerivation {

pname = "haskell-tools-debug";
version = "0.5.0.0";
sha256 = "b70796a99599cb051d2bbad5b02863245c8eae9732aa96ff3bc038e7b114dc27";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
ghc
ghc-paths
haskell-tools-ast
haskell-tools-backend-ghc
haskell-tools-prettyprint
haskell-tools-refactor
references
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-tools/haskell-tools";
description = "Debugging Tools for Haskell-tools";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-tools-demo" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, directory
, filepath
, ghc
, ghc-paths
, haskell-tools-ast
, haskell-tools-backend-ghc
, haskell-tools-prettyprint
, haskell-tools-refactor
, http-types
, mtl
, references
, stdenv
, transformers
, wai
, wai-websockets
, warp
, websockets
}:
mkDerivation {

pname = "haskell-tools-demo";
version = "0.5.0.0";
sha256 = "4b5dd31ee4a5342a49e07c8c48daccc98f7dd16afab819e370b944f45ec2618c";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
directory
filepath
ghc
ghc-paths
haskell-tools-ast
haskell-tools-backend-ghc
haskell-tools-prettyprint
haskell-tools-refactor
http-types
mtl
references
transformers
wai
wai-websockets
warp
websockets
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-tools/haskell-tools";
description = "A web-based demo for Haskell-tools Refactor";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-tools-prettyprint" = callPackage
({
  mkDerivation
, base
, containers
, ghc
, haskell-tools-ast
, mtl
, references
, split
, stdenv
, uniplate
}:
mkDerivation {

pname = "haskell-tools-prettyprint";
version = "0.5.0.0";
sha256 = "4690b95cd4e2d53547dd854d792dd1731c85470e97c1e0d6ed1df951b951367c";
libraryHaskellDepends = [
base
containers
ghc
haskell-tools-ast
mtl
references
split
uniplate
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-tools/haskell-tools";
description = "Pretty printing of Haskell-Tools AST";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-tools-refactor" = callPackage
({
  mkDerivation
, base
, Cabal
, containers
, directory
, filepath
, ghc
, ghc-paths
, haskell-tools-ast
, haskell-tools-backend-ghc
, haskell-tools-prettyprint
, haskell-tools-rewrite
, mtl
, references
, split
, stdenv
, template-haskell
, transformers
, uniplate
}:
mkDerivation {

pname = "haskell-tools-refactor";
version = "0.5.0.0";
sha256 = "41dcc1a933623fd172776800473596d7d5fa84b68a96042361d474c76db35df8";
libraryHaskellDepends = [
base
Cabal
containers
directory
filepath
ghc
ghc-paths
haskell-tools-ast
haskell-tools-backend-ghc
haskell-tools-prettyprint
haskell-tools-rewrite
mtl
references
split
template-haskell
transformers
uniplate
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-tools/haskell-tools";
description = "Refactoring Tool for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-tools-rewrite" = callPackage
({
  mkDerivation
, base
, containers
, ghc
, haskell-tools-ast
, haskell-tools-prettyprint
, mtl
, references
, stdenv
}:
mkDerivation {

pname = "haskell-tools-rewrite";
version = "0.5.0.0";
sha256 = "abbd76e8709b6fff25c6da010447ab5ad06381169fbf191470178eb8412dbc94";
libraryHaskellDepends = [
base
containers
ghc
haskell-tools-ast
haskell-tools-prettyprint
mtl
references
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-tools/haskell-tools";
description = "Facilities for generating new parts of the Haskell-Tools AST";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskintex" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, directory
, filepath
, haskell-src-exts
, HaTeX
, hint
, parsec
, process
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "haskintex";
version = "0.7.0.1";
sha256 = "7647f19964cce0be886ff01a4c53f902b4dd995d005090724a57bd4cc6dae31b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
binary
bytestring
containers
directory
filepath
haskell-src-exts
HaTeX
hint
parsec
process
text
transformers
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://daniel-diaz.github.io/projects/haskintex";
description = "Haskell Evaluation inside of LaTeX code";
license = stdenv.lib.licenses.bsd3;

}) {};
"hasql" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base-prelude
, bytestring
, bytestring-tree-builder
, contravariant
, contravariant-extras
, data-default-class
, dlist
, either
, hashable
, hashtables
, loch-th
, mtl
, placeholders
, postgresql-binary
, postgresql-libpq
, profunctors
, scientific
, semigroups
, stdenv
, text
, time
, transformers
, uuid
, vector
}:
mkDerivation {

pname = "hasql";
version = "0.19.16";
sha256 = "b207195a7de0798f325b338b72059b9ef43546796401604b4a7a04a32be011c0";
libraryHaskellDepends = [
aeson
attoparsec
base
base-prelude
bytestring
bytestring-tree-builder
contravariant
contravariant-extras
data-default-class
dlist
either
hashable
hashtables
loch-th
mtl
placeholders
postgresql-binary
postgresql-libpq
profunctors
scientific
semigroups
text
time
transformers
uuid
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/hasql";
description = "An efficient PostgreSQL driver and a flexible mapping API";
license = stdenv.lib.licenses.mit;

}) {};
"hasql-migration" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, contravariant
, cryptohash
, data-default-class
, directory
, hasql
, hasql-transaction
, stdenv
, text
, time
}:
mkDerivation {

pname = "hasql-migration";
version = "0.1.3";
sha256 = "2d49e3b7a5ed775150abf2164795b10d087d2e1c714b0a8320f0c0094df068b3";
revision = "1";
editedCabalFile = "156s0y5yfc3y0mgv95gcs6n3pv9nd0mgy06x0xriwsf68wjb07ap";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
contravariant
cryptohash
data-default-class
directory
hasql
hasql-transaction
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tvh/hasql-migration";
description = "PostgreSQL Schema Migrations";
license = stdenv.lib.licenses.bsd3;

}) {};
"hasql-transaction" = callPackage
({
  mkDerivation
, base
, base-prelude
, bytestring
, bytestring-tree-builder
, contravariant
, contravariant-extras
, hasql
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "hasql-transaction";
version = "0.5";
sha256 = "1cd433ed77a59beac628d7ebba945aafc62c55e2f092f682f60ca89a33e0b341";
libraryHaskellDepends = [
base
base-prelude
bytestring
bytestring-tree-builder
contravariant
contravariant-extras
hasql
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/hasql-transaction";
description = "A composable abstraction over the retryable transactions for Hasql";
license = stdenv.lib.licenses.mit;

}) {};
"hastache" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, containers
, directory
, filepath
, ieee754
, mtl
, process
, stdenv
, syb
, text
, transformers
}:
mkDerivation {

pname = "hastache";
version = "0.6.1";
sha256 = "8c8f89669d6125201d7163385ea9055ab8027a69d1513259f8fbdd53c244b464";
revision = "5";
editedCabalFile = "0fwd1jd6sqkscmy2yq1w3dcl4va4w9n8mhs6ldrilh1cj6b54r3f";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
blaze-builder
bytestring
containers
directory
filepath
ieee754
mtl
syb
text
transformers
];
executableHaskellDepends = [
base
blaze-builder
bytestring
containers
directory
filepath
ieee754
mtl
process
syb
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/lymar/hastache";
description = "Haskell implementation of Mustache templates";
license = stdenv.lib.licenses.bsd3;

}) {};
"hasty-hamiltonian" = callPackage
({
  mkDerivation
, base
, kan-extensions
, lens
, mcmc-types
, mwc-probability
, pipes
, primitive
, stdenv
, transformers
}:
mkDerivation {

pname = "hasty-hamiltonian";
version = "1.3.0";
sha256 = "15f713bc72cda97a5efad2c75d38915f3b765966142710f069db72ff49eefb31";
libraryHaskellDepends = [
base
kan-extensions
lens
mcmc-types
mwc-probability
pipes
primitive
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jtobin/hasty-hamiltonian";
description = "Speedy traversal through parameter space";
license = stdenv.lib.licenses.mit;

}) {};
"hatex-guide" = callPackage
({
  mkDerivation
, base
, blaze-html
, directory
, filepath
, HaTeX
, parsec
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "hatex-guide";
version = "1.3.1.6";
sha256 = "7ad7cf5f94d5e684891cdbd6f74d1bb8843564390929d0802fd359a05f5da56d";
libraryHaskellDepends = [
base
blaze-html
directory
filepath
HaTeX
parsec
text
time
transformers
];
doHaddock = false;
doCheck = false;
description = "HaTeX User's Guide";
license = stdenv.lib.licenses.bsd3;

}) {};
"haxl" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, bytestring
, containers
, deepseq
, exceptions
, filepath
, ghc-prim
, hashable
, HUnit
, pretty
, stdenv
, text
, time
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "haxl";
version = "0.5.0.0";
sha256 = "dcc94089593a159b20e6f29eeeb7dd8caec0e0e8abcee8533321f2e9a96dd1e8";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
binary
bytestring
containers
deepseq
exceptions
filepath
ghc-prim
hashable
HUnit
pretty
text
time
transformers
unordered-containers
vector
];
executableHaskellDepends = [
base
hashable
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/facebook/Haxl";
description = "A Haskell library for efficient, concurrent, and concise data access";
license = stdenv.lib.licenses.bsd3;

}) {};
"haxl-amazonka" = callPackage
({
  mkDerivation
, amazonka
, amazonka-core
, async
, base
, conduit
, hashable
, haxl
, stdenv
, transformers
}:
mkDerivation {

pname = "haxl-amazonka";
version = "0.1.1";
sha256 = "3cdf3ee6bd46ee461e4ae640d300533229c1d4f9ab0489f613a1ec387fa270c6";
libraryHaskellDepends = [
amazonka
amazonka-core
async
base
conduit
hashable
haxl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/tvh/haxl-amazonka#readme";
description = "Haxl data source for accessing AWS services through amazonka";
license = stdenv.lib.licenses.bsd3;

}) {};
"haxr" = callPackage
({
  mkDerivation
, array
, base
, base-compat
, base64-bytestring
, blaze-builder
, bytestring
, HaXml
, HsOpenSSL
, http-streams
, http-types
, io-streams
, mtl
, mtl-compat
, network
, network-uri
, old-locale
, old-time
, stdenv
, template-haskell
, text
, time
, utf8-string
}:
mkDerivation {

pname = "haxr";
version = "3000.11.2";
sha256 = "ebcda06d7ee79d5e635a7ec34f86400dd54ddd2434eda082aac6d3c8fd6e8b47";
libraryHaskellDepends = [
array
base
base-compat
base64-bytestring
blaze-builder
bytestring
HaXml
HsOpenSSL
http-streams
http-types
io-streams
mtl
mtl-compat
network
network-uri
old-locale
old-time
template-haskell
text
time
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/HaXR";
description = "XML-RPC client and server library";
license = stdenv.lib.licenses.bsd3;

}) {};
"hbeanstalk" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-builder
, bytestring
, containers
, network
, stdenv
}:
mkDerivation {

pname = "hbeanstalk";
version = "0.2.4";
sha256 = "feaf97fd18fedb3e5abf337e61c98a03108d917d9f87f885c8d02b6b838aac8f";
libraryHaskellDepends = [
attoparsec
base
blaze-builder
bytestring
containers
network
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/scsibug/hbeanstalk/";
description = "Client for the beanstalkd workqueue service";
license = stdenv.lib.licenses.bsd3;

}) {};
"hdaemonize" = callPackage
({
  mkDerivation
, base
, bytestring
, extensible-exceptions
, filepath
, hsyslog
, mtl
, stdenv
, unix
}:
mkDerivation {

pname = "hdaemonize";
version = "0.5.2";
sha256 = "1f21059958fbf6de2299b281cf269104c5e314df6ff1da852fbd1b021c44a052";
libraryHaskellDepends = [
base
bytestring
extensible-exceptions
filepath
hsyslog
mtl
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/greydot/hdaemonize";
description = "Library to handle the details of writing daemons for UNIX";
license = stdenv.lib.licenses.bsd3;

}) {};
"hdevtools" = callPackage
({
  mkDerivation
, base
, Cabal
, cmdargs
, directory
, filepath
, ghc
, ghc-boot
, ghc-paths
, network
, process
, stdenv
, syb
, time
, transformers
, unix
}:
mkDerivation {

pname = "hdevtools";
version = "0.1.5.0";
sha256 = "ed81236f3809a367c5f4401905ae283f8de92cd5b26c0b8370586ab7690d04e7";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
Cabal
cmdargs
directory
filepath
ghc
ghc-boot
ghc-paths
network
process
syb
time
transformers
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hdevtools/hdevtools/";
description = "Persistent GHC powered background server for FAST haskell development tools";
license = stdenv.lib.licenses.mit;

}) {};
"heap" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "heap";
version = "1.0.3";
sha256 = "9bd57e9ca3480d4322ccc5ec094767ee2a64425b2d4022065a8f36b44aabf402";
revision = "1";
editedCabalFile = "0j1f0xl3y2vqiyh3m9w5vssxyi62s6qic3zmpkm429vawyh4yad5";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Heaps in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"heaps" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "heaps";
version = "0.3.3";
sha256 = "04e358d3e6d8ca7786749b6d3945e18159506f8b21ca48b1913c771dcaae1537";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/heaps/";
description = "Asymptotically optimal Brodal/Okasaki heaps";
license = stdenv.lib.licenses.bsd3;

}) {};
"hebrew-time" = callPackage
({
  mkDerivation
, base
, stdenv
, time
}:
mkDerivation {

pname = "hebrew-time";
version = "0.1.1";
sha256 = "c7997ee86df43d5d734df63c5e091543bb7fd75a93d530c1857067e27a8b7932";
libraryHaskellDepends = [
base
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/hebrew-time";
description = "Hebrew dates and prayer times";
license = stdenv.lib.licenses.mit;

}) {};
"hedis" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, bytestring-lexing
, deepseq
, mtl
, network
, resource-pool
, scanner
, stdenv
, stm
, text
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "hedis";
version = "0.9.7";
sha256 = "594c2d210745a72559de6a6a5f3fa646bf400fd0bb990c8f29d3390d1a2d6d87";
libraryHaskellDepends = [
async
base
bytestring
bytestring-lexing
deepseq
mtl
network
resource-pool
scanner
stm
text
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/informatikr/hedis";
description = "Client library for the Redis datastore: supports full command set, pipelining";
license = stdenv.lib.licenses.bsd3;

}) {};
"here" = callPackage
({
  mkDerivation
, base
, haskell-src-meta
, mtl
, parsec
, stdenv
, template-haskell
}:
mkDerivation {

pname = "here";
version = "1.2.9";
sha256 = "c6e87d889bbfa414b7a4dcad0dc55aae1158630065d5f52408fe8b72adc8ff38";
libraryHaskellDepends = [
base
haskell-src-meta
mtl
parsec
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tmhedberg/here";
description = "Here docs & interpolated strings via quasiquotation";
license = stdenv.lib.licenses.bsd3;

}) {};
"heredoc" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "heredoc";
version = "0.2.0.0";
sha256 = "c90d9fc61cb8cd812be510845493b6a6eddcc4b772581fd40a9433ed8f130f40";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://hackage.haskell.org/package/heredoc";
description = "multi-line string / here document using QuasiQuotes";
license = stdenv.lib.licenses.publicDomain;

}) {};
"heterocephalus" = callPackage
({
  mkDerivation
, base
, blaze-html
, blaze-markup
, containers
, dlist
, parsec
, shakespeare
, stdenv
, template-haskell
, text
}:
mkDerivation {

pname = "heterocephalus";
version = "1.0.4.0";
sha256 = "4a208830f15a3575f10c238bed8ff09827483eec94b8cc068c6907d2106f982a";
libraryHaskellDepends = [
base
blaze-html
blaze-markup
containers
dlist
parsec
shakespeare
template-haskell
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/arowM/heterocephalus#readme";
description = "A type-safe template engine for working with popular front end development tools";
license = stdenv.lib.licenses.mit;

}) {};
"hex" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "hex";
version = "0.1.2";
sha256 = "12ee1243edd80570a486521565fb0c9b5e39374f21a12f050636e71d55ec61ec";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "Convert strings into hexadecimal and back";
license = stdenv.lib.licenses.bsd3;

}) {};
"hexml" = callPackage
({
  mkDerivation
, base
, bytestring
, extra
, stdenv
}:
mkDerivation {

pname = "hexml";
version = "0.3.1";
sha256 = "90d31d91beb87bfb9c0f1b867061b3db6d14dcbf9da87a483d620617aca0b1b0";
libraryHaskellDepends = [
base
bytestring
extra
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/hexml#readme";
description = "XML subset DOM parser";
license = stdenv.lib.licenses.bsd3;

}) {};
"hexstring" = callPackage
({
  mkDerivation
, aeson
, base
, base16-bytestring
, binary
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "hexstring";
version = "0.11.1";
sha256 = "40d8dbfe22f572ffdb73f28c448b228a75008e83cc3bf78e939add0c9d800914";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
base16-bytestring
binary
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Fast and safe representation of a hex string";
license = stdenv.lib.licenses.mit;

}) {};
"hflags" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, template-haskell
, text
}:
mkDerivation {

pname = "hflags";
version = "0.4.2";
sha256 = "2cd30d637f4011d9b614698ef7f7bf1f55c45900e6683d60c7b17af5750f2cc5";
revision = "1";
editedCabalFile = "1kasg8y0ia3q2iy6vmjvwwn9dyxzy59s6s9chwxhdgsvncx38ra1";
libraryHaskellDepends = [
base
containers
template-haskell
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/errge/hflags";
description = "Command line flag parser, very similar to Google's gflags";
license = stdenv.lib.licenses.asl20;

}) {};
"hformat" = callPackage
({
  mkDerivation
, base
, base-unicode-symbols
, stdenv
, text
}:
mkDerivation {

pname = "hformat";
version = "0.1.0.1";
sha256 = "62830d91b7d338f2fee8c3aa2b6ab874d6340ed84b0a67dd0f31fbcad6d08d0c";
libraryHaskellDepends = [
base
base-unicode-symbols
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/mvoidex/hformat";
description = "Simple Haskell formatting";
license = stdenv.lib.licenses.bsd3;

}) {};
"hfsevents" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, Cocoa
, CoreServices
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "hfsevents";
version = "0.1.6";
sha256 = "74c3f3f3a5e55fff320c352a2d481069ff915860a0ab970864c6a0e6b65d3f05";
libraryHaskellDepends = [
base
bytestring
cereal
mtl
text
];
librarySystemDepends = [
Cocoa
];
libraryToolDepends = [
CoreServices
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/luite/hfsevents";
description = "File/folder watching for OS X";
license = stdenv.lib.licenses.bsd3;
platforms = [
"x86_64-darwin"
];

}) {inherit (pkgs.darwin.apple_sdk.frameworks) Cocoa;};
"hid" = callPackage
({
  mkDerivation
, base
, bytestring
, c2hs
, hidapi
, stdenv
, transformers
}:
mkDerivation {

pname = "hid";
version = "0.2.2";
sha256 = "0dd5c562b871626cfad11846d0d3b788823adc12fe009403a42e5f56108773d2";
libraryHaskellDepends = [
base
bytestring
transformers
];
libraryPkgconfigDepends = [
hidapi
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phaazon/hid";
description = "Interface to hidapi library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) hidapi;};
"hidapi" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, deepseq-generics
, stdenv
, systemd
}:
mkDerivation {

pname = "hidapi";
version = "0.1.4";
sha256 = "fc40ea58320f9f1459a8da6463419bb15930d2e6d8273d5592cde509d4c96a75";
libraryHaskellDepends = [
base
bytestring
deepseq
deepseq-generics
];
librarySystemDepends = [
systemd
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vahokif/haskell-hidapi";
description = "Haskell bindings to HIDAPI";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) systemd;};
"hierarchical-clustering" = callPackage
({
  mkDerivation
, array
, base
, containers
, stdenv
}:
mkDerivation {

pname = "hierarchical-clustering";
version = "0.4.6";
sha256 = "75f17f09b9c38d51a208edee10da2f4706ee784b5cdfe8efc31f7f86bbcdccb1";
libraryHaskellDepends = [
array
base
containers
];
doHaddock = false;
doCheck = false;
description = "Fast algorithms for single, average/UPGMA and complete linkage clustering";
license = stdenv.lib.licenses.bsd3;

}) {};
"highjson" = callPackage
({
  mkDerivation
, aeson
, base
, hvect
, lens
, stdenv
, text
}:
mkDerivation {

pname = "highjson";
version = "0.4.0.0";
sha256 = "c3eb05ed1abd9dd59eedcd22bd60b326059d0c3dcaee2a9f8238b0ac08a26962";
libraryHaskellDepends = [
aeson
base
hvect
lens
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/highjson";
description = "Spec based JSON parsing/serialisation";
license = stdenv.lib.licenses.mit;

}) {};
"highjson-swagger" = callPackage
({
  mkDerivation
, base
, highjson
, hvect
, insert-ordered-containers
, lens
, stdenv
, swagger2
, text
}:
mkDerivation {

pname = "highjson-swagger";
version = "0.4.0.0";
sha256 = "2df02d2fd764fd5386094de59e181314ba152bd87dc2905d9869fefd4cb87e1f";
libraryHaskellDepends = [
base
highjson
hvect
insert-ordered-containers
lens
swagger2
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/highjson";
description = "Derive swagger instances from highjson specs";
license = stdenv.lib.licenses.mit;

}) {};
"highjson-th" = callPackage
({
  mkDerivation
, aeson
, base
, highjson
, highjson-swagger
, stdenv
, swagger2
, template-haskell
, text
}:
mkDerivation {

pname = "highjson-th";
version = "0.4.0.0";
sha256 = "f30c4937a9db6eb1cea8b9efef76855af3b4745e3a620798681b8cf3c73202c5";
libraryHaskellDepends = [
aeson
base
highjson
highjson-swagger
swagger2
template-haskell
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/highjson";
description = "Template Haskell helpers for highjson specs";
license = stdenv.lib.licenses.mit;

}) {};
"highlighting-kate" = callPackage
({
  mkDerivation
, base
, blaze-html
, bytestring
, containers
, mtl
, parsec
, pcre-light
, stdenv
, utf8-string
}:
mkDerivation {

pname = "highlighting-kate";
version = "0.6.4";
sha256 = "d8b83385f5da2ea7aa59f28eb860fd7eba0d35a4c36192a5044ee7ea1e001baf";
configureFlags = [
"-fpcre-light"
];
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
blaze-html
bytestring
containers
mtl
parsec
pcre-light
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jgm/highlighting-kate";
description = "Syntax highlighting";
license = "GPL";

}) {};
"hindent" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, deepseq
, descriptive
, directory
, exceptions
, ghc-prim
, haskell-src-exts
, monad-loops
, mtl
, path
, path-io
, stdenv
, text
, transformers
, unix-compat
, utf8-string
, yaml
}:
mkDerivation {

pname = "hindent";
version = "5.2.2";
sha256 = "1fc9a92a501552b17219a13fd691e380cc2e2bbf4d768788f13b47639ff4237d";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
containers
exceptions
haskell-src-exts
monad-loops
mtl
text
transformers
utf8-string
yaml
];
executableHaskellDepends = [
base
bytestring
deepseq
descriptive
directory
exceptions
ghc-prim
haskell-src-exts
path
path-io
text
transformers
unix-compat
utf8-string
yaml
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/chrisdone/hindent";
description = "Extensible Haskell pretty printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"hinotify" = callPackage
({
  mkDerivation
, async
, base
, containers
, directory
, stdenv
, unix
}:
mkDerivation {

pname = "hinotify";
version = "0.3.9";
sha256 = "f2480e4c08a516831c2221eebc6a9d3242e892932d9315c34cbe92a101c5df99";
revision = "1";
editedCabalFile = "0df5pak0586626k3ryzg2lb26ys562l3i94jr9vpa0krs8iia209";
libraryHaskellDepends = [
async
base
containers
directory
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kolmodin/hinotify.git";
description = "Haskell binding to inotify";
license = stdenv.lib.licenses.bsd3;

}) {};
"hint" = callPackage
({
  mkDerivation
, base
, directory
, exceptions
, filepath
, ghc
, ghc-paths
, mtl
, random
, stdenv
, unix
}:
mkDerivation {

pname = "hint";
version = "0.6.0";
sha256 = "dc3d3a0ede8e03265bc93456d10cea93fbc4fe8e445e80b7abea71a484421ab9";
libraryHaskellDepends = [
base
directory
exceptions
filepath
ghc
ghc-paths
mtl
random
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mvdan/hint";
description = "Runtime Haskell interpreter (GHC API wrapper)";
license = stdenv.lib.licenses.bsd3;

}) {};
"hip" = callPackage
({
  mkDerivation
, base
, bytestring
, Chart
, Chart-diagrams
, colour
, deepseq
, directory
, filepath
, JuicyPixels
, netpbm
, primitive
, process
, repa
, stdenv
, temporary
, vector
}:
mkDerivation {

pname = "hip";
version = "1.5.2.0";
sha256 = "4f5eecf455df1d5a0a577abfefd48e519be8f57f9c47ca2edf31dc0982b7dc46";
libraryHaskellDepends = [
base
bytestring
Chart
Chart-diagrams
colour
deepseq
directory
filepath
JuicyPixels
netpbm
primitive
process
repa
temporary
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lehins/hip";
description = "Haskell Image Processing (HIP) Library";
license = stdenv.lib.licenses.bsd3;

}) {};
"histogram-fill" = callPackage
({
  mkDerivation
, base
, deepseq
, ghc-prim
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "histogram-fill";
version = "0.8.5.0";
sha256 = "fbdd167d6f27c0d88f9aa8647ae95a313101c63a827275ac8d016d6028975133";
revision = "1";
editedCabalFile = "0pa5i5187g0y7r7ngy4gf9lqp76k9saz5qjri4nx0f98kwsacagg";
libraryHaskellDepends = [
base
deepseq
ghc-prim
primitive
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Shimuuar/histogram-fill/";
description = "Library for histograms creation";
license = stdenv.lib.licenses.bsd3;

}) {};
"hit" = callPackage
({
  mkDerivation
, attoparsec
, base
, byteable
, bytestring
, containers
, cryptohash
, hourglass
, mtl
, parsec
, patience
, random
, stdenv
, system-fileio
, system-filepath
, unix-compat
, utf8-string
, vector
, zlib
, zlib-bindings
}:
mkDerivation {

pname = "hit";
version = "0.6.3";
sha256 = "db86b3712029a4e40d1306dd6cc9ca2c9f4c77fe65a2b74106f1cbd2de26e471";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
attoparsec
base
byteable
bytestring
containers
cryptohash
hourglass
mtl
parsec
patience
random
system-fileio
system-filepath
unix-compat
utf8-string
vector
zlib
zlib-bindings
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hit";
description = "Git operations in haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"hjpath" = callPackage
({
  mkDerivation
, base
, containers
, hjson
, parsec
, stdenv
}:
mkDerivation {

pname = "hjpath";
version = "3.0.1";
sha256 = "12aa694ac8f1ef4bd26e46504c183fee2f3087b5f85365bb07f9602222efbf72";
libraryHaskellDepends = [
base
containers
hjson
parsec
];
doHaddock = false;
doCheck = false;
homepage = "http://bitcheese.net/wiki/code/hjpath";
description = "XPath-like syntax for querying JSON";
license = stdenv.lib.licenses.bsd3;

}) {};
"hjsmin" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, containers
, language-javascript
, optparse-applicative
, stdenv
, text
}:
mkDerivation {

pname = "hjsmin";
version = "0.2.0.2";
sha256 = "bec153d2396962c63998eb12d0a2c7c9f7df6f774cb00e41b6cdb1f5a4905484";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
blaze-builder
bytestring
containers
language-javascript
text
];
executableHaskellDepends = [
base
blaze-builder
bytestring
containers
language-javascript
optparse-applicative
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/erikd/hjsmin";
description = "Haskell implementation of a javascript minifier";
license = stdenv.lib.licenses.bsd3;

}) {};
"hjson" = callPackage
({
  mkDerivation
, base
, containers
, parsec
, stdenv
}:
mkDerivation {

pname = "hjson";
version = "1.3.2";
sha256 = "684699c938131f1e394b90546e8bbe1249a3eebfe7b5a6a96b544b7c7d79a9e4";
libraryHaskellDepends = [
base
containers
parsec
];
doHaddock = false;
doCheck = false;
description = "JSON parsing library";
license = stdenv.lib.licenses.bsd3;

}) {};
"hjsonpointer" = callPackage
({
  mkDerivation
, aeson
, base
, hashable
, QuickCheck
, semigroups
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "hjsonpointer";
version = "1.1.0.2";
sha256 = "fe6826b2ede3ce7541e5c88bda78dd66cc76725f14b06533bb5ecadddcb2cc65";
libraryHaskellDepends = [
aeson
base
hashable
QuickCheck
semigroups
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/seagreen/hjsonpointer";
description = "JSON Pointer library";
license = stdenv.lib.licenses.mit;

}) {};
"hjsonschema" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, file-embed
, filepath
, hashable
, hjsonpointer
, http-client
, http-types
, pcre-heavy
, profunctors
, protolude
, QuickCheck
, scientific
, semigroups
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "hjsonschema";
version = "1.5.0.1";
sha256 = "1ac15c8f32621c50fa4b445a0f17ac7a58dc716867aed4f6e1bb7478d0e288a3";
libraryHaskellDepends = [
aeson
base
bytestring
containers
file-embed
filepath
hashable
hjsonpointer
http-client
http-types
pcre-heavy
profunctors
protolude
QuickCheck
scientific
semigroups
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/seagreen/hjsonschema";
description = "JSON Schema library";
license = stdenv.lib.licenses.mit;

}) {};
"hledger" = callPackage
({
  mkDerivation
, base
, base-compat
, bytestring
, cmdargs
, containers
, csv
, data-default
, directory
, file-embed
, filepath
, hashable
, haskeline
, hledger-lib
, HUnit
, megaparsec
, mtl
, mtl-compat
, old-time
, parsec
, pretty-show
, process
, regex-tdfa
, safe
, shakespeare
, split
, stdenv
, tabular
, temporary
, terminfo
, text
, time
, transformers
, unordered-containers
, utf8-string
, wizards
}:
mkDerivation {

pname = "hledger";
version = "1.1";
sha256 = "b254b2a3918e047ca031f6dfafc42dd5fcb4b859157fae2d019dcd95262408e5";
revision = "1";
editedCabalFile = "1bwsjcb0i3y4b8phjsfz43an89p3v2zngwg5ygky33k9fjnxwgnk";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
base-compat
bytestring
cmdargs
containers
csv
data-default
directory
file-embed
filepath
hashable
haskeline
hledger-lib
HUnit
megaparsec
mtl
mtl-compat
old-time
pretty-show
process
regex-tdfa
safe
shakespeare
split
tabular
temporary
terminfo
text
time
transformers
unordered-containers
utf8-string
wizards
];
executableHaskellDepends = [
base
base-compat
bytestring
cmdargs
containers
csv
data-default
directory
file-embed
filepath
haskeline
hledger-lib
HUnit
mtl
mtl-compat
old-time
parsec
pretty-show
process
regex-tdfa
safe
shakespeare
split
tabular
temporary
terminfo
text
time
unordered-containers
utf8-string
wizards
];
doHaddock = false;
doCheck = false;
homepage = "http://hledger.org";
description = "Command-line interface for the hledger accounting tool";
license = "GPL";

}) {};
"hledger-api" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, Decimal
, docopt
, either
, hledger
, hledger-lib
, microlens
, microlens-platform
, safe
, servant-server
, servant-swagger
, stdenv
, swagger2
, text
, transformers
, wai
, wai-extra
, warp
}:
mkDerivation {

pname = "hledger-api";
version = "1.1";
sha256 = "182b8bdaf2b4b7d621a8570f0fa81a34de4f34f1a41f8dca6d60c05dd5701b1c";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
aeson
base
bytestring
containers
Decimal
docopt
either
hledger
hledger-lib
microlens
microlens-platform
safe
servant-server
servant-swagger
swagger2
text
transformers
wai
wai-extra
warp
];
doHaddock = false;
doCheck = false;
homepage = "http://hledger.org";
description = "Web API server for the hledger accounting tool";
license = "GPL";

}) {};
"hledger-iadd" = callPackage
({
  mkDerivation
, base
, brick
, containers
, directory
, free
, hledger-lib
, megaparsec
, microlens
, optparse-applicative
, stdenv
, text
, text-format
, text-zipper
, time
, transformers
, unordered-containers
, vector
, vty
, xdg-basedir
}:
mkDerivation {

pname = "hledger-iadd";
version = "1.2";
sha256 = "7ec0817c2c9c20c05c6496eca6264124139e7575e452ada5b1fd225c97533083";
revision = "1";
editedCabalFile = "0k6k62rn005hi95kh42whhcql8ysmpy6pq6d5dww5ym8jwdc90ph";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
brick
containers
directory
free
hledger-lib
megaparsec
microlens
optparse-applicative
text
text-format
text-zipper
time
transformers
unordered-containers
vector
vty
xdg-basedir
];
executableHaskellDepends = [
base
brick
directory
free
hledger-lib
megaparsec
microlens
optparse-applicative
text
text-format
text-zipper
time
transformers
unordered-containers
vector
vty
xdg-basedir
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hpdeifel/hledger-iadd#readme";
description = "A terminal UI as drop-in replacement for hledger add";
license = stdenv.lib.licenses.bsd3;

}) {};
"hledger-interest" = callPackage
({
  mkDerivation
, base
, Cabal
, Decimal
, hledger-lib
, mtl
, stdenv
, text
, time
}:
mkDerivation {

pname = "hledger-interest";
version = "1.5.1";
sha256 = "0a02354f4e8d53e75817e05b140c4760220ac4e414fbf9772abe4f20a9f90da6";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
base
Cabal
Decimal
hledger-lib
mtl
text
time
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/peti/hledger-interest";
description = "computes interest for a given account";
license = stdenv.lib.licenses.bsd3;

}) {};
"hledger-lib" = callPackage
({
  mkDerivation
, array
, base
, base-compat
, blaze-markup
, bytestring
, cmdargs
, containers
, csv
, data-default
, Decimal
, deepseq
, directory
, filepath
, hashtables
, HUnit
, megaparsec
, mtl
, mtl-compat
, old-time
, parsec
, parsers
, pretty-show
, regex-tdfa
, safe
, semigroups
, split
, stdenv
, system-filepath
, text
, time
, transformers
, trifecta
, uglymemo
, utf8-string
}:
mkDerivation {

pname = "hledger-lib";
version = "1.1";
sha256 = "4142142fb92e6c1affc1420e3478449cf0d9d696ab05cc801338a562a5560556";
revision = "1";
editedCabalFile = "092p2431xdszds9sqwx0rngfqjg66x47d3m9gsg0bg3ikj7ccwng";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
array
base
base-compat
blaze-markup
bytestring
cmdargs
containers
csv
data-default
Decimal
deepseq
directory
filepath
hashtables
HUnit
megaparsec
mtl
mtl-compat
old-time
parsec
parsers
pretty-show
regex-tdfa
safe
semigroups
split
system-filepath
text
time
transformers
trifecta
uglymemo
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://hledger.org";
description = "Core data types, parsers and functionality for the hledger accounting tools";
license = "GPL";

}) {};
"hledger-ui" = callPackage
({
  mkDerivation
, ansi-terminal
, async
, base
, base-compat
, brick
, cmdargs
, containers
, data-default
, directory
, filepath
, fsnotify
, hledger
, hledger-lib
, HUnit
, megaparsec
, microlens
, microlens-platform
, pretty-show
, process
, safe
, split
, stdenv
, text
, text-zipper
, time
, transformers
, vector
, vty
}:
mkDerivation {

pname = "hledger-ui";
version = "1.1.2";
sha256 = "5cc85502297f3ccf31990ebbe60178ee9f90ea434e86756f39e2848f0ae788d1";
revision = "2";
editedCabalFile = "1pfdg8y53xmlj3iidivic9gnhrza3vbsa1zmyq3c3ghiahd9zw5q";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
ansi-terminal
async
base
base-compat
brick
cmdargs
containers
data-default
directory
filepath
fsnotify
hledger
hledger-lib
HUnit
megaparsec
microlens
microlens-platform
pretty-show
process
safe
split
text
text-zipper
time
transformers
vector
vty
];
doHaddock = false;
doCheck = false;
homepage = "http://hledger.org";
description = "Curses-style user interface for the hledger accounting tool";
license = "GPL";

}) {};
"hledger-web" = callPackage
({
  mkDerivation
, base
, base-compat
, blaze-html
, blaze-markup
, bytestring
, clientsession
, cmdargs
, conduit-extra
, data-default
, directory
, filepath
, hjsmin
, hledger
, hledger-lib
, http-client
, http-conduit
, HUnit
, json
, megaparsec
, mtl
, parsec
, safe
, shakespeare
, stdenv
, template-haskell
, text
, time
, transformers
, wai
, wai-extra
, wai-handler-launch
, warp
, yaml
, yesod
, yesod-core
, yesod-form
, yesod-static
}:
mkDerivation {

pname = "hledger-web";
version = "1.1";
sha256 = "da0c0c1096497737540efdc85cbb95cd01cbd48410491d8b2c26529b4151a2ca";
revision = "1";
editedCabalFile = "079hm23rspawraa33chdghlsqjqbzbr1jvaynl8i2w31y4bmdhgv";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
base-compat
blaze-html
blaze-markup
bytestring
clientsession
cmdargs
conduit-extra
data-default
directory
filepath
hjsmin
hledger
hledger-lib
http-client
http-conduit
HUnit
json
megaparsec
mtl
safe
shakespeare
template-haskell
text
time
transformers
wai
wai-extra
wai-handler-launch
warp
yaml
yesod
yesod-core
yesod-form
yesod-static
];
executableHaskellDepends = [
base
base-compat
blaze-html
blaze-markup
bytestring
clientsession
cmdargs
conduit-extra
data-default
directory
filepath
hjsmin
hledger
hledger-lib
http-client
http-conduit
HUnit
json
parsec
safe
shakespeare
template-haskell
text
time
transformers
wai
wai-extra
wai-handler-launch
warp
yaml
yesod
yesod-core
yesod-form
yesod-static
];
doHaddock = false;
doCheck = false;
homepage = "http://hledger.org";
description = "Web interface for the hledger accounting tool";
license = "GPL";

}) {};
"hlibgit2" = callPackage
({
  mkDerivation
, base
, bindings-DSL
, openssl
, stdenv
, zlib
}:
mkDerivation {

pname = "hlibgit2";
version = "0.18.0.16";
sha256 = "199e4027faafe0a39d18ca3168923d44c57b386b960c72398df1c0fb7eff8e5e";
libraryHaskellDepends = [
base
bindings-DSL
zlib
];
librarySystemDepends = [
openssl
];
doHaddock = false;
doCheck = false;
description = "Low-level bindings to libgit2";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) openssl;};
"hlibsass" = callPackage
({
  mkDerivation
, base
, libsass
, stdenv
}:
mkDerivation {

pname = "hlibsass";
version = "0.1.5.0";
sha256 = "ce3e9a15d01c1b61d41b03e9b05ecd9b4b9aaf6da7d591086181b74e18d25bb8";
configureFlags = [
"-fexternalLibsass"
];
libraryHaskellDepends = [
base
];
librarySystemDepends = [
libsass
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jakubfijalkowski/hlibsass";
description = "Low-level bindings to Libsass";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) libsass;};
"hlint" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, cmdargs
, containers
, cpphs
, directory
, extra
, filepath
, haskell-src-exts
, hscolour
, process
, refact
, stdenv
, transformers
, uniplate
}:
mkDerivation {

pname = "hlint";
version = "1.9.41";
sha256 = "2d9299f7952af44b2f06a67af917859fd51e1056c7d405f0930769ea1e093fb4";
revision = "1";
editedCabalFile = "1g0k884pry50x1fpcagyk8qjmpfmr3vr8i2ljikyhm64yc0xs3sl";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
ansi-terminal
base
cmdargs
containers
cpphs
directory
extra
filepath
haskell-src-exts
hscolour
process
refact
transformers
uniplate
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/hlint#readme";
description = "Source code suggestions";
license = stdenv.lib.licenses.bsd3;

}) {};
"hmatrix" = callPackage
({
  mkDerivation
, array
, base
, binary
, bytestring
, deepseq
, openblasCompat
, random
, split
, stdenv
, storable-complex
, vector
}:
mkDerivation {

pname = "hmatrix";
version = "0.18.0.0";
sha256 = "35766dfb4af7227a881ef1c8b740a9b5c09253f21e23ae295a5341511a913cfe";
configureFlags = [
"-fdisable-default-paths"
"-fopenblas"
];
libraryHaskellDepends = [
array
base
binary
bytestring
deepseq
random
split
storable-complex
vector
];
librarySystemDepends = [
openblasCompat
];
doHaddock = false;
doCheck = false;
preConfigure = "sed -i hmatrix.cabal -e '/\\/usr\\//D'";
homepage = "https://github.com/albertoruiz/hmatrix";
description = "Numeric Linear Algebra";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) openblasCompat;};
"hmatrix-gsl" = callPackage
({
  mkDerivation
, array
, base
, gsl
, hmatrix
, process
, random
, stdenv
, vector
}:
mkDerivation {

pname = "hmatrix-gsl";
version = "0.18.0.1";
sha256 = "fda5c3b067bb2e47fac80995c0722bdbdf9f9320ea8a04fc2eca30f3fea9d455";
libraryHaskellDepends = [
array
base
hmatrix
process
random
vector
];
libraryPkgconfigDepends = [
gsl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/albertoruiz/hmatrix";
description = "Numerical computation";
license = "GPL";

}) {inherit (pkgs) gsl;};
"hmatrix-gsl-stats" = callPackage
({
  mkDerivation
, base
, binary
, gsl
, hmatrix
, stdenv
, storable-complex
, vector
}:
mkDerivation {

pname = "hmatrix-gsl-stats";
version = "0.4.1.6";
sha256 = "1bf5bb87312525256868872a5d51e43d851b75ef549a8834052263171b91cd71";
libraryHaskellDepends = [
base
binary
hmatrix
storable-complex
vector
];
libraryPkgconfigDepends = [
gsl
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/hmatrix-gsl-stats";
description = "GSL Statistics interface";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) gsl;};
"hmatrix-repa" = callPackage
({
  mkDerivation
, base
, hmatrix
, repa
, stdenv
, vector
}:
mkDerivation {

pname = "hmatrix-repa";
version = "0.1.2.2";
sha256 = "51c3a46800aea072258b05047cb0c6f24999bbb626268ce32809c5872e0e71be";
libraryHaskellDepends = [
base
hmatrix
repa
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/hmatrix-repa";
description = "Adaptors for interoperability between hmatrix and repa";
license = stdenv.lib.licenses.bsd3;

}) {};
"hmatrix-special" = callPackage
({
  mkDerivation
, base
, hmatrix
, hmatrix-gsl
, stdenv
}:
mkDerivation {

pname = "hmatrix-special";
version = "0.4.0.1";
sha256 = "72a9c9c559da6b6314e6042ddfd53d638fdf1b819978a630fc339e0859c3ec4e";
libraryHaskellDepends = [
base
hmatrix
hmatrix-gsl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/albertoruiz/hmatrix";
description = "Interface to GSL special functions";
license = "GPL";

}) {};
"hmpfr" = callPackage
({
  mkDerivation
, base
, integer-gmp
, mpfr
, stdenv
}:
mkDerivation {

pname = "hmpfr";
version = "0.4.2.1";
sha256 = "ccb27dec6053e05b58ba6c1b27373ed78fb91ee0792c08158c59eec409ac0a11";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
integer-gmp
];
librarySystemDepends = [
mpfr
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/michalkonecny/hmpfr";
description = "Haskell binding to the MPFR library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) mpfr;};
"hmt" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, colour
, containers
, data-ordlist
, directory
, filepath
, lazy-csv
, logict
, multiset-comb
, parsec
, permutation
, primes
, safe
, split
, stdenv
, utf8-string
}:
mkDerivation {

pname = "hmt";
version = "0.15";
sha256 = "498df72d63766f4b8ea3a98d09d7bfd73c14743b9d0885b80dae509ba07e3314";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
array
base
bytestring
colour
containers
data-ordlist
directory
filepath
lazy-csv
logict
multiset-comb
parsec
permutation
primes
safe
split
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://rd.slavepianos.org/t/hmt";
description = "Haskell Music Theory";
license = "GPL";

}) {};
"hoauth2" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, http-conduit
, http-types
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "hoauth2";
version = "0.5.7";
sha256 = "7b196e4b70b8207c4beb3479f5ab4476c17d9c0ec7d8f1fcb658590641e9b9ec";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
http-conduit
http-types
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/freizl/hoauth2";
description = "Haskell OAuth2 authentication client";
license = stdenv.lib.licenses.bsd3;

}) {};
"hocilib" = callPackage
({
  mkDerivation
, base
, bytestring
, c2hs
, containers
, inline-c
, ocilib
, stdenv
, template-haskell
}:
mkDerivation {

pname = "hocilib";
version = "0.2.0";
sha256 = "7c29cc84e7ac320cd1ddfb9d387d19c7c03fea3eedfb41713115d0e94aeafb78";
libraryHaskellDepends = [
base
bytestring
containers
inline-c
template-haskell
];
librarySystemDepends = [
ocilib
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpinsight/hocilib";
description = "FFI binding to OCILIB";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) ocilib;};
"holy-project" = callPackage
({
  mkDerivation
, aeson
, ansi-terminal
, base
, bytestring
, Cabal
, directory
, filepath
, hastache
, http-conduit
, HUnit
, lens
, lens-aeson
, process
, QuickCheck
, random
, smallcheck
, split
, stdenv
, syb
, tasty
, tasty-hunit
, tasty-quickcheck
, tasty-smallcheck
, text
, time
, unix
}:
mkDerivation {

pname = "holy-project";
version = "0.2.0.1";
sha256 = "b0f60f48377986212ee45a7ab360f4ef32578d4fa4b65cc21132f9c1e90a2814";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
ansi-terminal
base
bytestring
directory
filepath
hastache
http-conduit
lens
lens-aeson
process
random
split
syb
text
time
unix
];
executableHaskellDepends = [
aeson
ansi-terminal
base
bytestring
Cabal
directory
filepath
hastache
http-conduit
HUnit
lens
lens-aeson
process
QuickCheck
random
smallcheck
split
syb
tasty
tasty-hunit
tasty-quickcheck
tasty-smallcheck
text
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yogsototh/holy-project";
description = "Start your Haskell project with cabal, git and tests";
license = stdenv.lib.licenses.mit;

}) {};
"hoogle" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, bytestring
, cmdargs
, conduit
, conduit-extra
, connection
, containers
, deepseq
, directory
, extra
, filepath
, haskell-src-exts
, http-conduit
, http-types
, js-flot
, js-jquery
, mmap
, network
, network-uri
, old-locale
, process
, process-extras
, QuickCheck
, resourcet
, stdenv
, tar
, template-haskell
, text
, time
, transformers
, uniplate
, utf8-string
, vector
, wai
, wai-logger
, warp
, warp-tls
, zlib
}:
mkDerivation {

pname = "hoogle";
version = "5.0.9";
sha256 = "93f584c5f7fc6a57ee50803ae8df5e6c41051a3177044b273cb7fbcd39d11874";
revision = "1";
editedCabalFile = "1xs3dpajbm9whzrhc22xcbizfq94gagwqfhbkgjcx47jnxwamq9h";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
binary
bytestring
cmdargs
conduit
conduit-extra
connection
containers
deepseq
directory
extra
filepath
haskell-src-exts
http-conduit
http-types
js-flot
js-jquery
mmap
network
network-uri
old-locale
process
process-extras
QuickCheck
resourcet
tar
template-haskell
text
time
transformers
uniplate
utf8-string
vector
wai
wai-logger
warp
warp-tls
zlib
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
testTarget = "--test-option=--no-net";
homepage = "http://hoogle.haskell.org/";
description = "Haskell API Search";
license = stdenv.lib.licenses.bsd3;

}) {};
"hopenpgp-tools" = callPackage
({
  mkDerivation
, aeson
, alex
, ansi-wl-pprint
, array
, attoparsec
, base
, base16-bytestring
, binary
, binary-conduit
, bytestring
, conduit
, conduit-extra
, containers
, crypto-pubkey
, cryptohash
, directory
, errors
, fgl
, graphviz
, happy
, hOpenPGP
, http-client
, http-client-tls
, http-types
, ixset-typed
, lens
, monad-loops
, openpgp-asciiarmor
, optparse-applicative
, resourcet
, stdenv
, text
, time
, time-locale-compat
, transformers
, unordered-containers
, wl-pprint-extras
, wl-pprint-terminfo
, yaml
}:
mkDerivation {

pname = "hopenpgp-tools";
version = "0.19.4";
sha256 = "e656cd989833c6d318d5c44931ef5a8cd98bb0ebb4bab70a2d2f701091d0abd8";
revision = "1";
editedCabalFile = "1117gwsyak3daj0g3ddfw0kq0lsvgjw59xz5s02j4g25gbjhiara";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
aeson
ansi-wl-pprint
array
attoparsec
base
base16-bytestring
binary
binary-conduit
bytestring
conduit
conduit-extra
containers
crypto-pubkey
cryptohash
directory
errors
fgl
graphviz
hOpenPGP
http-client
http-client-tls
http-types
ixset-typed
lens
monad-loops
openpgp-asciiarmor
optparse-applicative
resourcet
text
time
time-locale-compat
transformers
unordered-containers
wl-pprint-extras
wl-pprint-terminfo
yaml
];
executableToolDepends = [
alex
happy
];
doHaddock = false;
doCheck = false;
homepage = "http://floss.scru.org/hopenpgp-tools";
description = "hOpenPGP-based command-line tools";
license = "unknown";

}) {};
"hopenssl" = callPackage
({
  mkDerivation
, base
, bytestring
, mtl
, openssl
, stdenv
}:
mkDerivation {

pname = "hopenssl";
version = "1.7";
sha256 = "9ee64bb5834e475a6bdfa1fb578e6a966f74bebb8be95685a9d695cffb4c46ff";
libraryHaskellDepends = [
base
bytestring
mtl
];
librarySystemDepends = [
openssl
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/peti/hopenssl";
description = "FFI bindings to OpenSSL's EVP digest interface";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) openssl;};
"hosc" = callPackage
({
  mkDerivation
, base
, binary
, blaze-builder
, bytestring
, data-binary-ieee754
, network
, stdenv
, time
, transformers
}:
mkDerivation {

pname = "hosc";
version = "0.15";
sha256 = "8e35a78a5619f57148a07e0b5995c209175a0ae3f1f4e1c5c8c9dc54822de2fa";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
binary
blaze-builder
bytestring
data-binary-ieee754
network
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://rd.slavepianos.org/t/hosc";
description = "Haskell Open Sound Control";
license = "GPL";

}) {};
"hostname" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "hostname";
version = "1.0";
sha256 = "9b43dab1b6da521f35685b20555da00738c8e136eb972458c786242406a9cf5c";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A very simple package providing a cross-platform means of determining the hostname";
license = stdenv.lib.licenses.bsd3;

}) {};
"hostname-validate" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "hostname-validate";
version = "1.0.0";
sha256 = "7fafb1e0cfe19d453030754962e74cdb8f3e791ec5b974623cbf26872779c857";
libraryHaskellDepends = [
attoparsec
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "Validate hostnames e.g. localhost or foo.co.uk.";
license = stdenv.lib.licenses.bsd3;

}) {};
"hourglass" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "hourglass";
version = "0.2.10";
sha256 = "d553362d7a6f7df60d8ff99304aaad0995be81f9d302725ebe9441829a0f8d80";
revision = "1";
editedCabalFile = "13q3v4hvwaqxc85m006avx0wka0y8nigka7z8nqhy6rn39qxjjdj";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-hourglass";
description = "simple performant time related library";
license = stdenv.lib.licenses.bsd3;

}) {};
"hpack" = callPackage
({
  mkDerivation
, aeson
, base
, base-compat
, bytestring
, containers
, deepseq
, directory
, filepath
, Glob
, stdenv
, text
, unordered-containers
, yaml
}:
mkDerivation {

pname = "hpack";
version = "0.17.0";
sha256 = "d2578aca1a302f5424c32a81eb15a41797e72d17c0c2eab7c236c513c4657464";
revision = "1";
editedCabalFile = "17iv3m05g2xbndq5p55ac6lgb5q8z1dhjwvz39bkmjjf8jiagqjf";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
base-compat
bytestring
containers
deepseq
directory
filepath
Glob
text
unordered-containers
yaml
];
executableHaskellDepends = [
aeson
base
base-compat
bytestring
containers
deepseq
directory
filepath
Glob
text
unordered-containers
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sol/hpack#readme";
description = "An alternative format for Haskell packages";
license = stdenv.lib.licenses.mit;

}) {};
"hpc-coveralls" = callPackage
({
  mkDerivation
, aeson
, async
, base
, bytestring
, Cabal
, cmdargs
, containers
, curl
, directory
, directory-tree
, hpc
, process
, pureMD5
, regex-posix
, retry
, safe
, split
, stdenv
, transformers
}:
mkDerivation {

pname = "hpc-coveralls";
version = "1.0.8";
sha256 = "431db6ee058bf459c3e433c2d9ad89f1fcb344590745c3f62d0b744fc7d288b1";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
Cabal
cmdargs
containers
curl
directory
directory-tree
hpc
process
pureMD5
retry
safe
split
transformers
];
executableHaskellDepends = [
aeson
async
base
bytestring
Cabal
cmdargs
containers
curl
directory
directory-tree
hpc
process
pureMD5
regex-posix
retry
safe
split
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/guillaume-nargeot/hpc-coveralls";
description = "Coveralls.io support for Haskell.";
license = stdenv.lib.licenses.bsd3;

}) {};
"hpio" = callPackage
({
  mkDerivation
, async
, base
, base-compat
, bytestring
, containers
, directory
, exceptions
, filepath
, mtl
, mtl-compat
, optparse-applicative
, QuickCheck
, stdenv
, text
, transformers
, transformers-compat
, unix
, unix-bytestring
}:
mkDerivation {

pname = "hpio";
version = "0.8.0.6";
sha256 = "3e46024f61f4dda52e5edafa3bbcab1d2dfe7f5f68a32c6f8480cecfd864cb94";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
base-compat
bytestring
containers
directory
exceptions
filepath
mtl
mtl-compat
QuickCheck
text
transformers
transformers-compat
unix
unix-bytestring
];
executableHaskellDepends = [
async
base
base-compat
exceptions
mtl
mtl-compat
optparse-applicative
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dhess/hpio";
description = "Monads for GPIO in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"hpp" = callPackage
({
  mkDerivation
, base
, bytestring
, bytestring-trie
, directory
, filepath
, ghc-prim
, stdenv
, time
, transformers
}:
mkDerivation {

pname = "hpp";
version = "0.4.0";
sha256 = "05923e6dacc0549f50ff342a3eb2b6782fe3cdc4c6190eea0e4cabc17f429f5d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
bytestring-trie
directory
filepath
ghc-prim
time
transformers
];
executableHaskellDepends = [
base
directory
filepath
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/acowley/hpp";
description = "A Haskell pre-processor";
license = stdenv.lib.licenses.bsd3;

}) {};
"hpqtypes" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, data-default-class
, exceptions
, lifted-base
, monad-control
, mtl
, postgresql
, resource-pool
, stdenv
, text
, text-show
, time
, transformers
, transformers-base
, vector
}:
mkDerivation {

pname = "hpqtypes";
version = "1.5.1.1";
sha256 = "b99c214d7cc83573f5bf295837b42a13a4057dc9cab701b25798086f0d54795a";
revision = "1";
editedCabalFile = "0k255rbvzinwrav3k7f3n2hssiv9p3bb51fg4vp2mhnm9igfy5b9";
libraryHaskellDepends = [
aeson
base
bytestring
containers
data-default-class
exceptions
lifted-base
monad-control
mtl
resource-pool
text
text-show
time
transformers
transformers-base
vector
];
librarySystemDepends = [
postgresql
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/scrive/hpqtypes";
description = "Haskell bindings to libpqtypes";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) postgresql;};
"hquantlib" = callPackage
({
  mkDerivation
, base
, containers
, hmatrix
, hmatrix-gsl
, hmatrix-special
, mersenne-random
, parallel
, statistics
, stdenv
, time
, vector
, vector-algorithms
}:
mkDerivation {

pname = "hquantlib";
version = "0.0.3.3";
sha256 = "208839f68a4af5f3b0e09214623c8e166f768a46b6cdc7369937ab73e8d78c28";
revision = "2";
editedCabalFile = "1zyvr1rgasymap5zbj16nbg8klshwm43842f8y0y56779ynai4vy";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
hmatrix
hmatrix-gsl
hmatrix-special
mersenne-random
parallel
statistics
time
vector
vector-algorithms
];
executableHaskellDepends = [
base
containers
mersenne-random
parallel
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/paulrzcz/hquantlib.git";
description = "HQuantLib is a port of essencial parts of QuantLib to Haskell";
license = "LGPL";

}) {};
"hreader" = callPackage
({
  mkDerivation
, base
, exceptions
, hset
, mmorph
, monad-control
, mtl
, stdenv
, tagged
, transformers
, transformers-base
}:
mkDerivation {

pname = "hreader";
version = "1.1.0";
sha256 = "2a2b02c059b343ab7ff0d340b6545a003b0d563fb8a1ad2d53d6c2f4759a7d3a";
libraryHaskellDepends = [
base
exceptions
hset
mmorph
monad-control
mtl
tagged
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/s9gf4ult/hreader";
description = "Generalization of MonadReader and ReaderT using hset";
license = stdenv.lib.licenses.bsd3;

}) {};
"hruby" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, ruby
, scientific
, stdenv
, stm
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "hruby";
version = "0.3.4.3";
sha256 = "a1fe68e20ffeae12b12a0f156e58c020c4d2da85dcd773ae4350f7b79aacf9cc";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
scientific
stm
text
unordered-containers
vector
];
librarySystemDepends = [
ruby
];
doHaddock = false;
doCheck = false;
description = "Embed a Ruby intepreter in your Haskell program !";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) ruby;};
"hs-GeoIP" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, GeoIP
, stdenv
}:
mkDerivation {

pname = "hs-GeoIP";
version = "0.3";
sha256 = "8e5ff6a132d8944336f10dcaa69d8852cdd7953a5ff18248ae06cb2819a1ab8c";
libraryHaskellDepends = [
base
bytestring
deepseq
];
librarySystemDepends = [
GeoIP
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ozataman/hs-GeoIP";
description = "Haskell bindings to the MaxMind GeoIPCity database via the C library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) GeoIP;};
"hs-bibutils" = callPackage
({
  mkDerivation
, base
, stdenv
, syb
}:
mkDerivation {

pname = "hs-bibutils";
version = "5.5";
sha256 = "95f9f34be9f3145da8acc8a0e9de379236cfe31c5a9bc0eb9489e77402a4c55d";
libraryHaskellDepends = [
base
syb
];
doHaddock = false;
doCheck = false;
homepage = "http://istitutocolli.org/repos/hs-bibutils/";
description = "Haskell bindings to bibutils, the bibliography conversion utilities";
license = "GPL";

}) {};
"hsass" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default-class
, filepath
, hlibsass
, monad-loops
, stdenv
, transformers
}:
mkDerivation {

pname = "hsass";
version = "0.4.0";
sha256 = "512faf0e01e720395699066139379fb2e5e5f456f465c72d58282b75b6ec0f9d";
libraryHaskellDepends = [
base
bytestring
data-default-class
filepath
hlibsass
monad-loops
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jakubfijalkowski/hsass";
description = "Integrating Sass into Haskell applications";
license = stdenv.lib.licenses.mit;

}) {};
"hsb2hs" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, filepath
, preprocessor-tools
, stdenv
}:
mkDerivation {

pname = "hsb2hs";
version = "0.3.1";
sha256 = "8ad800820554f273ada083dfce2f463d920fb1ceb053255023a4c883b090f9d8";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
bytestring
containers
directory
filepath
preprocessor-tools
];
doHaddock = false;
doCheck = false;
description = "Preprocesses a file, adding blobs from files as string literals";
license = stdenv.lib.licenses.bsd3;

}) {};
"hscolour" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "hscolour";
version = "1.24.1";
sha256 = "e46fe3de8ed6f96e2216b94b7608d01919bc86b15dd8d0ec7e71c0e7e5bf79c8";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
containers
];
executableHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~malcolm/hscolour/";
description = "Colourise Haskell code";
license = "LGPL";

}) {};
"hsdns" = callPackage
({
  mkDerivation
, adns
, base
, containers
, network
, stdenv
}:
mkDerivation {

pname = "hsdns";
version = "1.7";
sha256 = "48960ac9e1f0d1e338170aac35f6fd7e064a3b36314894f4a968113385205cd3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
network
];
librarySystemDepends = [
adns
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/peti/hsdns";
description = "Asynchronous DNS Resolver";
license = stdenv.lib.licenses.lgpl3;

}) {inherit (pkgs) adns;};
"hse-cpp" = callPackage
({
  mkDerivation
, base
, cpphs
, haskell-src-exts
, stdenv
}:
mkDerivation {

pname = "hse-cpp";
version = "0.2";
sha256 = "eeb0168c00bf5dd2975faf3f5915035c73b40063b1f315ce3fd58f66a6ae4b4c";
libraryHaskellDepends = [
base
cpphs
haskell-src-exts
];
doHaddock = false;
doCheck = false;
description = "Preprocess+parse haskell code";
license = stdenv.lib.licenses.mit;

}) {};
"hsebaysdk" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, http-client
, http-types
, stdenv
, text
, time
, transformers
, unordered-containers
}:
mkDerivation {

pname = "hsebaysdk";
version = "0.4.0.0";
sha256 = "0738d0df113b15bb9148ecbe02f0a34562c557d8f64b65065122925e29df8901";
libraryHaskellDepends = [
aeson
base
bytestring
http-client
http-types
text
time
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/creichert/hsebaysdk";
description = "Haskell eBay SDK";
license = stdenv.lib.licenses.bsd3;

}) {};
"hsemail" = callPackage
({
  mkDerivation
, base
, mtl
, old-time
, parsec
, stdenv
}:
mkDerivation {

pname = "hsemail";
version = "1.7.7";
sha256 = "25aac3890ff09812be47639ad52cd7be622dc9b193e5a0be115bda12ffcd989b";
libraryHaskellDepends = [
base
mtl
old-time
parsec
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/peti/hsemail";
description = "Internet Message Parsers";
license = stdenv.lib.licenses.bsd3;

}) {};
"hset" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
, tagged
, type-fun
}:
mkDerivation {

pname = "hset";
version = "2.2.0";
sha256 = "b8747a0826aeaca2ca814e7a334f9de5a02f36ac83faea5e1c32c8f6040bf130";
libraryHaskellDepends = [
base
deepseq
tagged
type-fun
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/s9gf4ult/hset";
description = "Primitive list with elements of unique types";
license = stdenv.lib.licenses.bsd3;

}) {};
"hsexif" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, iconv
, stdenv
, text
, time
}:
mkDerivation {

pname = "hsexif";
version = "0.6.1.0";
sha256 = "868a46bcd841a2db36eebba803962f966c24c4a98b7581c9f329fd596bafab4f";
libraryHaskellDepends = [
base
binary
bytestring
containers
iconv
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/emmanueltouzery/hsexif";
description = "EXIF handling library in pure Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"hsignal" = callPackage
({
  mkDerivation
, array
, base
, binary
, blas
, bytestring
, gsl
, hmatrix
, hmatrix-gsl
, hmatrix-gsl-stats
, hstatistics
, liblapack
, mtl
, stdenv
, storable-complex
, vector
}:
mkDerivation {

pname = "hsignal";
version = "0.2.7.5";
sha256 = "0f61f820556c431c3811643cc40e49a6d6c68075da1be0b39298a41c1c7119ac";
libraryHaskellDepends = [
array
base
binary
bytestring
hmatrix
hmatrix-gsl
hmatrix-gsl-stats
hstatistics
mtl
storable-complex
vector
];
librarySystemDepends = [
blas
liblapack
];
libraryPkgconfigDepends = [
gsl
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/hsignal";
description = "Signal processing and EEG data analysis";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) blas; inherit (pkgs) gsl; inherit (pkgs) liblapack;};
"hsinstall" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
}:
mkDerivation {

pname = "hsinstall";
version = "1.5";
sha256 = "77848b03600f68d6cceab565aa6ac165c11855c061cbd27b03b4edb3985c1a1c";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
directory
filepath
];
executableHaskellDepends = [
base
directory
filepath
];
doHaddock = false;
doCheck = false;
description = "Install Haskell software";
license = stdenv.lib.licenses.isc;

}) {};
"hslogger" = callPackage
({
  mkDerivation
, base
, containers
, directory
, mtl
, network
, old-locale
, process
, stdenv
, time
, unix
}:
mkDerivation {

pname = "hslogger";
version = "1.2.10";
sha256 = "d7ca6e94a4aacb47a8dc30e3960ab8deff482d2ec9dca9a87b225e03e97e452b";
libraryHaskellDepends = [
base
containers
directory
mtl
network
old-locale
process
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://software.complete.org/hslogger";
description = "Versatile logging framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"hslua" = callPackage
({
  mkDerivation
, base
, bytestring
, lua5_1
, stdenv
}:
mkDerivation {

pname = "hslua";
version = "0.4.1";
sha256 = "2df2b4f0566ef2244506f9830e0207fce3bece7c331129f69f446c722136173f";
configureFlags = [
"-fsystem-lua"
];
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
lua5_1
];
doHaddock = false;
doCheck = false;
description = "A Lua language interpreter embedding in Haskell";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) lua5_1;};
"hsndfile" = callPackage
({
  mkDerivation
, base
, c2hs
, libsndfile
, stdenv
}:
mkDerivation {

pname = "hsndfile";
version = "0.8.0";
sha256 = "e97e7ef4c26b0dba9400d9a77d3d5001735f64094b93f9733443f58f7f568efb";
libraryHaskellDepends = [
base
];
librarySystemDepends = [
libsndfile
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell.org/haskellwiki/Hsndfile";
description = "Haskell bindings for libsndfile";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) libsndfile;};
"hsndfile-vector" = callPackage
({
  mkDerivation
, base
, hsndfile
, stdenv
, vector
}:
mkDerivation {

pname = "hsndfile-vector";
version = "0.5.2";
sha256 = "2ffe11eb9a3e63aae24e8e06d2e04e8ca4a617ccf1238843cc71517a905b2895";
libraryHaskellDepends = [
base
hsndfile
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell.org/haskellwiki/Hsndfile";
description = "Haskell bindings for libsndfile (Data.Vector interface)";
license = stdenv.lib.licenses.lgpl2;

}) {};
"hsp" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "hsp";
version = "0.10.0";
sha256 = "4ed3905a9db91001bde09f060290833af462e87e35476ab0def1579a1ff7ceab";
libraryHaskellDepends = [
base
mtl
text
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/nibro/hsp";
description = "Haskell Server Pages is a library for writing dynamic server-side web pages";
license = stdenv.lib.licenses.bsd3;

}) {};
"hspec" = callPackage
({
  mkDerivation
, base
, call-stack
, hspec-core
, hspec-discover
, hspec-expectations
, HUnit
, QuickCheck
, stdenv
, transformers
}:
mkDerivation {

pname = "hspec";
version = "2.4.1";
sha256 = "c6d29aea545769b116e14ca7ca2c64d7e18649fc792adb98623b119d3a80f6da";
libraryHaskellDepends = [
base
call-stack
hspec-core
hspec-discover
hspec-expectations
HUnit
QuickCheck
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://hspec.github.io/";
description = "A Testing Framework for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-attoparsec" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, hspec-expectations
, stdenv
, text
}:
mkDerivation {

pname = "hspec-attoparsec";
version = "0.1.0.2";
sha256 = "ea7a8b3f2989abde8c8537cec1a2ae312e88df80086b9b01ed12e5324137fb64";
libraryHaskellDepends = [
attoparsec
base
bytestring
hspec-expectations
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/alpmestan/hspec-attoparsec";
description = "Utility functions for testing your attoparsec parsers with hspec";
license = stdenv.lib.licenses.bsd3;

}) {};
"hspec-contrib" = callPackage
({
  mkDerivation
, base
, hspec-core
, HUnit
, stdenv
}:
mkDerivation {

pname = "hspec-contrib";
version = "0.4.0";
sha256 = "6f9e2201ee176c723f91ee932b7fc8b677e0d54376f897f52c133c8ca9860c16";
revision = "2";
editedCabalFile = "029h7dl49vlrhn62v8kgk8zdavjjc80ga1m8fwhl0pnmvnfkn7sq";
libraryHaskellDepends = [
base
hspec-core
HUnit
];
doHaddock = false;
doCheck = false;
homepage = "http://hspec.github.io/";
description = "Contributed functionality for Hspec";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-core" = callPackage
({
  mkDerivation
, ansi-terminal
, array
, async
, base
, call-stack
, deepseq
, directory
, filepath
, hspec-expectations
, HUnit
, QuickCheck
, quickcheck-io
, random
, setenv
, stdenv
, tf-random
, time
, transformers
}:
mkDerivation {

pname = "hspec-core";
version = "2.4.1";
sha256 = "b2ea5b6a37542fa138060085ee7bf82ab0ab130f2c287a57ae05a4f83ae437da";
revision = "3";
editedCabalFile = "0zsvr9nv65q084mmzrdi17hrcywr5ll1c9nfvxszjzza2y94a213";
libraryHaskellDepends = [
ansi-terminal
array
async
base
call-stack
deepseq
directory
filepath
hspec-expectations
HUnit
QuickCheck
quickcheck-io
random
setenv
tf-random
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://hspec.github.io/";
description = "A Testing Framework for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-discover" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
}:
mkDerivation {

pname = "hspec-discover";
version = "2.4.1";
sha256 = "e0670831f06a8924779cc81d4eb706b35d3a7176cba6bee5df506de961e8d5f3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
filepath
];
executableHaskellDepends = [
base
directory
filepath
];
doHaddock = false;
doCheck = false;
homepage = "http://hspec.github.io/";
description = "Automatically discover and run Hspec tests";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-expectations" = callPackage
({
  mkDerivation
, base
, call-stack
, HUnit
, stdenv
}:
mkDerivation {

pname = "hspec-expectations";
version = "0.8.2";
sha256 = "819607ea1faf35ce5be34be61c6f50f3389ea43892d56fb28c57a9f5d54fb4ef";
libraryHaskellDepends = [
base
call-stack
HUnit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hspec/hspec-expectations#readme";
description = "Catchy combinators for HUnit";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-expectations-pretty-diff" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, Diff
, hscolour
, HUnit
, nicify-lib
, stdenv
, text
}:
mkDerivation {

pname = "hspec-expectations-pretty-diff";
version = "0.7.2.4";
sha256 = "1bbfd524330be3cb0b27945556d01f48e3005e042ee475cdf6e441ba21b51b0a";
libraryHaskellDepends = [
ansi-terminal
base
Diff
hscolour
HUnit
nicify-lib
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/myfreeweb/hspec-expectations-pretty-diff#readme";
description = "Catchy combinators for HUnit";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-golden-aeson" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, bytestring
, directory
, filepath
, hspec
, QuickCheck
, quickcheck-arbitrary-adt
, random
, stdenv
, transformers
}:
mkDerivation {

pname = "hspec-golden-aeson";
version = "0.2.0.3";
sha256 = "cd99f2ba6423706197e8dccb290816cbf50779849eddd3f60e1ca7df62c703fb";
libraryHaskellDepends = [
aeson
aeson-pretty
base
bytestring
directory
filepath
hspec
QuickCheck
quickcheck-arbitrary-adt
random
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/plow-technologies/hspec-golden-aeson#readme";
description = "Use tests to monitor changes in Aeson serialization";
license = stdenv.lib.licenses.bsd3;

}) {};
"hspec-megaparsec" = callPackage
({
  mkDerivation
, base
, containers
, hspec-expectations
, megaparsec
, stdenv
}:
mkDerivation {

pname = "hspec-megaparsec";
version = "0.3.1";
sha256 = "826f8169bc2ce9f056be8f2b1bb00039eb1a0114015b3db71509e3e0c871514d";
libraryHaskellDepends = [
base
containers
hspec-expectations
megaparsec
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/hspec-megaparsec";
description = "Utility functions for testing Megaparsec parsers with Hspec";
license = stdenv.lib.licenses.bsd3;

}) {};
"hspec-meta" = callPackage
({
  mkDerivation
, ansi-terminal
, async
, base
, call-stack
, deepseq
, directory
, filepath
, hspec-expectations
, HUnit
, QuickCheck
, quickcheck-io
, random
, setenv
, stdenv
, time
, transformers
}:
mkDerivation {

pname = "hspec-meta";
version = "2.3.2";
sha256 = "59b1ba3f32f443fdcdef345905a4d0b60c31c36894e56d34a9ac6cf406578a8b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-terminal
async
base
call-stack
deepseq
hspec-expectations
HUnit
QuickCheck
quickcheck-io
random
setenv
time
transformers
];
executableHaskellDepends = [
ansi-terminal
async
base
call-stack
deepseq
directory
filepath
hspec-expectations
HUnit
QuickCheck
quickcheck-io
random
setenv
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://hspec.github.io/";
description = "A version of Hspec which is used to test Hspec itself";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-setup" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, directory
, directory-tree
, filepath
, haskell-src-exts
, pretty
, process
, projectroot
, split
, stdenv
, strict
}:
mkDerivation {

pname = "hspec-setup";
version = "0.2.1.0";
sha256 = "abd91c97ca341f3111b318e7a203daf083424b180ba3bd00fc7e5d9ba2c177d0";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-wl-pprint
base
directory
directory-tree
filepath
haskell-src-exts
pretty
process
projectroot
split
strict
];
executableHaskellDepends = [
ansi-wl-pprint
base
directory
directory-tree
filepath
haskell-src-exts
pretty
process
projectroot
split
strict
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yamadapc/haskell-hspec-setup";
description = "Add an hspec test-suite in one command";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-smallcheck" = callPackage
({
  mkDerivation
, base
, hspec-core
, smallcheck
, stdenv
}:
mkDerivation {

pname = "hspec-smallcheck";
version = "0.4.2";
sha256 = "ba09d4b2eb1c6ff2d680aa09b36eb6c0b395cc258ae716b8d1db511073385ed3";
revision = "1";
editedCabalFile = "19fp4xandn3jn1hzs1bkjbncyv74908wzcqkvk7xf0dfmm0wpmqw";
libraryHaskellDepends = [
base
hspec-core
smallcheck
];
doHaddock = false;
doCheck = false;
homepage = "http://hspec.github.io/";
description = "SmallCheck support for the Hspec testing framework";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-wai" = callPackage
({
  mkDerivation
, base
, base-compat
, bytestring
, case-insensitive
, hspec-core
, hspec-expectations
, http-types
, QuickCheck
, stdenv
, text
, transformers
, wai
, wai-extra
}:
mkDerivation {

pname = "hspec-wai";
version = "0.8.0";
sha256 = "8b7ee2cf41bd29cc674da762a46b928557a4c42df564e2a9427b1526273a1141";
libraryHaskellDepends = [
base
base-compat
bytestring
case-insensitive
hspec-core
hspec-expectations
http-types
QuickCheck
text
transformers
wai
wai-extra
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hspec/hspec-wai#readme";
description = "Experimental Hspec support for testing WAI applications";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-wai-json" = callPackage
({
  mkDerivation
, aeson
, aeson-qq
, base
, bytestring
, case-insensitive
, hspec-wai
, stdenv
, template-haskell
}:
mkDerivation {

pname = "hspec-wai-json";
version = "0.8.0";
sha256 = "4679308198b7b247094696da5524e50e1dbc92da49bdd44627c105ccdf6b86e8";
libraryHaskellDepends = [
aeson
aeson-qq
base
bytestring
case-insensitive
hspec-wai
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hspec/hspec-wai#readme";
description = "Testing JSON APIs with hspec-wai";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-webdriver" = callPackage
({
  mkDerivation
, aeson
, base
, data-default
, hashable
, hspec
, hspec-core
, HUnit
, lifted-base
, stdenv
, stm
, text
, transformers
, unordered-containers
, webdriver
}:
mkDerivation {

pname = "hspec-webdriver";
version = "1.2.0";
sha256 = "05d0f818de7f21e3dcb10860f60fe53b393fad75892ec1c520815dd53a0385c8";
libraryHaskellDepends = [
aeson
base
data-default
hashable
hspec
hspec-core
HUnit
lifted-base
stm
text
transformers
unordered-containers
webdriver
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/wuzzeb/webdriver-utils";
description = "Write end2end web application tests using webdriver and hspec";
license = stdenv.lib.licenses.mit;

}) {};
"hstatistics" = callPackage
({
  mkDerivation
, array
, base
, hmatrix
, hmatrix-gsl-stats
, random
, stdenv
, vector
}:
mkDerivation {

pname = "hstatistics";
version = "0.3";
sha256 = "7af3f698d1bded8690b1ec05017ae05310fad1f2d25ec138fb72994b0812eeec";
libraryHaskellDepends = [
array
base
hmatrix
hmatrix-gsl-stats
random
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/hstatistics";
description = "Statistics";
license = stdenv.lib.licenses.bsd3;

}) {};
"hstatsd" = callPackage
({
  mkDerivation
, base
, bytestring
, mtl
, network
, stdenv
, text
}:
mkDerivation {

pname = "hstatsd";
version = "0.1";
sha256 = "446779594257c0fa02d5271c997ee0c22f74f7636d89e34394ad87e5bd285824";
libraryHaskellDepends = [
base
bytestring
mtl
network
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/hstatsd";
description = "Quick and dirty statsd interface";
license = stdenv.lib.licenses.publicDomain;

}) {};
"hsx-jmacro" = callPackage
({
  mkDerivation
, base
, hsp
, jmacro
, mtl
, stdenv
, text
, wl-pprint-text
}:
mkDerivation {

pname = "hsx-jmacro";
version = "7.3.8";
sha256 = "97c7efa3f8acc5159d697e080fb9ed7abddfca64e4f03d67cb66583fd7114495";
libraryHaskellDepends = [
base
hsp
jmacro
mtl
text
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/";
description = "hsp+jmacro support";
license = stdenv.lib.licenses.bsd3;

}) {};
"hsx2hs" = callPackage
({
  mkDerivation
, base
, bytestring
, haskell-src-exts
, haskell-src-meta
, mtl
, stdenv
, template-haskell
, utf8-string
}:
mkDerivation {

pname = "hsx2hs";
version = "0.14.0";
sha256 = "987e6ce1eb612680dd3668a5f3347a6be9f6a78c54dbf5e3aabc0f8b4f991170";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
haskell-src-exts
haskell-src-meta
mtl
template-haskell
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/seereason/hsx2hs";
description = "HSX (Haskell Source with XML) allows literal XML syntax in Haskell source code";
license = stdenv.lib.licenses.bsd3;

}) {};
"hsyslog" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "hsyslog";
version = "4";
sha256 = "33d5fca76dbf8f1675258e81af5e53ee7c659cfee9cc78ea202c78ba05003a49";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/peti/hsyslog";
description = "FFI interface to syslog(3) from POSIX.1-2001";
license = stdenv.lib.licenses.bsd3;

}) {};
"htaglib" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, taglib
, text
}:
mkDerivation {

pname = "htaglib";
version = "1.0.4";
sha256 = "0b23c25f6ef721e193176fd2c4e491376235c5cb04dea0d75ebf721bd10b40a7";
revision = "1";
editedCabalFile = "0z0jzhmrm77b3rl1h89wfgbwjg374n1mda73z7qrrdfc7ky99dmy";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
text
];
librarySystemDepends = [
taglib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/htaglib";
description = "Bindings to TagLib, audio meta-data library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) taglib;};
"html" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "html";
version = "1.0.1.2";
sha256 = "0c35495ea33d65e69c69bc7441ec8e1af69fbb43433c2aa3406c0a13a3ab3061";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "HTML combinator library";
license = stdenv.lib.licenses.bsd3;

}) {};
"html-conduit" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-extra
, containers
, resourcet
, stdenv
, tagstream-conduit
, text
, transformers
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "html-conduit";
version = "1.2.1.1";
sha256 = "98c27470cbf99b12ca9705216567fc8aafffb843cd9c37762e8607da153aa8a8";
revision = "2";
editedCabalFile = "1fhna6ck1v05zpf4c715phz102v8vz0p7lsjk3fljmxblamc8kn6";
libraryHaskellDepends = [
base
bytestring
conduit
conduit-extra
containers
resourcet
tagstream-conduit
text
transformers
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/xml";
description = "Parse HTML documents using xml-conduit datatypes";
license = stdenv.lib.licenses.mit;

}) {};
"html-email-validate" = callPackage
({
  mkDerivation
, attoparsec
, base
, stdenv
, text
}:
mkDerivation {

pname = "html-email-validate";
version = "0.2.0.0";
sha256 = "3d2a3ec75b638cec71df57512473052d485dc118aec4662d5a8dae5e95aa6daf";
libraryHaskellDepends = [
attoparsec
base
text
];
doHaddock = false;
doCheck = false;
description = "Validating an email address against HTML standard";
license = stdenv.lib.licenses.bsd3;

}) {};
"htoml" = callPackage
({
  mkDerivation
, aeson
, base
, containers
, old-locale
, parsec
, stdenv
, text
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "htoml";
version = "1.0.0.3";
sha256 = "08f8d88a326f80fb55c0abb9431941c3a2a30f2d58f49c94349961ceeb4c856f";
libraryHaskellDepends = [
aeson
base
containers
old-locale
parsec
text
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cies/htoml";
description = "Parser for TOML files";
license = stdenv.lib.licenses.bsd3;

}) {};
"http-api-data" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, directory
, filepath
, hashable
, stdenv
, text
, time
, time-locale-compat
, unordered-containers
, uri-bytestring
, uuid-types
}:
mkDerivation {

pname = "http-api-data";
version = "0.3.5";
sha256 = "3711ac5f97afe8e89d1f8959138de8f2b3afd8ec30f9c6f3eebbfb2caa2fbc45";
setupHaskellDepends = [
base
Cabal
directory
filepath
];
libraryHaskellDepends = [
base
bytestring
containers
hashable
text
time
time-locale-compat
unordered-containers
uri-bytestring
uuid-types
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/fizruk/http-api-data";
description = "Converting to/from HTTP API data like URL pieces, headers and query parameters";
license = stdenv.lib.licenses.bsd3;

}) {};
"http-client" = callPackage
({
  mkDerivation
, array
, base
, base64-bytestring
, blaze-builder
, bytestring
, case-insensitive
, containers
, cookie
, deepseq
, exceptions
, filepath
, ghc-prim
, http-types
, mime-types
, network
, network-uri
, random
, stdenv
, streaming-commons
, text
, time
, transformers
}:
mkDerivation {

pname = "http-client";
version = "0.5.5";
sha256 = "d1fdda6035e0bab95d3294f5175ac8c3629f9cd1d32e1bce5d0aa27226751c85";
revision = "1";
editedCabalFile = "0ia70j8vxw1rrxzx1ahjm6kd8imsc38qk2yw42cnrg8liv4w1mrj";
libraryHaskellDepends = [
array
base
base64-bytestring
blaze-builder
bytestring
case-insensitive
containers
cookie
deepseq
exceptions
filepath
ghc-prim
http-types
mime-types
network
network-uri
random
streaming-commons
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/http-client";
description = "An HTTP client engine";
license = stdenv.lib.licenses.mit;

}) {};
"http-client-openssl" = callPackage
({
  mkDerivation
, base
, HsOpenSSL
, http-client
, network
, stdenv
}:
mkDerivation {

pname = "http-client-openssl";
version = "0.2.0.4";
sha256 = "28dddd694ed91174c2544dd388d3550df5c79d5cc4be7e4b260a825ebde1afed";
libraryHaskellDepends = [
base
HsOpenSSL
http-client
network
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/http-client";
description = "http-client backend using the OpenSSL library";
license = stdenv.lib.licenses.mit;

}) {};
"http-client-tls" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, connection
, cryptonite
, data-default-class
, exceptions
, http-client
, http-types
, memory
, network
, stdenv
, tls
, transformers
}:
mkDerivation {

pname = "http-client-tls";
version = "0.3.3.1";
sha256 = "56317378785688a129fdc7abdf5d721fe15e46178f89f457878aa3acd1ac7d12";
libraryHaskellDepends = [
base
bytestring
case-insensitive
connection
cryptonite
data-default-class
exceptions
http-client
http-types
memory
network
tls
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/http-client";
description = "http-client backend using the connection package and tls library";
license = stdenv.lib.licenses.mit;

}) {};
"http-common" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, blaze-builder
, bytestring
, case-insensitive
, directory
, mtl
, network
, stdenv
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "http-common";
version = "0.8.2.0";
sha256 = "2915e77b0d000a617d4c1304fdc46f45b70acc0942670066a95b2c8d4e504593";
libraryHaskellDepends = [
base
base64-bytestring
blaze-builder
bytestring
case-insensitive
directory
mtl
network
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://research.operationaldynamics.com/projects/http-streams/";
description = "Common types for HTTP clients and servers";
license = stdenv.lib.licenses.bsd3;

}) {};
"http-conduit" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, conduit
, conduit-extra
, exceptions
, http-client
, http-client-tls
, http-types
, lifted-base
, monad-control
, mtl
, resourcet
, stdenv
, transformers
}:
mkDerivation {

pname = "http-conduit";
version = "2.2.3";
sha256 = "eee51e80fe76b3bf4b4041545f452e126e0593f70a0623a5a35ee47d72fe0dc3";
libraryHaskellDepends = [
aeson
base
bytestring
conduit
conduit-extra
exceptions
http-client
http-client-tls
http-types
lifted-base
monad-control
mtl
resourcet
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/http-conduit";
description = "HTTP client package with conduit interface and HTTPS support";
license = stdenv.lib.licenses.bsd3;

}) {};
"http-date" = callPackage
({
  mkDerivation
, array
, attoparsec
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "http-date";
version = "0.0.6.1";
sha256 = "f2e106603e2b3f710f1189e478f6c20067d9a9d21a20a633fe362b3f91807636";
libraryHaskellDepends = [
array
attoparsec
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "HTTP Date parser/formatter";
license = stdenv.lib.licenses.bsd3;

}) {};
"http-link-header" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, bytestring-conversion
, errors
, http-api-data
, network-uri
, stdenv
, text
}:
mkDerivation {

pname = "http-link-header";
version = "1.0.3";
sha256 = "59bd2db4e7d14b6f7ce86848af5e38b4bd2e9963e9ffe5068c7b1a710dbdd7fe";
libraryHaskellDepends = [
attoparsec
base
bytestring
bytestring-conversion
errors
http-api-data
network-uri
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/myfreeweb/http-link-header";
description = "A parser and writer for the HTTP Link header as specified in RFC 5988 \"Web Linking\"";
license = stdenv.lib.licenses.publicDomain;

}) {};
"http-media" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, containers
, stdenv
}:
mkDerivation {

pname = "http-media";
version = "0.6.4";
sha256 = "ef762cf50854250e4247b744decbebe4d3d188dbc19bfd90aa344ed3c61cc9d3";
libraryHaskellDepends = [
base
bytestring
case-insensitive
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/zmthy/http-media";
description = "Processing HTTP Content-Type and Accept headers";
license = stdenv.lib.licenses.mit;

}) {};
"http-reverse-proxy" = callPackage
({
  mkDerivation
, async
, base
, blaze-builder
, bytestring
, case-insensitive
, conduit
, conduit-extra
, containers
, data-default-class
, http-client
, http-types
, lifted-base
, monad-control
, network
, resourcet
, stdenv
, streaming-commons
, text
, transformers
, wai
, wai-logger
, word8
}:
mkDerivation {

pname = "http-reverse-proxy";
version = "0.4.3.2";
sha256 = "c2b3300bf43a9810e8642dd7fa44ecfb5e0ce1055dc01e0b604ae9a99fbfd77a";
libraryHaskellDepends = [
async
base
blaze-builder
bytestring
case-insensitive
conduit
conduit-extra
containers
data-default-class
http-client
http-types
lifted-base
monad-control
network
resourcet
streaming-commons
text
transformers
wai
wai-logger
word8
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/http-reverse-proxy";
description = "Reverse proxy HTTP requests, either over raw sockets or with WAI";
license = stdenv.lib.licenses.bsd3;

}) {};
"http-streams" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base64-bytestring
, blaze-builder
, bytestring
, case-insensitive
, directory
, HsOpenSSL
, http-common
, io-streams
, mtl
, network
, network-uri
, openssl-streams
, stdenv
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "http-streams";
version = "0.8.4.0";
sha256 = "d8778352ca3d87b7ea6839d9c26e20d89792e723a6b63e399d19e7811aaf4793";
libraryHaskellDepends = [
aeson
attoparsec
base
base64-bytestring
blaze-builder
bytestring
case-insensitive
directory
HsOpenSSL
http-common
io-streams
mtl
network
network-uri
openssl-streams
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://research.operationaldynamics.com/projects/http-streams/";
description = "An HTTP client using io-streams";
license = stdenv.lib.licenses.bsd3;

}) {};
"http-types" = callPackage
({
  mkDerivation
, array
, base
, blaze-builder
, bytestring
, case-insensitive
, stdenv
, text
}:
mkDerivation {

pname = "http-types";
version = "0.9.1";
sha256 = "7bed648cdc1c69e76bf039763dbe1074b55fd2704911dd0cb6b7dfebf1b6f550";
libraryHaskellDepends = [
array
base
blaze-builder
bytestring
case-insensitive
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/aristidb/http-types";
description = "Generic HTTP types for Haskell (for both client and server code)";
license = stdenv.lib.licenses.bsd3;

}) {};
"http2" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, bytestring-builder
, case-insensitive
, containers
, psqueues
, stdenv
, stm
}:
mkDerivation {

pname = "http2";
version = "1.6.3";
sha256 = "61620eca0f57875a6a9bd24f9cc04c301b5c3c668bf98f85e9989aad5d069c43";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
base
bytestring
bytestring-builder
case-insensitive
containers
psqueues
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kazu-yamamoto/http2";
description = "HTTP/2 library including frames, priority queues and HPACK";
license = stdenv.lib.licenses.bsd3;

}) {};
"human-readable-duration" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "human-readable-duration";
version = "0.2.0.3";
sha256 = "93f3a91a2994588728ae757dcca5104e18a570b3591773aa7f03c524c97599da";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yogsototh/human-readable-duration#readme";
description = "Provide duration helper";
license = stdenv.lib.licenses.bsd3;

}) {};
"hunit-dejafu" = callPackage
({
  mkDerivation
, base
, dejafu
, exceptions
, HUnit
, stdenv
}:
mkDerivation {

pname = "hunit-dejafu";
version = "0.3.0.3";
sha256 = "c9adfd6bd611e296c4e78b67d23d73cdec71cadd0f876be9a508ce5dc414b120";
libraryHaskellDepends = [
base
dejafu
exceptions
HUnit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/dejafu";
description = "Deja Fu support for the HUnit test framework";
license = stdenv.lib.licenses.mit;

}) {};
"hvect" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "hvect";
version = "0.4.0.0";
sha256 = "cb50ef1a7f189f8c217a7d0d55b5568b2fa9bbe415b14ce114a93d2e1d5e30b6";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/hvect";
description = "Simple strict heterogeneous lists";
license = stdenv.lib.licenses.mit;

}) {};
"hw-balancedparens" = callPackage
({
  mkDerivation
, base
, hw-bits
, hw-excess
, hw-prim
, hw-rankselect-base
, stdenv
, vector
}:
mkDerivation {

pname = "hw-balancedparens";
version = "0.1.0.0";
sha256 = "c56ec15ed8f59afa54289362cf936564535843ea8f7ef9758093fd0a438169fe";
revision = "1";
editedCabalFile = "1z5pryzx4ialm9x15iny7h8jdxkyjq694j18j5998k6qz2r3n2sc";
libraryHaskellDepends = [
base
hw-bits
hw-excess
hw-prim
hw-rankselect-base
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-balancedparens#readme";
description = "Balanced parentheses";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-bits" = callPackage
({
  mkDerivation
, base
, bytestring
, hw-int
, hw-prim
, hw-string-parse
, safe
, stdenv
, vector
}:
mkDerivation {

pname = "hw-bits";
version = "0.5.0.0";
sha256 = "414f2603df8291564eb86edf445cb6a0945143e9ea49faedfc5aa99e950a235f";
revision = "1";
editedCabalFile = "1qlmdxsxn8r5jx7i19fl908s1k9j4v9f1d56063d8l5xxsi96zww";
libraryHaskellDepends = [
base
bytestring
hw-int
hw-prim
hw-string-parse
safe
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-bits#readme";
description = "Bit manipulation";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-conduit" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, conduit
, criterion
, hw-bits
, resourcet
, stdenv
, word8
}:
mkDerivation {

pname = "hw-conduit";
version = "0.1.0.0";
sha256 = "28bc7f865c5366b442743143fa5d5af9cd970bbd2acc549d27993ea49901491b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
base
bytestring
conduit
hw-bits
resourcet
word8
];
executableHaskellDepends = [
base
criterion
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-conduit#readme";
description = "Conduits for tokenizing streams";
license = stdenv.lib.licenses.mit;

}) {};
"hw-diagnostics" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "hw-diagnostics";
version = "0.0.0.5";
sha256 = "5ceaec01c446c5a507e889f514201e4739ea6f1cc22a4c68894bb023257bd931";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-diagnostics#readme";
description = "Diagnostics library";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-excess" = callPackage
({
  mkDerivation
, base
, hw-bits
, hw-prim
, hw-rankselect-base
, safe
, stdenv
, vector
}:
mkDerivation {

pname = "hw-excess";
version = "0.1.0.0";
sha256 = "4df4b44ec9c0ac60f11f1e9baf1aed39691dc214855980ab5d778a0a6f1742bb";
libraryHaskellDepends = [
base
hw-bits
hw-prim
hw-rankselect-base
safe
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-excess#readme";
description = "Excess";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-int" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "hw-int";
version = "0.0.0.1";
sha256 = "2f0759f63a77640a61300a2bb292518adca8782e7d099db4804bffac2d2da7cb";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-int#readme";
description = "Integers";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-json" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, array
, attoparsec
, base
, bytestring
, conduit
, containers
, criterion
, dlist
, hw-balancedparens
, hw-bits
, hw-conduit
, hw-diagnostics
, hw-mquery
, hw-parser
, hw-prim
, hw-rankselect
, hw-rankselect-base
, mmap
, mono-traversable
, resourcet
, stdenv
, text
, vector
, word8
}:
mkDerivation {

pname = "hw-json";
version = "0.4.0.0";
sha256 = "addf66d70ee97249797e4967161f52cad0fe4c2cd1c426f51d349b0cbf31cc85";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-wl-pprint
array
attoparsec
base
bytestring
conduit
containers
dlist
hw-balancedparens
hw-bits
hw-conduit
hw-diagnostics
hw-mquery
hw-parser
hw-prim
hw-rankselect
hw-rankselect-base
mmap
mono-traversable
resourcet
text
vector
word8
];
executableHaskellDepends = [
ansi-wl-pprint
array
attoparsec
base
bytestring
conduit
containers
criterion
dlist
hw-balancedparens
hw-bits
hw-conduit
hw-diagnostics
hw-mquery
hw-parser
hw-prim
hw-rankselect
hw-rankselect-base
mmap
mono-traversable
resourcet
text
vector
word8
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-json#readme";
description = "Memory efficient JSON parser";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-mquery" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, dlist
, stdenv
}:
mkDerivation {

pname = "hw-mquery";
version = "0.1.0.1";
sha256 = "724aa5b0490b57a89fb71b7042a3770f7978a4c975aa3d1b671576b0e83e113d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-wl-pprint
base
dlist
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-mquery#readme";
description = "Conduits for tokenizing streams";
license = stdenv.lib.licenses.mit;

}) {};
"hw-parser" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, hw-prim
, mono-traversable
, stdenv
, text
}:
mkDerivation {

pname = "hw-parser";
version = "0.0.0.1";
sha256 = "9b08d5bc3441cfcaa91ae613655c47dfb4e988210245df7cada3dbc2a5128025";
libraryHaskellDepends = [
attoparsec
base
bytestring
hw-prim
mono-traversable
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-parser#readme";
description = "Conduits for tokenizing streams";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-prim" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, vector
}:
mkDerivation {

pname = "hw-prim";
version = "0.4.0.2";
sha256 = "1702b32260020864157ccf118151012ca6856bf4618238032cd2f6d9b70a672a";
revision = "1";
editedCabalFile = "0jwc4fpm3332vv4kp1f0az1b98y4sj4wpnq2070w87zs96d7xl5s";
libraryHaskellDepends = [
base
bytestring
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-prim#readme";
description = "Primitive functions and data types";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-rankselect" = callPackage
({
  mkDerivation
, base
, hw-balancedparens
, hw-bits
, hw-prim
, hw-rankselect-base
, stdenv
, vector
}:
mkDerivation {

pname = "hw-rankselect";
version = "0.8.0.0";
sha256 = "db85437b77a44d887522b0019af08c8132c6132b5eaa9a2ebb0e4310b6ebaab5";
revision = "1";
editedCabalFile = "0dfwmyz9b61k2im0y1jznqvhsvwahs2mwk69lrqh72n5m11g7vc6";
libraryHaskellDepends = [
base
hw-balancedparens
hw-bits
hw-prim
hw-rankselect-base
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-rankselect#readme";
description = "Rank-select";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-rankselect-base" = callPackage
({
  mkDerivation
, base
, hw-bits
, hw-int
, hw-prim
, hw-string-parse
, safe
, stdenv
, vector
}:
mkDerivation {

pname = "hw-rankselect-base";
version = "0.2.0.0";
sha256 = "c853c19e0f3a7a388a0f315db36843d9e05bb986f6183641b7a04fe16f28afa4";
libraryHaskellDepends = [
base
hw-bits
hw-int
hw-prim
hw-string-parse
safe
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-rankselect-base#readme";
description = "Rank-select base";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-string-parse" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "hw-string-parse";
version = "0.0.0.3";
sha256 = "6f5898c63b0b1e0fe7f7d8825f00a728904eba18eefc1353fc72d88a3aabee0a";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-string-parse#readme";
description = "String parser";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-succinct" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, conduit
, containers
, hw-balancedparens
, hw-bits
, hw-prim
, hw-rankselect
, hw-rankselect-base
, mmap
, mono-traversable
, stdenv
, text
, vector
, word8
}:
mkDerivation {

pname = "hw-succinct";
version = "0.1.0.1";
sha256 = "002c578c1ff7a33cbef089b2a943218777c14125629f6bf63dea9e7c8e3749db";
libraryHaskellDepends = [
attoparsec
base
bytestring
conduit
containers
hw-balancedparens
hw-bits
hw-prim
hw-rankselect
hw-rankselect-base
mmap
mono-traversable
text
vector
word8
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-succinct#readme";
description = "Succint datastructures";
license = stdenv.lib.licenses.mit;

}) {};
"hweblib" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, containers
, mtl
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "hweblib";
version = "0.6.3";
sha256 = "1e8ee12baac496d56831935a60e78f54eb43d2b7268bf7d31acb6b9a63e9b50d";
libraryHaskellDepends = [
attoparsec
base
bytestring
containers
mtl
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aycanirican/hweblib";
description = "Haskell Web Library";
license = stdenv.lib.licenses.bsd3;

}) {};
"hworker" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, hedis
, stdenv
, text
, time
, uuid
}:
mkDerivation {

pname = "hworker";
version = "0.1.0.1";
sha256 = "34cbcc4db8f190ab0dc02a072adcf1fc75b7beab7e545982872bf265a1223f1d";
revision = "1";
editedCabalFile = "0w2bpvfr68n2qipvr8gc5096dain3g2536m4n9kqx1fahf12mwy5";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
hedis
text
time
uuid
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/dbp/hworker";
description = "A reliable at-least-once job queue built on top of redis";
license = stdenv.lib.licenses.isc;

}) {};
"hxt" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, deepseq
, directory
, filepath
, hxt-charproperties
, hxt-regex-xmlschema
, hxt-unicode
, mtl
, network-uri
, parsec
, stdenv
}:
mkDerivation {

pname = "hxt";
version = "9.3.1.16";
sha256 = "0d55e35cc718891d0987b7c8e6c43499efa727c68bc92e88e8b99461dff403e3";
libraryHaskellDepends = [
base
binary
bytestring
containers
deepseq
directory
filepath
hxt-charproperties
hxt-regex-xmlschema
hxt-unicode
mtl
network-uri
parsec
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/UweSchmidt/hxt";
description = "A collection of tools for processing XML with Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"hxt-charproperties" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "hxt-charproperties";
version = "9.2.0.1";
sha256 = "e46614d6bf0390b2a6a1aeeb0771e6d366944da40fb21c12c2f8a94d1f47b4d6";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/UweSchmidt/hxt";
description = "Character properties and classes for XML and Unicode";
license = stdenv.lib.licenses.mit;

}) {};
"hxt-css" = callPackage
({
  mkDerivation
, base
, hxt
, parsec
, split
, stdenv
}:
mkDerivation {

pname = "hxt-css";
version = "0.1.0.3";
sha256 = "0244fc145d5923df0522ad80949e9b221b01a028c755ebfc4740339881ef65b7";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
hxt
parsec
split
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/redneb/hxt-css";
description = "CSS selectors for HXT";
license = stdenv.lib.licenses.bsd3;

}) {};
"hxt-http" = callPackage
({
  mkDerivation
, base
, bytestring
, HTTP
, hxt
, network
, network-uri
, parsec
, stdenv
}:
mkDerivation {

pname = "hxt-http";
version = "9.1.5.2";
sha256 = "6fa19d03991d53c34f4525a4fdfaafde56dd48459093b4502832a1fdd9dfdd0b";
libraryHaskellDepends = [
base
bytestring
HTTP
hxt
network
network-uri
parsec
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/UweSchmidt/hxt";
description = "Interface to native Haskell HTTP package HTTP";
license = stdenv.lib.licenses.mit;

}) {};
"hxt-pickle-utils" = callPackage
({
  mkDerivation
, base
, hxt
, mtl
, stdenv
}:
mkDerivation {

pname = "hxt-pickle-utils";
version = "0.1.0.3";
sha256 = "9ddba19f27d9d8c155012da4dd9598fb318cab862da10f14ee4bc3eb5321a9c5";
revision = "3";
editedCabalFile = "0d5fg718y7xzw76ip33q0w1liqk70q9074qkd198mjnijxjcrkf3";
libraryHaskellDepends = [
base
hxt
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/silkapp/hxt-pickle-utils";
description = "Utility functions for using HXT picklers";
license = stdenv.lib.licenses.bsd3;

}) {};
"hxt-regex-xmlschema" = callPackage
({
  mkDerivation
, base
, bytestring
, hxt-charproperties
, parsec
, stdenv
, text
}:
mkDerivation {

pname = "hxt-regex-xmlschema";
version = "9.2.0.3";
sha256 = "f4743ba65498d6001cdfcf5cbc3317d4bc43941be5c7030b60beb83408c892b0";
libraryHaskellDepends = [
base
bytestring
hxt-charproperties
parsec
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Regular_expressions_for_XML_Schema";
description = "A regular expression library for W3C XML Schema regular expressions";
license = stdenv.lib.licenses.mit;

}) {};
"hxt-unicode" = callPackage
({
  mkDerivation
, base
, hxt-charproperties
, stdenv
}:
mkDerivation {

pname = "hxt-unicode";
version = "9.0.2.4";
sha256 = "7b5823f3bd94b57022d9d84ab3555303653c5121eaaef2ee1fd4918f3c434466";
libraryHaskellDepends = [
base
hxt-charproperties
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/UweSchmidt/hxt";
description = "Unicode en-/decoding functions for utf8, iso-latin-* and other encodings";
license = stdenv.lib.licenses.mit;

}) {};
"hybrid-vectors" = callPackage
({
  mkDerivation
, base
, deepseq
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "hybrid-vectors";
version = "0.2.1";
sha256 = "2edcd8fcfedc76a944ac690bfc257f2974100df6484c6c20883d27773836cca2";
revision = "1";
editedCabalFile = "1i73cfi226l8nivqw9dxnxajkdsgxkh89h00mgsrplf60kdh4wzh";
libraryHaskellDepends = [
base
deepseq
primitive
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/hybrid-vectors";
description = "Hybrid vectors e.g. Mixed Boxed/Unboxed vectors";
license = stdenv.lib.licenses.bsd3;

}) {};
"hyphenation" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, stdenv
, unordered-containers
, zlib
}:
mkDerivation {

pname = "hyphenation";
version = "0.6";
sha256 = "2f673666c18f63581422f7c6389b78b0ff754406671296a3d680d417942512f7";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
containers
unordered-containers
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/hyphenation";
description = "Configurable Knuth-Liang hyphenation";
license = stdenv.lib.licenses.bsd3;

}) {};
"ical" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, containers
, either
, mtl
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "ical";
version = "0.0.1";
sha256 = "f5e45df4249aa90a87080ef6714d77d8e961c5ba50e6813062379fcdaea7d882";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
attoparsec
base
containers
either
mtl
text
time
transformers
];
executableHaskellDepends = [
base
time
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/chrisdone/ical#readme";
description = "iCalendar format parser and org-mode converter";
license = stdenv.lib.licenses.bsd3;

}) {};
"iconv" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "iconv";
version = "0.4.1.3";
sha256 = "36425168e3314bc83ba5ee95152872d52e94ee0f9503f3591f84d458e005b554";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "String encoding conversion";
license = stdenv.lib.licenses.bsd3;

}) {};
"identicon" = callPackage
({
  mkDerivation
, base
, bytestring
, JuicyPixels
, stdenv
}:
mkDerivation {

pname = "identicon";
version = "0.2.0";
sha256 = "c9d22c41893f50ac6c096c11ac037f91153cd3b324c76bcbdd3277b2761cb346";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
JuicyPixels
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/identicon";
description = "Flexible generation of identicons";
license = stdenv.lib.licenses.bsd3;

}) {};
"ieee754" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "ieee754";
version = "0.8.0";
sha256 = "0e2dff9c37f59acf5c64f978ec320005e9830f276f9f314e4bfed3f482289ad1";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/patperry/hs-ieee754";
description = "Utilities for dealing with IEEE floating point numbers";
license = stdenv.lib.licenses.bsd3;

}) {};
"if" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "if";
version = "0.1.0.0";
sha256 = "28f673e867dbe0f51324d97fcb7884673a34912593746520a470116b167a141d";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/if";
description = "(?) and (?>) conditional operator";
license = stdenv.lib.licenses.bsd3;

}) {};
"ignore" = callPackage
({
  mkDerivation
, base
, directory
, Glob
, mtl
, path
, pcre-heavy
, stdenv
, text
}:
mkDerivation {

pname = "ignore";
version = "0.1.1.0";
sha256 = "aaf481fdab8bdc5a506e4726eadf56697726f82086a3cd0439526b9442c73575";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
Glob
mtl
path
pcre-heavy
text
];
executableHaskellDepends = [
base
directory
path
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/agrafix/ignore";
description = "Handle ignore files of different VCSes";
license = stdenv.lib.licenses.bsd3;

}) {};
"ilist" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "ilist";
version = "0.2.0.0";
sha256 = "ffbfab4804e01a4b36caa3f75d77535084d6165ed6c92c0df4329b9238e03cef";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/ilist";
description = "Optimised list functions for doing index-related things";
license = stdenv.lib.licenses.bsd3;

}) {};
"imagesize-conduit" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-extra
, exceptions
, stdenv
}:
mkDerivation {

pname = "imagesize-conduit";
version = "1.1";
sha256 = "31c5784578b305921b89f7ab6fca35747e5a35f12884770b78c31e3a0a01ac19";
revision = "3";
editedCabalFile = "0p4zmizr01pg3d7gb0q88j1alvvlzbdvzyf1wbgajng68a4g0li9";
libraryHaskellDepends = [
base
bytestring
conduit
conduit-extra
exceptions
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/silkapp/imagesize-conduit";
description = "Determine the size of some common image formats";
license = stdenv.lib.licenses.bsd3;

}) {};
"imm" = callPackage
({
  mkDerivation
, aeson
, ansi-wl-pprint
, atom-conduit
, base
, blaze-html
, blaze-markup
, bytestring
, case-insensitive
, chunked-data
, comonad
, conduit
, conduit-combinators
, connection
, containers
, directory
, dyre
, fast-logger
, filepath
, free
, hashable
, HaskellNet
, HaskellNet-SSL
, http-client
, http-client-tls
, http-types
, mime-mail
, mono-traversable
, monoid-subclasses
, network
, opml-conduit
, optparse-applicative
, rainbow
, rainbox
, rss-conduit
, safe-exceptions
, stdenv
, tagged
, text
, time
, timerep
, tls
, transformers
, uri-bytestring
, xml
, xml-conduit
}:
mkDerivation {

pname = "imm";
version = "1.1.0.0";
sha256 = "528437eaca7d756d2c0787504018f532a4ea531f97b5401e58161f9bd6c03f56";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
ansi-wl-pprint
atom-conduit
base
blaze-html
blaze-markup
bytestring
case-insensitive
chunked-data
comonad
conduit
conduit-combinators
connection
containers
directory
dyre
fast-logger
filepath
free
hashable
HaskellNet
HaskellNet-SSL
http-client
http-client-tls
http-types
mime-mail
mono-traversable
monoid-subclasses
network
opml-conduit
optparse-applicative
rainbow
rainbox
rss-conduit
safe-exceptions
tagged
text
time
timerep
tls
transformers
uri-bytestring
xml
xml-conduit
];
executableHaskellDepends = [
base
free
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/k0ral/imm";
description = "Execute arbitrary actions for each unread element of RSS/Atom feeds";
license = "unknown";

}) {};
"immortal" = callPackage
({
  mkDerivation
, base
, lifted-base
, monad-control
, stdenv
, stm
, transformers-base
}:
mkDerivation {

pname = "immortal";
version = "0.2.2";
sha256 = "b3858f3830f5eacd7380184d57845ba6b1aee638193fbbf2b285cc31e2c3623a";
libraryHaskellDepends = [
base
lifted-base
monad-control
stm
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/immortal";
description = "Spawn threads that never die (unless told to do so)";
license = stdenv.lib.licenses.mit;

}) {};
"include-file" = callPackage
({
  mkDerivation
, base
, bytestring
, random
, stdenv
, template-haskell
}:
mkDerivation {

pname = "include-file";
version = "0.1.0.3";
sha256 = "208f1f3bdc717f5f953cb7c9935c84d6a6291b7cd5ed8a22fa8567184be33d29";
libraryHaskellDepends = [
base
bytestring
random
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Inclusion of files in executables at compile-time";
license = stdenv.lib.licenses.bsd3;

}) {};
"incremental-parser" = callPackage
({
  mkDerivation
, base
, monoid-subclasses
, stdenv
}:
mkDerivation {

pname = "incremental-parser";
version = "0.2.5";
sha256 = "7d0fd208e86d383ec00ceabc6c229d66ae35726862b003820df06e855ea87ac1";
libraryHaskellDepends = [
base
monoid-subclasses
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/blamario/incremental-parser";
description = "Generic parser library capable of providing partial results from partial input";
license = "GPL";

}) {};
"indentation-core" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "indentation-core";
version = "0.0";
sha256 = "4fd2f02756ce9abffd080c5d5e830616ddfb63109871ad5c5f6c24a636ca78d9";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/adamsmd/indentation";
description = "Indentation sensitive parsing combinators core library";
license = stdenv.lib.licenses.bsd3;

}) {};
"indentation-parsec" = callPackage
({
  mkDerivation
, base
, indentation-core
, mtl
, parsec
, stdenv
}:
mkDerivation {

pname = "indentation-parsec";
version = "0.0";
sha256 = "5152bc8e47b2d5fffce4e0e9ac0d07fa38040aa36bf1a5788adedbb2369dcd7c";
libraryHaskellDepends = [
base
indentation-core
mtl
parsec
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/adamsmd/indentation";
description = "Indentation sensitive parsing combinators for Parsec";
license = stdenv.lib.licenses.bsd3;

}) {};
"indents" = callPackage
({
  mkDerivation
, base
, mtl
, parsec
, stdenv
}:
mkDerivation {

pname = "indents";
version = "0.4.0.0";
sha256 = "9478d3f8ea4dd412ffc56225c4727f295b81daffba408bf1e757b4b23859d495";
libraryHaskellDepends = [
base
mtl
parsec
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jaspervdj/indents";
description = "indentation sensitive parser-combinators for parsec";
license = stdenv.lib.licenses.bsd3;

}) {};
"inflections" = callPackage
({
  mkDerivation
, base
, exceptions
, megaparsec
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "inflections";
version = "0.3.0.0";
sha256 = "0391cb804f012fb27edc9d11c45bb60412bd703b5a7ebca5ccbf776d338926f1";
libraryHaskellDepends = [
base
exceptions
megaparsec
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/stackbuilders/inflections-hs";
description = "Inflections library for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"ini" = callPackage
({
  mkDerivation
, attoparsec
, base
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "ini";
version = "0.3.5";
sha256 = "bfd3836dfe38440987ce53f7eeffee00b54e3b7e4c0cd81ba315932cd7562cc6";
revision = "1";
editedCabalFile = "0imgz9a8wz20zngy6c4w61k1n6cmqpklr0kj4k7dk2j16l4hd8g6";
libraryHaskellDepends = [
attoparsec
base
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/chrisdone/ini";
description = "Quick and easy configuration files in the INI format";
license = stdenv.lib.licenses.bsd3;

}) {};
"inline-c" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, binary
, bytestring
, containers
, cryptohash
, directory
, filepath
, hashable
, mtl
, parsec
, parsers
, QuickCheck
, stdenv
, template-haskell
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "inline-c";
version = "0.5.6.1";
sha256 = "2daf717e6fc0046ccb6563557825fe26fcdc327c55b9771aa7b4c51473e6eb4e";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-wl-pprint
base
binary
bytestring
containers
cryptohash
directory
filepath
hashable
mtl
parsec
parsers
QuickCheck
template-haskell
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
description = "Write Haskell source files including C code inline. No FFI required.";
license = stdenv.lib.licenses.mit;

}) {};
"inline-c-cpp" = callPackage
({
  mkDerivation
, base
, inline-c
, stdenv
, template-haskell
}:
mkDerivation {

pname = "inline-c-cpp";
version = "0.1.0.0";
sha256 = "2e179756d13191e7c75522e7fda1b4ed9bfbe870484fb27479ab332bee396a45";
libraryHaskellDepends = [
base
inline-c
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Lets you embed C++ code into Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"inline-java" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, Cabal
, containers
, directory
, distributed-closure
, filepath
, ghc-heap-view
, inline-c
, jni
, jvm
, language-java
, process
, singletons
, stdenv
, syb
, template-haskell
, temporary
, text
, thread-local-storage
, vector
}:
mkDerivation {

pname = "inline-java";
version = "0.6.1";
sha256 = "f722733b43839d12f936c5d2e3e8f2d33aae6752a605d4582959a7ad71ce2045";
revision = "2";
editedCabalFile = "1p1ci6v4b5m3j20nr9s0zalmdqzzvzqdgps532qy00kqar258z5p";
libraryHaskellDepends = [
base
binary
bytestring
Cabal
containers
directory
distributed-closure
filepath
ghc-heap-view
inline-c
jni
jvm
language-java
process
singletons
syb
template-haskell
temporary
text
thread-local-storage
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/tweag/inline-java#readme";
description = "Java interop via inline Java code in Haskell modules";
license = stdenv.lib.licenses.bsd3;

}) {};
"inline-r" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, c2hs
, containers
, data-default-class
, deepseq
, exceptions
, mtl
, pretty
, primitive
, process
, R
, reflection
, setenv
, singletons
, stdenv
, template-haskell
, text
, th-lift
, th-orphans
, transformers
, unix
, vector
}:
mkDerivation {

pname = "inline-r";
version = "0.9.0.1";
sha256 = "e95ba2d92f514a102675365e74c87442a2620fad54d3e1ecd15cf1a7253ec2af";
libraryHaskellDepends = [
aeson
base
bytestring
containers
data-default-class
deepseq
exceptions
mtl
pretty
primitive
process
reflection
setenv
singletons
template-haskell
text
th-lift
th-orphans
transformers
unix
vector
];
libraryPkgconfigDepends = [
R
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
homepage = "https://tweag.github.io/HaskellR";
description = "Seamlessly call R from Haskell and vice versa. No FFI required.";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) R;};
"insert-ordered-containers" = callPackage
({
  mkDerivation
, aeson
, base
, base-compat
, hashable
, lens
, semigroupoids
, semigroups
, stdenv
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "insert-ordered-containers";
version = "0.2.0.0";
sha256 = "0353fcf5c58e9ed3fe33ddc3f57bfb2faccaa4d61fbf832f7fc2bfbe2c30d02e";
revision = "4";
editedCabalFile = "199z6qjj5xkmbpn09y5zqzrk2261r4rac9ppy2gmdzrkwx7m9f5l";
libraryHaskellDepends = [
aeson
base
base-compat
hashable
lens
semigroupoids
semigroups
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/insert-ordered-containers#readme";
description = "Associative containers retating insertion order for traversals";
license = stdenv.lib.licenses.bsd3;

}) {};
"instance-control" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "instance-control";
version = "0.1.1.1";
sha256 = "664d0863d74823565b834ffca1913f2e74386478b231a44e0e2e282a4ac3fb31";
libraryHaskellDepends = [
base
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lazac/instance-control";
description = "Controls how the compiler searches for instances using type families";
license = stdenv.lib.licenses.bsd3;

}) {};
"integer-logarithms" = callPackage
({
  mkDerivation
, array
, base
, ghc-prim
, integer-gmp
, stdenv
}:
mkDerivation {

pname = "integer-logarithms";
version = "1.0.1";
sha256 = "0f453f8eb8b19122eac37d04ea95e9da5f9f07eb9ad750c174c3522e7d3a784c";
revision = "2";
editedCabalFile = "1s7jrhz2irfw1qgjqkp7agz93cyx1ipw6s4g2akgzr522k487nhx";
libraryHaskellDepends = [
array
base
ghc-prim
integer-gmp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/integer-logarithms";
description = "Integer logarithms";
license = stdenv.lib.licenses.mit;

}) {};
"integration" = callPackage
({
  mkDerivation
, base
, parallel
, stdenv
}:
mkDerivation {

pname = "integration";
version = "0.2.1";
sha256 = "0c27385eadc10a580e78f7b7d4bc919c346b2c9b1e73aea7e7804d824d53582f";
libraryHaskellDepends = [
base
parallel
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ekmett/integration";
description = "Fast robust numeric integration via tanh-sinh quadrature";
license = stdenv.lib.licenses.bsd3;

}) {};
"intero" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, directory
, filepath
, ghc
, ghc-boot-th
, ghc-paths
, ghci
, haskeline
, process
, stdenv
, syb
, time
, transformers
, unix
}:
mkDerivation {

pname = "intero";
version = "0.1.20";
sha256 = "e93fd2df3a3cd1c6a0203420a94b0329c08b51a51ef8d5ec5a38efe61469da77";
revision = "1";
editedCabalFile = "1fgqd3qkws9yb3vj8ay695ym5cgifi082wryh68dp0qqh7agwkhl";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
array
base
bytestring
containers
directory
filepath
ghc
ghc-boot-th
ghc-paths
ghci
haskeline
process
syb
time
transformers
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/commercialhaskell/intero";
description = "Complete interactive development program for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"interpolate" = callPackage
({
  mkDerivation
, base
, haskell-src-meta
, stdenv
, template-haskell
}:
mkDerivation {

pname = "interpolate";
version = "0.1.0";
sha256 = "2d1a6d5d19fe19d2fa4c7552ef7fd26a26ddfe13d80f458cec03afd030088c72";
revision = "1";
editedCabalFile = "0ld319k9phmp6dp8m87bdhqp5519dxggf8r2a5z8hkznyjpa131j";
libraryHaskellDepends = [
base
haskell-src-meta
template-haskell
];
doHaddock = false;
doCheck = false;
description = "String interpolation done right";
license = stdenv.lib.licenses.mit;

}) {};
"interpolatedstring-perl6" = callPackage
({
  mkDerivation
, base
, bytestring
, haskell-src-meta
, stdenv
, template-haskell
, text
}:
mkDerivation {

pname = "interpolatedstring-perl6";
version = "1.0.0";
sha256 = "65e0b2ad2d7482755570637212417b84d1db3bcc3cd1aa348b6b37f57911a1d3";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
haskell-src-meta
template-haskell
text
];
doHaddock = false;
doCheck = false;
description = "QuasiQuoter for Perl6-style multi-line interpolated strings";
license = stdenv.lib.licenses.publicDomain;

}) {};
"intervals" = callPackage
({
  mkDerivation
, array
, base
, distributive
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "intervals";
version = "0.7.2";
sha256 = "0dd04a7dfd0ac6b364c66b78dafa48739c5116253078d4023e104f5e99d5fe28";
libraryHaskellDepends = [
array
base
distributive
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/intervals";
description = "Interval Arithmetic";
license = stdenv.lib.licenses.bsd3;

}) {};
"intro" = callPackage
({
  mkDerivation
, base
, bifunctors
, binary
, bytestring
, containers
, deepseq
, dlist
, extra
, hashable
, mtl
, safe
, stdenv
, string-conversions
, tagged
, text
, transformers
, unordered-containers
, writer-cps-mtl
}:
mkDerivation {

pname = "intro";
version = "0.1.0.8";
sha256 = "09c570361dddf8c67572acffc7fd6c93bdfa1c8143d2f7eb9aec0ad5db4f21bf";
libraryHaskellDepends = [
base
bifunctors
binary
bytestring
containers
deepseq
dlist
extra
hashable
mtl
safe
string-conversions
tagged
text
transformers
unordered-containers
writer-cps-mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/intro#readme";
description = "\"Fixed Prelude\" - Mostly total and safe, provides Text and Monad transformers";
license = stdenv.lib.licenses.mit;

}) {};
"invariant" = callPackage
({
  mkDerivation
, array
, base
, bifunctors
, comonad
, containers
, contravariant
, ghc-prim
, profunctors
, semigroups
, StateVar
, stdenv
, stm
, tagged
, template-haskell
, transformers
, transformers-compat
, unordered-containers
}:
mkDerivation {

pname = "invariant";
version = "0.4";
sha256 = "dccf2790eb545d167623c0133aa0838d714004bfd158e3c9dfaca38497aef316";
libraryHaskellDepends = [
array
base
bifunctors
comonad
containers
contravariant
ghc-prim
profunctors
semigroups
StateVar
stm
tagged
template-haskell
transformers
transformers-compat
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nfrisby/invariant-functors";
description = "Haskell 98 invariant functors";
license = stdenv.lib.licenses.bsd3;

}) {};
"invertible" = callPackage
({
  mkDerivation
, arrows
, base
, haskell-src-meta
, HList
, invariant
, lens
, partial-isomorphisms
, Piso
, semigroupoids
, stdenv
, template-haskell
, transformers
, TypeCompose
}:
mkDerivation {

pname = "invertible";
version = "0.2.0";
sha256 = "3da08f518924925a547e954821eb96f15b4ecf47d541fa5770d38180963db19e";
libraryHaskellDepends = [
arrows
base
haskell-src-meta
HList
invariant
lens
partial-isomorphisms
Piso
semigroupoids
template-haskell
transformers
TypeCompose
];
doHaddock = false;
doCheck = false;
description = "bidirectional arrows, bijective functions, and invariant functors";
license = stdenv.lib.licenses.bsd3;

}) {};
"io-choice" = callPackage
({
  mkDerivation
, base
, lifted-base
, monad-control
, stdenv
, template-haskell
, transformers
, transformers-base
}:
mkDerivation {

pname = "io-choice";
version = "0.0.6";
sha256 = "612b281110d18615000704f24fdb54a3b4401f7a39dcfe358433d7b4c22e1cef";
libraryHaskellDepends = [
base
lifted-base
monad-control
template-haskell
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
description = "Choice for IO and lifted IO";
license = stdenv.lib.licenses.bsd3;

}) {};
"io-machine" = callPackage
({
  mkDerivation
, base
, stdenv
, time
}:
mkDerivation {

pname = "io-machine";
version = "0.2.0.0";
sha256 = "05dcc8d5fcbb6f0d7f3519488ebf743eaa776bc93c2f8b0d4bbd866ac1331ccb";
libraryHaskellDepends = [
base
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/YoshikuniJujo/io-machine#readme";
description = "Easy I/O model to learn IO monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"io-manager" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "io-manager";
version = "0.1.0.2";
sha256 = "bf0aa7740a8aaf31fc4f2570a47957365ae7d9248edd309e694053f1cd804138";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
];
executableHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
description = "Skeleton library around the IO monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"io-memoize" = callPackage
({
  mkDerivation
, async
, base
, stdenv
}:
mkDerivation {

pname = "io-memoize";
version = "1.1.1.0";
sha256 = "c753a1b1a2fb286bf608d6467e6e7599cde8e641c619885197f298bf1b2f483d";
libraryHaskellDepends = [
async
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/DanBurton/io-memoize";
description = "Memoize IO actions";
license = stdenv.lib.licenses.bsd3;

}) {};
"io-region" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
}:
mkDerivation {

pname = "io-region";
version = "0.1.1";
sha256 = "ee303f66c2b3d33fae877b0dbb7c64624109fc759dffa669ca182e387f1015f1";
libraryHaskellDepends = [
base
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Yuras/io-region/wiki";
description = "Exception safe resource management with dynamic regions";
license = stdenv.lib.licenses.bsd3;

}) {};
"io-storage" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "io-storage";
version = "0.3";
sha256 = "9a0df5cc7ff2eeef11e29e1362fea284f535bc2fe67469bba6dbc41c4f5b49bd";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/willdonnelly/io-storage";
description = "A key-value store in the IO monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"io-streams" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, bytestring-builder
, network
, primitive
, process
, stdenv
, text
, time
, transformers
, vector
, zlib-bindings
}:
mkDerivation {

pname = "io-streams";
version = "1.3.6.0";
sha256 = "5e2ae8363cc30d69687db98bfa6711ec53b3b104fcc1829c1e62d8de3d249e3d";
revision = "1";
editedCabalFile = "0kwrz9117lzl61hsh3yh1hbdzszbqrvwr0m4c110yv7b8mws4pif";
configureFlags = [
"-fNoInteractiveTests"
];
libraryHaskellDepends = [
attoparsec
base
bytestring
bytestring-builder
network
primitive
process
text
time
transformers
vector
zlib-bindings
];
doHaddock = false;
doCheck = false;
description = "Simple, composable, and easy-to-use stream I/O";
license = stdenv.lib.licenses.bsd3;

}) {};
"io-streams-haproxy" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, io-streams
, network
, stdenv
, transformers
}:
mkDerivation {

pname = "io-streams-haproxy";
version = "1.0.0.1";
sha256 = "c4c0c512443e4da45f1a0023acc4ccee820e25c1088c06346abfb31b9e6e927f";
revision = "2";
editedCabalFile = "1zm580jcncmh667k51k47xwwhd171r3f0h00d25hi6isq812ia40";
libraryHaskellDepends = [
attoparsec
base
bytestring
io-streams
network
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://snapframework.com/";
description = "HAProxy protocol 1.5 support for io-streams";
license = stdenv.lib.licenses.bsd3;

}) {};
"ip6addr" = callPackage
({
  mkDerivation
, base
, cmdargs
, IPv6Addr
, stdenv
, text
}:
mkDerivation {

pname = "ip6addr";
version = "0.5.2";
sha256 = "ad460bf7d2765aa050968154188ba51a1b8483b6a27b179042528058b0e9549f";
revision = "1";
editedCabalFile = "0z030w6lsxz67d7131alpldzqyfk0irmpxygdv2z73hrx306k5pm";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
cmdargs
IPv6Addr
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/MichelBoucey/ip6addr";
description = "Commandline tool to generate IPv6 address text representations";
license = stdenv.lib.licenses.bsd3;

}) {};
"iproute" = callPackage
({
  mkDerivation
, appar
, base
, byteorder
, containers
, network
, stdenv
}:
mkDerivation {

pname = "iproute";
version = "1.7.1";
sha256 = "57b8d03ca8ce92f8ec1334564f3edff53a0621ccbc43c00ba02eaa5007ee3eee";
libraryHaskellDepends = [
appar
base
byteorder
containers
network
];
doHaddock = false;
doCheck = false;
homepage = "http://www.mew.org/~kazu/proj/iproute/";
description = "IP Routing Table";
license = stdenv.lib.licenses.bsd3;

}) {};
"irc" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "irc";
version = "0.6.1.0";
sha256 = "3816ead4dfb32d61c03265e3a2a45053508cb27ca3132595773a27ef381637e1";
libraryHaskellDepends = [
attoparsec
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "A small library for parsing IRC messages";
license = stdenv.lib.licenses.bsd3;

}) {};
"irc-client" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, connection
, irc-conduit
, irc-ctcp
, network-conduit-tls
, old-locale
, stdenv
, stm
, stm-conduit
, text
, time
, tls
, transformers
, x509
, x509-store
, x509-validation
}:
mkDerivation {

pname = "irc-client";
version = "0.4.4.1";
sha256 = "38d105cd429eb4937be8e5586c3ae268d420ce927894940670993abcc863ecf6";
libraryHaskellDepends = [
base
bytestring
conduit
connection
irc-conduit
irc-ctcp
network-conduit-tls
old-locale
stm
stm-conduit
text
time
tls
transformers
x509
x509-store
x509-validation
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/irc-client";
description = "An IRC client library";
license = stdenv.lib.licenses.mit;

}) {};
"irc-conduit" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, conduit
, conduit-extra
, connection
, irc
, irc-ctcp
, network-conduit-tls
, profunctors
, stdenv
, text
, time
, tls
, transformers
, x509-validation
}:
mkDerivation {

pname = "irc-conduit";
version = "0.2.2.0";
sha256 = "b66e058a66e9cd782f065be6b100bb80157c55d733db6691112a70e9aab13065";
libraryHaskellDepends = [
async
base
bytestring
conduit
conduit-extra
connection
irc
irc-ctcp
network-conduit-tls
profunctors
text
time
tls
transformers
x509-validation
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/irc-conduit";
description = "Streaming IRC message library using conduits";
license = stdenv.lib.licenses.mit;

}) {};
"irc-ctcp" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "irc-ctcp";
version = "0.1.3.0";
sha256 = "d67cd91a5521173565033777cea76636e4d2be6e6224f681392d9e726f4bb79a";
libraryHaskellDepends = [
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/irc-ctcp";
description = "A CTCP encoding and decoding library for IRC clients";
license = stdenv.lib.licenses.mit;

}) {};
"irc-dcc" = callPackage
({
  mkDerivation
, attoparsec
, base
, binary
, bytestring
, errors
, io-streams
, iproute
, irc-ctcp
, mtl
, network
, path
, safe-exceptions
, stdenv
, transformers
, utf8-string
}:
mkDerivation {

pname = "irc-dcc";
version = "2.0.0";
sha256 = "af21bb0929ead7439e0d45ce4db1c35799949d91c8dd8f25f048826498483115";
libraryHaskellDepends = [
attoparsec
base
binary
bytestring
errors
io-streams
iproute
irc-ctcp
mtl
network
path
safe-exceptions
transformers
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/JanGe/irc-dcc";
description = "A DCC message parsing and helper library for IRC clients";
license = stdenv.lib.licenses.mit;

}) {};
"islink" = callPackage
({
  mkDerivation
, base
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "islink";
version = "0.1.0.0";
sha256 = "cfbf9c1a6dc46327b7ed7bf9336e245a255626c9d04aeba3d887d90f26d2aed7";
libraryHaskellDepends = [
base
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/redneb/islink";
description = "Check if an HTML element is a link";
license = stdenv.lib.licenses.bsd3;

}) {};
"iso3166-country-codes" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "iso3166-country-codes";
version = "0.20140203.8";
sha256 = "b4d6e01cd61bcaef9a8e455c331a8e7a2298531cb587ef6f23675eae7a6b0a36";
revision = "1";
editedCabalFile = "0n01pmvkqi0w9l203i1v7kb6bb867plv4h5hmzlkpnhrf5abf0zf";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A datatype for ISO 3166 country codes";
license = "LGPL";

}) {};
"iso639" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "iso639";
version = "0.1.0.3";
sha256 = "124b8322fabaedb4de3dbc39880b36d0eab0e28d5775954aadb6630bc0da25e8";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/HugoDaniel/iso639";
description = "ISO-639-1 language codes";
license = stdenv.lib.licenses.bsd3;

}) {};
"iso8601-time" = callPackage
({
  mkDerivation
, base
, stdenv
, time
}:
mkDerivation {

pname = "iso8601-time";
version = "0.1.4";
sha256 = "761d737ea0841ee8fd3660cfe20041e9458be8ab424de8b3b661bb249b930126";
libraryHaskellDepends = [
base
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nh2/iso8601-time";
description = "Convert to/from the ISO 8601 time format";
license = stdenv.lib.licenses.mit;

}) {};
"iterable" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, tagged
, template-haskell
, vector
}:
mkDerivation {

pname = "iterable";
version = "3.0";
sha256 = "6cd13d621144e937cc88acfed1663bd2e208dcbe54be4bad1f7b7279250a87a4";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
mtl
tagged
template-haskell
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/BioHaskell/iterable";
description = "API for hierarchical multilevel collections";
license = stdenv.lib.licenses.bsd3;

}) {};
"ix-shapable" = callPackage
({
  mkDerivation
, array
, base
, stdenv
}:
mkDerivation {

pname = "ix-shapable";
version = "0.1.0";
sha256 = "5007ffb6a8a7bb490f962cedceed5ceb7c435126d09bc565441070cbfda79222";
libraryHaskellDepends = [
array
base
];
doHaddock = false;
doCheck = false;
description = "Reshape multi-dimensional arrays";
license = stdenv.lib.licenses.bsd3;

}) {};
"ixset" = callPackage
({
  mkDerivation
, base
, containers
, safecopy
, stdenv
, syb
, syb-with-class
, template-haskell
}:
mkDerivation {

pname = "ixset";
version = "1.0.7";
sha256 = "2f0e5a581b1d3c5e4685da8b109b2089177632fe8931ae68f5973fba687b42d1";
libraryHaskellDepends = [
base
containers
safecopy
syb
syb-with-class
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://happstack.com";
description = "Efficient relational queries on Haskell sets";
license = stdenv.lib.licenses.bsd3;

}) {};
"ixset-typed" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, safecopy
, stdenv
, syb
, template-haskell
}:
mkDerivation {

pname = "ixset-typed";
version = "0.3.1";
sha256 = "b41863c89610460d8bd0879cf77fd9b010f85f662c7edc4c57e79ab6cd00b575";
libraryHaskellDepends = [
base
containers
deepseq
safecopy
syb
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Efficient relational queries on Haskell sets";
license = stdenv.lib.licenses.bsd3;

}) {};
"jailbreak-cabal" = callPackage
({
  mkDerivation
, base
, Cabal
, stdenv
}:
mkDerivation {

pname = "jailbreak-cabal";
version = "1.3.2";
sha256 = "212a8bbc3dfc748c4063282414a2726709d651322f3984c9989179d2352950f4";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
Cabal
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/peti/jailbreak-cabal#readme";
description = "Strip version restrictions from build dependencies in Cabal files";
license = stdenv.lib.licenses.bsd3;

}) {};
"jmacro" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, haskell-src-exts
, haskell-src-meta
, mtl
, parseargs
, parsec
, regex-posix
, safe
, stdenv
, syb
, template-haskell
, text
, unordered-containers
, vector
, wl-pprint-text
}:
mkDerivation {

pname = "jmacro";
version = "0.6.14";
sha256 = "acb9411ab79f192a4ae0cd67cb45abbacef19c7a59d3199db36348b015df9920";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
haskell-src-exts
haskell-src-meta
mtl
parsec
regex-posix
safe
syb
template-haskell
text
unordered-containers
vector
wl-pprint-text
];
executableHaskellDepends = [
aeson
base
bytestring
containers
haskell-src-exts
haskell-src-meta
mtl
parseargs
parsec
regex-posix
safe
syb
template-haskell
text
unordered-containers
vector
wl-pprint-text
];
doHaddock = false;
doCheck = false;
description = "QuasiQuotation library for programmatic generation of Javascript code";
license = stdenv.lib.licenses.bsd3;

}) {};
"jmacro-rpc" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, blaze-html
, bytestring
, containers
, contravariant
, jmacro
, mtl
, scientific
, split
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "jmacro-rpc";
version = "0.3.2";
sha256 = "a32f53b97bc84e79834df4c4630745c6b07ae46b45bc2ca2d43d91a38571c5d9";
libraryHaskellDepends = [
aeson
attoparsec
base
blaze-html
bytestring
containers
contravariant
jmacro
mtl
scientific
split
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/gershomb/jmacro";
description = "JSON-RPC clients and servers using JMacro, and evented client-server Reactive Programming";
license = stdenv.lib.licenses.bsd3;

}) {};
"jmacro-rpc-happstack" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-html
, bytestring
, containers
, happstack-server
, jmacro
, jmacro-rpc
, mtl
, stdenv
}:
mkDerivation {

pname = "jmacro-rpc-happstack";
version = "0.3.2";
sha256 = "99cdee3c1a5bd4499acf8decb2e76af48e7da7ccba01d51b86f65ea92944b064";
libraryHaskellDepends = [
aeson
base
blaze-html
bytestring
containers
happstack-server
jmacro
jmacro-rpc
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/gershomb/jmacro-rpc";
description = "Happstack backend for jmacro-rpc";
license = stdenv.lib.licenses.bsd3;

}) {};
"jmacro-rpc-snap" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, jmacro
, jmacro-rpc
, mtl
, snap-core
, stdenv
}:
mkDerivation {

pname = "jmacro-rpc-snap";
version = "0.3";
sha256 = "48aea4a4ba90532ca105b6b274060a47a1c509b8346e0db1b61365c2a9e8dfeb";
libraryHaskellDepends = [
aeson
base
bytestring
containers
jmacro
jmacro-rpc
mtl
snap-core
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/gershomb/jmacro-rpc";
description = "Snap backend for jmacro-rpc";
license = stdenv.lib.licenses.bsd3;

}) {};
"jni" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, inline-c
, jdk
, singletons
, stdenv
, thread-local-storage
}:
mkDerivation {

pname = "jni";
version = "0.2.3";
sha256 = "ba48cfc823de07255421301a02248043bccaf8201d1bc6a7956b86f6c972c904";
libraryHaskellDepends = [
base
bytestring
containers
inline-c
singletons
thread-local-storage
];
librarySystemDepends = [
jdk
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tweag/inline-java/tree/master/jni#readme";
description = "Complete JNI raw bindings";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) jdk;};
"jose" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base64-bytestring
, byteable
, bytestring
, containers
, cryptonite
, lens
, memory
, monad-time
, mtl
, network-uri
, QuickCheck
, quickcheck-instances
, safe
, stdenv
, template-haskell
, text
, time
, unordered-containers
, vector
, x509
}:
mkDerivation {

pname = "jose";
version = "0.5.0.2";
sha256 = "25958a11561f56363bb7dcdcd1ebbc97bf231ee68ed393b117c90fff0cf07abc";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
attoparsec
base
base64-bytestring
byteable
bytestring
containers
cryptonite
lens
memory
monad-time
mtl
network-uri
QuickCheck
quickcheck-instances
safe
template-haskell
text
time
unordered-containers
vector
x509
];
executableHaskellDepends = [
aeson
base
bytestring
lens
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/frasertweedale/hs-jose";
description = "Javascript Object Signing and Encryption and JSON Web Token library";
license = stdenv.lib.licenses.asl20;

}) {};
"jose-jwt" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, cereal
, containers
, cryptonite
, either
, memory
, mtl
, stdenv
, text
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "jose-jwt";
version = "0.7.5";
sha256 = "53e3e9441b7d6d987920749edd61ab15e6e526856822e7d6c27cab302eedcdea";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
cereal
containers
cryptonite
either
memory
mtl
text
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/tekul/jose-jwt";
description = "JSON Object Signing and Encryption Library";
license = stdenv.lib.licenses.bsd3;

}) {};
"js-flot" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "js-flot";
version = "0.8.3";
sha256 = "1ba2f2a6b8d85da76c41f526c98903cbb107f8642e506c072c1e7e3c20fe5e7a";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/js-flot#readme";
description = "Obtain minified flot code";
license = stdenv.lib.licenses.mit;

}) {};
"js-jquery" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "js-jquery";
version = "3.1.1";
sha256 = "d72f67d72bd71d675bcdc75dd280c4a27d90784eb51c661a3da567e0186f2a04";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/js-jquery#readme";
description = "Obtain minified jQuery code";
license = stdenv.lib.licenses.mit;

}) {};
"json" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, mtl
, parsec
, pretty
, stdenv
, syb
, text
}:
mkDerivation {

pname = "json";
version = "0.9.1";
sha256 = "96b57e4d167e45dc80aeff872a922ae9cdb953a1ded29ebbb51019b68f0085a2";
libraryHaskellDepends = [
array
base
bytestring
containers
mtl
parsec
pretty
syb
text
];
doHaddock = false;
doCheck = false;
description = "Support for serialising Haskell to and from JSON";
license = stdenv.lib.licenses.bsd3;

}) {};
"json-builder" = callPackage
({
  mkDerivation
, base
, blaze-builder
, blaze-textual
, bytestring
, containers
, stdenv
, text
, unordered-containers
, utf8-string
, vector
}:
mkDerivation {

pname = "json-builder";
version = "0.3";
sha256 = "b5ef217d5432e8e962fac45f5a266993a0ea26d29c2580b93d0c9988d7480b4d";
libraryHaskellDepends = [
base
blaze-builder
blaze-textual
bytestring
containers
text
unordered-containers
utf8-string
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/lpsmith/json-builder";
description = "Data structure agnostic JSON serialization";
license = stdenv.lib.licenses.bsd3;

}) {};
"json-rpc-generic" = callPackage
({
  mkDerivation
, aeson
, aeson-generic-compat
, base
, bytestring
, containers
, dlist
, scientific
, stdenv
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "json-rpc-generic";
version = "0.2.1.2";
sha256 = "946b5f28b789c6a943601215a20e4a9f53ffbd12070cc1166ed89528cf1c0dda";
libraryHaskellDepends = [
aeson
aeson-generic-compat
base
bytestring
containers
dlist
scientific
text
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/khibino/haskell-json-rpc-generic";
description = "Generic encoder and decode for JSON-RPC";
license = stdenv.lib.licenses.bsd3;

}) {};
"json-schema" = callPackage
({
  mkDerivation
, aeson
, base
, containers
, generic-aeson
, generic-deriving
, mtl
, scientific
, stdenv
, text
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "json-schema";
version = "0.7.4.1";
sha256 = "560d6a17d6eab734f43d329e51967e3ed62f8df2a6fea4a92d06359fe77d7c96";
revision = "14";
editedCabalFile = "0pf2j8v62mfh6dk0v4a93l75by6i6jsfangbsabksdbzhh64hyrr";
libraryHaskellDepends = [
aeson
base
containers
generic-aeson
generic-deriving
mtl
scientific
text
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
description = "Types and type classes for defining JSON schemas";
license = stdenv.lib.licenses.bsd3;

}) {};
"json-stream" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, scientific
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "json-stream";
version = "0.4.1.3";
sha256 = "1e281cfddd1c71b40e8a4b8a75dbd0c1f16b1e349edcbc5e44e45c25241ff9dc";
libraryHaskellDepends = [
aeson
base
bytestring
scientific
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ondrap/json-stream";
description = "Incremental applicative JSON parser";
license = stdenv.lib.licenses.bsd3;

}) {};
"jvm" = callPackage
({
  mkDerivation
, base
, bytestring
, distributed-closure
, jni
, singletons
, stdenv
, text
, vector
}:
mkDerivation {

pname = "jvm";
version = "0.1.2";
sha256 = "0d20fc48b951e3decaa96e9ec13b60d4d45213b54d0f41323340fec1c27e2136";
libraryHaskellDepends = [
base
bytestring
distributed-closure
jni
singletons
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/tweag/inline-java/tree/master/jvm#readme";
description = "Call JVM methods from Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"jvm-streaming" = callPackage
({
  mkDerivation
, base
, distributed-closure
, inline-java
, jni
, jvm
, singletons
, stdenv
, streaming
}:
mkDerivation {

pname = "jvm-streaming";
version = "0.1";
sha256 = "45788461c552dc2cdcbbe389f3783c67942341e38fa7ba17bd0a906db573d256";
revision = "3";
editedCabalFile = "1hfjr9q08kvwdj828pl41zfig0c721sj1ni8p01rb9ck9pv97fap";
libraryHaskellDepends = [
base
distributed-closure
inline-java
jni
jvm
singletons
streaming
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/tweag/inline-java/tree/master/jvm-streaming#readme";
description = "Expose Java iterators as streams from the streaming package";
license = stdenv.lib.licenses.bsd3;

}) {};
"jwt" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, cryptonite
, data-default
, http-types
, memory
, network-uri
, scientific
, semigroups
, stdenv
, text
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "jwt";
version = "0.7.2";
sha256 = "17967413d21399596a236bc8169d9e030bb85e2b1c349c6e470543767cc20a31";
revision = "1";
editedCabalFile = "1q8h94yslw6k6zcjbwx94pnji8dcr2w5n1wzgzfb8hb78w2qr1dm";
libraryHaskellDepends = [
aeson
base
bytestring
containers
cryptonite
data-default
http-types
memory
network-uri
scientific
semigroups
text
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/ssaasen/haskell-jwt";
description = "JSON Web Token (JWT) decoding and encoding";
license = stdenv.lib.licenses.mit;

}) {};
"kan-extensions" = callPackage
({
  mkDerivation
, adjunctions
, array
, base
, comonad
, containers
, contravariant
, distributive
, free
, mtl
, semigroupoids
, stdenv
, tagged
, transformers
}:
mkDerivation {

pname = "kan-extensions";
version = "5.0.1";
sha256 = "01de9fe57064a125ecb1d1161519df27043c2058ca246bbd5cd2d73c899ba0e2";
libraryHaskellDepends = [
adjunctions
array
base
comonad
containers
contravariant
distributive
free
mtl
semigroupoids
tagged
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/kan-extensions/";
description = "Kan extensions, Kan lifts, various forms of the Yoneda lemma, and (co)density (co)monads";
license = stdenv.lib.licenses.bsd3;

}) {};
"kansas-comet" = callPackage
({
  mkDerivation
, aeson
, base
, containers
, data-default-class
, scotty
, stdenv
, stm
, text
, time
, transformers
, unordered-containers
}:
mkDerivation {

pname = "kansas-comet";
version = "0.4";
sha256 = "1f1a4565f2e955b8947bafcb9611789b0ccdf9efdfed8aaa2a2aa162a07339e1";
revision = "13";
editedCabalFile = "0qdj3giwfjic87xln1lkrfa9dw8yj31s7x3dsr7n1343jcap2m7n";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
containers
data-default-class
scotty
stm
text
time
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ku-fpg/kansas-comet/";
description = "A JavaScript push mechanism based on the comet idiom";
license = stdenv.lib.licenses.bsd3;

}) {};
"katip" = callPackage
({
  mkDerivation
, aeson
, auto-update
, base
, bytestring
, containers
, either
, exceptions
, hostname
, microlens
, microlens-th
, monad-control
, mtl
, old-locale
, resourcet
, semigroups
, stdenv
, string-conv
, template-haskell
, text
, time
, transformers
, transformers-base
, transformers-compat
, unix
, unordered-containers
}:
mkDerivation {

pname = "katip";
version = "0.3.1.4";
sha256 = "04778447b9446aaad4206f4acc1c7d19322f13f467418461ad4a5fec981b8493";
libraryHaskellDepends = [
aeson
auto-update
base
bytestring
containers
either
exceptions
hostname
microlens
microlens-th
monad-control
mtl
old-locale
resourcet
semigroups
string-conv
template-haskell
text
time
transformers
transformers-base
transformers-compat
unix
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Soostone/katip";
description = "A structured logging framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"katip-elasticsearch" = callPackage
({
  mkDerivation
, aeson
, async
, base
, bloodhound
, enclosed-exceptions
, exceptions
, http-client
, http-types
, katip
, retry
, scientific
, stdenv
, stm
, stm-chans
, text
, time
, transformers
, unordered-containers
, uuid
}:
mkDerivation {

pname = "katip-elasticsearch";
version = "0.3.0.2";
sha256 = "bc23e4565f2bd6627b456c210e2b74e333e743da46354be90062d1c9ed0039ed";
libraryHaskellDepends = [
aeson
async
base
bloodhound
enclosed-exceptions
exceptions
http-client
http-types
katip
retry
scientific
stm
stm-chans
text
time
transformers
unordered-containers
uuid
];
doHaddock = false;
doCheck = false;
description = "ElasticSearch scribe for the Katip logging framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"kawhi" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, exceptions
, http-client
, http-conduit
, http-types
, mtl
, safe
, scientific
, stdenv
, text
}:
mkDerivation {

pname = "kawhi";
version = "0.2.1";
sha256 = "ad98cce9b302fae9fca60ba25f9256b5c4db7e3b8340225a8e3041f45af0f677";
libraryHaskellDepends = [
aeson
base
bytestring
exceptions
http-client
http-conduit
http-types
mtl
safe
scientific
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hamsterdam/kawhi";
description = "stats.NBA.com library";
license = stdenv.lib.licenses.mit;

}) {};
"kdt" = callPackage
({
  mkDerivation
, base
, deepseq
, deepseq-generics
, heap
, stdenv
}:
mkDerivation {

pname = "kdt";
version = "0.2.4";
sha256 = "bc0f8f9ac0cb01466273171f47b627abe170d1130bd59657fb9198b4f9479f9a";
libraryHaskellDepends = [
base
deepseq
deepseq-generics
heap
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/giogadi/kdt";
description = "Fast and flexible k-d trees for various types of point queries";
license = stdenv.lib.licenses.mit;

}) {};
"keter" = callPackage
({
  mkDerivation
, aeson
, array
, async
, attoparsec
, base
, blaze-builder
, bytestring
, case-insensitive
, conduit
, conduit-extra
, containers
, data-default
, directory
, filepath
, fsnotify
, http-client
, http-conduit
, http-reverse-proxy
, http-types
, lifted-base
, mtl
, network
, process
, random
, regex-tdfa
, stdenv
, stm
, tar
, template-haskell
, text
, time
, tls
, transformers
, unix
, unix-compat
, unordered-containers
, vector
, wai
, wai-app-static
, wai-extra
, warp
, warp-tls
, yaml
, zlib
}:
mkDerivation {

pname = "keter";
version = "1.4.3.2";
sha256 = "332c962cb73a5cf8213fb137b67e1ac8902a91489a5769ed990abf79a5374a8f";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
array
async
attoparsec
base
blaze-builder
bytestring
case-insensitive
conduit
conduit-extra
containers
data-default
directory
filepath
fsnotify
http-client
http-conduit
http-reverse-proxy
http-types
lifted-base
mtl
network
process
random
regex-tdfa
stm
tar
template-haskell
text
time
tls
transformers
unix
unix-compat
unordered-containers
vector
wai
wai-app-static
wai-extra
warp
warp-tls
yaml
zlib
];
executableHaskellDepends = [
base
data-default
filepath
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Web application deployment manager, focusing on Haskell web frameworks";
license = stdenv.lib.licenses.mit;

}) {};
"keycode" = callPackage
({
  mkDerivation
, base
, containers
, ghc-prim
, stdenv
, template-haskell
}:
mkDerivation {

pname = "keycode";
version = "0.2.2";
sha256 = "56f9407cf182b01e5f0fda80f569ff629f37d894f75ef28b6b8af3024343d310";
revision = "2";
editedCabalFile = "0g19sjk2sh1w9ahn93dnvjkim4mqapq0plmdd37179qfgi49qnp8";
libraryHaskellDepends = [
base
containers
ghc-prim
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RyanGlScott/keycode";
description = "Maps web browser keycodes to their corresponding keyboard keys";
license = stdenv.lib.licenses.bsd3;

}) {};
"keys" = callPackage
({
  mkDerivation
, array
, base
, comonad
, containers
, free
, hashable
, semigroupoids
, semigroups
, stdenv
, transformers
, transformers-compat
, unordered-containers
}:
mkDerivation {

pname = "keys";
version = "3.11";
sha256 = "0cf397b7e6eb8cda930a02118c0bf262f9ef80c5a2f91822238b7778042cc4b2";
revision = "1";
editedCabalFile = "1lyg4wyi7mkqvbfl9lvfln3j4vys47jih56zyjba7nx36kbw185i";
libraryHaskellDepends = [
array
base
comonad
containers
free
hashable
semigroupoids
semigroups
transformers
transformers-compat
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/keys/";
description = "Keyed functors and containers";
license = stdenv.lib.licenses.bsd3;

}) {};
"kmeans" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "kmeans";
version = "0.1.3";
sha256 = "3d9e24a12ce01354c2a731ee079144c3bea2c9f011ffd51db82e5c26da1a2c0b";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "K-means clustering algorithm";
license = stdenv.lib.licenses.bsd3;

}) {};
"knob" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, transformers
}:
mkDerivation {

pname = "knob";
version = "0.1.1";
sha256 = "8c2c84cfa20f3a2d7ca0636d2b3f2822c62501358075bfa356eb964b803e1217";
libraryHaskellDepends = [
base
bytestring
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://john-millikin.com/software/knob/";
description = "Memory-backed handles";
license = stdenv.lib.licenses.mit;

}) {};
"koofr-client" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, filepath
, http-client
, http-client-tls
, http-types
, mtl
, stdenv
}:
mkDerivation {

pname = "koofr-client";
version = "1.0.0.3";
sha256 = "2ab6f0af8be4f1912ad06ad860db993f9c33c8f0206f87ff0b566b7dda54e7af";
revision = "1";
editedCabalFile = "0qaipcg9n93z0za2a8jy3mv73a3q2b1dv98v2g5wwcv1qx7rvvhv";
libraryHaskellDepends = [
aeson
base
bytestring
filepath
http-client
http-client-tls
http-types
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/edofic/koofr-api-hs";
description = "Client to Koofr API";
license = stdenv.lib.licenses.mit;

}) {};
"kraken" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, http-client
, http-client-tls
, mtl
, stdenv
}:
mkDerivation {

pname = "kraken";
version = "0.0.3";
sha256 = "4001e1c545155434985f7ca93b5d1bcc6a465c83c58d4bb41a60bbfe521b1e9d";
revision = "2";
editedCabalFile = "0w8w1frkx54ldyhxp09ddm2y1l7q72xfl1p6py7y6ywxnq23lr4h";
libraryHaskellDepends = [
aeson
base
bytestring
http-client
http-client-tls
mtl
];
doHaddock = false;
doCheck = false;
description = "Kraken.io API client";
license = stdenv.lib.licenses.mit;

}) {};
"l10n" = callPackage
({
  mkDerivation
, base
, stdenv
, text
, time
}:
mkDerivation {

pname = "l10n";
version = "0.1.0.0";
sha256 = "56f935a18248473cada2bca5cef2c5e98fbab77a02f5bb075ecdc90750de6531";
libraryHaskellDepends = [
base
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/l10n#readme";
description = "Enables providing localization as typeclass instances in separate files";
license = stdenv.lib.licenses.bsd3;

}) {};
"labels" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "labels";
version = "0.3.2";
sha256 = "c4060c9fe6adb9f8c34f21acf761a4a5e0f45c4d580a27ead0f05ea2717e0a31";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chrisdone/labels#readme";
description = "Anonymous records via named tuples";
license = stdenv.lib.licenses.bsd3;

}) {};
"lackey" = callPackage
({
  mkDerivation
, base
, servant
, servant-foreign
, stdenv
, text
}:
mkDerivation {

pname = "lackey";
version = "0.4.2";
sha256 = "3a7f28b66e015a8aafe7af45cfe2da0fec32bdd2ff4f4634def64cce033878c9";
libraryHaskellDepends = [
base
servant
servant-foreign
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/lackey#readme";
description = "Generate Ruby clients from Servant APIs";
license = stdenv.lib.licenses.mit;

}) {};
"language-c" = callPackage
({
  mkDerivation
, alex
, array
, base
, bytestring
, containers
, directory
, filepath
, happy
, pretty
, process
, stdenv
, syb
}:
mkDerivation {

pname = "language-c";
version = "0.5.0";
sha256 = "86d58bc017a7bba157fc4d5d0ab9e3a3d3f3a2f98bfe46b5b0d5d72a0f5d2222";
libraryHaskellDepends = [
array
base
bytestring
containers
directory
filepath
pretty
process
syb
];
libraryToolDepends = [
alex
happy
];
doHaddock = false;
doCheck = false;
homepage = "http://visq.github.io/language-c/";
description = "Analysis and generation of C code";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-c-quote" = callPackage
({
  mkDerivation
, alex
, array
, base
, bytestring
, containers
, exception-mtl
, exception-transformers
, filepath
, happy
, haskell-src-meta
, mainland-pretty
, mtl
, srcloc
, stdenv
, syb
, symbol
, template-haskell
}:
mkDerivation {

pname = "language-c-quote";
version = "0.11.7.1";
sha256 = "5583e92748e6b4cac01536bff86eb119e424e136e03bb3ea0d2db3217328f88c";
revision = "1";
editedCabalFile = "0pbd8yqdg0bkyg8rnm3dcc9zqzb3bgfynmcsk18x7ijc7w54s4wi";
libraryHaskellDepends = [
array
base
bytestring
containers
exception-mtl
exception-transformers
filepath
haskell-src-meta
mainland-pretty
mtl
srcloc
syb
symbol
template-haskell
];
libraryToolDepends = [
alex
happy
];
doHaddock = false;
doCheck = false;
homepage = "http://www.drexel.edu/~mainland/";
description = "C/CUDA/OpenCL/Objective-C quasiquoting library";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-dockerfile" = callPackage
({
  mkDerivation
, base
, bytestring
, free
, mtl
, parsec
, pretty
, ShellCheck
, split
, stdenv
, template-haskell
, th-lift
, th-lift-instances
, transformers
}:
mkDerivation {

pname = "language-dockerfile";
version = "0.3.5.0";
sha256 = "9667fd70217ebf229369fbaf906bf74926a8ef1651fd965862c47082d09342e5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
free
mtl
parsec
pretty
ShellCheck
split
template-haskell
th-lift
th-lift-instances
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/beijaflor-io/language-dockerfile#readme";
description = "Dockerfile linter, parser, pretty-printer and embedded DSL";
license = stdenv.lib.licenses.gpl3;

}) {};
"language-ecmascript" = callPackage
({
  mkDerivation
, base
, containers
, data-default-class
, Diff
, mtl
, parsec
, QuickCheck
, stdenv
, template-haskell
, testing-feat
, uniplate
, wl-pprint
}:
mkDerivation {

pname = "language-ecmascript";
version = "0.17.1.0";
sha256 = "df1e3f0d3096d522f278c644d3efbedabee29e2babfdf9d497287550f017883e";
revision = "2";
editedCabalFile = "0wndi8w3nchzvsmqxy5pbxld4c18a0b3ncffqfail1dpa6i30my6";
libraryHaskellDepends = [
base
containers
data-default-class
Diff
mtl
parsec
QuickCheck
template-haskell
testing-feat
uniplate
wl-pprint
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jswebtools/language-ecmascript";
description = "JavaScript parser and pretty-printer library";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-fortran" = callPackage
({
  mkDerivation
, alex
, array
, base
, happy
, haskell-src
, parsec
, stdenv
, syb
}:
mkDerivation {

pname = "language-fortran";
version = "0.5.1";
sha256 = "44cd3f3e76dc627cce8f442dbaf4f1d54b1db633c313868c8ad1d5dbe16e7f9a";
libraryHaskellDepends = [
array
base
haskell-src
parsec
syb
];
libraryToolDepends = [
alex
happy
];
doHaddock = false;
doCheck = false;
description = "Fortran lexer and parser, language support, and extensions";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-glsl" = callPackage
({
  mkDerivation
, base
, parsec
, prettyclass
, stdenv
}:
mkDerivation {

pname = "language-glsl";
version = "0.2.0";
sha256 = "236348543fb992e7cc563f80e1118ba942527ad295eba1a9466a30165cfcaef2";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
parsec
prettyclass
];
executableHaskellDepends = [
base
parsec
prettyclass
];
doHaddock = false;
doCheck = false;
description = "GLSL abstract syntax tree, parser, and pretty-printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-haskell-extract" = callPackage
({
  mkDerivation
, base
, regex-posix
, stdenv
, template-haskell
}:
mkDerivation {

pname = "language-haskell-extract";
version = "0.2.4";
sha256 = "14da16e56665bf971723e0c5fd06dbb7cc30b4918cf8fb5748570785ded1acdb";
libraryHaskellDepends = [
base
regex-posix
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/finnsson/template-helper";
description = "Module to automatically extract functions from the local code";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-java" = callPackage
({
  mkDerivation
, alex
, array
, base
, cpphs
, parsec
, pretty
, stdenv
}:
mkDerivation {

pname = "language-java";
version = "0.2.8";
sha256 = "0b789e089e4b18bf6248c2a1a9f3eff23cc19548899899f912597a1c33e9c367";
libraryHaskellDepends = [
array
base
cpphs
parsec
pretty
];
libraryToolDepends = [
alex
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/language-java";
description = "Manipulating Java source: abstract syntax, lexer, parser, and pretty-printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-javascript" = callPackage
({
  mkDerivation
, alex
, array
, base
, blaze-builder
, bytestring
, containers
, happy
, mtl
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "language-javascript";
version = "0.6.0.9";
sha256 = "a86b98d4fb8c27bbe54f7bedecde2acfea7e7d8e30a55434fd971b15238932cc";
libraryHaskellDepends = [
array
base
blaze-builder
bytestring
containers
mtl
text
utf8-string
];
libraryToolDepends = [
alex
happy
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/erikd/language-javascript";
description = "Parser for JavaScript";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-lua2" = callPackage
({
  mkDerivation
, base
, containers
, Earley
, lexer-applicative
, microlens
, regex-applicative
, semigroups
, srcloc
, stdenv
, transformers
, unordered-containers
, wl-pprint
}:
mkDerivation {

pname = "language-lua2";
version = "0.1.0.5";
sha256 = "4f24d7b015dbe1c7e9d1ead835ce426223531b8b6f408ee97b3d18904424393d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
Earley
lexer-applicative
microlens
regex-applicative
semigroups
srcloc
transformers
unordered-containers
wl-pprint
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/mitchellwrosen/language-lua2";
description = "Lua parser and pretty printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-nix" = callPackage
({
  mkDerivation
, base
, base-compat
, Cabal
, deepseq
, lens
, pretty
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "language-nix";
version = "2.1.0.1";
sha256 = "f0147300724ac39ce388cd6cd717ac3ccc6ed1884ffaafebb18d0f3021e01acf";
revision = "1";
editedCabalFile = "1zv12p4ralrks0517zs52rzmzmsxxkcxkqz7zijfgcsvh6bsmafi";
libraryHaskellDepends = [
base
base-compat
Cabal
deepseq
lens
pretty
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/peti/language-nix#readme";
description = "Data types and useful functions to represent and manipulate the Nix language";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-puppet" = callPackage
({
  mkDerivation
, aeson
, ansi-wl-pprint
, attoparsec
, base
, base16-bytestring
, bytestring
, case-insensitive
, containers
, cryptonite
, directory
, either
, exceptions
, filecache
, formatting
, Glob
, hashable
, hruby
, hslogger
, hspec
, http-api-data
, http-client
, lens
, lens-aeson
, megaparsec
, memory
, mtl
, operational
, optparse-applicative
, parallel-io
, parsec
, pcre-utils
, process
, random
, regex-pcre-builtin
, scientific
, semigroups
, servant
, servant-client
, split
, stdenv
, stm
, strict-base-types
, text
, time
, transformers
, unix
, unordered-containers
, vector
, yaml
}:
mkDerivation {

pname = "language-puppet";
version = "1.3.5.1";
sha256 = "4c33feba8e2b3654d25d7cb3d7a881b1f1228196db2d0335a0a83c995b5f19d4";
revision = "1";
editedCabalFile = "0walirxixbwml0mpsxxjvp09xyqh7z3f20y6fy02drhqnlrq2601";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
ansi-wl-pprint
attoparsec
base
base16-bytestring
bytestring
case-insensitive
containers
cryptonite
directory
either
exceptions
filecache
formatting
hashable
hruby
hslogger
hspec
http-api-data
http-client
lens
lens-aeson
megaparsec
memory
mtl
operational
parsec
pcre-utils
process
random
regex-pcre-builtin
scientific
semigroups
servant
servant-client
split
stm
strict-base-types
text
time
transformers
unix
unordered-containers
vector
yaml
];
executableHaskellDepends = [
aeson
base
bytestring
containers
Glob
hslogger
http-client
lens
megaparsec
mtl
optparse-applicative
parallel-io
regex-pcre-builtin
servant-client
strict-base-types
text
transformers
unordered-containers
vector
yaml
];
doHaddock = false;
doCheck = false;
homepage = "http://lpuppet.banquise.net/";
description = "Tools to parse and evaluate the Puppet DSL";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-python" = callPackage
({
  mkDerivation
, alex
, array
, base
, containers
, happy
, monads-tf
, pretty
, stdenv
, transformers
, utf8-string
}:
mkDerivation {

pname = "language-python";
version = "0.5.4";
sha256 = "ba93508e5e7b6b3c881eb9b04f9032c2e8c5f20255d812a0a365eba82ffbf129";
libraryHaskellDepends = [
array
base
containers
monads-tf
pretty
transformers
utf8-string
];
libraryToolDepends = [
alex
happy
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/bjpop/language-python";
description = "Parsing and pretty printing of Python code";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-thrift" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, containers
, megaparsec
, scientific
, semigroups
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "language-thrift";
version = "0.10.0.0";
sha256 = "29fd9968799a7feb1321ac3976aeb94cbc5fc39fd073abc5e192990138a3d378";
libraryHaskellDepends = [
ansi-wl-pprint
base
containers
megaparsec
scientific
semigroups
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/abhinav/language-thrift#readme";
description = "Parser and pretty printer for the Thrift IDL format";
license = stdenv.lib.licenses.bsd3;

}) {};
"large-hashable" = callPackage
({
  mkDerivation
, aeson
, base
, base16-bytestring
, bytes
, bytestring
, containers
, scientific
, stdenv
, strict
, template-haskell
, text
, time
, transformers
, unordered-containers
, utf8-light
, vector
, void
}:
mkDerivation {

pname = "large-hashable";
version = "0.1.0.3";
sha256 = "ece9da94f91dfb97f3507035f280fe89a9bed50cf1071aae1afbd5d288682d89";
libraryHaskellDepends = [
aeson
base
base16-bytestring
bytes
bytestring
containers
scientific
strict
template-haskell
text
time
transformers
unordered-containers
utf8-light
vector
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/factisresearch/large-hashable";
description = "Efficiently hash (large) Haskell values";
license = stdenv.lib.licenses.bsd3;

}) {};
"largeword" = callPackage
({
  mkDerivation
, base
, binary
, stdenv
}:
mkDerivation {

pname = "largeword";
version = "1.2.5";
sha256 = "00b3b06d846649bf404f52a725c88349a38bc8c810e16c99f3100c4e1e9d7d46";
libraryHaskellDepends = [
base
binary
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/idontgetoutmuch/largeword";
description = "Provides Word128, Word192 and Word256 and a way of producing other large words if required";
license = stdenv.lib.licenses.bsd3;

}) {};
"lattices" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, hashable
, semigroups
, stdenv
, tagged
, universe-base
, universe-reverse-instances
, unordered-containers
, void
}:
mkDerivation {

pname = "lattices";
version = "1.5.0";
sha256 = "c6e3fb4334503b9087209195f40c96f56819497f999959358a2ff5d843a45d1f";
revision = "1";
editedCabalFile = "04l5x09f48vdkljzl79g2cybbm5wdxa0bf4xvlwdkcbky9h0qvan";
libraryHaskellDepends = [
base
containers
deepseq
hashable
semigroups
tagged
universe-base
universe-reverse-instances
unordered-containers
void
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/phadej/lattices/";
description = "Fine-grained library for constructing and manipulating lattices";
license = stdenv.lib.licenses.bsd3;

}) {};
"lazy-csv" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "lazy-csv";
version = "0.5.1";
sha256 = "888bcbdd43886099f197c1c246cea324c97c076d4839e97eea0b8d6d7b49649f";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
];
executableHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/lazy-csv";
description = "Efficient lazy parsers for CSV (comma-separated values)";
license = stdenv.lib.licenses.bsd3;

}) {};
"lca" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "lca";
version = "0.3";
sha256 = "ea4f35072f7b1b217cb0d65493afd8e8449017c7062afe092768ed1219982e20";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/lca/";
description = "O(log n) persistent on-line lowest common ancestor calculation without preprocessing";
license = stdenv.lib.licenses.bsd3;

}) {};
"leapseconds-announced" = callPackage
({
  mkDerivation
, base
, stdenv
, time
}:
mkDerivation {

pname = "leapseconds-announced";
version = "2017";
sha256 = "7fdbc929cfcb87f1daa0d2a278aeb58264ee82bf96ece918013b5b942a477dab";
libraryHaskellDepends = [
base
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bjornbm/leapseconds-announced";
description = "Leap seconds announced at library release time";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens" = callPackage
({
  mkDerivation
, array
, base
, base-orphans
, bifunctors
, bytestring
, comonad
, containers
, contravariant
, distributive
, exceptions
, filepath
, free
, ghc-prim
, hashable
, kan-extensions
, mtl
, parallel
, profunctors
, reflection
, semigroupoids
, semigroups
, stdenv
, tagged
, template-haskell
, text
, transformers
, transformers-compat
, unordered-containers
, vector
, void
}:
mkDerivation {

pname = "lens";
version = "4.15.1";
sha256 = "5cfaa64cb1b9787193c2247a1ed1c248104ba5fadb91cec6432e648e41b1bea6";
revision = "4";
editedCabalFile = "0f8mn6zgfclibdgy9v1ga550ysmh8biwbyvsjhi93grh5lddwmg0";
libraryHaskellDepends = [
array
base
base-orphans
bifunctors
bytestring
comonad
containers
contravariant
distributive
exceptions
filepath
free
ghc-prim
hashable
kan-extensions
mtl
parallel
profunctors
reflection
semigroupoids
semigroups
tagged
template-haskell
text
transformers
transformers-compat
unordered-containers
vector
void
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/lens/";
description = "Lenses, Folds and Traversals";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens-action" = callPackage
({
  mkDerivation
, base
, comonad
, contravariant
, lens
, mtl
, profunctors
, semigroupoids
, semigroups
, stdenv
, transformers
}:
mkDerivation {

pname = "lens-action";
version = "0.2.0.2";
sha256 = "e26c70b2de68a7cfbce97bcdabdcdfb45b2c50708207a14f8dd24c3e29c6d371";
revision = "2";
editedCabalFile = "1z0bgv6zvxhhcamv4pnwi8lldps38qx0jjmq3h5703nfiikqrwgj";
libraryHaskellDepends = [
base
comonad
contravariant
lens
mtl
profunctors
semigroupoids
semigroups
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/lens-action/";
description = "Monadic Getters and Folds";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens-aeson" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, lens
, scientific
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "lens-aeson";
version = "1.0.0.5";
sha256 = "65faad5b75852209b4c6df43ae1f7460c2b94bf3bbc10b5cd529f43c743a5d9f";
revision = "5";
editedCabalFile = "1dzd2z5sb7sf5kgijm6lkxzbxhia761xfw5blpwfqp444q8dsi34";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
lens
scientific
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/lens/lens-aeson/";
description = "Law-abiding lenses for aeson";
license = stdenv.lib.licenses.mit;

}) {};
"lens-datetime" = callPackage
({
  mkDerivation
, base
, lens
, stdenv
, time
}:
mkDerivation {

pname = "lens-datetime";
version = "0.3";
sha256 = "bb1f8d7bf71c9ef8901bc39e2a2d629b1101307115c0c4d844fcbd8e86b6ccd4";
libraryHaskellDepends = [
base
lens
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nilcons/lens-datetime";
description = "Lenses for Data.Time.* types";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens-family" = callPackage
({
  mkDerivation
, base
, containers
, lens-family-core
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "lens-family";
version = "1.2.1";
sha256 = "41838eba3fa063dc467bbcd70f9395c8429c08ecab2ff779d01b459222cd9ab7";
libraryHaskellDepends = [
base
containers
lens-family-core
mtl
transformers
];
doHaddock = false;
doCheck = false;
description = "Lens Families";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens-family-core" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, transformers
}:
mkDerivation {

pname = "lens-family-core";
version = "1.2.1";
sha256 = "95e3b9876a6cdcc6865bfad22e04af41430c7a9a6bc96e9a25a2a35a841d19a4";
libraryHaskellDepends = [
base
containers
transformers
];
doHaddock = false;
doCheck = false;
description = "Haskell 98 Lens Families";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens-family-th" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "lens-family-th";
version = "0.5.0.0";
sha256 = "948e6ad30a9869db5536d02356ba63e7ec1d9d8d04a0cff4c4252b49a4de959e";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/DanBurton/lens-family-th#readme";
description = "Generate lens-family style lenses";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens-regex" = callPackage
({
  mkDerivation
, array
, base
, lens
, regex-base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "lens-regex";
version = "0.1.0";
sha256 = "4954b3ae395661e916c536bfe837c42a1cd8223ea81ffd86b1fdd9b6abfc5142";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
base
lens
regex-base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/himura/lens-regex";
description = "Lens powered regular expression";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens-simple" = callPackage
({
  mkDerivation
, base
, lens-family
, lens-family-core
, lens-family-th
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "lens-simple";
version = "0.1.0.9";
sha256 = "613d99b8074197f8a026a641a9940dd188e0d81e808169f420981a9ca15b832a";
libraryHaskellDepends = [
base
lens-family
lens-family-core
lens-family-th
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/michaelt/lens-simple";
description = "simplified import of elementary lens-family combinators";
license = stdenv.lib.licenses.bsd3;

}) {};
"lentil" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, csv
, directory
, filemanip
, filepath
, natural-sort
, optparse-applicative
, parsec
, pipes
, regex-tdfa
, semigroups
, stdenv
, terminal-progress-bar
, text
, transformers
}:
mkDerivation {

pname = "lentil";
version = "1.0.8.0";
sha256 = "108af2057f56b74a8a42e8f1bbb47e7af64cff612bb90f886e93f6118651154e";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
ansi-wl-pprint
base
csv
directory
filemanip
filepath
natural-sort
optparse-applicative
parsec
pipes
regex-tdfa
semigroups
terminal-progress-bar
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.ariis.it/static/articles/lentil/page.html";
description = "frugal issue tracker";
license = stdenv.lib.licenses.gpl3;

}) {};
"leveldb-haskell" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default
, exceptions
, filepath
, leveldb
, resourcet
, stdenv
, transformers
}:
mkDerivation {

pname = "leveldb-haskell";
version = "0.6.4";
sha256 = "25a8f9c2cdd5a32423389173a6323bd804689f69aee1082c57887ea74ead1b04";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
data-default
exceptions
filepath
resourcet
transformers
];
librarySystemDepends = [
leveldb
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/kim/leveldb-haskell";
description = "Haskell bindings to LevelDB";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) leveldb;};
"lexer-applicative" = callPackage
({
  mkDerivation
, base
, regex-applicative
, srcloc
, stdenv
}:
mkDerivation {

pname = "lexer-applicative";
version = "2.1.0.1";
sha256 = "3e9612800e7d70f997e0d3396628b91133568b9e85e2c160834d1eb96acca49c";
libraryHaskellDepends = [
base
regex-applicative
srcloc
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/lexer-applicative";
description = "Simple lexer based on applicative regular expressions";
license = stdenv.lib.licenses.mit;

}) {};
"lhs2tex" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, mtl
, process
, regex-compat
, stdenv
}:
mkDerivation {

pname = "lhs2tex";
version = "1.19";
sha256 = "24ae0557d95673e0c6d9b0aca829181b734359880dd58802ac154b89f384b00e";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
directory
filepath
mtl
process
regex-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://www.andres-loeh.de/lhs2tex/";
description = "Preprocessor for typesetting Haskell sources with LaTeX";
license = "GPL";

}) {};
"libgit" = callPackage
({
  mkDerivation
, base
, mtl
, process
, stdenv
}:
mkDerivation {

pname = "libgit";
version = "0.3.1";
sha256 = "1d4c60dd987c363d77c4be947678d01a51ab4b568964c30a33827ccc854f7522";
libraryHaskellDepends = [
base
mtl
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-libgit";
description = "Simple Git Wrapper";
license = stdenv.lib.licenses.bsd3;

}) {};
"libinfluxdb" = callPackage
({
  mkDerivation
, base
, bytestring
, clock
, containers
, http-client
, http-client-tls
, http-types
, resource-pool
, stdenv
, stm
, text
}:
mkDerivation {

pname = "libinfluxdb";
version = "0.0.4";
sha256 = "25b5bbc274c9e18bc46ea0271805adfcaaec6d46caa69eb465e0cbc03f63ef3f";
revision = "1";
editedCabalFile = "17ddlql04hgah7pr0zi8zvpza17ig7a0m27wr2c47gdzy7k0nr2v";
libraryHaskellDepends = [
base
bytestring
clock
containers
http-client
http-client-tls
http-types
resource-pool
stm
text
];
doHaddock = false;
doCheck = false;
description = "libinfluxdb";
license = stdenv.lib.licenses.mit;

}) {};
"libmpd" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, containers
, data-default-class
, filepath
, mtl
, network
, old-locale
, stdenv
, text
, time
, utf8-string
}:
mkDerivation {

pname = "libmpd";
version = "0.9.0.6";
sha256 = "bdebb946bba078ed85de12d71ef2e7efa7f28c1ed806d9a390a20d5e4590c937";
libraryHaskellDepends = [
attoparsec
base
bytestring
containers
data-default-class
filepath
mtl
network
old-locale
text
time
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vimus/libmpd-haskell#readme";
description = "An MPD client library";
license = stdenv.lib.licenses.mit;

}) {};
"libnotify" = callPackage
({
  mkDerivation
, base
, bytestring
, glib
, gtk
, libnotify
, stdenv
}:
mkDerivation {

pname = "libnotify";
version = "0.2";
sha256 = "665603c8343e5c7773b4fba87edd146d2f4565e75087609d1874fc4523955f59";
libraryHaskellDepends = [
base
bytestring
glib
gtk
];
librarySystemDepends = [
libnotify
];
doHaddock = false;
doCheck = false;
description = "Bindings to libnotify library";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) libnotify;};
"librato" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, either
, http-client
, http-conduit
, http-types
, mtl
, resourcet
, stdenv
, text
, unordered-containers
, uri-templater
, vector
}:
mkDerivation {

pname = "librato";
version = "0.2.0.1";
sha256 = "e42365b06c6ee5d99742801330950a8e6fcb747974954f2f7dc3940dfa4418d0";
revision = "1";
editedCabalFile = "06md1545pfywdd3ggm6ss9lk8fzph1psl9jip3gp0qsxmv3diyix";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
either
http-client
http-conduit
http-types
mtl
resourcet
text
unordered-containers
uri-templater
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/SaneTracker/librato";
description = "Bindings to the Librato API";
license = stdenv.lib.licenses.mit;

}) {};
"libsystemd-journal" = callPackage
({
  mkDerivation
, base
, bytestring
, hashable
, hsyslog
, pipes
, pipes-safe
, stdenv
, systemd
, text
, transformers
, uniplate
, unix-bytestring
, unordered-containers
, uuid
, vector
}:
mkDerivation {

pname = "libsystemd-journal";
version = "1.4.1";
sha256 = "6d23d1a7ba6cf2bb014955ce13b482f422f75264185b86323dc100aa288e3a1b";
revision = "1";
editedCabalFile = "0g4km425r803skih1a2r1wsmmhkw7nqr9sl080m82g8pyck5wxsw";
libraryHaskellDepends = [
base
bytestring
hashable
hsyslog
pipes
pipes-safe
text
transformers
uniplate
unix-bytestring
unordered-containers
uuid
vector
];
libraryPkgconfigDepends = [
systemd
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ocharles/libsystemd-journal";
description = "Haskell bindings to libsystemd-journal";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) systemd;};
"licensor" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, cmdargs
, containers
, directory
, http-conduit
, process
, stdenv
}:
mkDerivation {

pname = "licensor";
version = "0.2.0";
sha256 = "87ec4cbc25e9efa51d4bf5d7904db62169807c164041995dacc77c165d3071e5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
Cabal
containers
directory
http-conduit
process
];
executableHaskellDepends = [
base
Cabal
cmdargs
containers
directory
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jpvillaisaza/licensor";
description = "A license compatibility helper";
license = stdenv.lib.licenses.mit;

}) {};
"lift-generics" = callPackage
({
  mkDerivation
, base
, generic-deriving
, ghc-prim
, stdenv
, template-haskell
}:
mkDerivation {

pname = "lift-generics";
version = "0.1.1";
sha256 = "07cf2cc4416fb7b0e45595da8a964459498da976e18cdcc169ac2416143930cb";
revision = "1";
editedCabalFile = "03vpmdgarz41zx1q51a4bx3x3qfvs7wfnqym8xiv4i9sxdr82yy8";
libraryHaskellDepends = [
base
generic-deriving
ghc-prim
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RyanGlScott/lift-generics";
description = "GHC.Generics-based Language.Haskell.TH.Syntax.lift implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"lifted-async" = callPackage
({
  mkDerivation
, async
, base
, constraints
, lifted-base
, monad-control
, stdenv
, transformers-base
}:
mkDerivation {

pname = "lifted-async";
version = "0.9.1.1";
sha256 = "31ac44b834723c9b9d40a319135a712802f2690d700df283d0a380fcd8d48e40";
libraryHaskellDepends = [
async
base
constraints
lifted-base
monad-control
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/maoe/lifted-async";
description = "Run lifted IO operations asynchronously and wait for their results";
license = stdenv.lib.licenses.bsd3;

}) {};
"lifted-base" = callPackage
({
  mkDerivation
, base
, monad-control
, stdenv
, transformers-base
}:
mkDerivation {

pname = "lifted-base";
version = "0.2.3.10";
sha256 = "e677e560b176c40da2478d2f27dbeadc79630b2295ea3828603e0de4784d24fc";
libraryHaskellDepends = [
base
monad-control
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/basvandijk/lifted-base";
description = "lifted IO operations from the base library";
license = stdenv.lib.licenses.bsd3;

}) {};
"line" = callPackage
({
  mkDerivation
, aeson
, base
, base64-bytestring
, bytestring
, cryptohash-sha256
, http-conduit
, http-types
, scotty
, stdenv
, text
, time
, transformers
, wai
}:
mkDerivation {

pname = "line";
version = "2.2.0";
sha256 = "ab22bb9cccc8aafaa61a1a42e8c9b65bcd3995e269949a5e2df8ebd0677697a8";
libraryHaskellDepends = [
aeson
base
base64-bytestring
bytestring
cryptohash-sha256
http-conduit
http-types
scotty
text
time
transformers
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/noraesae/line";
description = "Haskell SDK for the LINE API";
license = stdenv.lib.licenses.bsd3;

}) {};
"linear" = callPackage
({
  mkDerivation
, adjunctions
, base
, base-orphans
, binary
, bytes
, cereal
, containers
, deepseq
, distributive
, ghc-prim
, hashable
, lens
, reflection
, semigroupoids
, semigroups
, stdenv
, tagged
, template-haskell
, transformers
, transformers-compat
, unordered-containers
, vector
, void
}:
mkDerivation {

pname = "linear";
version = "1.20.5";
sha256 = "61d8b7242f1e7c27925df7ffe1aa8b1fd732e61598f3af48b9999d8fb464cc0d";
revision = "2";
editedCabalFile = "0fi7viyj3r9gri7wsnd4lvdnyrzpincknh10jgag540v7ff6aqcv";
libraryHaskellDepends = [
adjunctions
base
base-orphans
binary
bytes
cereal
containers
deepseq
distributive
ghc-prim
hashable
lens
reflection
semigroupoids
semigroups
tagged
template-haskell
transformers
transformers-compat
unordered-containers
vector
void
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/linear/";
description = "Linear Algebra";
license = stdenv.lib.licenses.bsd3;

}) {};
"linear-accelerate" = callPackage
({
  mkDerivation
, accelerate
, base
, lens
, linear
, stdenv
}:
mkDerivation {

pname = "linear-accelerate";
version = "0.2";
sha256 = "e62ad99a2f2366c457a75eecba34c0fe8036ecf3f60d59ad41936b26f8af6310";
libraryHaskellDepends = [
accelerate
base
lens
linear
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/linear-accelerate/";
description = "Instances to use linear vector spaces on accelerate backends";
license = stdenv.lib.licenses.bsd3;

}) {};
"linked-list-with-iterator" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "linked-list-with-iterator";
version = "0.1.1.0";
sha256 = "c6ae37cc9d123afcb92f28fef9c5dae6d3713489bdf7f73ac9af420bb3f11b89";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/CindyLinz/Haskell-linked-list-with-iterator#readme";
description = "A pure linked list which is mutable through iterators";
license = stdenv.lib.licenses.bsd3;

}) {};
"linux-file-extents" = callPackage
({
  mkDerivation
, base
, stdenv
, unix
}:
mkDerivation {

pname = "linux-file-extents";
version = "0.2.0.0";
sha256 = "6c7cd9e700f666f774736d31a0e6aa7bfe9bd1e075c11eed701ba95095fd9bd0";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/redneb/linux-file-extents";
description = "Retrieve file fragmentation information under Linux";
license = stdenv.lib.licenses.bsd3;

}) {};
"linux-namespaces" = callPackage
({
  mkDerivation
, base
, stdenv
, unix
}:
mkDerivation {

pname = "linux-namespaces";
version = "0.1.2.0";
sha256 = "585c69130dfcc499cfba00385ae7facc8ab9f2c26bdf746a6e25fc96d3b5f67b";
libraryHaskellDepends = [
base
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/redneb/hs-linux-namespaces";
description = "Create new or enter an existing linux namespaces";
license = stdenv.lib.licenses.bsd3;

}) {};
"list-fusion-probe" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "list-fusion-probe";
version = "0.1.0.6";
sha256 = "7682145460eb6a18406743e74710acbefda2b836e82f73a8d46aab48d5baa6b1";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "testing list fusion for success";
license = stdenv.lib.licenses.bsd3;

}) {};
"list-prompt" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, data-default
, stdenv
, stm
, terminal-size
, vty
}:
mkDerivation {

pname = "list-prompt";
version = "0.1.1.0";
sha256 = "c7323c7a802940deba1a7be46265fd8c01f548174d5f08923a607e1730ca4dee";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-terminal
base
data-default
stm
terminal-size
vty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yamadapc/list-prompt.git";
description = "A simple list prompt UI for the terminal";
license = stdenv.lib.licenses.gpl2;

}) {};
"list-t" = callPackage
({
  mkDerivation
, base
, base-prelude
, mmorph
, monad-control
, mtl
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "list-t";
version = "1";
sha256 = "519a68ce096452934a0d334e0081064139f08aaa0e1e2f81a627b16c28e88c15";
libraryHaskellDepends = [
base
base-prelude
mmorph
monad-control
mtl
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/list-t";
description = "ListT done right";
license = stdenv.lib.licenses.mit;

}) {};
"lmdb" = callPackage
({
  mkDerivation
, array
, base
, lmdb
, stdenv
}:
mkDerivation {

pname = "lmdb";
version = "0.2.5";
sha256 = "80552856211cdce06b808685d621bdd9c33a5ac5540a4dafe120c6b20c901c7d";
libraryHaskellDepends = [
array
base
];
librarySystemDepends = [
lmdb
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/dmbarbour/haskell-lmdb";
description = "Lightning MDB bindings";
license = stdenv.lib.licenses.bsd2;

}) {inherit (pkgs) lmdb;};
"loch-th" = callPackage
({
  mkDerivation
, base
, pretty
, stdenv
, template-haskell
}:
mkDerivation {

pname = "loch-th";
version = "0.2.1";
sha256 = "77541dcb8fb0ae2c7984fc704e53635dbec83974a172611339941bfc9f96d9cd";
libraryHaskellDepends = [
base
pretty
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/liskin/loch-th";
description = "Support for precise error locations in source files (Template Haskell version)";
license = stdenv.lib.licenses.bsd3;

}) {};
"log" = callPackage
({
  mkDerivation
, base
, log-base
, log-elasticsearch
, log-postgres
, stdenv
}:
mkDerivation {

pname = "log";
version = "0.7";
sha256 = "67daea67ce76d9838f2cb853f198e891d853d705405ff3806ce46fdf2376e51b";
revision = "1";
editedCabalFile = "070i5xqgg6k09i8lsn0gbyh4j86wf6fd9x8fzvzyrhwbmz32s875";
libraryHaskellDepends = [
base
log-base
log-elasticsearch
log-postgres
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/scrive/log";
description = "Structured logging solution with multiple backends";
license = stdenv.lib.licenses.bsd3;

}) {};
"log-base" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, bytestring
, deepseq
, exceptions
, monad-control
, monad-time
, mtl
, semigroups
, stdenv
, stm
, text
, time
, transformers-base
, unordered-containers
}:
mkDerivation {

pname = "log-base";
version = "0.7";
sha256 = "ba961838e19cccb5d84a052ba75acbd7320119dda482a4fa230346743c8a8c07";
libraryHaskellDepends = [
aeson
aeson-pretty
base
bytestring
deepseq
exceptions
monad-control
monad-time
mtl
semigroups
stm
text
time
transformers-base
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/scrive/log";
description = "Structured logging solution (base package)";
license = stdenv.lib.licenses.bsd3;

}) {};
"log-domain" = callPackage
({
  mkDerivation
, base
, binary
, bytes
, cereal
, comonad
, deepseq
, distributive
, hashable
, safecopy
, semigroupoids
, semigroups
, stdenv
, vector
}:
mkDerivation {

pname = "log-domain";
version = "0.11";
sha256 = "4750cd5b2b9b6317493c39c264f7a1fe68f50f8ef30ac1e1c6c42c35b78242cb";
libraryHaskellDepends = [
base
binary
bytes
cereal
comonad
deepseq
distributive
hashable
safecopy
semigroupoids
semigroups
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/log-domain/";
description = "Log-domain arithmetic";
license = stdenv.lib.licenses.bsd3;

}) {};
"log-elasticsearch" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, base64-bytestring
, bloodhound
, bytestring
, deepseq
, http-client
, log-base
, semigroups
, stdenv
, text
, text-show
, time
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "log-elasticsearch";
version = "0.7";
sha256 = "bf2326aa0c54972452543973cec3f03f68c6d0c6f9aed285696425da24122bb7";
revision = "1";
editedCabalFile = "0ddiwm479a0l8mrr73ipl8db0valpfx2dppxd4w1pilbj1brzgdj";
libraryHaskellDepends = [
aeson
aeson-pretty
base
base64-bytestring
bloodhound
bytestring
deepseq
http-client
log-base
semigroups
text
text-show
time
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/scrive/log";
description = "Structured logging solution (Elasticsearch back end)";
license = stdenv.lib.licenses.bsd3;

}) {};
"log-postgres" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, base64-bytestring
, bytestring
, deepseq
, hpqtypes
, http-client
, lifted-base
, log-base
, mtl
, semigroups
, split
, stdenv
, text
, text-show
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "log-postgres";
version = "0.7";
sha256 = "33744eff195af018d2cf9fa2ce6617ce3cf5242cf478fea776e4a9db7a74f963";
libraryHaskellDepends = [
aeson
aeson-pretty
base
base64-bytestring
bytestring
deepseq
hpqtypes
http-client
lifted-base
log-base
mtl
semigroups
split
text
text-show
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/scrive/log";
description = "Structured logging solution (PostgreSQL back end)";
license = stdenv.lib.licenses.bsd3;

}) {};
"logfloat" = callPackage
({
  mkDerivation
, array
, base
, stdenv
}:
mkDerivation {

pname = "logfloat";
version = "0.13.3.3";
sha256 = "f774bd71d82ae053046ab602aa451ce4f65440d5c634dc8d950ae87f53527f82";
libraryHaskellDepends = [
array
base
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "Log-domain floating point numbers";
license = stdenv.lib.licenses.bsd3;

}) {};
"logger-thread" = callPackage
({
  mkDerivation
, base
, fast-logger
, protolude
, safe-exceptions
, stdenv
, stm
, text
, time
}:
mkDerivation {

pname = "logger-thread";
version = "0.1.0.2";
sha256 = "ac0a54001a69cff6f975209c4d9d399fb58ef59bb0ad6ac742c5ffedeac04a2a";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
fast-logger
protolude
safe-exceptions
stm
text
time
];
executableHaskellDepends = [
base
protolude
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/joe9/logger-thread#readme";
description = "Run FastLogger in a thread and direct all queued messages to it";
license = stdenv.lib.licenses.bsd3;

}) {};
"logging-effect" = callPackage
({
  mkDerivation
, async
, base
, exceptions
, free
, monad-control
, mtl
, semigroups
, stdenv
, stm
, stm-delay
, text
, time
, transformers
, transformers-base
, wl-pprint-text
}:
mkDerivation {

pname = "logging-effect";
version = "1.1.3";
sha256 = "0eaa34ec9174acc7cbc4c806b44f4b616430658bf215c086b3ee29877cbe7914";
libraryHaskellDepends = [
async
base
exceptions
free
monad-control
mtl
semigroups
stm
stm-delay
text
time
transformers
transformers-base
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ocharles/logging-effect";
description = "A mtl-style monad transformer for general purpose & compositional logging";
license = stdenv.lib.licenses.bsd3;

}) {};
"logging-facade" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "logging-facade";
version = "0.1.1";
sha256 = "60f9f29d54e9756825400f281101872ed87de55271e87571068838a7b3d98da2";
revision = "1";
editedCabalFile = "1cm2q8l033w1bwi30mzsz0knr8pqxcb4f5c38594rdm96r9h12gw";
libraryHaskellDepends = [
base
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
description = "Simple logging abstraction that allows multiple back-ends";
license = stdenv.lib.licenses.mit;

}) {};
"logict" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "logict";
version = "0.6.0.2";
sha256 = "1182b68e8d00279460c7fb9b8284bf129805c07754c678b2a8de5a6d768e161e";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~dolio/";
description = "A backtracking logic-programming monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"loop" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "loop";
version = "0.3.0";
sha256 = "92962010bdab28cc0092dd3fe42819d6f215c717dd10d9349626d92a0d0b3ecf";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nh2/loop";
description = "Fast loops (for when GHC can't optimize forM_)";
license = stdenv.lib.licenses.mit;

}) {};
"lrucache" = callPackage
({
  mkDerivation
, base
, containers
, contravariant
, stdenv
}:
mkDerivation {

pname = "lrucache";
version = "1.2.0.0";
sha256 = "5f17a9e026e198152d13830a0eae0df21be437c238a3f157f7c188fe27a37616";
libraryHaskellDepends = [
base
containers
contravariant
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/chowells79/lrucache";
description = "a simple, pure LRU cache";
license = stdenv.lib.licenses.bsd3;

}) {};
"lrucaching" = callPackage
({
  mkDerivation
, base
, base-compat
, deepseq
, hashable
, psqueues
, stdenv
, vector
}:
mkDerivation {

pname = "lrucaching";
version = "0.3.1";
sha256 = "2f287ea60d721f58474dc105dec953f98ce9a41dd1897647ef68a48605b132d6";
revision = "1";
editedCabalFile = "0q7hzsc7l64x9gdcxfims25nzqqwammwj91wqv4qjwahgkasmkyn";
libraryHaskellDepends = [
base
base-compat
deepseq
hashable
psqueues
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cocreature/lrucaching#readme";
description = "LRU cache";
license = stdenv.lib.licenses.bsd3;

}) {};
"lucid" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, containers
, hashable
, mmorph
, mtl
, stdenv
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "lucid";
version = "2.9.7";
sha256 = "a087af27ad196e3a41ccb6b954a12d384589a14b2ac55614e6a27817f65e0608";
libraryHaskellDepends = [
base
blaze-builder
bytestring
containers
hashable
mmorph
mtl
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chrisdone/lucid";
description = "Clear to write, read and edit DSL for HTML";
license = stdenv.lib.licenses.bsd3;

}) {};
"lucid-svg" = callPackage
({
  mkDerivation
, base
, blaze-builder
, lucid
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "lucid-svg";
version = "0.7.0.0";
sha256 = "7544bbdbc55359d796221db98e9c28e18ca6c530e726a69ba7409dda547d1f6b";
libraryHaskellDepends = [
base
blaze-builder
lucid
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jeffreyrosenbluth/lucid-svg.git";
description = "DSL for SVG using lucid for HTML";
license = stdenv.lib.licenses.bsd3;

}) {};
"lzma-conduit" = callPackage
({
  mkDerivation
, base
, bindings-DSL
, bytestring
, conduit
, lzma
, resourcet
, stdenv
, transformers
}:
mkDerivation {

pname = "lzma-conduit";
version = "1.1.3.1";
sha256 = "2c181aece2c81c9408271e805a00f2833c5ca79f2c7cb55e3a8b6cb0388d612d";
libraryHaskellDepends = [
base
bindings-DSL
bytestring
conduit
resourcet
transformers
];
librarySystemDepends = [
lzma
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/alphaHeavy/lzma-conduit";
description = "Conduit interface for lzma/xz compression";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) lzma;};
"machines" = callPackage
({
  mkDerivation
, adjunctions
, base
, comonad
, containers
, distributive
, free
, mtl
, pointed
, profunctors
, semigroupoids
, semigroups
, stdenv
, transformers
, transformers-compat
, void
}:
mkDerivation {

pname = "machines";
version = "0.6.1";
sha256 = "a58b84d51a62d3944ac4706ba9163e5b34e27c4b241ab7caa4328b2ad189dc56";
libraryHaskellDepends = [
adjunctions
base
comonad
containers
distributive
free
mtl
pointed
profunctors
semigroupoids
semigroups
transformers
transformers-compat
void
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/machines/";
description = "Networked stream transducers";
license = stdenv.lib.licenses.bsd3;

}) {};
"machines-binary" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, machines
, stdenv
}:
mkDerivation {

pname = "machines-binary";
version = "0.3.0.3";
sha256 = "60ff456d658ea1a427f32ee5ae1c726e2e7703942bd33edf28b457d753c20652";
libraryHaskellDepends = [
base
binary
bytestring
machines
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aloiscochard/machines-binary";
description = "Binary utilities for the machines library";
license = stdenv.lib.licenses.asl20;

}) {};
"machines-directory" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, machines
, machines-io
, stdenv
, transformers
}:
mkDerivation {

pname = "machines-directory";
version = "0.2.0.10";
sha256 = "2ee750f86d1658635095c35e94799d06a921e641bf4daa55676fd06e8e9a98a4";
libraryHaskellDepends = [
base
directory
filepath
machines
machines-io
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aloiscochard/machines-directory";
description = "Directory (system) utilities for the machines library";
license = stdenv.lib.licenses.asl20;

}) {};
"machines-io" = callPackage
({
  mkDerivation
, base
, bytestring
, chunked-data
, machines
, stdenv
, transformers
}:
mkDerivation {

pname = "machines-io";
version = "0.2.0.13";
sha256 = "4d579d5e9e94fafcfca91322734263498999d2e2af45c40ff0d1db78f4a8f5d4";
libraryHaskellDepends = [
base
bytestring
chunked-data
machines
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aloiscochard/machines-io";
description = "IO utilities for the machines library";
license = stdenv.lib.licenses.asl20;

}) {};
"machines-process" = callPackage
({
  mkDerivation
, base
, chunked-data
, machines
, machines-io
, process
, stdenv
}:
mkDerivation {

pname = "machines-process";
version = "0.2.0.8";
sha256 = "7a159328a70756acc36940a3f3f5430187ecf7a4d4f01b2b92b119d3e14ffa2d";
libraryHaskellDepends = [
base
chunked-data
machines
machines-io
process
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aloiscochard/machines-process";
description = "Process (system) utilities for the machines library";
license = stdenv.lib.licenses.asl20;

}) {};
"magic" = callPackage
({
  mkDerivation
, base
, file
, stdenv
}:
mkDerivation {

pname = "magic";
version = "1.1";
sha256 = "b21c3b69f57b64199c1d7be0ac8ea1d02d698be59943058f6a2d642ea57ce082";
libraryHaskellDepends = [
base
];
librarySystemDepends = [
file
];
doHaddock = false;
doCheck = false;
description = "Interface to C file/magic library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) file;};
"mainland-pretty" = callPackage
({
  mkDerivation
, base
, containers
, srcloc
, stdenv
, text
}:
mkDerivation {

pname = "mainland-pretty";
version = "0.4.1.4";
sha256 = "b6526b119dd84e006740c69ab794d0a43b855fea29bb2a3a8ed2568b995faf9c";
libraryHaskellDepends = [
base
containers
srcloc
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.cs.drexel.edu/~mainland/";
description = "Pretty printing designed for printing source code";
license = stdenv.lib.licenses.bsd3;

}) {};
"makefile" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "makefile";
version = "0.1.1.0";
sha256 = "3ccab1e08b9920e4390b9dca8504e4ba621b693e0fa25b4c3dd68042373a325e";
libraryHaskellDepends = [
attoparsec
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/nmattia/mask";
description = "Simple Makefile parser";
license = stdenv.lib.licenses.mit;

}) {};
"managed" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "managed";
version = "1.0.5";
sha256 = "b9c99943dadaa730ea3d889a09c3ca0efa1b7728f2bb0854815d49f40d4772e0";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
description = "A monad for managed values";
license = stdenv.lib.licenses.bsd3;

}) {};
"mandrill" = callPackage
({
  mkDerivation
, aeson
, base
, base64-bytestring
, blaze-html
, bytestring
, containers
, email-validate
, http-client
, http-client-tls
, http-types
, lens
, mtl
, old-locale
, QuickCheck
, stdenv
, text
, time
, unordered-containers
}:
mkDerivation {

pname = "mandrill";
version = "0.5.3.1";
sha256 = "a559a166232461520f4fbb0637db9f922a82fdff819e9e35ee7b0941a7c0c315";
libraryHaskellDepends = [
aeson
base
base64-bytestring
blaze-html
bytestring
containers
email-validate
http-client
http-client-tls
http-types
lens
mtl
old-locale
QuickCheck
text
time
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Library for interfacing with the Mandrill JSON API";
license = stdenv.lib.licenses.mit;

}) {};
"markdown" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-html
, blaze-markup
, conduit
, conduit-extra
, containers
, data-default
, stdenv
, text
, transformers
, xml-conduit
, xml-types
, xss-sanitize
}:
mkDerivation {

pname = "markdown";
version = "0.1.16";
sha256 = "08b0b352e208316ddc99c6f161704c8ecaf248c2e51f506900e344c93757ed85";
libraryHaskellDepends = [
attoparsec
base
blaze-html
blaze-markup
conduit
conduit-extra
containers
data-default
text
transformers
xml-conduit
xml-types
xss-sanitize
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/markdown";
description = "Convert Markdown to HTML, with XSS protection";
license = stdenv.lib.licenses.bsd3;

}) {};
"markdown-unlit" = callPackage
({
  mkDerivation
, base
, base-compat
, stdenv
}:
mkDerivation {

pname = "markdown-unlit";
version = "0.4.0";
sha256 = "7c650cae7326a687265274d9e73c74ab2f7e570d7928ce9f47add9439d5b42ce";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
base-compat
];
executableHaskellDepends = [
base
base-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sol/markdown-unlit#readme";
description = "Literate Haskell support for Markdown";
license = stdenv.lib.licenses.mit;

}) {};
"markup" = callPackage
({
  mkDerivation
, base
, blaze-html
, blaze-markup
, clay
, comonad
, lucid
, mmorph
, monad-control
, monad-logger
, mtl
, path-extra
, resourcet
, stdenv
, text
, transformers-base
, urlpath
}:
mkDerivation {

pname = "markup";
version = "3.1.0";
sha256 = "c7510643483861dafc9c9a8c41ceaa2f02f85870930cf4563899c49307780d3d";
revision = "1";
editedCabalFile = "1ax30n6qyy7kjcz2qyd6idaif1hxxz4n37p6lpfn5bnvg585ddmg";
libraryHaskellDepends = [
base
blaze-html
blaze-markup
clay
comonad
lucid
mmorph
monad-control
monad-logger
mtl
path-extra
resourcet
text
transformers-base
urlpath
];
doHaddock = false;
doCheck = false;
description = "Abstraction for HTML-embedded content";
license = stdenv.lib.licenses.mit;

}) {};
"math-functions" = callPackage
({
  mkDerivation
, base
, deepseq
, primitive
, stdenv
, vector
, vector-th-unbox
}:
mkDerivation {

pname = "math-functions";
version = "0.2.1.0";
sha256 = "f71b5598de453546396a3f5f7f6ce877fffcc996639b7569d8628cae97da65eb";
libraryHaskellDepends = [
base
deepseq
primitive
vector
vector-th-unbox
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/math-functions";
description = "Special functions and Chebyshev polynomials";
license = stdenv.lib.licenses.bsd3;

}) {};
"mathexpr" = callPackage
({
  mkDerivation
, base
, data-default-class
, stdenv
}:
mkDerivation {

pname = "mathexpr";
version = "0.3.0.0";
sha256 = "23c30ae0c962a7858d57bed320be6421baeb82fa795260e1eea0bc8fcc4871ad";
libraryHaskellDepends = [
base
data-default-class
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mdibaiee/mathexpr";
description = "Parse and evaluate math expressions with variables and functions";
license = stdenv.lib.licenses.gpl3;

}) {};
"matrices" = callPackage
({
  mkDerivation
, base
, deepseq
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "matrices";
version = "0.4.4";
sha256 = "50f110321d71db257adfbe0f126542e936148ee473679edc1c2bf37c60d539ee";
libraryHaskellDepends = [
base
deepseq
primitive
vector
];
doHaddock = false;
doCheck = false;
description = "native matrix based on vector";
license = stdenv.lib.licenses.bsd3;

}) {};
"matrix" = callPackage
({
  mkDerivation
, base
, deepseq
, loop
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "matrix";
version = "0.3.5.0";
sha256 = "7a3d41c0f66212360057b29ae9f81779c8da9f71b040ad7676699af7e7ca35b5";
libraryHaskellDepends = [
base
deepseq
loop
primitive
vector
];
doHaddock = false;
doCheck = false;
description = "A native implementation of matrix operations";
license = stdenv.lib.licenses.bsd3;

}) {};
"maximal-cliques" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, vector
}:
mkDerivation {

pname = "maximal-cliques";
version = "0.1.1";
sha256 = "709d05c753c7d2d7466ade515da0255fc79241432d0118b3182dd3b2def475e9";
libraryHaskellDepends = [
base
containers
vector
];
doHaddock = false;
doCheck = false;
description = "Enumerate all maximal cliques of a graph";
license = stdenv.lib.licenses.bsd3;

}) {};
"mbox" = callPackage
({
  mkDerivation
, base
, safe
, stdenv
, text
, time
, time-locale-compat
}:
mkDerivation {

pname = "mbox";
version = "0.3.3";
sha256 = "080a3eafa24af47d5bf042871d7ec0322ddb129e50d6f131555925a3842f19e5";
revision = "1";
editedCabalFile = "00ywh3nqbbwhiyzb5cclzldzdss6dl998pydc02k6r3q3x1vq92y";
libraryHaskellDepends = [
base
safe
text
time
time-locale-compat
];
doHaddock = false;
doCheck = false;
description = "Read and write standard mailbox files";
license = stdenv.lib.licenses.bsd3;

}) {};
"mcmc-types" = callPackage
({
  mkDerivation
, base
, containers
, mwc-probability
, stdenv
, transformers
}:
mkDerivation {

pname = "mcmc-types";
version = "1.0.3";
sha256 = "3c4b25030b05567694ddc313ca808a32133ad5433b4d89837e1ed00bbfcefc6e";
libraryHaskellDepends = [
base
containers
mwc-probability
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jtobin/mcmc-types";
description = "Common types for sampling";
license = stdenv.lib.licenses.mit;

}) {};
"median-stream" = callPackage
({
  mkDerivation
, base
, heap
, stdenv
}:
mkDerivation {

pname = "median-stream";
version = "0.7.0.0";
sha256 = "e92fc44be8189dafe9190aad225462780f26d0b1fe1823376342329db6c71f3d";
libraryHaskellDepends = [
base
heap
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/caneroj1/median-stream#readme";
description = "Constant-time queries for the median of a stream of numeric data";
license = stdenv.lib.licenses.bsd3;

}) {};
"mega-sdist" = callPackage
({
  mkDerivation
, base
, classy-prelude-conduit
, conduit-extra
, directory
, filepath
, http-conduit
, stdenv
, tar-conduit
, typed-process
, yaml
}:
mkDerivation {

pname = "mega-sdist";
version = "0.3.0";
sha256 = "afbfc37f2ebbf8bbe880297f784e81a63886dc14aacb2ed921d6c63c66abbf81";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
classy-prelude-conduit
conduit-extra
directory
filepath
http-conduit
tar-conduit
typed-process
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/mega-sdist";
description = "Handles uploading to Hackage from mega repos";
license = stdenv.lib.licenses.mit;

}) {};
"megaparsec" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, deepseq
, exceptions
, mtl
, QuickCheck
, scientific
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "megaparsec";
version = "5.2.0";
sha256 = "c250a7ae2365e96df8f1061d28c7d04e5a1695395ea87055f36e3f3a57e90408";
revision = "1";
editedCabalFile = "1ah5r6jjz187l5g1mnzajsyiac5wdc8ijqwkapl0wa35mj3ybakg";
libraryHaskellDepends = [
base
bytestring
containers
deepseq
exceptions
mtl
QuickCheck
scientific
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/megaparsec";
description = "Monadic parser combinators";
license = stdenv.lib.licenses.bsd2;

}) {};
"memory" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "memory";
version = "0.14.1";
sha256 = "1cd87a34ca28ab5fbb9fbeb82f66cdbabf4e276e10caf7a64b798bf42edc0825";
revision = "1";
editedCabalFile = "0hkziz0vm0i5d3vrcqvw9lvmsrgzarzdy0br4rb481nfif0b3lr9";
libraryHaskellDepends = [
base
bytestring
deepseq
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-memory";
description = "memory and related abstraction stuff";
license = stdenv.lib.licenses.bsd3;

}) {};
"mersenne-random" = callPackage
({
  mkDerivation
, base
, old-time
, stdenv
}:
mkDerivation {

pname = "mersenne-random";
version = "1.0.0.1";
sha256 = "bcee8af246b6967b0c4326f3eec57611818dacc729b7c6bd42e1d363f9f878a4";
libraryHaskellDepends = [
base
old-time
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~dons/code/mersenne-random";
description = "Generate high quality pseudorandom numbers using a SIMD Fast Mersenne Twister";
license = stdenv.lib.licenses.bsd3;

}) {};
"mersenne-random-pure64" = callPackage
({
  mkDerivation
, base
, random
, stdenv
, time
}:
mkDerivation {

pname = "mersenne-random-pure64";
version = "0.2.2.0";
sha256 = "ef1400ddc1ddafb0b98d4331a58bdbe3b5209a81579e17f85f180731a96d75d1";
libraryHaskellDepends = [
base
random
time
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~dons/code/mersenne-random-pure64/";
description = "Generate high quality pseudorandom numbers purely using a Mersenne Twister";
license = stdenv.lib.licenses.bsd3;

}) {};
"messagepack" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, containers
, deepseq
, stdenv
}:
mkDerivation {

pname = "messagepack";
version = "0.5.4";
sha256 = "939590c05d5b0831b3b4796f2e1a070e290982c92b2009f2aa1ef5f4b05b5d7c";
revision = "1";
editedCabalFile = "0p13in70gvxl8d8hjl1dcxczfpcfyffy2lxbdy1d21h742ks1zjb";
libraryHaskellDepends = [
base
bytestring
cereal
containers
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rodrigosetti/messagepack";
description = "Serialize instance for Message Pack Object";
license = stdenv.lib.licenses.mit;

}) {};
"messagepack-rpc" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, containers
, messagepack
, network-simple
, stdenv
}:
mkDerivation {

pname = "messagepack-rpc";
version = "0.5.1";
sha256 = "aa7960644668284e6add36e5c305af2c6d3ebf0a9a2c3fcd62529554a049a0bc";
revision = "1";
editedCabalFile = "05p6naaxswmsc3w7k67ydzzwyn60ymp0jbrc0f66p2sajvlnviax";
libraryHaskellDepends = [
base
bytestring
cereal
containers
messagepack
network-simple
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/rodrigosetti/messagepack-rpc";
description = "Message Pack RPC over TCP";
license = stdenv.lib.licenses.mit;

}) {};
"metrics" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, bytestring
, containers
, lens
, mwc-random
, primitive
, stdenv
, text
, time
, transformers
, transformers-base
, unix-compat
, unordered-containers
, vector
, vector-algorithms
}:
mkDerivation {

pname = "metrics";
version = "0.4.0.1";
sha256 = "db18eddaa43b81c33c925bf467010e5b9088d55fe5d7b364466a3459543cc7e7";
libraryHaskellDepends = [
ansi-terminal
base
bytestring
containers
lens
mwc-random
primitive
text
time
transformers
transformers-base
unix-compat
unordered-containers
vector
vector-algorithms
];
doHaddock = false;
doCheck = false;
description = "High-performance application metric tracking";
license = stdenv.lib.licenses.mit;

}) {};
"mfsolve" = callPackage
({
  mkDerivation
, base
, hashable
, mtl
, mtl-compat
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "mfsolve";
version = "0.3.2.0";
sha256 = "232167442f9c0f326b7514b362d4521b3937b716fd4155c65060d34430aa42f1";
libraryHaskellDepends = [
base
hashable
mtl
mtl-compat
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Equation solver and calculator à la metafont";
license = stdenv.lib.licenses.bsd3;

}) {};
"microformats2-parser" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, aeson-qq
, attoparsec
, base
, base-compat
, blaze-html
, blaze-markup
, bytestring
, containers
, data-default
, either
, errors
, html-conduit
, lens-aeson
, network
, network-uri
, options
, pcre-heavy
, safe
, scotty
, stdenv
, streaming-commons
, tagsoup
, text
, time
, transformers
, unordered-containers
, vector
, wai-extra
, warp
, xml-lens
, xss-sanitize
}:
mkDerivation {

pname = "microformats2-parser";
version = "1.0.1.6";
sha256 = "9937ae3658bf1bfbb34f03cc8f0fcd1c236f72cd52f5845cfbd19f02a3ed33f8";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
aeson-qq
attoparsec
base
base-compat
blaze-markup
bytestring
containers
data-default
either
errors
html-conduit
lens-aeson
network-uri
pcre-heavy
safe
tagsoup
text
time
transformers
unordered-containers
vector
xml-lens
xss-sanitize
];
executableHaskellDepends = [
aeson
aeson-pretty
base
base-compat
blaze-html
blaze-markup
data-default
network
network-uri
options
scotty
streaming-commons
text
wai-extra
warp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/myfreeweb/microformats2-parser";
description = "A Microformats 2 parser";
license = stdenv.lib.licenses.publicDomain;

}) {};
"microlens" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "microlens";
version = "0.4.7.0";
sha256 = "c149874a5cf038c1dde51b79b22733116817619e5ed11c7787aadb9d8ea31e26";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/microlens";
description = "A tiny lens library with no dependencies. If you're writing an app, you probably want microlens-platform, not this.";
license = stdenv.lib.licenses.bsd3;

}) {};
"microlens-aeson" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, microlens
, scientific
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "microlens-aeson";
version = "2.2.0";
sha256 = "c25b8fefcd321f348c5948a0f65d30ecad4070e3f1f7720bacb022b57c6386d4";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
microlens
scientific
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/fosskers/microlens-aeson/";
description = "Law-abiding lenses for Aeson, using microlens";
license = stdenv.lib.licenses.mit;

}) {};
"microlens-contra" = callPackage
({
  mkDerivation
, base
, contravariant
, microlens
, stdenv
}:
mkDerivation {

pname = "microlens-contra";
version = "0.1.0.1";
sha256 = "4983f19d37168a7cb862f76a22e8a43156df89c3c58b8206e2c84b2262c7f595";
libraryHaskellDepends = [
base
contravariant
microlens
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/microlens";
description = "True folds and getters for microlens";
license = stdenv.lib.licenses.bsd3;

}) {};
"microlens-ghc" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, microlens
, stdenv
, transformers
}:
mkDerivation {

pname = "microlens-ghc";
version = "0.4.7.0";
sha256 = "ef1f68645d0f62e9f108852dd0637109625703175eb571c7f183aa3244bf0cdf";
libraryHaskellDepends = [
array
base
bytestring
containers
microlens
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/microlens";
description = "microlens + array, bytestring, containers, transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"microlens-mtl" = callPackage
({
  mkDerivation
, base
, microlens
, mtl
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "microlens-mtl";
version = "0.1.10.0";
sha256 = "b1dec4f000f324ae3e1915f683577bd53af218a68d07b0acf437def74e14b39d";
libraryHaskellDepends = [
base
microlens
mtl
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/microlens";
description = "microlens support for Reader/Writer/State from mtl";
license = stdenv.lib.licenses.bsd3;

}) {};
"microlens-platform" = callPackage
({
  mkDerivation
, base
, hashable
, microlens
, microlens-ghc
, microlens-mtl
, microlens-th
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "microlens-platform";
version = "0.3.7.1";
sha256 = "e242c6f454305e5a310f7f3b4e8b3ee00158fe7160321e27a56b47ffaa2c4493";
libraryHaskellDepends = [
base
hashable
microlens
microlens-ghc
microlens-mtl
microlens-th
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/microlens";
description = "Feature-complete microlens";
license = stdenv.lib.licenses.bsd3;

}) {};
"microlens-th" = callPackage
({
  mkDerivation
, base
, containers
, microlens
, stdenv
, template-haskell
}:
mkDerivation {

pname = "microlens-th";
version = "0.4.1.1";
sha256 = "5b1a400db8577805d80fb83963ef2a41cf43023b38300fdeaacb01a4fb526a7b";
libraryHaskellDepends = [
base
containers
microlens
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/microlens";
description = "Automatic generation of record lenses for microlens";
license = stdenv.lib.licenses.bsd3;

}) {};
"mighty-metropolis" = callPackage
({
  mkDerivation
, base
, kan-extensions
, mcmc-types
, mwc-probability
, pipes
, primitive
, stdenv
, transformers
}:
mkDerivation {

pname = "mighty-metropolis";
version = "1.2.0";
sha256 = "8d3c0b4b65024846291c4f547c45e5c04f587aefd0e8d041d54679bb519871c0";
libraryHaskellDepends = [
base
kan-extensions
mcmc-types
mwc-probability
pipes
primitive
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jtobin/mighty-metropolis";
description = "The Metropolis algorithm";
license = stdenv.lib.licenses.mit;

}) {};
"mime-mail" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, blaze-builder
, bytestring
, filepath
, process
, random
, stdenv
, text
}:
mkDerivation {

pname = "mime-mail";
version = "0.4.13";
sha256 = "a089fd837b77b75eb36dc1749da422820d2658d0145a378e6de32f3b30b7a440";
libraryHaskellDepends = [
base
base64-bytestring
blaze-builder
bytestring
filepath
process
random
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/mime-mail";
description = "Compose MIME email messages";
license = stdenv.lib.licenses.mit;

}) {};
"mime-mail-ses" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, byteable
, bytestring
, conduit
, cryptohash
, http-client
, http-conduit
, http-types
, mime-mail
, old-locale
, stdenv
, text
, time
, transformers
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "mime-mail-ses";
version = "0.3.2.3";
sha256 = "03f977386c2cdf122097a0327509e4151eb10e320d8cec1791d259aa067f4d4c";
libraryHaskellDepends = [
base
base64-bytestring
byteable
bytestring
conduit
cryptohash
http-client
http-conduit
http-types
mime-mail
old-locale
text
time
transformers
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/mime-mail";
description = "Send mime-mail messages via Amazon SES";
license = stdenv.lib.licenses.mit;

}) {};
"mime-types" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, stdenv
, text
}:
mkDerivation {

pname = "mime-types";
version = "0.1.0.7";
sha256 = "83164a24963a7ef37543349df095155b30116c208e602a159a5cd3722f66e9b9";
libraryHaskellDepends = [
base
bytestring
containers
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/wai";
description = "Basic mime-type handling types and functions";
license = stdenv.lib.licenses.mit;

}) {};
"mintty" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "mintty";
version = "0.1";
sha256 = "956b346c89b12e683b957bf45eb0d09cae121fd247916de0386687f713ca0865";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RyanGlScott/mintty";
description = "A reliable way to detect the presence of a MinTTY console on Windows";
license = stdenv.lib.licenses.bsd3;

}) {};
"misfortune" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, directory
, filepath
, knob
, monad-loops
, random-fu
, regex-base
, regex-pcre
, semigroups
, stdenv
, text
, utf8-string
, vector
}:
mkDerivation {

pname = "misfortune";
version = "0.1.1.2";
sha256 = "ae4b44215f811e7af6af756c813b9bd6e4161be555f30dd817324f8d1ffe2349";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
cereal
directory
filepath
knob
random-fu
semigroups
text
utf8-string
vector
];
executableHaskellDepends = [
monad-loops
regex-base
regex-pcre
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/misfortune";
description = "fortune-mod clone";
license = stdenv.lib.licenses.publicDomain;

}) {};
"missing-foreign" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "missing-foreign";
version = "0.1.1";
sha256 = "9e1b36cdb8626d848386c1c4d54f3b9f80b3458398aa6a4d499266b5ecbcc885";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Convenience functions for FFI work";
license = stdenv.lib.licenses.bsd3;

}) {};
"mmap" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "mmap";
version = "0.5.9";
sha256 = "58fcbb04e1cb8e7c36c05823b02dce2faaa989c53d745a7f36192de2fc98b5f8";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "Memory mapped files for POSIX and Windows";
license = stdenv.lib.licenses.bsd3;

}) {};
"mmorph" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "mmorph";
version = "1.0.9";
sha256 = "e1f27d3881b254e2a87ffb21f33e332404abb180361f9d29092a85e321554563";
revision = "1";
editedCabalFile = "1xxf78qi08qsis2q785s0ra29wjxnxw8pyns0dsqp4a6cybd3mjd";
libraryHaskellDepends = [
base
mtl
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
description = "Monad morphisms";
license = stdenv.lib.licenses.bsd3;

}) {};
"mockery" = callPackage
({
  mkDerivation
, base
, base-compat
, bytestring
, directory
, filepath
, logging-facade
, stdenv
, temporary
}:
mkDerivation {

pname = "mockery";
version = "0.3.4";
sha256 = "30fe35f4f9cfd1b85a4ccc514a25ef066148364886e53538d50e5e760a582938";
libraryHaskellDepends = [
base
base-compat
bytestring
directory
filepath
logging-facade
temporary
];
doHaddock = false;
doCheck = false;
description = "Support functions for automated testing";
license = stdenv.lib.licenses.mit;

}) {};
"modify-fasta" = callPackage
({
  mkDerivation
, base
, containers
, fasta
, mtl
, optparse-applicative
, pipes
, pipes-text
, regex-tdfa
, regex-tdfa-text
, semigroups
, split
, stdenv
, text
, text-show
}:
mkDerivation {

pname = "modify-fasta";
version = "0.8.2.3";
sha256 = "dcee07de4f97b10c557cc3a18aee35d75caf8ef65bdc104bcd6785bfabc7465e";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
fasta
regex-tdfa
regex-tdfa-text
split
text
text-show
];
executableHaskellDepends = [
base
containers
fasta
mtl
optparse-applicative
pipes
pipes-text
semigroups
split
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/GregorySchwartz/modify-fasta";
description = "Modify fasta (and CLIP) files in several optional ways";
license = stdenv.lib.licenses.gpl3;

}) {};
"monad-control" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
, transformers
, transformers-base
, transformers-compat
}:
mkDerivation {

pname = "monad-control";
version = "1.0.1.0";
sha256 = "d4b0209c6cb7006fac618e4d8e3743d908f8b21579d6ff72e9f6e758e24301f4";
libraryHaskellDepends = [
base
stm
transformers
transformers-base
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/basvandijk/monad-control";
description = "Lift control operations, like exception catching, through monad transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-coroutine" = callPackage
({
  mkDerivation
, base
, monad-parallel
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "monad-coroutine";
version = "0.9.0.3";
sha256 = "08aafe8499ef2311a238197b67ec74e5faa8c887a0e24592e38fde37ab64c9e4";
libraryHaskellDepends = [
base
monad-parallel
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://trac.haskell.org/SCC/wiki/monad-coroutine";
description = "Coroutine monad transformer for suspending and resuming monadic computations";
license = "GPL";

}) {};
"monad-extras" = callPackage
({
  mkDerivation
, base
, mmorph
, monad-control
, stdenv
, stm
, transformers
, transformers-base
}:
mkDerivation {

pname = "monad-extras";
version = "0.6.0";
sha256 = "df33d7c51a97d16226b8160d9bc09686cb6f7b7bf5c54557381c6fe4a3c84f2c";
libraryHaskellDepends = [
base
mmorph
monad-control
stm
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jwiegley/monad-extras";
description = "Extra utility functions for working with monads";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-http" = callPackage
({
  mkDerivation
, base
, base-compat
, bytestring
, exceptions
, http-client
, http-client-tls
, http-types
, monad-logger
, monadcryptorandom
, MonadRandom
, mtl
, stdenv
, text
, transformers
, transformers-compat
}:
mkDerivation {

pname = "monad-http";
version = "0.1.0.0";
sha256 = "a333b087835aa4902d0814e76fe4f32a523092fd7b13526aad415160a8317192";
revision = "7";
editedCabalFile = "19qsjwcdg39is6ipwl6hgr42c7gyc7p1cs5f8isxy90hb4xjghrh";
libraryHaskellDepends = [
base
base-compat
bytestring
exceptions
http-client
http-client-tls
http-types
monad-logger
monadcryptorandom
MonadRandom
mtl
text
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/futurice/haskell-monad-http#readme";
description = "A class of monads which can do http requests";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-journal" = callPackage
({
  mkDerivation
, base
, either
, monad-control
, mtl
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "monad-journal";
version = "0.7.2";
sha256 = "72b1a676bd994198544c4861a05b1d1b4f7ae55ea35a837cace539b8d6c69d08";
libraryHaskellDepends = [
base
either
monad-control
mtl
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/phaazon/monad-journal";
description = "Pure logger typeclass and monad transformer";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-logger" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, conduit
, conduit-extra
, exceptions
, fast-logger
, lifted-base
, monad-control
, monad-loops
, mtl
, resourcet
, stdenv
, stm
, stm-chans
, template-haskell
, text
, transformers
, transformers-base
, transformers-compat
}:
mkDerivation {

pname = "monad-logger";
version = "0.3.20.2";
sha256 = "1f004999b282b3895cc0904053befb48b863efc2899a89e93195b4544cc9c737";
libraryHaskellDepends = [
base
blaze-builder
bytestring
conduit
conduit-extra
exceptions
fast-logger
lifted-base
monad-control
monad-loops
mtl
resourcet
stm
stm-chans
template-haskell
text
transformers
transformers-base
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kazu-yamamoto/logger";
description = "A class of monads which can log messages";
license = stdenv.lib.licenses.mit;

}) {};
"monad-logger-json" = callPackage
({
  mkDerivation
, aeson
, base
, monad-logger
, stdenv
, template-haskell
, text
}:
mkDerivation {

pname = "monad-logger-json";
version = "0.1.0.0";
sha256 = "10871c4aef838c01c8fdd7586161367b4d66907a53cbd9737efb717a1041e9aa";
libraryHaskellDepends = [
aeson
base
monad-logger
template-haskell
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/fpco/monad-logger-json";
description = "JSON-friendly Logging APIs";
license = stdenv.lib.licenses.mit;

}) {};
"monad-logger-prefix" = callPackage
({
  mkDerivation
, base
, exceptions
, monad-control
, monad-logger
, mtl
, resourcet
, stdenv
, text
, transformers
, transformers-base
}:
mkDerivation {

pname = "monad-logger-prefix";
version = "0.1.6";
sha256 = "fb7697098223b64ab42e7739eba16eacf80d8eb8a577a5a4dcca9bcec5e94d92";
libraryHaskellDepends = [
base
exceptions
monad-control
monad-logger
mtl
resourcet
text
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sellerlabs/monad-logger-prefix#readme";
description = "Add prefixes to your monad-logger output";
license = stdenv.lib.licenses.asl20;

}) {};
"monad-logger-syslog" = callPackage
({
  mkDerivation
, base
, bytestring
, fast-logger
, hsyslog
, monad-logger
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "monad-logger-syslog";
version = "0.1.3.0";
sha256 = "b35098f5d3a7ea9bcdda886a60b19c404618f36410011d7beaef07ee353383e3";
libraryHaskellDepends = [
base
bytestring
fast-logger
hsyslog
monad-logger
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/monad-logger-syslog";
description = "syslog output for monad-logger";
license = stdenv.lib.licenses.mit;

}) {};
"monad-loops" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "monad-loops";
version = "0.4.3";
sha256 = "7eaaaf6bc43661e9e86e310ff8c56fbea16eb6bf13c31a2e28103138ac164c18";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/monad-loops";
description = "Monadic loops";
license = stdenv.lib.licenses.publicDomain;

}) {};
"monad-metrics" = callPackage
({
  mkDerivation
, base
, clock
, containers
, ekg-core
, microlens
, mtl
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "monad-metrics";
version = "0.1.0.2";
sha256 = "a64e5f3aebe020c0f38892874f74b2b94ad84b319cee2e7ec092c5b2bd842276";
libraryHaskellDepends = [
base
clock
containers
ekg-core
microlens
mtl
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sellerlabs/monad-metrics#readme";
description = "A convenient wrapper around EKG metrics";
license = stdenv.lib.licenses.mit;

}) {};
"monad-par" = callPackage
({
  mkDerivation
, abstract-deque
, abstract-par
, array
, base
, containers
, deepseq
, monad-par-extras
, mtl
, mwc-random
, parallel
, stdenv
}:
mkDerivation {

pname = "monad-par";
version = "0.3.4.8";
sha256 = "f84cdf51908a1c41c3f672be9520a8fdc028ea39d90a25ecfe5a3b223cfeb951";
libraryHaskellDepends = [
abstract-deque
abstract-par
array
base
containers
deepseq
monad-par-extras
mtl
mwc-random
parallel
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/simonmar/monad-par";
description = "A library for parallel programming based on a monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-par-extras" = callPackage
({
  mkDerivation
, abstract-par
, base
, cereal
, deepseq
, mtl
, random
, stdenv
, transformers
}:
mkDerivation {

pname = "monad-par-extras";
version = "0.3.3";
sha256 = "e21e33190bc248afa4ae467287ac37d24037ef3de6050c44fd85b52f4d5b842e";
libraryHaskellDepends = [
abstract-par
base
cereal
deepseq
mtl
random
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/simonmar/monad-par";
description = "Combinators and extra features for Par monads";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-parallel" = callPackage
({
  mkDerivation
, base
, parallel
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "monad-parallel";
version = "0.7.2.2";
sha256 = "60bd1aed8ece1cc1e309d87e1722c6d489173dfe24eae95091ef5d9ce610efb3";
libraryHaskellDepends = [
base
parallel
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://trac.haskell.org/SCC/wiki/monad-parallel";
description = "Parallel execution of monadic computations";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-peel" = callPackage
({
  mkDerivation
, base
, extensible-exceptions
, stdenv
, transformers
}:
mkDerivation {

pname = "monad-peel";
version = "0.2.1.1";
sha256 = "f591f54910a117bba2fc963d5502de668ece69181b605cf9db353fbcfa9fe394";
libraryHaskellDepends = [
base
extensible-exceptions
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://andersk.mit.edu/haskell/monad-peel/";
description = "Lift control operations like exception catching through monad transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-primitive" = callPackage
({
  mkDerivation
, base
, primitive
, stdenv
, transformers
}:
mkDerivation {

pname = "monad-primitive";
version = "0.1";
sha256 = "3dc032536e87ca77d9e802d581f036ebbf2e29064fb98a0ede05fb068b7926ee";
libraryHaskellDepends = [
base
primitive
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://bitbucket.org/Shimuuar/monad-primitive";
description = "Type class for monad transformers stack with pirimitive base monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-products" = callPackage
({
  mkDerivation
, base
, semigroupoids
, stdenv
}:
mkDerivation {

pname = "monad-products";
version = "4.0.1";
sha256 = "02bfe1db2ae1a5cff19f73736a219605b1f0649f6af44ca848d09160a7946cea";
libraryHaskellDepends = [
base
semigroupoids
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/monad-products";
description = "Monad products";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-skeleton" = callPackage
({
  mkDerivation
, base
, containers
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "monad-skeleton";
version = "0.1.2.2";
sha256 = "b1cc4f0b9e308374c76902942b8381e0af869b0915735d380f792bb11e362de3";
libraryHaskellDepends = [
base
containers
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fumieval/monad-skeleton";
description = "An undead monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-time" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, time
}:
mkDerivation {

pname = "monad-time";
version = "0.2";
sha256 = "a9b901ca94b4c71d5f374a472506db92d26b13af523ceafe1e3302e8bae8b05d";
revision = "1";
editedCabalFile = "1v59w75w589mh6n3ga2fcihgmjmg0vd0q7fg9l2q52yhgx5pz9m3";
libraryHaskellDepends = [
base
mtl
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/scrive/monad-time";
description = "Type class for monads which carry the notion of the current time";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-unlift" = callPackage
({
  mkDerivation
, base
, constraints
, monad-control
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "monad-unlift";
version = "0.2.0";
sha256 = "4b5e638619e4821918b4ec67aeffb581ab9df23d168fbb72164137009a15ee0f";
libraryHaskellDepends = [
base
constraints
monad-control
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/monad-unlift";
description = "Typeclasses for representing monad transformer unlifting";
license = stdenv.lib.licenses.mit;

}) {};
"monad-unlift-ref" = callPackage
({
  mkDerivation
, base
, constraints
, exceptions
, monad-control
, monad-unlift
, mtl
, mutable-containers
, resourcet
, stdenv
, stm
, transformers
, transformers-base
}:
mkDerivation {

pname = "monad-unlift-ref";
version = "0.2.0";
sha256 = "a97acc3384dcde65109400d77fa0cd58617c77708204d7d825b6591a65444ce1";
libraryHaskellDepends = [
base
constraints
exceptions
monad-control
monad-unlift
mtl
mutable-containers
resourcet
stm
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/monad-unlift";
description = "Typeclasses for representing monad transformer unlifting";
license = stdenv.lib.licenses.mit;

}) {};
"monadLib" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "monadLib";
version = "3.7.3";
sha256 = "1834a77560d9df7ab0bc43ce24c77ffc660fc84573730ea94cb6e4ab8dcca99e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://wiki.github.com/yav/monadlib";
description = "A collection of monad transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"monadcryptorandom" = callPackage
({
  mkDerivation
, base
, bytestring
, crypto-api
, exceptions
, mtl
, stdenv
, tagged
, transformers
, transformers-compat
}:
mkDerivation {

pname = "monadcryptorandom";
version = "0.7.1";
sha256 = "85c37875743cd2357fba28d0bde3b06cd90f4f2d9770b8e0221e15258ac6b9e7";
libraryHaskellDepends = [
base
bytestring
crypto-api
exceptions
mtl
tagged
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/TomMD/monadcryptorandom";
description = "A monad for using CryptoRandomGen";
license = stdenv.lib.licenses.bsd3;

}) {};
"monadic-arrays" = callPackage
({
  mkDerivation
, array
, base
, stdenv
, stm
, transformers
, transformers-compat
}:
mkDerivation {

pname = "monadic-arrays";
version = "0.2.2";
sha256 = "667714c6100272b48c4377cf2e2984b67a4445521a2a2e9c37539128c7e276a0";
libraryHaskellDepends = [
array
base
stm
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/monadic-arrays/";
description = "Boxed and unboxed arrays for monad transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"monadloc" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "monadloc";
version = "0.7.1";
sha256 = "b25a0f6b3ebb051e58e2a58f2f5d588ff67622584cb575d40c46eaacbd1de7a8";
libraryHaskellDepends = [
base
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/pepeiborra/monadloc";
description = "A class for monads which can keep a monadic call trace";
license = stdenv.lib.licenses.publicDomain;

}) {};
"monadplus" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "monadplus";
version = "1.4.2";
sha256 = "366ed520db1eaf2ec56d8508fee2804cc24c7a6016de4b75b9addec681186595";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Haskell98 partial maps and filters over MonadPlus";
license = stdenv.lib.licenses.bsd3;

}) {};
"monads-tf" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "monads-tf";
version = "0.1.0.3";
sha256 = "249dd2aa55c4dd6530f1e49f6b052ec91bc590ecfef2bd24c58837a3f8d4b0f1";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
description = "Monad classes, using type families";
license = stdenv.lib.licenses.bsd3;

}) {};
"mongoDB" = callPackage
({
  mkDerivation
, array
, base
, base16-bytestring
, base64-bytestring
, binary
, bson
, bytestring
, containers
, cryptohash
, data-default-class
, hashtables
, lifted-base
, monad-control
, mtl
, network
, nonce
, parsec
, random
, random-shuffle
, stdenv
, text
, tls
, transformers-base
}:
mkDerivation {

pname = "mongoDB";
version = "2.1.1.1";
sha256 = "e4bf850327da71db1b91441445b1d7585bd276a435cfdf60d622eacf14039c57";
libraryHaskellDepends = [
array
base
base16-bytestring
base64-bytestring
binary
bson
bytestring
containers
cryptohash
data-default-class
hashtables
lifted-base
monad-control
mtl
network
nonce
parsec
random
random-shuffle
text
tls
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mongodb-haskell/mongodb";
description = "Driver (client) for MongoDB, a free, scalable, fast, document DBMS";
license = stdenv.lib.licenses.asl20;

}) {};
"mono-traversable" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, hashable
, split
, stdenv
, text
, transformers
, unordered-containers
, vector
, vector-algorithms
}:
mkDerivation {

pname = "mono-traversable";
version = "1.0.1.2";
sha256 = "1875b0281b2956530c33d20cfdbc1d0e1d46d09d1f9623cff19c31b7a4d296ea";
libraryHaskellDepends = [
base
bytestring
containers
hashable
split
text
transformers
unordered-containers
vector
vector-algorithms
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/mono-traversable";
description = "Type classes for mapping, folding, and traversing monomorphic containers";
license = stdenv.lib.licenses.mit;

}) {};
"mono-traversable-instances" = callPackage
({
  mkDerivation
, base
, comonad
, containers
, dlist
, dlist-instances
, mono-traversable
, semigroupoids
, semigroups
, stdenv
, transformers
, vector-instances
}:
mkDerivation {

pname = "mono-traversable-instances";
version = "0.1.0.0";
sha256 = "b5ff2b8bcebe31ffcc652a8dd3adde6aa7cd7f27a1cf6d058d4c658b370c087e";
libraryHaskellDepends = [
base
comonad
containers
dlist
dlist-instances
mono-traversable
semigroupoids
semigroups
transformers
vector-instances
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/mono-traversable#readme";
description = "Extra typeclass instances for mono-traversable";
license = stdenv.lib.licenses.mit;

}) {};
"monoid-extras" = callPackage
({
  mkDerivation
, base
, groups
, semigroupoids
, semigroups
, stdenv
}:
mkDerivation {

pname = "monoid-extras";
version = "0.4.2";
sha256 = "13ff4e055c9656a3e599567cbc4a46ef8617c05534de46909a4239696e34281f";
revision = "2";
editedCabalFile = "04h78r48rg2ppi53869vb8y226g135fxgy9ryi1v08nqsiqi1vvw";
libraryHaskellDepends = [
base
groups
semigroupoids
semigroups
];
doHaddock = false;
doCheck = false;
description = "Various extra monoid-related definitions and utilities";
license = stdenv.lib.licenses.bsd3;

}) {};
"monoid-subclasses" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, primes
, stdenv
, text
, vector
}:
mkDerivation {

pname = "monoid-subclasses";
version = "0.4.3.1";
sha256 = "a170d07916b694601a7da2924656e5f8a5ad27afa0e548f4683b154e122783cd";
revision = "1";
editedCabalFile = "1fplps682kir8phq2fkzrnbp8qf9i29rgikg47wc5diw70g2wy26";
libraryHaskellDepends = [
base
bytestring
containers
primes
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/blamario/monoid-subclasses/";
description = "Subclasses of Monoid";
license = stdenv.lib.licenses.bsd3;

}) {};
"monoidal-containers" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, hashable
, lens
, newtype
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "monoidal-containers";
version = "0.3.0.1";
sha256 = "fa2a46695ae71aa24338960f06cd8fc440f295e1854ef9f2c5ffdc3e8b5da49c";
libraryHaskellDepends = [
base
containers
deepseq
hashable
lens
newtype
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/bgamari/monoidal-containers";
description = "Containers with monoidal accumulation";
license = stdenv.lib.licenses.bsd3;

}) {};
"morte" = callPackage
({
  mkDerivation
, alex
, array
, base
, binary
, containers
, deepseq
, Earley
, http-client
, http-client-tls
, microlens
, microlens-mtl
, optparse-applicative
, pipes
, stdenv
, system-fileio
, system-filepath
, text
, text-format
, transformers
}:
mkDerivation {

pname = "morte";
version = "1.6.5";
sha256 = "49d292a44d25fe4372856da87380165e1da317c6fafc8bb0d047bbce867787c9";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
array
base
binary
containers
deepseq
Earley
http-client
http-client-tls
microlens
microlens-mtl
pipes
system-fileio
system-filepath
text
text-format
transformers
];
libraryToolDepends = [
alex
];
executableHaskellDepends = [
base
optparse-applicative
text
];
doHaddock = false;
doCheck = false;
description = "A bare-bones calculus of constructions";
license = stdenv.lib.licenses.bsd3;

}) {};
"mountpoints" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "mountpoints";
version = "1.0.2";
sha256 = "67fcdf64fdb8111f58939c64b168a9dfa519d7068e0f439887d739866f18d5c2";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "list mount points";
license = "LGPL";

}) {};
"mstate" = callPackage
({
  mkDerivation
, base
, monad-peel
, mtl
, stdenv
, stm
}:
mkDerivation {

pname = "mstate";
version = "0.2.7";
sha256 = "4508e3e7cc2dec5a0e75ba7dd085c73fdd4f886ac6d1a74cf071816795bb2c17";
libraryHaskellDepends = [
base
monad-peel
mtl
stm
];
doHaddock = false;
doCheck = false;
description = "MState: A consistent State monad for concurrent applications";
license = stdenv.lib.licenses.bsd3;

}) {};
"mtl" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "mtl";
version = "2.2.1";
sha256 = "cae59d79f3a16f8e9f3c9adc1010c7c6cdddc73e8a97ff4305f6439d855c8dc5";
revision = "1";
editedCabalFile = "0fsa965g9h23mlfjzghmmhcb9dmaq8zpm374gby6iwgdx47q0njb";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/mtl";
description = "Monad classes, using functional dependencies";
license = stdenv.lib.licenses.bsd3;

}) {};
"mtl-compat" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "mtl-compat";
version = "0.2.1.3";
sha256 = "6458ca53593a31ebce1d94ef8dd4f6a06d050dd7ed32335f6cc6b6e5d3456894";
revision = "4";
editedCabalFile = "1mfrx8cpx0502sjv0bmlfkl0h46c4krldg8m89k4fj6iawwg2ab5";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-compat/mtl-compat";
description = "Backported Control.Monad.Except module from mtl";
license = stdenv.lib.licenses.bsd3;

}) {};
"mtl-prelude" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "mtl-prelude";
version = "2.0.3.1";
sha256 = "c4a6dda093d63bd2161f55030c5825903dfa9b7d5e766c487fd848cb2aa01233";
libraryHaskellDepends = [
base
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/mtl-prelude";
description = "Reexports of most definitions from \"mtl\" and \"transformers\"";
license = stdenv.lib.licenses.mit;

}) {};
"multiarg" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "multiarg";
version = "0.30.0.10";
sha256 = "c9fa623a8e06d62addc2b7ad5102ceac3a6f0db6a67afbc8e693d0d0aec417a1";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/massysett/multiarg";
description = "Command lines for options that take multiple arguments";
license = stdenv.lib.licenses.bsd3;

}) {};
"multimap" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "multimap";
version = "1.2.1";
sha256 = "6332c529475177b9e08d762d5701804dc2edc0ff26dd98a2a1dcd7ed092e7434";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/scravy/multimap";
description = "A multimap";
license = stdenv.lib.licenses.mit;

}) {};
"multipart" = callPackage
({
  mkDerivation
, base
, bytestring
, parsec
, stdenv
}:
mkDerivation {

pname = "multipart";
version = "0.1.2";
sha256 = "e543fb307beb14fc366171d7767a6a18244bacf78db295d8d161c5c03d94043c";
libraryHaskellDepends = [
base
bytestring
parsec
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/silkapp/multipart";
description = "HTTP multipart split out of the cgi package";
license = stdenv.lib.licenses.bsd3;

}) {};
"multiset" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "multiset";
version = "0.3.3";
sha256 = "c74e77d3dbbe81fe3b48629fc257fa084df89bfb575c82c42f5549af376de135";
revision = "2";
editedCabalFile = "1pwb1prra12yrm3qdjp8h7343cilbkck85blhaflzsmn1sbcyq2w";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
description = "The Data.MultiSet container type";
license = stdenv.lib.licenses.bsd3;

}) {};
"multiset-comb" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, transformers
}:
mkDerivation {

pname = "multiset-comb";
version = "0.2.4.1";
sha256 = "8ae3432daf56c1752a0d63e25acbc8b6b4dce52600091139a9e29b16400030da";
libraryHaskellDepends = [
base
containers
transformers
];
doHaddock = false;
doCheck = false;
description = "Combinatorial algorithms over multisets";
license = stdenv.lib.licenses.bsd3;

}) {};
"multistate" = callPackage
({
  mkDerivation
, base
, monad-control
, mtl
, stdenv
, tagged
, transformers
, transformers-base
}:
mkDerivation {

pname = "multistate";
version = "0.7.1.1";
sha256 = "609650cbbfd102c775b44be3fd7bb4f6732127e64b21dd45ea1af057c5ffb8a6";
revision = "1";
editedCabalFile = "0fz1gbiv0fdbmng6kinj3pzc3s6w06lgqgriln5lzrqrp4g5ggd5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
monad-control
mtl
tagged
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lspitzner/multistate";
description = "like mtl's ReaderT / WriterT / StateT, but more than one contained value/type";
license = stdenv.lib.licenses.bsd3;

}) {};
"murmur-hash" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "murmur-hash";
version = "0.1.0.9";
sha256 = "89b9db94ead4cc0784dbcfb47c51b5664c1718860db00cd8ada3ef6fdd4465ad";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/nominolo/murmur-hash";
description = "MurmurHash2 implementation for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"mutable-containers" = callPackage
({
  mkDerivation
, base
, containers
, ghc-prim
, mono-traversable
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "mutable-containers";
version = "0.3.3";
sha256 = "7a7a39cbb16978dd1607a3977d7a1e5d8ecda7a528845d6983b5b97c49517ceb";
libraryHaskellDepends = [
base
containers
ghc-prim
mono-traversable
primitive
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/mono-traversable";
description = "Abstactions and concrete implementations of mutable containers";
license = stdenv.lib.licenses.mit;

}) {};
"mwc-probability" = callPackage
({
  mkDerivation
, base
, mwc-random
, primitive
, stdenv
, transformers
}:
mkDerivation {

pname = "mwc-probability";
version = "1.3.0";
sha256 = "0f9ba623fa2fea7770e3f1cacb1d8a0b14711e60039590d5181864e5a2fe1f6f";
revision = "1";
editedCabalFile = "1b1w504ycphpkcq279bjr2m1laxmv7xzhrbqaf6ayym265f75mnb";
libraryHaskellDepends = [
base
mwc-random
primitive
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jtobin/mwc-probability";
description = "Sampling function-based probability distributions";
license = stdenv.lib.licenses.mit;

}) {};
"mwc-random" = callPackage
({
  mkDerivation
, base
, primitive
, stdenv
, time
, vector
}:
mkDerivation {

pname = "mwc-random";
version = "0.13.5.0";
sha256 = "28dd2d95d088438ab15e9dee45ddc500b6c4700a87539c70a48b1b7b4c8d1ca9";
libraryHaskellDepends = [
base
primitive
time
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/mwc-random";
description = "Fast, high quality pseudo random number generation";
license = stdenv.lib.licenses.bsd3;

}) {};
"mwc-random-monad" = callPackage
({
  mkDerivation
, base
, monad-primitive
, mwc-random
, primitive
, stdenv
, transformers
, vector
}:
mkDerivation {

pname = "mwc-random-monad";
version = "0.7.3.1";
sha256 = "d0f37917e646c9610dcbee4173c4ac50e054418f62623a42f19e3c0c39979440";
libraryHaskellDepends = [
base
monad-primitive
mwc-random
primitive
transformers
vector
];
doHaddock = false;
doCheck = false;
description = "Monadic interface for mwc-random";
license = stdenv.lib.licenses.bsd3;

}) {};
"mysql" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, mysql
, stdenv
}:
mkDerivation {

pname = "mysql";
version = "0.1.4";
sha256 = "9b8675db208851524a77b6e5c4278e6bc29eab16d970a9dda312ae366bdb668e";
setupHaskellDepends = [
base
Cabal
];
libraryHaskellDepends = [
base
bytestring
containers
];
librarySystemDepends = [
mysql
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/paul-rouse/mysql";
description = "A low-level MySQL client library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) mysql;};
"mysql-haskell" = callPackage
({
  mkDerivation
, base
, binary
, binary-ieee754
, binary-parsers
, blaze-textual
, bytestring
, bytestring-lexing
, cryptonite
, io-streams
, memory
, monad-loops
, network
, scientific
, stdenv
, tcp-streams
, text
, time
, tls
, vector
, wire-streams
, word24
}:
mkDerivation {

pname = "mysql-haskell";
version = "0.8.0.0";
sha256 = "5fe7c723b869a0cd160005f6080960c989b678e154c24f4c2419b775b73eece4";
libraryHaskellDepends = [
base
binary
binary-ieee754
binary-parsers
blaze-textual
bytestring
bytestring-lexing
cryptonite
io-streams
memory
monad-loops
network
scientific
tcp-streams
text
time
tls
vector
wire-streams
word24
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/mysql-haskell";
description = "pure haskell MySQL driver";
license = stdenv.lib.licenses.bsd3;

}) {};
"mysql-haskell-openssl" = callPackage
({
  mkDerivation
, base
, HsOpenSSL
, io-streams
, mysql-haskell
, network
, stdenv
, tcp-streams
, tcp-streams-openssl
, wire-streams
}:
mkDerivation {

pname = "mysql-haskell-openssl";
version = "0.8.0.0";
sha256 = "653df3a834ee18da50c2f740a9d241b0d0bc046b584c4fbc66e5a529ff27b616";
libraryHaskellDepends = [
base
HsOpenSSL
io-streams
mysql-haskell
network
tcp-streams
tcp-streams-openssl
wire-streams
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/mysql-haskell";
description = "TLS support for mysql-haskell package using openssl";
license = stdenv.lib.licenses.bsd3;

}) {};
"mysql-simple" = callPackage
({
  mkDerivation
, attoparsec
, base
, base16-bytestring
, blaze-builder
, blaze-textual
, bytestring
, mysql
, old-locale
, pcre-light
, stdenv
, text
, time
}:
mkDerivation {

pname = "mysql-simple";
version = "0.4.0.0";
sha256 = "0f5ce026b8d45016dc90a543b394a72dae25aa115bfa5e7ae0095a516bb9f04d";
libraryHaskellDepends = [
attoparsec
base
base16-bytestring
blaze-builder
blaze-textual
bytestring
mysql
old-locale
pcre-light
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/paul-rouse/mysql-simple";
description = "A mid-level MySQL client library";
license = stdenv.lib.licenses.bsd3;

}) {};
"nagios-check" = callPackage
({
  mkDerivation
, base
, bifunctors
, exceptions
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "nagios-check";
version = "0.3.2";
sha256 = "1bc9b85cb10c396943d53c44e2701c5bc2a02ecdf3e8f46da238981f8b7860b7";
libraryHaskellDepends = [
base
bifunctors
exceptions
mtl
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/olorin/haskell-nagios-check";
description = "Package for writing monitoring plugins";
license = stdenv.lib.licenses.mit;

}) {};
"names-th" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, template-haskell
}:
mkDerivation {

pname = "names-th";
version = "0.2.0.2";
sha256 = "88807d7d25d1f4e56b6576c4c3bda7dcbe0be6dd1210b7d6337616e21c59bf26";
libraryHaskellDepends = [
base
containers
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "Manipulate name strings for TH";
license = stdenv.lib.licenses.bsd3;

}) {};
"nano-erl" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
}:
mkDerivation {

pname = "nano-erl";
version = "0.1.0.1";
sha256 = "370a60682b38ca77b793ee7326c54d5e74dd688f316f31fdd5cf999ad498ee12";
libraryHaskellDepends = [
base
stm
];
doHaddock = false;
doCheck = false;
description = "Small library for Erlang-style actor semantics";
license = stdenv.lib.licenses.mit;

}) {};
"nanospec" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "nanospec";
version = "0.2.1";
sha256 = "dbcbd9baa57fc9aa573cc2e291bb93c787dc0d7aac9793b2a10c125f69a0024b";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A lightweight implementation of a subset of Hspec's API";
license = stdenv.lib.licenses.mit;

}) {};
"nationstates" = callPackage
({
  mkDerivation
, base
, bytestring
, clock
, containers
, http-client
, http-client-tls
, http-types
, multiset
, stdenv
, tls
, transformers
, xml
}:
mkDerivation {

pname = "nationstates";
version = "0.5.0.0";
sha256 = "020efcdc1b16ae77ce2488180c02e398db45745adc96da2e9b406f27d7f75692";
libraryHaskellDepends = [
base
bytestring
clock
containers
http-client
http-client-tls
http-types
multiset
tls
transformers
xml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lfairy/nationstates";
description = "NationStates API client";
license = stdenv.lib.licenses.asl20;

}) {};
"nats" = callPackage
({
  mkDerivation
, stdenv
}:
mkDerivation {

pname = "nats";
version = "1.1.1";
sha256 = "131d1b4857cd1c0699ef60aeb41af923ee3e0ecd26ed1324c067d993bc17d4cd";
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/nats/";
description = "Natural numbers";
license = stdenv.lib.licenses.bsd3;

}) {};
"natural-sort" = callPackage
({
  mkDerivation
, base
, bytestring
, parsec
, stdenv
, text
}:
mkDerivation {

pname = "natural-sort";
version = "0.1.2";
sha256 = "7b72b734680827ab07df38a004d4f523540055389d62fcd587edd2fcf19a6b50";
libraryHaskellDepends = [
base
bytestring
parsec
text
];
doHaddock = false;
doCheck = false;
homepage = "https://john-millikin.com/software/natural-sort/";
description = "User-friendly text collation";
license = stdenv.lib.licenses.bsd3;

}) {};
"natural-transformation" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "natural-transformation";
version = "0.4";
sha256 = "aac28e2c1147ed77c1ec0f0eb607a577fa26d0fd67474293ba860ec124efc8af";
revision = "5";
editedCabalFile = "1wlmkq9k9aym4wig9rn5w6sygq2fg9kd02d18pfzgxw70icqjlq3";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ku-fpg/natural-transformation";
description = "A natural transformation package";
license = stdenv.lib.licenses.bsd3;

}) {};
"ndjson-conduit" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, conduit
, stdenv
}:
mkDerivation {

pname = "ndjson-conduit";
version = "0.1.0.5";
sha256 = "c037b8f7c47b146f1384585541ae8a4f9218bc4456f428935f973ae07da49db1";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
conduit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/srijs/haskell-ndjson-conduit";
description = "Conduit-based parsing and serialization for newline delimited JSON";
license = stdenv.lib.licenses.mit;

}) {};
"neat-interpolation" = callPackage
({
  mkDerivation
, base
, base-prelude
, parsec
, stdenv
, template-haskell
, text
}:
mkDerivation {

pname = "neat-interpolation";
version = "0.3.2.1";
sha256 = "5530e43ca4de09b972d173e522f9dc96265f3afe0df695a25f0141be816fa014";
libraryHaskellDepends = [
base
base-prelude
parsec
template-haskell
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/neat-interpolation";
description = "A quasiquoter for neat and simple multiline text interpolation";
license = stdenv.lib.licenses.mit;

}) {};
"netpbm" = callPackage
({
  mkDerivation
, attoparsec
, attoparsec-binary
, base
, bytestring
, stdenv
, storable-record
, unordered-containers
, vector
, vector-th-unbox
}:
mkDerivation {

pname = "netpbm";
version = "1.0.2";
sha256 = "846a04bca94be31c779888febc390c64cfba93e40f3a7a2f80ff6a6e44fcc2d7";
revision = "1";
editedCabalFile = "1vhwjv5c5gxn9l9982da54nzczbmj8rl09xn8ac7rix0zmmyvl50";
libraryHaskellDepends = [
attoparsec
attoparsec-binary
base
bytestring
storable-record
unordered-containers
vector
vector-th-unbox
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nh2/haskell-netpbm";
description = "Loading PBM, PGM, PPM image files";
license = stdenv.lib.licenses.mit;

}) {};
"nettle" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, crypto-cipher-types
, nettle
, securemem
, stdenv
, tagged
}:
mkDerivation {

pname = "nettle";
version = "0.2.0";
sha256 = "220184713b802c53ee26783b891a3bbee6c6b2571f798bd6def2496a504e9bde";
libraryHaskellDepends = [
base
byteable
bytestring
crypto-cipher-types
securemem
tagged
];
libraryPkgconfigDepends = [
nettle
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/stbuehler/haskell-nettle";
description = "safe nettle binding";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) nettle;};
"netwire" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, parallel
, profunctors
, random
, semigroups
, stdenv
, time
, transformers
}:
mkDerivation {

pname = "netwire";
version = "5.0.2";
sha256 = "4d790f19642c62e555d167d53d88da56cc83daf093ff4ee37c83e21a2112cd83";
libraryHaskellDepends = [
base
containers
deepseq
parallel
profunctors
random
semigroups
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/esoeylemez/netwire";
description = "Functional reactive programming library";
license = stdenv.lib.licenses.bsd3;

}) {};
"netwire-input" = callPackage
({
  mkDerivation
, base
, netwire
, stdenv
}:
mkDerivation {

pname = "netwire-input";
version = "0.0.6";
sha256 = "4a04c52371358471eaef127ed37547ec35fe58bef2cd6b22ce8b1074fb0db88e";
libraryHaskellDepends = [
base
netwire
];
doHaddock = false;
doCheck = false;
homepage = "https://www.github.com/Mokosha/netwire-input";
description = "Input handling abstractions for netwire";
license = stdenv.lib.licenses.mit;

}) {};
"netwire-input-glfw" = callPackage
({
  mkDerivation
, base
, containers
, GLFW-b
, mtl
, netwire-input
, stdenv
, stm
}:
mkDerivation {

pname = "netwire-input-glfw";
version = "0.0.6";
sha256 = "dd095cf915005ca6d72fa75a1ea7d890e2cdde2b8f16f45a994e413e97d9dd06";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
GLFW-b
mtl
netwire-input
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://www.github.com/Mokosha/netwire-input-glfw";
description = "GLFW instance of netwire-input";
license = stdenv.lib.licenses.mit;

}) {};
"network" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, unix
}:
mkDerivation {

pname = "network";
version = "2.6.3.1";
sha256 = "57045f5e2bedc095670182130a6d1134fcc65d097824ac5b03933876067d82e6";
libraryHaskellDepends = [
base
bytestring
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell/network";
description = "Low-level networking interface";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-anonymous-i2p" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, exceptions
, mtl
, network
, network-attoparsec
, network-simple
, stdenv
, text
, transformers
, uuid
}:
mkDerivation {

pname = "network-anonymous-i2p";
version = "0.10.0";
sha256 = "cff5796c36c1ebbb969e5433538eb3f3979acef9825a7bfb683ed002023fff2c";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
attoparsec
base
bytestring
exceptions
mtl
network
network-attoparsec
network-simple
text
transformers
uuid
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/solatis/haskell-network-anonymous-i2p";
description = "Haskell API for I2P anonymous networking";
license = stdenv.lib.licenses.mit;

}) {};
"network-anonymous-tor" = callPackage
({
  mkDerivation
, attoparsec
, base
, base32string
, bytestring
, exceptions
, hexstring
, network
, network-attoparsec
, network-simple
, socks
, splice
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "network-anonymous-tor";
version = "0.11.0";
sha256 = "41aee5b34aaaec6fa47a56cca61fafec22097bda25d13d5baef6b7924e127549";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
attoparsec
base
base32string
bytestring
exceptions
hexstring
network
network-attoparsec
network-simple
socks
text
transformers
];
executableHaskellDepends = [
base
exceptions
network
network-simple
splice
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Haskell API for Tor anonymous networking";
license = stdenv.lib.licenses.mit;

}) {};
"network-attoparsec" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, enclosed-exceptions
, exceptions
, lifted-base
, monad-control
, mtl
, network
, stdenv
, transformers
}:
mkDerivation {

pname = "network-attoparsec";
version = "0.12.2";
sha256 = "9790a9bad286ab1474dadbece3e4b2e1dd068d4ede3847cb73bcd66386bf08f0";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
attoparsec
base
bytestring
enclosed-exceptions
exceptions
lifted-base
monad-control
mtl
network
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/solatis/haskell-network-attoparsec";
description = "Utility functions for running a parser against a socket";
license = stdenv.lib.licenses.mit;

}) {};
"network-carbon" = callPackage
({
  mkDerivation
, base
, bytestring
, network
, stdenv
, text
, time
, vector
}:
mkDerivation {

pname = "network-carbon";
version = "1.0.9";
sha256 = "70860d724fce8a1ee8f2ef80ea0466544ef1deb4c2b9435f15ea234d914a3b35";
libraryHaskellDepends = [
base
bytestring
network
text
time
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ocharles/network-carbon";
description = "A Haskell implementation of the Carbon protocol (part of the Graphite monitoring tools)";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-conduit-tls" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-extra
, connection
, cprng-aes
, data-default
, monad-control
, network
, stdenv
, streaming-commons
, tls
, transformers
, transformers-base
}:
mkDerivation {

pname = "network-conduit-tls";
version = "1.2.2";
sha256 = "12a2cddfacd19d0585e57ff143d625e255e1a4628a463a41332eabc3c02bb087";
libraryHaskellDepends = [
base
bytestring
conduit
conduit-extra
connection
cprng-aes
data-default
monad-control
network
streaming-commons
tls
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/conduit";
description = "Create TLS-aware network code with conduits";
license = stdenv.lib.licenses.mit;

}) {};
"network-house" = callPackage
({
  mkDerivation
, array
, base
, containers
, mtl
, stdenv
}:
mkDerivation {

pname = "network-house";
version = "0.1.0.2";
sha256 = "071fbc22fc516175e78235d9e29ccefd8eec7c3caa2e6de74dddf62cdbffab43";
libraryHaskellDepends = [
array
base
containers
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nh2/network-house";
description = "data and parsers for Ethernet, TCP, UDP, IPv4, IPv6, ICMP, DHCP, TFTP";
license = stdenv.lib.licenses.gpl2;

}) {};
"network-info" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "network-info";
version = "0.2.0.8";
sha256 = "ecdff121f3e154c480f363bc8660959a051790bfae5b5fe573810873cedbcd76";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jystic/network-info";
description = "Access the local computer's basic network configuration";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-msgpack-rpc" = callPackage
({
  mkDerivation
, base
, binary
, binary-conduit
, bytestring
, conduit
, conduit-extra
, data-default-class
, data-msgpack
, exceptions
, MissingH
, monad-control
, mtl
, network
, stdenv
, tagged
}:
mkDerivation {

pname = "network-msgpack-rpc";
version = "0.0.3";
sha256 = "74bf9cd029126e26a0ebf0b02cbc12bc5410e85404ba36f3d8ba001523c3200b";
libraryHaskellDepends = [
base
binary
binary-conduit
bytestring
conduit
conduit-extra
data-default-class
data-msgpack
exceptions
MissingH
monad-control
mtl
network
tagged
];
doHaddock = false;
doCheck = false;
homepage = "http://msgpack.org/";
description = "A MessagePack-RPC Implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-multicast" = callPackage
({
  mkDerivation
, base
, network
, stdenv
}:
mkDerivation {

pname = "network-multicast";
version = "0.2.0";
sha256 = "0f3b50abc3a401c20cc6a0ec51a49d2a48e5b467d9fbd63b7cf803165fe975f2";
libraryHaskellDepends = [
base
network
];
doHaddock = false;
doCheck = false;
description = "Simple multicast library";
license = stdenv.lib.licenses.publicDomain;

}) {};
"network-simple" = callPackage
({
  mkDerivation
, base
, bytestring
, exceptions
, network
, stdenv
, transformers
}:
mkDerivation {

pname = "network-simple";
version = "0.4.0.5";
sha256 = "0947b409ebf68d0fa0d94c0a99c6b01165a1c5ab40507b489d195a84b4cd6aaa";
libraryHaskellDepends = [
base
bytestring
exceptions
network
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/k0001/network-simple";
description = "Simple network sockets usage patterns";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-transport" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, deepseq
, hashable
, stdenv
, transformers
}:
mkDerivation {

pname = "network-transport";
version = "0.4.4.0";
sha256 = "8e11bc9bbc3b1dd6929dfaf1140dc605f6e72c28b97bd60a2c036ab6aae67ed8";
revision = "1";
editedCabalFile = "1gq1qnx3n59kci6imk2rf1dahvsq9ifsnb50fh98h9b7yhczj4ag";
libraryHaskellDepends = [
base
binary
bytestring
deepseq
hashable
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com";
description = "Network abstraction layer";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-transport-composed" = callPackage
({
  mkDerivation
, base
, bytestring
, network-transport
, stdenv
}:
mkDerivation {

pname = "network-transport-composed";
version = "0.2.0.1";
sha256 = "965f9e2ce1c2ea8e97b80caa8a226ec4a5ea745a0ca4fd640e72d7d37d41724f";
revision = "1";
editedCabalFile = "1fwn9wix1k2kccs1dqp4z2ym98bskdkhjff9in7d6myaz93f23gw";
libraryHaskellDepends = [
base
bytestring
network-transport
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com";
description = "Compose network transports";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-transport-inmemory" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, data-accessor
, network-transport
, stdenv
, stm
}:
mkDerivation {

pname = "network-transport-inmemory";
version = "0.5.2";
sha256 = "8245d795330157d90ad9de599854d119c6d8938a45ab8c4ec89f3160b2e9ef4e";
revision = "1";
editedCabalFile = "1cls49jpl0hs6pviyn1ga8nhsdgsvqg163sprif0pb21xz848d9k";
libraryHaskellDepends = [
base
bytestring
containers
data-accessor
network-transport
stm
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com";
description = "In-memory instantiation of Network.Transport";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-transport-tcp" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, data-accessor
, network
, network-transport
, stdenv
}:
mkDerivation {

pname = "network-transport-tcp";
version = "0.5.1";
sha256 = "c4c3d67d08f8213ebc99d369cfeb8813f9dd03def464d6097bed533bfbec7beb";
libraryHaskellDepends = [
base
bytestring
containers
data-accessor
network
network-transport
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com";
description = "TCP instantiation of Network.Transport";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-transport-tests" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, bytestring
, containers
, mtl
, network-transport
, random
, stdenv
}:
mkDerivation {

pname = "network-transport-tests";
version = "0.2.3.0";
sha256 = "8277bd97eb7d719891aa6494673506d0d3c7e135c4098f49e17f06b281f53b6c";
libraryHaskellDepends = [
ansi-terminal
base
bytestring
containers
mtl
network-transport
random
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com";
description = "Unit tests for Network.Transport implementations";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-uri" = callPackage
({
  mkDerivation
, base
, deepseq
, parsec
, stdenv
}:
mkDerivation {

pname = "network-uri";
version = "2.6.1.0";
sha256 = "423e0a2351236f3fcfd24e39cdbc38050ec2910f82245e69ca72a661f7fc47f0";
revision = "1";
editedCabalFile = "141nj7q0p9wkn5gr41ayc63cgaanr9m59yym47wpxqr3c334bk32";
libraryHaskellDepends = [
base
deepseq
parsec
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell/network-uri";
description = "URI manipulation";
license = stdenv.lib.licenses.bsd3;

}) {};
"newtype" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "newtype";
version = "0.2";
sha256 = "b714033abd9a8b0903bcef0d36d0913de2a5003c852f43f97fa688717289e459";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A typeclass and set of functions for working with newtypes";
license = stdenv.lib.licenses.bsd3;

}) {};
"newtype-generics" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "newtype-generics";
version = "0.5";
sha256 = "dc63ac2c9e682ee292a8f88fa3eb1af1b66d5860f7dcec0d09319c5ef96e7f9c";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A typeclass and set of functions for working with newtypes, with generics support";
license = stdenv.lib.licenses.bsd3;

}) {};
"next-ref" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
}:
mkDerivation {

pname = "next-ref";
version = "0.1.0.2";
sha256 = "a586f15c17d5d53dd647411d02660dcbfd293f38a75f030d6892a76a2c24789f";
libraryHaskellDepends = [
base
stm
];
doHaddock = false;
doCheck = false;
description = "A concurrency primitive for a slow consumer";
license = stdenv.lib.licenses.bsd3;

}) {};
"nfc" = callPackage
({
  mkDerivation
, base
, bytestring
, c2hs
, nfc
, stdenv
}:
mkDerivation {

pname = "nfc";
version = "0.0.1";
sha256 = "524f46e2ccaacf26cd6058fbd7b1e9a27aa62a3338154d9209aa3b49d011d731";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
nfc
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/centromere/nfc#readme";
description = "libnfc bindings";
license = stdenv.lib.licenses.publicDomain;

}) {inherit (pkgs) nfc;};
"nicify-lib" = callPackage
({
  mkDerivation
, base
, parsec
, stdenv
, transformers
}:
mkDerivation {

pname = "nicify-lib";
version = "1.0.1";
sha256 = "7d26f86d792dda166805e9dda17cfbc7a2101f3654fe798f4231385d8136e732";
libraryHaskellDepends = [
base
parsec
transformers
];
doHaddock = false;
doCheck = false;
description = "Pretty print the standard output of default `Show` instances";
license = stdenv.lib.licenses.mit;

}) {};
"nix-paths" = callPackage
({
  mkDerivation
, base
, nix
, process
, stdenv
}:
mkDerivation {

pname = "nix-paths";
version = "1.0.0.1";
sha256 = "742da2042caa20d63690e9c6de632eebd71b863001eb2c71645f8c72d3e9f315";
revision = "1";
editedCabalFile = "17l6x5azdiklwmiwkk05zxg50gqgdq9n5a1nyfywy05b6h7m33il";
libraryHaskellDepends = [
base
process
];
libraryToolDepends = [
nix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/peti/nix-paths";
description = "Knowledge of Nix's installation directories";
license = stdenv.lib.licenses.bsd3;

}) {};
"non-empty-sequence" = callPackage
({
  mkDerivation
, base
, containers
, semigroups
, stdenv
}:
mkDerivation {

pname = "non-empty-sequence";
version = "0.2.0.2";
sha256 = "d9a3604c0c140197731895af56413edbf1cf6866f9c0636ece9d8314366dd1e1";
libraryHaskellDepends = [
base
containers
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/massysett/non-empty-sequence";
description = "Non-empty sequence";
license = stdenv.lib.licenses.bsd3;

}) {};
"nonce" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, cprng-aes
, crypto-random
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "nonce";
version = "1.0.2";
sha256 = "1004184996ea797b43189a0e73eab0b939f129cafc776341ca82289edb329cd0";
revision = "1";
editedCabalFile = "012hkf9hlvwmlbf1n1v05vgidssxv99z4bq2lbpbf1dlb366madj";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
cprng-aes
crypto-random
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/prowdsponsor/nonce";
description = "Generate cryptographic nonces";
license = stdenv.lib.licenses.bsd3;

}) {};
"nsis" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
, uniplate
}:
mkDerivation {

pname = "nsis";
version = "0.3";
sha256 = "03af564c2edb8f0e0d291403d3b452c496ef3e2ab33d247b73eddfdec08df570";
libraryHaskellDepends = [
base
transformers
uniplate
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/nsis#readme";
description = "DSL for producing Windows Installer using NSIS";
license = stdenv.lib.licenses.bsd3;

}) {};
"numbers" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "numbers";
version = "3000.2.0.1";
sha256 = "736d0551e4a13510dfe43a777a220bd4b17a19a73e6cd17bf901b1854b5ce183";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jwiegley/numbers#readme";
description = "Various number types";
license = stdenv.lib.licenses.bsd3;

}) {};
"numeric-extras" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "numeric-extras";
version = "0.1";
sha256 = "c700711021d96334be43a21fbd80a5f7146fdd6706ef8656f1d287ff000b61d6";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/numeric-extras";
description = "Useful tools from the C standard library";
license = stdenv.lib.licenses.bsd3;

}) {};
"numtype-dk" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "numtype-dk";
version = "0.5.0.1";
sha256 = "29dbb9bf7693989f94605804de31b1a4dacf53ab566ce0346445288eae95d017";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bjornbm/numtype-dk";
description = "Type-level integers, using TypeNats, Data Kinds, and Closed Type Families";
license = stdenv.lib.licenses.bsd3;

}) {};
"oanda-rest-api" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, Decimal
, http-conduit
, lens
, old-locale
, scientific
, stdenv
, text
, thyme
, vector
}:
mkDerivation {

pname = "oanda-rest-api";
version = "0.3.0.0";
sha256 = "be57364a4da2e2b20d188c8a50efe15b4a07daf641e4294e3b9eba87b75f7603";
revision = "1";
editedCabalFile = "1mficg3gm6q9pf3344hs8k8c0azdq0cyximrq3ny3b4gl4j3kns4";
libraryHaskellDepends = [
aeson
base
bytestring
containers
Decimal
http-conduit
lens
old-locale
scientific
text
thyme
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jdreaver/oanda-rest-api#readme";
description = "Client to the OANDA REST API";
license = stdenv.lib.licenses.bsd3;

}) {};
"objective" = callPackage
({
  mkDerivation
, base
, containers
, either
, exceptions
, free
, hashable
, monad-skeleton
, mtl
, profunctors
, stdenv
, template-haskell
, transformers
, transformers-compat
, unordered-containers
, void
, witherable
}:
mkDerivation {

pname = "objective";
version = "1.1.1";
sha256 = "7ad18e779f0b5910cc5425a16bcd07dba9f6a785c83526e047e62587b8d86634";
revision = "2";
editedCabalFile = "12zyr9szwr8g8lqs20sgmi8dqvjfwnb5c4r14lamv6nn5mvs0xl2";
libraryHaskellDepends = [
base
containers
either
exceptions
free
hashable
monad-skeleton
mtl
profunctors
template-haskell
transformers
transformers-compat
unordered-containers
void
witherable
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fumieval/objective";
description = "Composable objects";
license = stdenv.lib.licenses.bsd3;

}) {};
"octane" = callPackage
({
  mkDerivation
, aeson
, base
, bimap
, binary
, bytestring
, containers
, data-default-class
, file-embed
, http-client
, http-client-tls
, overloaded-records
, rattletrap
, stdenv
, text
}:
mkDerivation {

pname = "octane";
version = "0.18.2";
sha256 = "4fcd5e5f2b01eee2e382bdf701617129500cce1d4302fa265d52c15edcfa34a0";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bimap
binary
bytestring
containers
data-default-class
file-embed
overloaded-records
rattletrap
text
];
executableHaskellDepends = [
aeson
base
binary
bytestring
http-client
http-client-tls
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/octane#readme";
description = "Parse Rocket League replays";
license = stdenv.lib.licenses.mit;

}) {};
"oeis" = callPackage
({
  mkDerivation
, base
, HTTP
, network
, network-uri
, stdenv
}:
mkDerivation {

pname = "oeis";
version = "0.3.8";
sha256 = "4be72f80596045a51e56f8d810b5a044689f117b38a614bd9645e97dd3e39c93";
libraryHaskellDepends = [
base
HTTP
network
network-uri
];
doHaddock = false;
doCheck = false;
description = "Interface to the Online Encyclopedia of Integer Sequences (OEIS)";
license = stdenv.lib.licenses.bsd3;

}) {};
"ofx" = callPackage
({
  mkDerivation
, base
, parsec
, pretty
, stdenv
, time
}:
mkDerivation {

pname = "ofx";
version = "0.4.2.0";
sha256 = "0e22e2269f099603832f666814235051fadf92cbdec3dfacf7d1e8231ccd95f1";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
parsec
pretty
time
];
executableHaskellDepends = [
base
parsec
pretty
time
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/massysett/ofx";
description = "Parser for OFX data";
license = stdenv.lib.licenses.bsd3;

}) {};
"old-locale" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "old-locale";
version = "1.0.0.7";
sha256 = "dbaf8bf6b888fb98845705079296a23c3f40ee2f449df7312f7f7f1de18d7b50";
revision = "2";
editedCabalFile = "04b9vn007hlvsrx4ksd3r8r3kbyaj2kvwxchdrmd4370qzi8p6gs";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "locale library";
license = stdenv.lib.licenses.bsd3;

}) {};
"old-time" = callPackage
({
  mkDerivation
, base
, old-locale
, stdenv
}:
mkDerivation {

pname = "old-time";
version = "1.1.0.3";
sha256 = "1ccb158b0f7851715d36b757c523b026ca1541e2030d02239802ba39b4112bc1";
revision = "2";
editedCabalFile = "1j6ln1dkvhdvnwl33bp0xf9lhc4sybqk0aw42p8cq81xwwzbn7y9";
libraryHaskellDepends = [
base
old-locale
];
doHaddock = false;
doCheck = false;
description = "Time library";
license = stdenv.lib.licenses.bsd3;

}) {};
"once" = callPackage
({
  mkDerivation
, base
, containers
, hashable
, stdenv
, template-haskell
, unordered-containers
}:
mkDerivation {

pname = "once";
version = "0.2";
sha256 = "753ec628a1fac1f308a4b0e75adee768f962815485e1832a8052ee9af61848a8";
libraryHaskellDepends = [
base
containers
hashable
template-haskell
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://anonscm.debian.org/cgit/users/kaction-guest/haskell-once.git";
description = "memoization for IO actions and functions";
license = stdenv.lib.licenses.gpl3;

}) {};
"oo-prototypes" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "oo-prototypes";
version = "0.1.0.0";
sha256 = "9eaee40e3221f817b957e472917977bdb06ac0e163a0c6ef87941de29a12f576";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/oo-prototypes";
description = "Support for OO-like prototypes";
license = stdenv.lib.licenses.gpl2;

}) {};
"opaleye" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base16-bytestring
, bytestring
, case-insensitive
, contravariant
, postgresql-simple
, pretty
, product-profunctors
, profunctors
, semigroups
, stdenv
, text
, time
, time-locale-compat
, transformers
, uuid
, void
}:
mkDerivation {

pname = "opaleye";
version = "0.5.3.0";
sha256 = "6ceda758d97c5b0b547182fb2c7a0379f0f5843e76f4bbd0baa81a171a763d73";
revision = "2";
editedCabalFile = "1nzwk9mpgnwqmdna35mn0q4b50x1hch9q1pfdqdsz87b9308fb1q";
libraryHaskellDepends = [
aeson
attoparsec
base
base16-bytestring
bytestring
case-insensitive
contravariant
postgresql-simple
pretty
product-profunctors
profunctors
semigroups
text
time
time-locale-compat
transformers
uuid
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tomjaguarpaw/haskell-opaleye";
description = "An SQL-generating DSL targeting PostgreSQL";
license = stdenv.lib.licenses.bsd3;

}) {};
"opaleye-trans" = callPackage
({
  mkDerivation
, base
, mtl
, opaleye
, postgresql-simple
, product-profunctors
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "opaleye-trans";
version = "0.3.4";
sha256 = "84925620c5d596657a3d2467e0fbe297fad2876362da7f063d6b6034910d6e60";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
mtl
opaleye
postgresql-simple
product-profunctors
transformers
transformers-base
];
executableHaskellDepends = [
base
opaleye
postgresql-simple
product-profunctors
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/WraithM/opaleye-trans";
description = "A monad transformer for Opaleye";
license = stdenv.lib.licenses.bsd3;

}) {};
"open-browser" = callPackage
({
  mkDerivation
, base
, process
, stdenv
}:
mkDerivation {

pname = "open-browser";
version = "0.2.1.0";
sha256 = "0bed2e63800f738e78a4803ed22902accb50ac02068b96c17ce83a267244ca66";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
process
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rightfold/open-browser";
description = "Open a web browser from Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"open-witness" = callPackage
({
  mkDerivation
, base
, constraints
, hashable
, random
, stdenv
, template-haskell
, transformers
, witness
}:
mkDerivation {

pname = "open-witness";
version = "0.4";
sha256 = "5b5b934213b9a795bfed829613fbcb11faa20e12f403319c300921ed094acb20";
libraryHaskellDepends = [
base
constraints
hashable
random
template-haskell
transformers
witness
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AshleyYakeley/open-witness";
description = "open witnesses";
license = stdenv.lib.licenses.bsd3;

}) {};
"openpgp-asciiarmor" = callPackage
({
  mkDerivation
, attoparsec
, base
, base64-bytestring
, bytestring
, cereal
, stdenv
}:
mkDerivation {

pname = "openpgp-asciiarmor";
version = "0.1";
sha256 = "5cd45aad8fb9e0d07ed27da1801937b4d8598dac1c55bcfbfe11d9608f053bf7";
libraryHaskellDepends = [
attoparsec
base
base64-bytestring
bytestring
cereal
];
doHaddock = false;
doCheck = false;
homepage = "http://floss.scru.org/openpgp-asciiarmor";
description = "OpenPGP (RFC4880) ASCII Armor codec";
license = "unknown";

}) {};
"opensource" = callPackage
({
  mkDerivation
, aeson
, base
, http-client
, http-client-tls
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "opensource";
version = "0.1.0.0";
sha256 = "3459b6ce70fb8fc8bdf9d9f6ed0476724cb8a11b673fc60422edac2376620127";
revision = "1";
editedCabalFile = "02zb9m7d6fsjbqgwbjnkrpgqc93zm34bvzgasw903hhdkskshrp6";
libraryHaskellDepends = [
aeson
base
http-client
http-client-tls
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://api.opensource.org/";
description = "Haskell API Wrapper for the Open Source License API";
license = stdenv.lib.licenses.mit;

}) {};
"openssl-streams" = callPackage
({
  mkDerivation
, base
, bytestring
, HsOpenSSL
, io-streams
, network
, stdenv
}:
mkDerivation {

pname = "openssl-streams";
version = "1.2.1.0";
sha256 = "a9965909dc67261f9328ac4bb364181a37ba53fceac2c5de3629f0dd796219cb";
libraryHaskellDepends = [
base
bytestring
HsOpenSSL
io-streams
network
];
doHaddock = false;
doCheck = false;
description = "OpenSSL network support for io-streams";
license = stdenv.lib.licenses.bsd3;

}) {};
"operational" = callPackage
({
  mkDerivation
, base
, mtl
, random
, stdenv
}:
mkDerivation {

pname = "operational";
version = "0.2.3.5";
sha256 = "91d479063ae7ed3d0a6ae911bdee550fbf31cf341910f9778046b484c55b4af4";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
mtl
];
executableHaskellDepends = [
base
mtl
random
];
doHaddock = false;
doCheck = false;
homepage = "http://wiki.haskell.org/Operational";
description = "Implementation of difficult monads made easy with operational semantics";
license = stdenv.lib.licenses.bsd3;

}) {};
"operational-class" = callPackage
({
  mkDerivation
, base
, operational
, stdenv
, transformers
}:
mkDerivation {

pname = "operational-class";
version = "0.3.0.0";
sha256 = "8b28b9cb86a2dd520196f6a563538dc2c9e8730f0a0f5e5f3bca19559631e70b";
libraryHaskellDepends = [
base
operational
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/srijs/haskell-operational-class";
description = "MonadProgram typeclass for the operational package";
license = stdenv.lib.licenses.mit;

}) {};
"opml-conduit" = callPackage
({
  mkDerivation
, base
, case-insensitive
, conduit
, conduit-combinators
, containers
, lens-simple
, mono-traversable
, monoid-subclasses
, safe-exceptions
, semigroups
, stdenv
, text
, time
, timerep
, uri-bytestring
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "opml-conduit";
version = "0.6.0.1";
sha256 = "cb0f6e0964d854f7bbcb737867bc6d5e9ddcac6da05e6d743a1c4503abc78355";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
case-insensitive
conduit
conduit-combinators
containers
lens-simple
mono-traversable
monoid-subclasses
safe-exceptions
semigroups
text
time
timerep
uri-bytestring
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/k0ral/opml-conduit";
description = "Streaming parser/renderer for the OPML 2.0 format.";
license = stdenv.lib.licenses.publicDomain;

}) {};
"optional-args" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "optional-args";
version = "1.0.1";
sha256 = "940604d6ebc1fb1b5372cb21e0b3870cd9d920655e41841844131994d1f1fd99";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Optional function arguments";
license = stdenv.lib.licenses.bsd3;

}) {};
"options" = callPackage
({
  mkDerivation
, base
, containers
, monads-tf
, stdenv
, transformers
}:
mkDerivation {

pname = "options";
version = "1.2.1.1";
sha256 = "283eea9ae2c539830c6c65f5c03fb00626cfd1274da0526c285c146fc3065a62";
libraryHaskellDepends = [
base
containers
monads-tf
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://john-millikin.com/software/haskell-options/";
description = "A powerful and easy-to-use command-line option parser";
license = stdenv.lib.licenses.mit;

}) {};
"optparse-applicative" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, process
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "optparse-applicative";
version = "0.13.1.0";
sha256 = "f1fcf9d7e78ddf14083a07d8fe1aa65d75c5102e0d44df981585bce54c5c2a2b";
libraryHaskellDepends = [
ansi-wl-pprint
base
process
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pcapriotti/optparse-applicative";
description = "Utilities and combinators for parsing command line options";
license = stdenv.lib.licenses.bsd3;

}) {};
"optparse-generic" = callPackage
({
  mkDerivation
, base
, bytestring
, optparse-applicative
, semigroups
, stdenv
, system-filepath
, text
, time
, transformers
, void
}:
mkDerivation {

pname = "optparse-generic";
version = "1.1.4";
sha256 = "dc69bc73d6e3de52bcc5c4ccd8ce741eebb8d10747bc7f819b38b0cdaf1e520c";
libraryHaskellDepends = [
base
bytestring
optparse-applicative
semigroups
system-filepath
text
time
transformers
void
];
doHaddock = false;
doCheck = false;
description = "Auto-generate a command-line parser for your datatype";
license = stdenv.lib.licenses.bsd3;

}) {};
"optparse-helper" = callPackage
({
  mkDerivation
, base
, optparse-applicative
, stdenv
}:
mkDerivation {

pname = "optparse-helper";
version = "0.2.1.1";
sha256 = "0a0bbd3dd34f6b014bbb49bc14ed0bce597ab65711a856e173eb5f5a446d7510";
libraryHaskellDepends = [
base
optparse-applicative
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pharpend/optparse-helper";
description = "Helper functions for optparse-applicative";
license = stdenv.lib.licenses.bsd3;

}) {};
"optparse-simple" = callPackage
({
  mkDerivation
, base
, either
, gitrev
, optparse-applicative
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "optparse-simple";
version = "0.0.3";
sha256 = "4547f0a6c1bd959b1d9c3c2a5fabee39ac9a19dffabbb2d75461a2d461df8c7e";
libraryHaskellDepends = [
base
either
gitrev
optparse-applicative
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
description = "Simple interface to optparse-applicative";
license = stdenv.lib.licenses.bsd3;

}) {};
"optparse-text" = callPackage
({
  mkDerivation
, base
, optparse-applicative
, stdenv
, text
}:
mkDerivation {

pname = "optparse-text";
version = "0.1.1.0";
sha256 = "f6c081ecec880ae4124f25c1d91ba3a1a3caed9d2fde9e977bceab7d300884ef";
libraryHaskellDepends = [
base
optparse-applicative
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/passy/optparse-text#readme";
description = "Data.Text helpers for optparse-applicative";
license = stdenv.lib.licenses.bsd3;

}) {};
"osdkeys" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-extra
, containers
, libnotify
, process
, resourcet
, stdenv
, time
, transformers
}:
mkDerivation {

pname = "osdkeys";
version = "0.0";
sha256 = "dec832706085c29e571c92fee286378a8a8eac232b467b72336b2ca64a16eca2";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
conduit
conduit-extra
containers
libnotify
resourcet
time
transformers
];
executableHaskellDepends = [
base
process
];
doHaddock = false;
doCheck = false;
description = "Show keys pressed with an on-screen display (Linux only)";
license = stdenv.lib.licenses.bsd3;

}) {};
"overloaded-records" = callPackage
({
  mkDerivation
, base
, data-default-class
, stdenv
, template-haskell
}:
mkDerivation {

pname = "overloaded-records";
version = "0.4.2.0";
sha256 = "86b1b43fac513cada6d1e48ca61fe7ae451884f2baa5915b569cf6b72ae83296";
revision = "1";
editedCabalFile = "01bn5jqfkffcl4xdvw7hbarv0pvwgdrjcfvm4gqaz7ia7cwcpynr";
libraryHaskellDepends = [
base
data-default-class
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/trskop/overloaded-records";
description = "Overloaded Records based on current GHC proposal";
license = stdenv.lib.licenses.bsd3;

}) {};
"packdeps" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, directory
, filepath
, split
, stdenv
, tar
, text
, time
}:
mkDerivation {

pname = "packdeps";
version = "0.4.3";
sha256 = "a8d4bd6ab9158d7fcd2ef4070b6a4c9196755f36bd9b5c8345bb7d76c6f1116b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
Cabal
containers
directory
filepath
split
tar
text
time
];
executableHaskellDepends = [
base
Cabal
];
doHaddock = false;
doCheck = false;
homepage = "http://packdeps.haskellers.com/";
description = "Check your cabal packages for lagging dependencies";
license = stdenv.lib.licenses.bsd3;

}) {};
"pager" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-extra
, directory
, process
, resourcet
, safe
, stdenv
, terminfo
, text
, transformers
, unix
}:
mkDerivation {

pname = "pager";
version = "0.1.1.0";
sha256 = "3e1e4f2ca17be6dd68d2d480f29e7a770c0f7ca3109aa1980da677d96cd4eef3";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
conduit
conduit-extra
directory
process
resourcet
safe
terminfo
text
transformers
unix
];
executableHaskellDepends = [
base
bytestring
conduit-extra
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pharpend/pager";
description = "Open up a pager, like 'less' or 'more'";
license = stdenv.lib.licenses.bsd2;

}) {};
"pagerduty" = callPackage
({
  mkDerivation
, aeson
, base
, bifunctors
, bytestring
, bytestring-conversion
, conduit
, data-default-class
, exceptions
, generics-sop
, http-client
, http-types
, lens
, lens-aeson
, mmorph
, monad-control
, mtl
, stdenv
, template-haskell
, text
, time
, time-locale-compat
, transformers
, transformers-base
, transformers-compat
, unordered-containers
}:
mkDerivation {

pname = "pagerduty";
version = "0.0.8";
sha256 = "2f8f9ef70a672dd9160beb1e87d9b88d8cbd6f137637f4aed98df756ea270463";
libraryHaskellDepends = [
aeson
base
bifunctors
bytestring
bytestring-conversion
conduit
data-default-class
exceptions
generics-sop
http-client
http-types
lens
lens-aeson
mmorph
monad-control
mtl
template-haskell
text
time
time-locale-compat
transformers
transformers-base
transformers-compat
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/brendanhay/pagerduty";
description = "Client library for PagerDuty Integration and REST APIs";
license = "unknown";

}) {};
"pagination" = callPackage
({
  mkDerivation
, base
, deepseq
, exceptions
, stdenv
}:
mkDerivation {

pname = "pagination";
version = "0.1.1";
sha256 = "bac47b84007afe78cdb2a26e2058961d4a67669f9d9b8b0a30f813cd83e6eb04";
libraryHaskellDepends = [
base
deepseq
exceptions
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/pagination";
description = "Framework-agnostic pagination boilerplate";
license = stdenv.lib.licenses.bsd3;

}) {};
"palette" = callPackage
({
  mkDerivation
, array
, base
, colour
, containers
, stdenv
}:
mkDerivation {

pname = "palette";
version = "0.1.0.4";
sha256 = "e6b3b4a0077d651ac7cb90c113ce7d6bd228aab57c9fe26e475abe6fcaada7cc";
libraryHaskellDepends = [
array
base
colour
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams";
description = "Utilities for choosing and creating color schemes";
license = stdenv.lib.licenses.bsd3;

}) {};
"pandoc" = callPackage
({
  mkDerivation
, aeson
, array
, base
, base64-bytestring
, binary
, blaze-html
, blaze-markup
, bytestring
, cmark
, containers
, data-default
, deepseq
, directory
, doctemplates
, extensible-exceptions
, filemanip
, filepath
, ghc-prim
, haddock-library
, hslua
, HTTP
, http-client
, http-client-tls
, http-types
, JuicyPixels
, mtl
, network
, network-uri
, old-time
, pandoc-types
, parsec
, process
, random
, scientific
, SHA
, skylighting
, stdenv
, syb
, tagsoup
, temporary
, texmath
, text
, time
, unix
, unordered-containers
, vector
, xml
, yaml
, zip-archive
, zlib
}:
mkDerivation {

pname = "pandoc";
version = "1.19.2.1";
sha256 = "08692f3d77bf95bb9ba3407f7af26de7c23134e7efcdafad0bdaf9050e2c7801";
revision = "5";
editedCabalFile = "0rp81lr8ys7bcnjx5hm9fn704zhph313whjc51ns8sbpzlpwvx1f";
configureFlags = [
"-fhttps"
"-f-trypandoc"
];
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
array
base
base64-bytestring
binary
blaze-html
blaze-markup
bytestring
cmark
containers
data-default
deepseq
directory
doctemplates
extensible-exceptions
filemanip
filepath
ghc-prim
haddock-library
hslua
HTTP
http-client
http-client-tls
http-types
JuicyPixels
mtl
network
network-uri
old-time
pandoc-types
parsec
process
random
scientific
SHA
skylighting
syb
tagsoup
temporary
texmath
text
time
unordered-containers
vector
xml
yaml
zip-archive
zlib
];
executableHaskellDepends = [
aeson
base
bytestring
containers
directory
extensible-exceptions
filepath
HTTP
network
network-uri
pandoc-types
skylighting
text
unix
yaml
];
doHaddock = false;
doCheck = false;
homepage = "http://pandoc.org";
description = "Conversion between markup formats";
license = "GPL";

}) {};
"pandoc-citeproc" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, attoparsec
, base
, bytestring
, Cabal
, containers
, data-default
, directory
, filepath
, hs-bibutils
, mtl
, old-locale
, pandoc
, pandoc-types
, parsec
, rfc5051
, setenv
, split
, stdenv
, syb
, tagsoup
, text
, time
, unordered-containers
, vector
, xml-conduit
, yaml
}:
mkDerivation {

pname = "pandoc-citeproc";
version = "0.10.4.1";
sha256 = "6e6b0a89a831f9bfaa33dc0f3dff1792ee1626a5e66e1bd34da9447cd3c7de51";
revision = "2";
editedCabalFile = "1ir400ycxl1hhc6502rmysmjxd0szyjzbsr6262i4q8yb8r1ddfl";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
setupHaskellDepends = [
base
Cabal
];
libraryHaskellDepends = [
aeson
base
bytestring
containers
data-default
directory
filepath
hs-bibutils
mtl
old-locale
pandoc
pandoc-types
parsec
rfc5051
setenv
split
syb
tagsoup
text
time
unordered-containers
vector
xml-conduit
yaml
];
executableHaskellDepends = [
aeson
aeson-pretty
attoparsec
base
bytestring
filepath
pandoc
pandoc-types
syb
text
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jgm/pandoc-citeproc";
description = "Supports using pandoc with citeproc";
license = stdenv.lib.licenses.bsd3;

}) {};
"pandoc-types" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, deepseq
, ghc-prim
, QuickCheck
, stdenv
, syb
}:
mkDerivation {

pname = "pandoc-types";
version = "1.17.0.5";
sha256 = "c8825588b587ff5ed0c105156a11a43f3b752279997231cfc13102809bbc51b3";
revision = "4";
editedCabalFile = "1ljvzl41ikfwwdh253mwpqjr7c4vf1ib01sxvp66ahi7vpxshm7n";
libraryHaskellDepends = [
aeson
base
bytestring
containers
deepseq
ghc-prim
QuickCheck
syb
];
doHaddock = false;
doCheck = false;
homepage = "http://johnmacfarlane.net/pandoc";
description = "Types for representing a structured document";
license = stdenv.lib.licenses.bsd3;

}) {};
"pango" = callPackage
({
  mkDerivation
, array
, base
, Cabal
, cairo
, containers
, directory
, filepath
, glib
, gtk2hs-buildtools
, mtl
, pango
, pretty
, process
, stdenv
, text
}:
mkDerivation {

pname = "pango";
version = "0.13.3.1";
sha256 = "306a4f17d2fe4053b2ddd841a48720513fe391df49080ce61a31b8a0f0633fbb";
enableSeparateDataOutput = true;
setupHaskellDepends = [
base
Cabal
filepath
gtk2hs-buildtools
];
libraryHaskellDepends = [
array
base
cairo
containers
directory
glib
mtl
pretty
process
text
];
libraryPkgconfigDepends = [
pango
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/gtk2hs/";
description = "Binding to the Pango text rendering engine";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) pango;};
"parallel" = callPackage
({
  mkDerivation
, array
, base
, containers
, deepseq
, stdenv
}:
mkDerivation {

pname = "parallel";
version = "3.2.1.0";
sha256 = "4de3cdbb71dfd13cbb70a1dc1d1d5cf34fbe9828e05eb02b3dc658fdc2148526";
revision = "1";
editedCabalFile = "03s4bh0ib18y684l6rm3rg6asd2a69wva0wg9404hqfglndg5m58";
libraryHaskellDepends = [
array
base
containers
deepseq
];
doHaddock = false;
doCheck = false;
description = "Parallel programming library";
license = stdenv.lib.licenses.bsd3;

}) {};
"parallel-io" = callPackage
({
  mkDerivation
, base
, containers
, extensible-exceptions
, random
, stdenv
}:
mkDerivation {

pname = "parallel-io";
version = "0.3.3";
sha256 = "3a14c02b9b8b7c72577eb90a8dd72de75d99192def87d7aa79545ee4d6e80645";
revision = "1";
editedCabalFile = "1vlb2x1ghih4l64031rmh7h643c3knh5r5mwilf7g8izb58ypvkm";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
extensible-exceptions
random
];
doHaddock = false;
doCheck = false;
homepage = "http://batterseapower.github.com/parallel-io";
description = "Combinators for executing IO actions in parallel on a thread pool";
license = stdenv.lib.licenses.bsd3;

}) {};
"parseargs" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "parseargs";
version = "0.2.0.8";
sha256 = "7b789204c15d0c478db3d133f349a6970b5509fc6af655faedc03c7426dcf7d6";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
];
executableHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/BartMassey/parseargs";
description = "Full-featured command-line argument parsing library";
license = stdenv.lib.licenses.bsd3;

}) {};
"parsec" = callPackage
({
  mkDerivation
, base
, bytestring
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "parsec";
version = "3.1.11";
sha256 = "6f87251cb1d11505e621274dec15972de924a9074f07f7430a18892064c2676e";
revision = "1";
editedCabalFile = "0prqjj2gxlwh2qhpcck5k6cgk4har9xqxc67yzjqd44mr2xgl7ir";
libraryHaskellDepends = [
base
bytestring
mtl
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/aslatter/parsec";
description = "Monadic parser combinators";
license = stdenv.lib.licenses.bsd3;

}) {};
"parsec-numeric" = callPackage
({
  mkDerivation
, base
, parsec
, stdenv
}:
mkDerivation {

pname = "parsec-numeric";
version = "0.1.0.0";
sha256 = "7bdd9ae4aa63695e3072c73d99b85ef1572ffe9f5a07621edaa9515393a6e52f";
libraryHaskellDepends = [
base
parsec
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AndrewRademacher/parsec-numeric";
description = "Parsec combinators for parsing Haskell numeric types";
license = "unknown";

}) {};
"parsers" = callPackage
({
  mkDerivation
, attoparsec
, base
, base-orphans
, charset
, containers
, parsec
, scientific
, stdenv
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "parsers";
version = "0.12.4";
sha256 = "2781a27d40f0019fc671b483ca47276c826621e1daa42f08846af8e40e94ca1e";
revision = "1";
editedCabalFile = "1y63jydbb5jsxj66ac0wljk0dyg4prrn2ik1rm636v9g0s8lf2di";
libraryHaskellDepends = [
attoparsec
base
base-orphans
charset
containers
parsec
scientific
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/parsers/";
description = "Parsing combinators";
license = stdenv.lib.licenses.bsd3;

}) {};
"partial-handler" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "partial-handler";
version = "1.0.2";
sha256 = "fae9f291f4146631eb3be173299bbc7755343a0e9b74e62ee1921e209a6aa4f1";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/partial-handler";
description = "A composable exception handler";
license = stdenv.lib.licenses.mit;

}) {};
"partial-isomorphisms" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "partial-isomorphisms";
version = "0.2.2";
sha256 = "f6ee216db7be14d497c428562c83423a5d2579c86b70b822996bde28c196569c";
revision = "1";
editedCabalFile = "0qrj8lm57qhfx9pm7k4x5g5bxiad5hwjlqvqkbipfq5k5x5ja9yw";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://www.informatik.uni-marburg.de/~rendel/unparse";
description = "Partial isomorphisms";
license = stdenv.lib.licenses.bsd3;

}) {};
"patat" = callPackage
({
  mkDerivation
, aeson
, ansi-terminal
, ansi-wl-pprint
, base
, bytestring
, containers
, directory
, filepath
, highlighting-kate
, mtl
, optparse-applicative
, pandoc
, stdenv
, terminal-size
, text
, time
, unordered-containers
, yaml
}:
mkDerivation {

pname = "patat";
version = "0.5.0.0";
sha256 = "74fe32c9b9dec0b57895f92037027093f6928b482bd147534f87fcb4c24cec3c";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
aeson
ansi-terminal
ansi-wl-pprint
base
bytestring
containers
directory
filepath
highlighting-kate
mtl
optparse-applicative
pandoc
terminal-size
text
time
unordered-containers
yaml
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jaspervdj/patat";
description = "Terminal-based presentations using Pandoc";
license = stdenv.lib.licenses.gpl2;

}) {};
"path" = callPackage
({
  mkDerivation
, aeson
, base
, deepseq
, exceptions
, filepath
, hashable
, stdenv
, template-haskell
}:
mkDerivation {

pname = "path";
version = "0.5.12";
sha256 = "52f0dae7e3d72d26fa62ff55de65b6697744dd0c5b96f48625cb00df1cf1055d";
revision = "2";
editedCabalFile = "1fcn4kbsfqzlhagq12xbbvi0y36z3ns3rmcdxfhzwgi83y1ricxl";
libraryHaskellDepends = [
aeson
base
deepseq
exceptions
filepath
hashable
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Support for well-typed paths";
license = stdenv.lib.licenses.bsd3;

}) {};
"path-extra" = callPackage
({
  mkDerivation
, base
, exceptions
, path
, stdenv
}:
mkDerivation {

pname = "path-extra";
version = "0.0.3";
sha256 = "55043bb37a3aaecd162d336c19483b3fb36397fa6cd48a182caf876502638b59";
libraryHaskellDepends = [
base
exceptions
path
];
doHaddock = false;
doCheck = false;
description = "Chris Done's path library, enriched with URL-related goodies";
license = stdenv.lib.licenses.bsd3;

}) {};
"path-io" = callPackage
({
  mkDerivation
, base
, containers
, directory
, exceptions
, filepath
, path
, stdenv
, temporary
, time
, transformers
, unix-compat
}:
mkDerivation {

pname = "path-io";
version = "1.2.2";
sha256 = "72255f9d014285c87dd4c537f445a5448b2b64e81c4ee4759464b4b0e401fe46";
revision = "1";
editedCabalFile = "1r73clpws32ql3wnh6gp9dn4knzxgcgl6j7ihdkmq6ai21bznw6m";
libraryHaskellDepends = [
base
containers
directory
exceptions
filepath
path
temporary
time
transformers
unix-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/path-io";
description = "Interface to ‘directory’ package for users of ‘path’";
license = stdenv.lib.licenses.bsd3;

}) {};
"path-pieces" = callPackage
({
  mkDerivation
, base
, stdenv
, text
, time
}:
mkDerivation {

pname = "path-pieces";
version = "0.2.1";
sha256 = "080bd49f53e20597ca3e5962e0c279a3422345f5b088840a30a751cd76d4a36f";
revision = "1";
editedCabalFile = "0p7wsphh513s8l5d62lzgbhk2l1h6kj5y7bc27qqjsry9g8ah4y7";
libraryHaskellDepends = [
base
text
time
];
doHaddock = false;
doCheck = false;
description = "Components of paths";
license = stdenv.lib.licenses.bsd3;

}) {};
"pathwalk" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
, transformers
}:
mkDerivation {

pname = "pathwalk";
version = "0.3.1.2";
sha256 = "76e0d0646a3133a062dbae4e9d37d59e71d6328706bb178552a93800e4550e91";
libraryHaskellDepends = [
base
directory
filepath
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Xe/pathwalk";
description = "Path walking utilities for Haskell programs";
license = stdenv.lib.licenses.mit;

}) {};
"patience" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "patience";
version = "0.1.1";
sha256 = "35c7c334d344b3cbdc61cc88c559bedb300ace860a80e3990aeb268f1f10db63";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
description = "Patience diff and longest increasing subsequence";
license = stdenv.lib.licenses.bsd3;

}) {};
"pattern-arrows" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "pattern-arrows";
version = "0.0.2";
sha256 = "6fc2d972e72785d727d2b68e1f82ef94a2c93cedbc00e6a4cdc03498825c078f";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://blog.functorial.com/posts/2013-10-27-Pretty-Printing-Arrows.html";
description = "Arrows for Pretty Printing";
license = stdenv.lib.licenses.mit;

}) {};
"pcre-heavy" = callPackage
({
  mkDerivation
, base
, base-compat
, bytestring
, pcre-light
, semigroups
, stdenv
, string-conversions
, template-haskell
}:
mkDerivation {

pname = "pcre-heavy";
version = "1.0.0.2";
sha256 = "8a5cf697b7683127812450cef57d0d74ac5c1117ec80618d10509642f793cbd1";
libraryHaskellDepends = [
base
base-compat
bytestring
pcre-light
semigroups
string-conversions
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/myfreeweb/pcre-heavy";
description = "A regexp library on top of pcre-light you can actually use";
license = stdenv.lib.licenses.publicDomain;

}) {};
"pcre-light" = callPackage
({
  mkDerivation
, base
, bytestring
, pcre
, stdenv
}:
mkDerivation {

pname = "pcre-light";
version = "0.4.0.4";
sha256 = "02c97e39263d18fd26aa63d52c88c4bfbb5c3f66ab40564552e7f11d5d889e75";
libraryHaskellDepends = [
base
bytestring
];
libraryPkgconfigDepends = [
pcre
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Daniel-Diaz/pcre-light";
description = "Portable regex library for Perl 5 compatible regular expressions";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) pcre;};
"pcre-utils" = callPackage
({
  mkDerivation
, array
, attoparsec
, base
, bytestring
, mtl
, regex-pcre-builtin
, stdenv
, vector
}:
mkDerivation {

pname = "pcre-utils";
version = "0.1.8.1";
sha256 = "6c2fc14e13b3e0b2b09f188ee32affa9fe60755cc87409255f5ec8cbd8971ed7";
libraryHaskellDepends = [
array
attoparsec
base
bytestring
mtl
regex-pcre-builtin
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bartavelle/pcre-utils";
description = "Perl-like substitute and split for PCRE regexps";
license = stdenv.lib.licenses.bsd3;

}) {};
"pdf-toolbox-content" = callPackage
({
  mkDerivation
, attoparsec
, base
, base16-bytestring
, bytestring
, containers
, io-streams
, pdf-toolbox-core
, stdenv
, text
}:
mkDerivation {

pname = "pdf-toolbox-content";
version = "0.0.5.1";
sha256 = "1c104e232e178603ff9dd8c6eaaf0ccbda918c70b40ed63f08fa1922a3c88488";
libraryHaskellDepends = [
attoparsec
base
base16-bytestring
bytestring
containers
io-streams
pdf-toolbox-core
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Yuras/pdf-toolbox";
description = "A collection of tools for processing PDF files";
license = stdenv.lib.licenses.bsd3;

}) {};
"pdf-toolbox-core" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, containers
, errors
, io-streams
, scientific
, stdenv
, transformers
, zlib-bindings
}:
mkDerivation {

pname = "pdf-toolbox-core";
version = "0.0.4.1";
sha256 = "cce3949ef5596b5d61032ce1547160dc5f52e3d5c556dcdb9aabf1582173a981";
libraryHaskellDepends = [
attoparsec
base
bytestring
containers
errors
io-streams
scientific
transformers
zlib-bindings
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Yuras/pdf-toolbox";
description = "A collection of tools for processing PDF files";
license = stdenv.lib.licenses.bsd3;

}) {};
"pdf-toolbox-document" = callPackage
({
  mkDerivation
, base
, bytestring
, cipher-aes
, cipher-rc4
, containers
, crypto-api
, cryptohash
, io-streams
, pdf-toolbox-content
, pdf-toolbox-core
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "pdf-toolbox-document";
version = "0.0.7.1";
sha256 = "3f7d379baa85c1cf9998e3f84177ad24b5cc8632fb211af7a09603e59596f0e1";
libraryHaskellDepends = [
base
bytestring
cipher-aes
cipher-rc4
containers
crypto-api
cryptohash
io-streams
pdf-toolbox-content
pdf-toolbox-core
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Yuras/pdf-toolbox";
description = "A collection of tools for processing PDF files";
license = stdenv.lib.licenses.bsd3;

}) {};
"pdfinfo" = callPackage
({
  mkDerivation
, base
, mtl
, old-locale
, process-extras
, stdenv
, text
, time
, time-locale-compat
}:
mkDerivation {

pname = "pdfinfo";
version = "1.5.4";
sha256 = "9a6a1f7d8ab0a5e8f7f8276da070ccddec140d6b2549b084042159b639230911";
libraryHaskellDepends = [
base
mtl
old-locale
process-extras
text
time
time-locale-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chrisdone/pdfinfo";
description = "Wrapper around the pdfinfo command";
license = stdenv.lib.licenses.bsd3;

}) {};
"pem" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, mtl
, stdenv
}:
mkDerivation {

pname = "pem";
version = "0.2.2";
sha256 = "372808c76c6d860aedb4e30171cb4ee9f6154d9f68e3f2310f820bf174995a98";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
base64-bytestring
bytestring
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-pem";
description = "Privacy Enhanced Mail (PEM) format reader and writer";
license = stdenv.lib.licenses.bsd3;

}) {};
"permutation" = callPackage
({
  mkDerivation
, base
, Cabal
, ghc-prim
, process
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "permutation";
version = "0.5.0.5";
sha256 = "51b5caa115625e6b9a3b2f2240f1142c0cc6c31c351027abbcaea569f419a700";
revision = "1";
editedCabalFile = "0lrargadwkwzzvajfiay8vkq1byh56kbr2h9ba9cfbpqwb4s90j9";
setupHaskellDepends = [
base
Cabal
process
];
libraryHaskellDepends = [
base
ghc-prim
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/spacekitteh/permutation";
description = "A library for permutations and combinations";
license = stdenv.lib.licenses.bsd3;

}) {};
"persistable-record" = callPackage
({
  mkDerivation
, array
, base
, containers
, dlist
, names-th
, stdenv
, template-haskell
, th-data-compat
, transformers
}:
mkDerivation {

pname = "persistable-record";
version = "0.4.1.1";
sha256 = "dd62fde2b2cde224f8bbc2fdb71abc586ed1c16519d2ddd1a5744412144c57d6";
libraryHaskellDepends = [
array
base
containers
dlist
names-th
template-haskell
th-data-compat
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "Binding between SQL database values and haskell records";
license = stdenv.lib.licenses.bsd3;

}) {};
"persistable-types-HDBC-pg" = callPackage
({
  mkDerivation
, base
, bytestring
, convertible
, HDBC
, persistable-record
, relational-query-HDBC
, stdenv
, text-postgresql
}:
mkDerivation {

pname = "persistable-types-HDBC-pg";
version = "0.0.1.4";
sha256 = "ceb2435916ddbab3062ce2bd3794d1ba901dd3004f3db58cf9520b6d2459565b";
libraryHaskellDepends = [
base
bytestring
convertible
HDBC
persistable-record
relational-query-HDBC
text-postgresql
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "HDBC and Relational-Record instances of PostgreSQL extended types";
license = stdenv.lib.licenses.bsd3;

}) {};
"persistent" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base64-bytestring
, blaze-html
, blaze-markup
, bytestring
, conduit
, containers
, exceptions
, fast-logger
, http-api-data
, lifted-base
, monad-control
, monad-logger
, mtl
, old-locale
, path-pieces
, resource-pool
, resourcet
, scientific
, silently
, stdenv
, tagged
, template-haskell
, text
, time
, transformers
, transformers-base
, unordered-containers
, vector
}:
mkDerivation {

pname = "persistent";
version = "2.6";
sha256 = "42423362de94599581d18be644ba77181e87417087b3953daec2e8512d408e3e";
revision = "2";
editedCabalFile = "1dmjfvcs4a16gk1dlpqvjjdnda6ngh08kqh3796d10nqqdjkiq1l";
libraryHaskellDepends = [
aeson
attoparsec
base
base64-bytestring
blaze-html
blaze-markup
bytestring
conduit
containers
exceptions
fast-logger
http-api-data
lifted-base
monad-control
monad-logger
mtl
old-locale
path-pieces
resource-pool
resourcet
scientific
silently
tagged
template-haskell
text
time
transformers
transformers-base
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/persistent";
description = "Type-safe, multi-backend data serialization";
license = stdenv.lib.licenses.mit;

}) {};
"persistent-mysql" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-builder
, bytestring
, conduit
, containers
, monad-control
, monad-logger
, mysql
, mysql-simple
, persistent
, resource-pool
, resourcet
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "persistent-mysql";
version = "2.6";
sha256 = "a34c9f34feab49af156870a4c09df98d9cda54a3dd08944e3e0d326e86993be7";
revision = "2";
editedCabalFile = "01njsdpdiam6sf94r0gsg059npw8ga1l9llf8dv3l2gxpxwr822q";
libraryHaskellDepends = [
aeson
base
blaze-builder
bytestring
conduit
containers
monad-control
monad-logger
mysql
mysql-simple
persistent
resource-pool
resourcet
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/persistent";
description = "Backend for the persistent library using MySQL database server";
license = stdenv.lib.licenses.mit;

}) {};
"persistent-postgresql" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-builder
, bytestring
, conduit
, containers
, monad-control
, monad-logger
, persistent
, postgresql-libpq
, postgresql-simple
, resource-pool
, resourcet
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "persistent-postgresql";
version = "2.6";
sha256 = "d640eecc5c8528c5ab42f08a01b74d409ca2b8e67259f477f3cd3686bc3aaae2";
libraryHaskellDepends = [
aeson
base
blaze-builder
bytestring
conduit
containers
monad-control
monad-logger
persistent
postgresql-libpq
postgresql-simple
resource-pool
resourcet
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/persistent";
description = "Backend for the persistent library using postgresql";
license = stdenv.lib.licenses.mit;

}) {};
"persistent-redis" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, binary
, bytestring
, hedis
, http-api-data
, monad-control
, mtl
, path-pieces
, persistent
, scientific
, stdenv
, text
, time
, transformers
, utf8-string
}:
mkDerivation {

pname = "persistent-redis";
version = "2.5.2";
sha256 = "7ba65629f4e192379ccc8970ef31352ce2779fe17bb98b8b9e634edfead72b13";
libraryHaskellDepends = [
aeson
attoparsec
base
binary
bytestring
hedis
http-api-data
monad-control
mtl
path-pieces
persistent
scientific
text
time
transformers
utf8-string
];
doHaddock = false;
doCheck = false;
description = "Backend for persistent library using Redis";
license = stdenv.lib.licenses.bsd3;

}) {};
"persistent-refs" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, ref-fd
, stdenv
, transformers
}:
mkDerivation {

pname = "persistent-refs";
version = "0.4";
sha256 = "46b310e034e23993e7da740d388e06e410483ada05cbcc8c0a4953ee19f8d0d3";
libraryHaskellDepends = [
base
containers
mtl
ref-fd
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/acfoltzer/persistent-refs";
description = "Haskell references backed by an IntMap for persistence and reversibility";
license = stdenv.lib.licenses.bsd3;

}) {};
"persistent-sqlite" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, conduit
, containers
, monad-control
, monad-logger
, old-locale
, persistent
, resource-pool
, resourcet
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "persistent-sqlite";
version = "2.6";
sha256 = "628670f06cc533adb057649a253e9332aa2b3f69278af8fd32905e9bb00e0ffa";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
conduit
containers
monad-control
monad-logger
old-locale
persistent
resource-pool
resourcet
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/persistent";
description = "Backend for the persistent library using sqlite3";
license = stdenv.lib.licenses.mit;

}) {};
"persistent-template" = callPackage
({
  mkDerivation
, aeson
, aeson-compat
, base
, bytestring
, containers
, ghc-prim
, http-api-data
, monad-control
, monad-logger
, path-pieces
, persistent
, stdenv
, tagged
, template-haskell
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "persistent-template";
version = "2.5.1.6";
sha256 = "f88a8735173ba197f8d698a9c1fd5c649234fd60efe493f401432926a55e7b44";
revision = "2";
editedCabalFile = "1ik5ig4iakbs4cpvnfcbfp6a2dz7znfk3nmaak7zlhlp3n0f3shq";
libraryHaskellDepends = [
aeson
aeson-compat
base
bytestring
containers
ghc-prim
http-api-data
monad-control
monad-logger
path-pieces
persistent
tagged
template-haskell
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/persistent";
description = "Type-safe, non-relational, multi-backend persistence";
license = stdenv.lib.licenses.mit;

}) {};
"pgp-wordlist" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, stdenv
, text
, vector
}:
mkDerivation {

pname = "pgp-wordlist";
version = "0.1.0.2";
sha256 = "e28b6fe85222adf1247d5870ab47c68c3d25df3f9ceda104bfb64e1414a92466";
libraryHaskellDepends = [
base
bytestring
containers
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/quchen/pgp-wordlist";
description = "Translate between binary data and a human-readable collection of words";
license = stdenv.lib.licenses.bsd3;

}) {};
"phantom-state" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "phantom-state";
version = "0.2.1.2";
sha256 = "f978ef98e810e9a9e53f1479340ba7a28f80a64aba431322959cbf8c620c3811";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
description = "Phantom State Transformer. Like State Monad, but without values.";
license = stdenv.lib.licenses.bsd3;

}) {};
"picedit" = callPackage
({
  mkDerivation
, base
, cli
, hmatrix
, JuicyPixels
, stdenv
, vector
}:
mkDerivation {

pname = "picedit";
version = "0.2.3.0";
sha256 = "e8525d8ca1d4ab0995293948a05dda3eb57f2456603ba5467fef982d0296c12d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
hmatrix
JuicyPixels
vector
];
executableHaskellDepends = [
base
cli
hmatrix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mdibaiee/picedit#readme";
description = "simple image manipulation functions";
license = stdenv.lib.licenses.gpl3;

}) {};
"picoparsec" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, deepseq
, monoid-subclasses
, scientific
, stdenv
, text
}:
mkDerivation {

pname = "picoparsec";
version = "0.1.2.3";
sha256 = "8ec7ed678efaf62de15b7c2f1d21f1ddf8b92f5fa233eed9534c12e8812e9150";
libraryHaskellDepends = [
array
base
bytestring
containers
deepseq
monoid-subclasses
scientific
text
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/blamario/picoparsec";
description = "Fast combinator parsing for bytestrings and text";
license = stdenv.lib.licenses.bsd3;

}) {};
"pid1" = callPackage
({
  mkDerivation
, base
, process
, stdenv
, unix
}:
mkDerivation {

pname = "pid1";
version = "0.1.0.1";
sha256 = "163b6dc85426558ad1a897675bf7f560389addf172c8e5858f817342ee7345c8";
revision = "1";
editedCabalFile = "0ii76hs4yg72w8pyynb7fbs80fw4knkfsv1gxqkagnm10hf3y8gk";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
process
unix
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/pid1#readme";
description = "Do signal handling and orphan reaping for Unix PID1 init processes";
license = stdenv.lib.licenses.mit;

}) {};
"pinboard" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, http-client
, http-client-tls
, http-types
, monad-logger
, mtl
, network
, profunctors
, random
, safe-exceptions
, stdenv
, text
, time
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "pinboard";
version = "0.9.12.4";
sha256 = "a64c3dab19bedbe341406a0897a323d9f7830f384856f01a8d0a2cf5ae591e99";
libraryHaskellDepends = [
aeson
base
bytestring
containers
http-client
http-client-tls
http-types
monad-logger
mtl
network
profunctors
random
safe-exceptions
text
time
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jonschoning/pinboard";
description = "Access to the Pinboard API";
license = stdenv.lib.licenses.mit;

}) {};
"pinch" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, deepseq
, ghc-prim
, hashable
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "pinch";
version = "0.3.0.2";
sha256 = "f511ab7e13de146ed075eb52ee7954b1b4c2deaf5bb54e83375dc159e5803e4a";
libraryHaskellDepends = [
array
base
bytestring
containers
deepseq
ghc-prim
hashable
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/abhinav/pinch#readme";
description = "An alternative implementation of Thrift for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"pinchot" = callPackage
({
  mkDerivation
, base
, containers
, Earley
, lens
, pretty-show
, semigroups
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "pinchot";
version = "0.24.0.0";
sha256 = "b9769cdecb718c834d6fb04b62c08482f98cbb2a48c8a810ce83db96eff997e5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
Earley
lens
pretty-show
semigroups
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/massysett/pinchot";
description = "Write grammars, not parsers";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes" = callPackage
({
  mkDerivation
, base
, exceptions
, mmorph
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "pipes";
version = "4.3.2";
sha256 = "7957bb290db7f1dfad0581f363ab97fcd58f7c0b916e1114464cb9a398b8334a";
libraryHaskellDepends = [
base
exceptions
mmorph
mtl
transformers
];
doHaddock = false;
doCheck = false;
description = "Compositional pipelines";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-attoparsec" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, pipes
, pipes-parse
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "pipes-attoparsec";
version = "0.5.1.4";
sha256 = "fab0a84f9f81e6ae06eae85fd895f0cb8c698723cab7f33addaf5d14cd553507";
revision = "1";
editedCabalFile = "1pafyfjfvdpflrq292a3c46d4brqw2k9cgvz4qbyv60fwpc1h0n9";
libraryHaskellDepends = [
attoparsec
base
bytestring
pipes
pipes-parse
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/k0001/pipes-attoparsec";
description = "Attoparsec and Pipes integration";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-bytestring" = callPackage
({
  mkDerivation
, base
, bytestring
, pipes
, pipes-group
, pipes-parse
, stdenv
, transformers
}:
mkDerivation {

pname = "pipes-bytestring";
version = "2.1.4";
sha256 = "6c3f72de28aa538887f6c442884e88a4a0219057998e3710b81439dcb4466deb";
libraryHaskellDepends = [
base
bytestring
pipes
pipes-group
pipes-parse
transformers
];
doHaddock = false;
doCheck = false;
description = "ByteString support for pipes";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-cacophony" = callPackage
({
  mkDerivation
, base
, bytestring
, cacophony
, memory
, pipes
, stdenv
}:
mkDerivation {

pname = "pipes-cacophony";
version = "0.4.1";
sha256 = "bcf15287c4ae951ed12e83c41795dfe212b87cc9b93420dc74783b44e54c5360";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
cacophony
memory
pipes
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/centromere/pipes-cacophony";
description = "Pipes for Noise-secured network connections";
license = stdenv.lib.licenses.publicDomain;

}) {};
"pipes-category" = callPackage
({
  mkDerivation
, base
, lens
, mtl
, pipes
, pipes-extras
, stdenv
}:
mkDerivation {

pname = "pipes-category";
version = "0.2.0.1";
sha256 = "9da046ca3b30115bad0d3ab447250675543c159c9a6e865d2ae863c61ead6679";
libraryHaskellDepends = [
base
lens
mtl
pipes
pipes-extras
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/pipes-category#readme";
description = "Allows instances for Category, Arrow and ArrowChoice for Pipes";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-concurrency" = callPackage
({
  mkDerivation
, base
, contravariant
, pipes
, stdenv
, stm
, void
}:
mkDerivation {

pname = "pipes-concurrency";
version = "2.0.7";
sha256 = "14a47f0096361b495330b4489c3534ee37f507550ffa2f57cb0e70362df47559";
libraryHaskellDepends = [
base
contravariant
pipes
stm
void
];
doHaddock = false;
doCheck = false;
description = "Concurrency for the pipes ecosystem";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-csv" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, cassava
, pipes
, stdenv
, unordered-containers
, vector
}:
mkDerivation {

pname = "pipes-csv";
version = "1.4.3";
sha256 = "9485f5ddd56ec9bb10d26cdf2b5b67754726e36b167652b11cb0a42acbda68b3";
libraryHaskellDepends = [
base
blaze-builder
bytestring
cassava
pipes
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
description = "Fast, streaming csv parser";
license = stdenv.lib.licenses.mit;

}) {};
"pipes-extras" = callPackage
({
  mkDerivation
, base
, foldl
, pipes
, stdenv
, transformers
}:
mkDerivation {

pname = "pipes-extras";
version = "1.0.8";
sha256 = "4d0f7932212988b5e4c661238d66db316cd11bae15506a87d925ae058194d37b";
libraryHaskellDepends = [
base
foldl
pipes
transformers
];
doHaddock = false;
doCheck = false;
description = "Extra utilities for pipes";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-fluid" = callPackage
({
  mkDerivation
, base
, constraints
, lens
, lifted-async
, monad-control
, pipes
, semigroups
, stdenv
, stm
, these
, transformers
, transformers-base
}:
mkDerivation {

pname = "pipes-fluid";
version = "0.5.0.3";
sha256 = "0d2ef03e16992ef96a4f5d15f1c6d566c7ea7d65eb87e9c64be081d8a60b2b39";
libraryHaskellDepends = [
base
constraints
lens
lifted-async
monad-control
pipes
semigroups
stm
these
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/pipes-fluid#readme";
description = "Reactively combines Producers so that a value is yielded as soon as possible";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-group" = callPackage
({
  mkDerivation
, base
, free
, pipes
, pipes-parse
, stdenv
, transformers
}:
mkDerivation {

pname = "pipes-group";
version = "1.0.6";
sha256 = "07ad6f6ba7675b59aeb3be77171170da99a6f54e18b8d477d52f94b05e8ab766";
libraryHaskellDepends = [
base
free
pipes
pipes-parse
transformers
];
doHaddock = false;
doCheck = false;
description = "Group streams into substreams";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-misc" = callPackage
({
  mkDerivation
, base
, clock
, Decimal
, lens
, mmorph
, mtl
, pipes
, pipes-category
, pipes-concurrency
, semigroups
, stdenv
, stm
, transformers
}:
mkDerivation {

pname = "pipes-misc";
version = "0.2.5.0";
sha256 = "69cf964dcc21efcf74a30e2bf792405019fb0b0ab22130ca806f7907f1ed3669";
libraryHaskellDepends = [
base
clock
Decimal
lens
mmorph
mtl
pipes
pipes-category
pipes-concurrency
semigroups
stm
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/pipes-misc#readme";
description = "Miscellaneous utilities for pipes, required by glazier-tutorial";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-mongodb" = callPackage
({
  mkDerivation
, base
, monad-control
, mongoDB
, pipes
, stdenv
}:
mkDerivation {

pname = "pipes-mongodb";
version = "0.1.0.0";
sha256 = "0821194bdf7f377beeb20fc8f697ed5388a221b6e8e42c513eea67a91c198340";
libraryHaskellDepends = [
base
monad-control
mongoDB
pipes
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jb55/pipes-mongodb";
description = "Stream results from MongoDB";
license = stdenv.lib.licenses.mit;

}) {};
"pipes-parse" = callPackage
({
  mkDerivation
, base
, pipes
, stdenv
, transformers
}:
mkDerivation {

pname = "pipes-parse";
version = "3.0.8";
sha256 = "d28f831b2c8229cca567ee95570787d2dd3f5cfcff3b3c44ee308360a8c107a9";
libraryHaskellDepends = [
base
pipes
transformers
];
doHaddock = false;
doCheck = false;
description = "Parsing infrastructure for the pipes ecosystem";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-random" = callPackage
({
  mkDerivation
, base
, mwc-random
, pipes
, stdenv
, vector
}:
mkDerivation {

pname = "pipes-random";
version = "1.0.0.3";
sha256 = "729c3359e4f76048b0a9c656e4739c369619b8abce546a741f8d55e2a7b31193";
libraryHaskellDepends = [
base
mwc-random
pipes
vector
];
doHaddock = false;
doCheck = false;
description = "Producers for handling randomness";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-safe" = callPackage
({
  mkDerivation
, base
, containers
, exceptions
, monad-control
, mtl
, pipes
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "pipes-safe";
version = "2.2.5";
sha256 = "0242cfe67853dc5bd94c979b06da25423d8bf96c3b095f4d33b745c78605a67c";
libraryHaskellDepends = [
base
containers
exceptions
monad-control
mtl
pipes
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
description = "Safety for the pipes ecosystem";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-text" = callPackage
({
  mkDerivation
, base
, bytestring
, pipes
, pipes-bytestring
, pipes-group
, pipes-parse
, pipes-safe
, stdenv
, streaming-commons
, text
, transformers
}:
mkDerivation {

pname = "pipes-text";
version = "0.0.2.5";
sha256 = "4489ee02a8ebfd87049fc4dd1380b21e6f33984eb0101c836ab8e054759c0f2a";
libraryHaskellDepends = [
base
bytestring
pipes
pipes-bytestring
pipes-group
pipes-parse
pipes-safe
streaming-commons
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/michaelt/text-pipes";
description = "properly streaming text";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-wai" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, http-types
, pipes
, stdenv
, transformers
, wai
}:
mkDerivation {

pname = "pipes-wai";
version = "3.2.0";
sha256 = "04a670df140c12b64f6f0d04b3c5571527f144ee429e7030bb62ec8785056d2a";
libraryHaskellDepends = [
base
blaze-builder
bytestring
http-types
pipes
transformers
wai
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/iand675/pipes-wai";
description = "A port of wai-conduit for the pipes ecosystem";
license = stdenv.lib.licenses.mit;

}) {};
"pixelated-avatar-generator" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, cli
, JuicyPixels
, pureMD5
, random
, split
, stdenv
}:
mkDerivation {

pname = "pixelated-avatar-generator";
version = "0.1.3";
sha256 = "4d7d87404121f5481faa7d6af087575a9541aaad96b196ec230d1883a563a078";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
JuicyPixels
pureMD5
split
];
executableHaskellDepends = [
async
base
cli
random
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ExcaliburZero/pixelated-avatar-generator";
description = "A library and application for generating pixelated avatars";
license = stdenv.lib.licenses.mit;

}) {};
"pkcs10" = callPackage
({
  mkDerivation
, asn1-encoding
, asn1-parse
, asn1-types
, base
, bytestring
, cryptonite
, pem
, stdenv
, x509
}:
mkDerivation {

pname = "pkcs10";
version = "0.2.0.0";
sha256 = "896e923f67bac4c7f0e48c9afca60f9ef5178e00fca9f179e8fdae3c12476294";
libraryHaskellDepends = [
asn1-encoding
asn1-parse
asn1-types
base
bytestring
cryptonite
pem
x509
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fcomb/pkcs10-hs#readme";
description = "PKCS#10 library";
license = stdenv.lib.licenses.asl20;

}) {};
"placeholders" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "placeholders";
version = "0.1";
sha256 = "652a78553dcaf6e11b4cd8f0e60010b32da299fbe57721df4bf9157e852d0346";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ahammar/placeholders";
description = "Placeholders for use while developing Haskell code";
license = stdenv.lib.licenses.bsd3;

}) {};
"plan-b" = callPackage
({
  mkDerivation
, base
, exceptions
, path
, path-io
, stdenv
, transformers
}:
mkDerivation {

pname = "plan-b";
version = "0.2.0";
sha256 = "f1654b249a0ee36a5a6ed1a85d2ab4641405d9b28ebe57ded594b7c65180c769";
libraryHaskellDepends = [
base
exceptions
path
path-io
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/plan-b";
description = "Failure-tolerant file and directory editing";
license = stdenv.lib.licenses.bsd3;

}) {};
"plot" = callPackage
({
  mkDerivation
, array
, base
, cairo
, colour
, hmatrix
, mtl
, pango
, stdenv
, transformers
}:
mkDerivation {

pname = "plot";
version = "0.2.3.6";
sha256 = "ad606de1d746f26cea36f1818209adab83bb32bf46b562465930f64c975afdfd";
libraryHaskellDepends = [
array
base
cairo
colour
hmatrix
mtl
pango
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/amcphail/plot";
description = "A plotting library, exportable as eps/pdf/svg/png or renderable with gtk";
license = stdenv.lib.licenses.bsd3;

}) {};
"plot-gtk" = callPackage
({
  mkDerivation
, base
, glib
, gtk
, hmatrix
, mtl
, plot
, process
, stdenv
}:
mkDerivation {

pname = "plot-gtk";
version = "0.2.0.4";
sha256 = "9c0a445162ae66c2badd8b6b0a760f5ee4ac4861852764eb4a550787de2c07bb";
libraryHaskellDepends = [
base
glib
gtk
hmatrix
mtl
plot
process
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/plot";
description = "GTK plots and interaction with GHCi";
license = stdenv.lib.licenses.bsd3;

}) {};
"plot-gtk-ui" = callPackage
({
  mkDerivation
, base
, cairo
, colour
, fixed-vector
, gtk
, hmatrix
, plot
, stdenv
, text
, vector
}:
mkDerivation {

pname = "plot-gtk-ui";
version = "0.3.0.2";
sha256 = "e7e89440798058ef082dc268795a482b9462d21ff08336bb8517b6830c0518da";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
cairo
colour
fixed-vector
gtk
hmatrix
plot
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sumitsahrawat/plot-gtk-ui";
description = "A quick way to use Mathematica like Manipulation abilities";
license = stdenv.lib.licenses.gpl2;

}) {};
"plot-gtk3" = callPackage
({
  mkDerivation
, base
, glib
, gtk3
, hmatrix
, mtl
, plot
, process
, stdenv
}:
mkDerivation {

pname = "plot-gtk3";
version = "0.1.0.2";
sha256 = "79098174d2a1bf5f715bc6b68bf0086036603d77a6c55cc95babc201355dd1d9";
libraryHaskellDepends = [
base
glib
gtk3
hmatrix
mtl
plot
process
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/plot";
description = "GTK3 plots and interaction with GHCi";
license = stdenv.lib.licenses.bsd3;

}) {};
"plutus-prototype" = callPackage
({
  mkDerivation
, base
, bifunctors
, binary
, bytestring
, cardano-crypto
, cryptonite
, ed25519
, either
, filepath
, lens
, memory
, mtl
, operational
, parsec
, stdenv
, transformers
}:
mkDerivation {

pname = "plutus-prototype";
version = "0.1.0.0";
src = ./../.;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bifunctors
binary
bytestring
cardano-crypto
cryptonite
ed25519
either
filepath
lens
memory
mtl
operational
parsec
transformers
];
doHaddock = false;
homepage = "iohk.io";
description = "Prototype of the Plutus language";
license = stdenv.lib.licenses.mit;

}) {};
"point-octree" = callPackage
({
  mkDerivation
, AC-Vector
, base
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "point-octree";
version = "0.5.5.3";
sha256 = "15fc7047520cd25a119029057f467a3956641b76978041afb7470ed638750552";
libraryHaskellDepends = [
AC-Vector
base
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mlitchard/point-octree";
description = "Point octree, with bounding boxes";
license = stdenv.lib.licenses.bsd3;

}) {};
"pointed" = callPackage
({
  mkDerivation
, base
, comonad
, containers
, data-default-class
, hashable
, kan-extensions
, semigroupoids
, semigroups
, stdenv
, stm
, tagged
, transformers
, transformers-compat
, unordered-containers
}:
mkDerivation {

pname = "pointed";
version = "5";
sha256 = "8906b8af5125ab3376794a290c5484dbec5a35d0bd0a57e94392ec0e12535d17";
revision = "2";
editedCabalFile = "0x0x44mm29s3ycx17hw0clqvicbypf1w4r01gv3sbvzyy31qph7g";
libraryHaskellDepends = [
base
comonad
containers
data-default-class
hashable
kan-extensions
semigroupoids
semigroups
stm
tagged
transformers
transformers-compat
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/pointed/";
description = "Pointed and copointed data";
license = stdenv.lib.licenses.bsd3;

}) {};
"pointedlist" = callPackage
({
  mkDerivation
, base
, binary
, stdenv
}:
mkDerivation {

pname = "pointedlist";
version = "0.6.1";
sha256 = "743cb0f89cbb128f8aa24c4519b262b561bf2cd607f83e94f9241e8af1cfba9b";
libraryHaskellDepends = [
base
binary
];
doHaddock = false;
doCheck = false;
description = "A zipper-like comonad which works as a list, tracking a position";
license = stdenv.lib.licenses.bsd3;

}) {};
"pointful" = callPackage
({
  mkDerivation
, base
, containers
, haskell-src-exts-simple
, mtl
, stdenv
, syb
, transformers
}:
mkDerivation {

pname = "pointful";
version = "1.0.9";
sha256 = "6a1881236419751beb5b2e4e495bd9093ea2dec3f3cbd44e2a62aaabe53cacd6";
revision = "1";
editedCabalFile = "13lwn5zy44cbmax8ic1j8dhrzn7hxws5mcjrjyjwqcn2abmwc2js";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
haskell-src-exts-simple
mtl
syb
transformers
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/23Skidoo/pointful";
description = "Pointful refactoring tool";
license = stdenv.lib.licenses.bsd3;

}) {};
"pointless-fun" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "pointless-fun";
version = "1.1.0.6";
sha256 = "d05c59dac408a81766d676da2fb98025e75e0c3d0a07bdb458759d5c41e3b054";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "Some common point-free combinators";
license = stdenv.lib.licenses.bsd3;

}) {};
"polynomials-bernstein" = callPackage
({
  mkDerivation
, base
, stdenv
, vector
}:
mkDerivation {

pname = "polynomials-bernstein";
version = "1.1.2";
sha256 = "6950f2e791533a40e7e41ff98679f680f27c7b66258b57871027bf0e5adc7062";
libraryHaskellDepends = [
base
vector
];
doHaddock = false;
doCheck = false;
description = "A solver for systems of polynomial equations in bernstein form";
license = "GPL";

}) {};
"polyparse" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "polyparse";
version = "1.12";
sha256 = "f54c63584ace968381de4a06bd7328b6adc3e1a74fd336e18449e0dd7650be15";
libraryHaskellDepends = [
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~malcolm/polyparse/";
description = "A variety of alternative parser combinator libraries";
license = "LGPL";

}) {};
"posix-paths" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, unix
}:
mkDerivation {

pname = "posix-paths";
version = "0.2.1.1";
sha256 = "dff5332ea4648bb2c4e25ce2f79d89282f653af60f03b09efe8110673709245f";
libraryHaskellDepends = [
base
bytestring
unix
];
doHaddock = false;
doCheck = false;
description = "POSIX filepath/directory functionality";
license = stdenv.lib.licenses.bsd3;

}) {};
"posix-realtime" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, unix
}:
mkDerivation {

pname = "posix-realtime";
version = "0.0.0.4";
sha256 = "692cbab92e272e00b9402389c199be27add8c6f82b675c512085a36acc4ddf07";
libraryHaskellDepends = [
base
bytestring
unix
];
doHaddock = false;
doCheck = false;
description = "POSIX Realtime functionality";
license = stdenv.lib.licenses.bsd3;

}) {};
"post-mess-age" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "post-mess-age";
version = "0.2.1.0";
sha256 = "d0f69ab1cb130a9f8bb54cd1f3b0167184af885fedba89ff32fec8e54e95d64c";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Send messages to a handle concurrently without getting them mixed";
license = stdenv.lib.licenses.bsd3;

}) {};
"postgresql-binary" = callPackage
({
  mkDerivation
, aeson
, base
, base-prelude
, binary-parser
, bytestring
, foldl
, loch-th
, placeholders
, scientific
, stdenv
, text
, time
, transformers
, uuid
, vector
}:
mkDerivation {

pname = "postgresql-binary";
version = "0.9.3";
sha256 = "fdc10a4ccc5c6927f39d89450395c5316448b5f4d763c6386d1b056cc9685d04";
libraryHaskellDepends = [
aeson
base
base-prelude
binary-parser
bytestring
foldl
loch-th
placeholders
scientific
text
time
transformers
uuid
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/postgresql-binary";
description = "Encoders and decoders for the PostgreSQL's binary format";
license = stdenv.lib.licenses.mit;

}) {};
"postgresql-libpq" = callPackage
({
  mkDerivation
, base
, bytestring
, postgresql
, stdenv
}:
mkDerivation {

pname = "postgresql-libpq";
version = "0.9.3.0";
sha256 = "510df3e08753e011c108c4d4c6d048a4b67545419eb9eedc3ef23e7758fedb05";
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
postgresql
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/lpsmith/postgresql-libpq";
description = "low-level binding to libpq";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) postgresql;};
"postgresql-simple" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, bytestring-builder
, case-insensitive
, containers
, hashable
, postgresql-libpq
, scientific
, stdenv
, template-haskell
, text
, time
, transformers
, uuid-types
, vector
}:
mkDerivation {

pname = "postgresql-simple";
version = "0.5.2.1";
sha256 = "707a1683dfbd944ddee389e0b1c895038460925137ee21478eb03dd12d48277c";
revision = "1";
editedCabalFile = "1cw38hryd9sdqvb6c3dgwdswmlfh88lsnp8h6cddz14k2xmghbk0";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
bytestring-builder
case-insensitive
containers
hashable
postgresql-libpq
scientific
template-haskell
text
time
transformers
uuid-types
vector
];
doHaddock = false;
doCheck = false;
description = "Mid-Level PostgreSQL client library";
license = stdenv.lib.licenses.bsd3;

}) {};
"postgresql-simple-migration" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, cryptohash
, directory
, postgresql-simple
, stdenv
, text
, time
}:
mkDerivation {

pname = "postgresql-simple-migration";
version = "0.1.9.0";
sha256 = "005d2f031ab8d889daaee5cffdb222dbe164267042829b88031166b66361726a";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
base64-bytestring
bytestring
cryptohash
directory
postgresql-simple
time
];
executableHaskellDepends = [
base
base64-bytestring
bytestring
cryptohash
directory
postgresql-simple
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ameingast/postgresql-simple-migration";
description = "PostgreSQL Schema Migrations";
license = stdenv.lib.licenses.bsd3;

}) {};
"postgresql-simple-url" = callPackage
({
  mkDerivation
, base
, network-uri
, postgresql-simple
, split
, stdenv
}:
mkDerivation {

pname = "postgresql-simple-url";
version = "0.2.0.0";
sha256 = "f7d85afe7dd047c63aa56cc67e8d28e1d18f33baff8ee447adc5bec427b6ea4c";
revision = "1";
editedCabalFile = "1z9qk3kplc5y93h3xbb9gialhdmnblwrmf2943wkj70qg975hajb";
libraryHaskellDepends = [
base
network-uri
postgresql-simple
split
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/futurice/postgresql-simple-url";
description = "Parse postgres:// url into ConnectInfo";
license = stdenv.lib.licenses.mit;

}) {};
"postgresql-transactional" = callPackage
({
  mkDerivation
, base
, monad-control
, mtl
, postgresql-simple
, stdenv
}:
mkDerivation {

pname = "postgresql-transactional";
version = "1.1.1";
sha256 = "f9302a1e134b31f2e9bd243c4fe36a25b3a9a9d6984288be1bc9c29882545ed3";
libraryHaskellDepends = [
base
monad-control
mtl
postgresql-simple
];
doHaddock = false;
doCheck = false;
description = "a transactional monad on top of postgresql-simple";
license = stdenv.lib.licenses.mit;

}) {};
"postgresql-typed" = callPackage
({
  mkDerivation
, aeson
, array
, attoparsec
, base
, binary
, bytestring
, containers
, cryptonite
, haskell-src-meta
, HDBC
, memory
, network
, old-locale
, postgresql-binary
, scientific
, stdenv
, template-haskell
, text
, time
, utf8-string
, uuid
}:
mkDerivation {

pname = "postgresql-typed";
version = "0.5.0";
sha256 = "c6b93a05eff7b5a315dfe26abdd6885dd9290dec3096c3cc795c16bc1395f2ff";
revision = "1";
editedCabalFile = "07w5k4k4g8xwrs5i06s0lxvibacwh5gavs47wikbfb43d1jwywmg";
libraryHaskellDepends = [
aeson
array
attoparsec
base
binary
bytestring
containers
cryptonite
haskell-src-meta
HDBC
memory
network
old-locale
postgresql-binary
scientific
template-haskell
text
time
utf8-string
uuid
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dylex/postgresql-typed";
description = "A PostgreSQL library with compile-time SQL type inference and optional HDBC backend";
license = stdenv.lib.licenses.bsd3;

}) {};
"pqueue" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "pqueue";
version = "1.3.2";
sha256 = "58d6c91432d91c1e9908495f5bfeb231239a53b5c59bda724fe8d7bd3873adf1";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
description = "Reliable, persistent, fast priority queues";
license = stdenv.lib.licenses.bsd3;

}) {};
"pred-set" = callPackage
({
  mkDerivation
, base
, hashable
, hashtables
, HSet
, stdenv
}:
mkDerivation {

pname = "pred-set";
version = "0.0.1";
sha256 = "cb22ec50f94cf76b6bc55fd66b91badfef657cbe1a6b6a59b691e48004c37726";
libraryHaskellDepends = [
base
hashable
hashtables
HSet
];
doHaddock = false;
doCheck = false;
description = "Simple cached predicates";
license = stdenv.lib.licenses.bsd3;

}) {};
"prednote" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, contravariant
, rainbow
, split
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "prednote";
version = "0.36.0.4";
sha256 = "acb4f240e01afdbab0020ee09d3abd2f80cfdcfdbf8cd5abe49b3477a2ca2b8d";
libraryHaskellDepends = [
base
bytestring
containers
contravariant
rainbow
split
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/massysett/prednote";
description = "Evaluate and display trees of predicates";
license = stdenv.lib.licenses.bsd3;

}) {};
"prefix-units" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "prefix-units";
version = "0.2.0";
sha256 = "050abdf827a5bd014a2628b195fbd59bb226020612c99e86a082ac1c8274e384";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/iustin/prefix-units";
description = "A basic library for SI/binary prefix units";
license = stdenv.lib.licenses.bsd3;

}) {};
"prelude-extras" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "prelude-extras";
version = "0.4.0.3";
sha256 = "09bb087f0870a353ec1e7e1a08017b9a766d430d956afb88ca000a6a876bf877";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/prelude-extras";
description = "Higher order versions of Prelude classes";
license = stdenv.lib.licenses.bsd3;

}) {};
"prelude-safeenum" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "prelude-safeenum";
version = "0.1.1.2";
sha256 = "d4f9f195d31198fa1a5e1edfb50684971cc5dc2695bf38c1e7e2dabdce329727";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "A redefinition of the Prelude's Enum class in order to render it safe";
license = stdenv.lib.licenses.bsd3;

}) {};
"preprocessor-tools" = callPackage
({
  mkDerivation
, base
, mtl
, parsec
, stdenv
, syb
}:
mkDerivation {

pname = "preprocessor-tools";
version = "1.0.1";
sha256 = "c946c99fe8c9effba27946cd2c26173d2346340528d800a228796d68f8aeee59";
libraryHaskellDepends = [
base
mtl
parsec
syb
];
doHaddock = false;
doCheck = false;
homepage = "http://www.eecs.harvard.edu/~tov/pubs/haskell-session-types/";
description = "A framework for extending Haskell's syntax via quick-and-dirty preprocessors";
license = stdenv.lib.licenses.bsd3;

}) {};
"presburger" = callPackage
({
  mkDerivation
, base
, containers
, pretty
, stdenv
}:
mkDerivation {

pname = "presburger";
version = "1.3.1";
sha256 = "86021abbd457b3bac9cb0f09ce741c4c03de433ca8834532d68d84f90cc3d097";
revision = "1";
editedCabalFile = "0pabxck7iyhyj7wf1bflg86xb2jip4vaspf080rfdc5s2cg0d23w";
libraryHaskellDepends = [
base
containers
pretty
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yav/presburger";
description = "A decision procedure for quantifier-free linear arithmetic";
license = stdenv.lib.licenses.bsd3;

}) {};
"pretty-class" = callPackage
({
  mkDerivation
, base
, pretty
, stdenv
}:
mkDerivation {

pname = "pretty-class";
version = "1.0.1.1";
sha256 = "558d1b506ff58afb0a5fb9d85ea93a94687cc1aabcc5a112a6ee4375a7b8aee1";
libraryHaskellDepends = [
base
pretty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ddssff/pretty-class";
description = "Pretty printing class similar to Show";
license = stdenv.lib.licenses.bsd3;

}) {};
"pretty-hex" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "pretty-hex";
version = "1.0";
sha256 = "ff9a5f2023d6a4454f06cc395726b4cac3f9d0ea03759b14ccf7d62df79e9c7a";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "A library for hex dumps of ByteStrings";
license = stdenv.lib.licenses.bsd3;

}) {};
"pretty-show" = callPackage
({
  mkDerivation
, array
, base
, filepath
, ghc-prim
, happy
, haskell-lexer
, pretty
, stdenv
}:
mkDerivation {

pname = "pretty-show";
version = "1.6.12";
sha256 = "9629c98ac0f2eb215cd81cf61321c5181acd18df35d89817093e934f786774b9";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
array
base
filepath
ghc-prim
haskell-lexer
pretty
];
libraryToolDepends = [
happy
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://wiki.github.com/yav/pretty-show";
description = "Tools for working with derived `Show` instances and generic inspection of values";
license = stdenv.lib.licenses.mit;

}) {};
"pretty-simple" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, containers
, mtl
, parsec
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "pretty-simple";
version = "2.0.0.0";
sha256 = "e64bfc73a962bba3f773e8e271d63e3e25924e1a6febbea7d3935d37ae856fbe";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-terminal
base
containers
mtl
parsec
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/pretty-simple";
description = "pretty printer for data types with a 'Show' instance";
license = stdenv.lib.licenses.bsd3;

}) {};
"pretty-types" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, tagged
}:
mkDerivation {

pname = "pretty-types";
version = "0.2.3.1";
sha256 = "e56c49d1099aaeafe0b982ef9e60cb7194fd987c4b659a8d7bcde380d3b8784f";
libraryHaskellDepends = [
base
mtl
tagged
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sheyll/pretty-types#readme";
description = "A small pretty printing DSL for complex types";
license = stdenv.lib.licenses.bsd3;

}) {};
"prettyclass" = callPackage
({
  mkDerivation
, base
, pretty
, stdenv
}:
mkDerivation {

pname = "prettyclass";
version = "1.0.0.0";
sha256 = "e537446e7a346e5e0872ed8281db2bb0220c737f10757848c901da1399548986";
libraryHaskellDepends = [
base
pretty
];
doHaddock = false;
doCheck = false;
description = "Pretty printing class similar to Show";
license = stdenv.lib.licenses.bsd3;

}) {};
"primes" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "primes";
version = "0.2.1.0";
sha256 = "74d66558fb638ea4d31eae2fe1a294cb5a9d64491314305d74a11d93f277c65b";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/sebfisch/primes";
description = "Efficient, purely functional generation of prime numbers";
license = stdenv.lib.licenses.bsd3;

}) {};
"primitive" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
, transformers
}:
mkDerivation {

pname = "primitive";
version = "0.6.1.0";
sha256 = "93731fa72eaf74e8e83453f080828e18cec9fbc82bee91b49ba8b61c043d38c8";
revision = "1";
editedCabalFile = "0gb8lcn6bd6ilfln7ah9jmqq6324vgkrgdsnz1qvlyj3bi2w5ivf";
libraryHaskellDepends = [
base
ghc-prim
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell/primitive";
description = "Primitive memory-related operations";
license = stdenv.lib.licenses.bsd3;

}) {};
"printcess" = callPackage
({
  mkDerivation
, base
, containers
, lens
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "printcess";
version = "0.1.0.3";
sha256 = "5f6c220f9e0251785c8b250df3636c2d012d2a670677df46dad64ca4949eb52a";
libraryHaskellDepends = [
base
containers
lens
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/m0rphism/printcess/";
description = "Pretty printing with indentation, mixfix operators, and automatic line breaks";
license = stdenv.lib.licenses.bsd3;

}) {};
"process-extras" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default
, deepseq
, generic-deriving
, ListLike
, mtl
, process
, stdenv
, text
}:
mkDerivation {

pname = "process-extras";
version = "0.7.1";
sha256 = "d25f6228825960b90f86aba3e49bf27fe1cd2f893b44ccb748c3442aa6bcd30f";
libraryHaskellDepends = [
base
bytestring
data-default
deepseq
generic-deriving
ListLike
mtl
process
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/seereason/process-extras";
description = "Process extras";
license = stdenv.lib.licenses.mit;

}) {};
"product-profunctors" = callPackage
({
  mkDerivation
, base
, contravariant
, profunctors
, stdenv
, tagged
, template-haskell
}:
mkDerivation {

pname = "product-profunctors";
version = "0.7.1.0";
sha256 = "9800a0ebd9334b2503b692ac1a11bcf9bfbe0213d737a9aa9620c2761bb9d334";
revision = "1";
editedCabalFile = "1rds0bhac5f45nsa0riv3b730vmxqkmh0s305bic32a4mljd3ajn";
libraryHaskellDepends = [
base
contravariant
profunctors
tagged
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tomjaguarpaw/product-profunctors";
description = "product-profunctors";
license = stdenv.lib.licenses.bsd3;

}) {};
"profiteur" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, filepath
, ghc-prof
, js-jquery
, scientific
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "profiteur";
version = "0.4.2.1";
sha256 = "6b2af36243f15aa5396e0056159d9ad38422cce9eebafa59e6d439b2a8932916";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
aeson
base
bytestring
containers
filepath
ghc-prof
js-jquery
scientific
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jaspervdj/profiteur";
description = "Treemap visualiser for GHC prof files";
license = stdenv.lib.licenses.bsd3;

}) {};
"profunctor-extras" = callPackage
({
  mkDerivation
, base
, profunctors
, stdenv
}:
mkDerivation {

pname = "profunctor-extras";
version = "4.0";
sha256 = "8a3c51ef41d686e39f87875dd48e72e5aa83956125bdf9922edf531c292a4482";
libraryHaskellDepends = [
base
profunctors
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/profunctor-extras/";
description = "This package has been absorbed into profunctors 4.0";
license = stdenv.lib.licenses.bsd3;

}) {};
"profunctors" = callPackage
({
  mkDerivation
, base
, base-orphans
, bifunctors
, comonad
, contravariant
, distributive
, stdenv
, tagged
, transformers
}:
mkDerivation {

pname = "profunctors";
version = "5.2";
sha256 = "87a7e25c4745ea8ff479dd1212ec2e57710abb3d3dd30f948fa16be1d3ee05a4";
revision = "1";
editedCabalFile = "1q0zva60kqb560fr0ii0gm227sg6q7ddbhriv64l6nfv509vw32k";
libraryHaskellDepends = [
base
base-orphans
bifunctors
comonad
contravariant
distributive
tagged
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/profunctors/";
description = "Profunctors";
license = stdenv.lib.licenses.bsd3;

}) {};
"project-template" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, conduit
, conduit-extra
, containers
, directory
, filepath
, mtl
, resourcet
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "project-template";
version = "0.2.0";
sha256 = "aeabd7d1785b31abaffc78f02d9dda67d57d01822755f09614bfc65e99506310";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
conduit
conduit-extra
containers
directory
filepath
mtl
resourcet
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/haskell-ide";
description = "Specify Haskell project templates and generate files";
license = stdenv.lib.licenses.bsd3;

}) {};
"projectroot" = callPackage
({
  mkDerivation
, base
, directory
, stdenv
}:
mkDerivation {

pname = "projectroot";
version = "0.2.0.1";
sha256 = "53753086543ed199cf6f0d76852660f5d74c0874bfdee21c0f4e0d845b7e1ab8";
libraryHaskellDepends = [
base
directory
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yamadapc/haskell-projectroot";
description = "Bindings to the projectroot C logic";
license = stdenv.lib.licenses.mit;

}) {};
"prometheus-client" = callPackage
({
  mkDerivation
, atomic-primops
, base
, bytestring
, containers
, mtl
, stdenv
, stm
, time
, transformers
, utf8-string
}:
mkDerivation {

pname = "prometheus-client";
version = "0.1.0.1";
sha256 = "bdc0b7a6df25037dbc10d16960922ce8f3582d7eb79c5d60360e61da3220772f";
libraryHaskellDepends = [
atomic-primops
base
bytestring
containers
mtl
stm
time
transformers
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fimad/prometheus-haskell";
description = "Haskell client library for http://prometheus.io.";
license = stdenv.lib.licenses.asl20;

}) {};
"prometheus-metrics-ghc" = callPackage
({
  mkDerivation
, base
, prometheus-client
, stdenv
, utf8-string
}:
mkDerivation {

pname = "prometheus-metrics-ghc";
version = "0.1.0.1";
sha256 = "17842db364e459d59e5f298345828843622b4e095b37b8ad7c556a2722854795";
libraryHaskellDepends = [
base
prometheus-client
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fimad/prometheus-haskell";
description = "Metrics exposing GHC runtime information for use with prometheus-client";
license = stdenv.lib.licenses.asl20;

}) {};
"prompt" = callPackage
({
  mkDerivation
, base
, base-compat
, mtl
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "prompt";
version = "0.1.1.2";
sha256 = "67b5711ef4c650747645b6d9de16a8bb04e04d1c2e4d39e3a8d4099873a151f2";
libraryHaskellDepends = [
base
base-compat
mtl
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mstksg/prompt";
description = "Monad (and transformer) for deferred-effect pure prompt-response queries";
license = stdenv.lib.licenses.mit;

}) {};
"protobuf" = callPackage
({
  mkDerivation
, base
, base-orphans
, bytestring
, cereal
, data-binary-ieee754
, deepseq
, mtl
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "protobuf";
version = "0.2.1.1";
sha256 = "cd659a085b670d204c0b4ddf0cb323e4f024c9d972cf183dc14154a44d5e722c";
libraryHaskellDepends = [
base
base-orphans
bytestring
cereal
data-binary-ieee754
deepseq
mtl
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/alphaHeavy/protobuf";
description = "Google Protocol Buffers via GHC.Generics";
license = stdenv.lib.licenses.bsd3;

}) {};
"protobuf-simple" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, data-binary-ieee754
, directory
, filepath
, mtl
, parsec
, split
, stdenv
, text
}:
mkDerivation {

pname = "protobuf-simple";
version = "0.1.0.2";
sha256 = "ef2b79ffd3f11796027cbc5bbcfcc68a6d1948f66acd079bb60c6d6ed00622f3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
binary
bytestring
containers
data-binary-ieee754
mtl
text
];
executableHaskellDepends = [
base
containers
directory
filepath
mtl
parsec
split
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sru-systems/protobuf-simple";
description = "Simple Protocol Buffers library (proto2)";
license = stdenv.lib.licenses.mit;

}) {};
"protocol-buffers" = callPackage
({
  mkDerivation
, array
, base
, binary
, bytestring
, containers
, directory
, filepath
, mtl
, parsec
, stdenv
, syb
, utf8-string
}:
mkDerivation {

pname = "protocol-buffers";
version = "2.4.0";
sha256 = "1c4e8249a4913444cf5f0df7a1129ba8021b2eb09d99bce2af0d69791e5ffe69";
libraryHaskellDepends = [
array
base
binary
bytestring
containers
directory
filepath
mtl
parsec
syb
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/k-bx/protocol-buffers";
description = "Parse Google Protocol Buffer specifications";
license = stdenv.lib.licenses.bsd3;

}) {};
"protocol-buffers-descriptor" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, protocol-buffers
, stdenv
}:
mkDerivation {

pname = "protocol-buffers-descriptor";
version = "2.4.0";
sha256 = "f894bcc3301c2c6306d795b99205c59d92d6fa81244f0d8d4f2cbe46c7b23df4";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
containers
protocol-buffers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/k-bx/protocol-buffers";
description = "Text.DescriptorProto.Options and code generated from the Google Protocol Buffer specification";
license = stdenv.lib.licenses.bsd3;

}) {};
"protolude" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, containers
, deepseq
, ghc-prim
, mtl
, safe
, stdenv
, stm
, text
, transformers
}:
mkDerivation {

pname = "protolude";
version = "0.1.10";
sha256 = "163296a518f0d7329dcdf040bf0eddb1fb804eee198405801fab8f192ce1c7a5";
libraryHaskellDepends = [
async
base
bytestring
containers
deepseq
ghc-prim
mtl
safe
stm
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sdiehl/protolude";
description = "A sensible set of defaults for writing custom Preludes";
license = stdenv.lib.licenses.mit;

}) {};
"proxied" = callPackage
({
  mkDerivation
, base
, generic-deriving
, stdenv
, tagged
}:
mkDerivation {

pname = "proxied";
version = "0.2";
sha256 = "76f3a157b2f5373d46aa4203369a17052ce472a21dc2b067f7810b117a1cee0b";
libraryHaskellDepends = [
base
generic-deriving
tagged
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RyanGlScott/proxied";
description = "Make functions consume Proxy instead of undefined";
license = stdenv.lib.licenses.bsd3;

}) {};
"psql-helpers" = callPackage
({
  mkDerivation
, base
, postgresql-simple
, stdenv
}:
mkDerivation {

pname = "psql-helpers";
version = "0.1.0.0";
sha256 = "f13ca642072477d3ab0246c514e3fc78e0c5cb419345240fbad994ed2a3219f4";
libraryHaskellDepends = [
base
postgresql-simple
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/agrafix/psql-helpers#readme";
description = "A small collection of helper functions to generate postgresql queries";
license = stdenv.lib.licenses.mit;

}) {};
"psqueues" = callPackage
({
  mkDerivation
, base
, deepseq
, ghc-prim
, hashable
, stdenv
}:
mkDerivation {

pname = "psqueues";
version = "0.2.2.3";
sha256 = "6d757c30f6fdc8df7ed62601f2b2530e71192109ab94d06dec4176c9c3eea6b5";
libraryHaskellDepends = [
base
deepseq
ghc-prim
hashable
];
doHaddock = false;
doCheck = false;
description = "Pure priority search queues";
license = stdenv.lib.licenses.bsd3;

}) {};
"publicsuffix" = callPackage
({
  mkDerivation
, base
, filepath
, stdenv
, template-haskell
}:
mkDerivation {

pname = "publicsuffix";
version = "0.20170109";
sha256 = "1b8c8b6c4eb93604598f5f6b7b671cc72b2f0d50a4dfe174e97a72d9919c1844";
libraryHaskellDepends = [
base
filepath
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/wereHamster/publicsuffix-haskell/";
description = "The publicsuffix list exposed as proper Haskell types";
license = stdenv.lib.licenses.mit;

}) {};
"pure-cdb" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, directory
, mtl
, stdenv
, vector
}:
mkDerivation {

pname = "pure-cdb";
version = "0.1.2";
sha256 = "25228a3052ad7f6cfc003569668c94c5ecaa7665a5e205b54f221bf42ff3f840";
libraryHaskellDepends = [
base
binary
bytestring
containers
directory
mtl
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bosu/pure-cdb";
description = "Another pure-haskell CDB (Constant Database) implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"pure-io" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, safe
, stdenv
}:
mkDerivation {

pname = "pure-io";
version = "0.2.1";
sha256 = "a9ef0f324ce29fecdcdb11f2ce0088bcf282951727d983824e05f12e519bfb5f";
libraryHaskellDepends = [
base
containers
mtl
safe
];
doHaddock = false;
doCheck = false;
description = "Pure IO monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"pureMD5" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, cereal
, crypto-api
, stdenv
, tagged
}:
mkDerivation {

pname = "pureMD5";
version = "2.1.3";
sha256 = "bef3358a5e3a45b649860a5792f052e2f927c0492a7056cf64425116c8a7b17d";
libraryHaskellDepends = [
base
binary
bytestring
cereal
crypto-api
tagged
];
doHaddock = false;
doCheck = false;
description = "A Haskell-only implementation of the MD5 digest (hash) algorithm";
license = stdenv.lib.licenses.bsd3;

}) {};
"purescript-bridge" = callPackage
({
  mkDerivation
, base
, containers
, directory
, filepath
, generic-deriving
, lens
, mtl
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "purescript-bridge";
version = "0.10.1.0";
sha256 = "1a5f92b77f01a214272aed6df3c0b47d28c8f7954c07b2d16f7cdd3f2c596223";
libraryHaskellDepends = [
base
containers
directory
filepath
generic-deriving
lens
mtl
text
transformers
];
doHaddock = false;
doCheck = false;
description = "Generate PureScript data types from Haskell data types";
license = stdenv.lib.licenses.bsd3;

}) {};
"pusher-http-haskell" = callPackage
({
  mkDerivation
, aeson
, base
, base16-bytestring
, bytestring
, cryptohash
, hashable
, http-client
, http-types
, stdenv
, text
, time
, transformers
, unordered-containers
}:
mkDerivation {

pname = "pusher-http-haskell";
version = "1.1.0.4";
sha256 = "7d52cf0d179e2585c82f1f223e9c6cedbc4c8d1489348d55ec89bc10f7087251";
libraryHaskellDepends = [
aeson
base
base16-bytestring
bytestring
cryptohash
hashable
http-client
http-types
text
time
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pusher-community/pusher-http-haskell";
description = "Haskell client library for the Pusher HTTP API";
license = stdenv.lib.licenses.mit;

}) {};
"pwstore-fast" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, binary
, byteable
, bytestring
, cryptohash
, random
, stdenv
}:
mkDerivation {

pname = "pwstore-fast";
version = "2.4.4";
sha256 = "7219af66b6f762d9dd5376b3b25393d4d6626e390e9d9c9f87f6e3f13ea7fbb2";
libraryHaskellDepends = [
base
base64-bytestring
binary
byteable
bytestring
cryptohash
random
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/PeterScott/pwstore";
description = "Secure password storage";
license = stdenv.lib.licenses.bsd3;

}) {};
"pwstore-purehaskell" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, byteable
, bytestring
, random
, SHA
, stdenv
}:
mkDerivation {

pname = "pwstore-purehaskell";
version = "2.1.4";
sha256 = "2cdd7039f1b6880d8f4f2eac44f4f4ce10c7c8286a6493f45a4c47c41fadf4bc";
libraryHaskellDepends = [
base
base64-bytestring
byteable
bytestring
random
SHA
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/PeterScott/pwstore";
description = "Secure password storage, in pure Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"questioner" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, readline
, stdenv
, terminal-size
}:
mkDerivation {

pname = "questioner";
version = "0.1.1.0";
sha256 = "83ab4047671f59832eaa377e3fb3fce547439550f57479dd09e0ad4975250617";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-terminal
base
readline
terminal-size
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yamadapc/haskell-questioner.git";
description = "A package for prompting values from the command-line";
license = stdenv.lib.licenses.mit;

}) {};
"quickbench" = callPackage
({
  mkDerivation
, base
, containers
, directory
, docopt
, pretty-show
, process
, safe
, split
, stdenv
, tabular
, time
}:
mkDerivation {

pname = "quickbench";
version = "1.0";
sha256 = "8bfe252e50a683346e753db312e9542f8d43256947ab215fcfd24af03787b926";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
directory
docopt
pretty-show
process
safe
split
tabular
time
];
executableHaskellDepends = [
base
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/simonmichael/quickbench#readme";
description = "quick & easy benchmarking of command-line programs";
license = "GPL";

}) {};
"quickcheck-arbitrary-adt" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "quickcheck-arbitrary-adt";
version = "0.2.0.0";
sha256 = "d9998dbfa2785f29164c0bdc345b2ffaed630dd5bfb1bdbaa3b0e13e0724c0db";
libraryHaskellDepends = [
base
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/plow-technologies/quickcheck-arbitrary-adt#readme";
description = "Generic typeclasses for generating arbitrary ADTs";
license = stdenv.lib.licenses.bsd3;

}) {};
"quickcheck-assertions" = callPackage
({
  mkDerivation
, base
, ieee754
, pretty-show
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "quickcheck-assertions";
version = "0.3.0";
sha256 = "9b0328a788dcac0824a7d7496ab403eef04170551255c9e58fb6e2e319a9cacf";
libraryHaskellDepends = [
base
ieee754
pretty-show
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/s9gf4ult/quickcheck-assertions";
description = "HUnit like assertions for QuickCheck";
license = stdenv.lib.licenses.lgpl3;

}) {};
"quickcheck-instances" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, hashable
, old-time
, QuickCheck
, scientific
, stdenv
, text
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "quickcheck-instances";
version = "0.3.12";
sha256 = "ddd5b988da50eff7f56737bff516fba52309f7461297698f04f1e8aaee9f9bf3";
revision = "2";
editedCabalFile = "1v1r7gidkjc2v4dw1id57raqnjqv4rc10pa2l6xhhg0dzrnw28a3";
libraryHaskellDepends = [
array
base
bytestring
containers
hashable
old-time
QuickCheck
scientific
text
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/aslatter/qc-instances";
description = "Common quickcheck instances";
license = stdenv.lib.licenses.bsd3;

}) {};
"quickcheck-io" = callPackage
({
  mkDerivation
, base
, HUnit
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "quickcheck-io";
version = "0.1.4";
sha256 = "6b3750590871b03908530764cdaa69ce67d5b514f533c1a4a6f4755f8267389d";
libraryHaskellDepends = [
base
HUnit
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hspec/quickcheck-io#readme";
description = "Use HUnit assertions as QuickCheck properties";
license = stdenv.lib.licenses.mit;

}) {};
"quickcheck-simple" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "quickcheck-simple";
version = "0.1.0.1";
sha256 = "a57b616bb19818b3d572b455243b6839461f1b9e3b6dd829035167f1f756d598";
libraryHaskellDepends = [
base
QuickCheck
];
doHaddock = false;
doCheck = false;
description = "Test properties and default-mains for QuickCheck";
license = stdenv.lib.licenses.bsd3;

}) {};
"quickcheck-special" = callPackage
({
  mkDerivation
, base
, bytestring
, ieee754
, QuickCheck
, scientific
, stdenv
, text
}:
mkDerivation {

pname = "quickcheck-special";
version = "0.1.0.3";
sha256 = "8dbe5c2cdefb35880433902402110c1d9927b96d2363df8382fb6ee7e8d3e2f7";
libraryHaskellDepends = [
base
bytestring
ieee754
QuickCheck
scientific
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/quickcheck-special#readme";
description = "Edge cases and special values for QuickCheck Arbitrary instances";
license = stdenv.lib.licenses.mit;

}) {};
"quickcheck-text" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, QuickCheck
, stdenv
, text
}:
mkDerivation {

pname = "quickcheck-text";
version = "0.1.2.1";
sha256 = "4442fdb8ae6cd469c04957d34fee46039c9dc0ddce23ce6050babe6826d0ab09";
libraryHaskellDepends = [
base
binary
bytestring
QuickCheck
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/olorin/quickcheck-text";
description = "Alternative arbitrary instance for Text";
license = stdenv.lib.licenses.mit;

}) {};
"quickcheck-unicode" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "quickcheck-unicode";
version = "1.0.0.1";
sha256 = "24c29caddc515d477878ef97581a0cebf760055ca0f260ba1762257abaa116a9";
libraryHaskellDepends = [
base
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/quickcheck-unicode";
description = "Generator and shrink functions for testing Unicode-related software";
license = stdenv.lib.licenses.bsd3;

}) {};
"rainbow" = callPackage
({
  mkDerivation
, base
, bytestring
, lens-simple
, process
, stdenv
, text
}:
mkDerivation {

pname = "rainbow";
version = "0.28.0.4";
sha256 = "829296f88be520a9a6c6de715ffa2bb926cecc0135b23f602cc4377bac4e8831";
libraryHaskellDepends = [
base
bytestring
lens-simple
process
text
];
doHaddock = false;
doCheck = false;
homepage = "https://www.github.com/massysett/rainbow";
description = "Print text to terminal with colors and effects";
license = stdenv.lib.licenses.bsd3;

}) {};
"rainbox" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, lens-simple
, rainbow
, stdenv
, text
}:
mkDerivation {

pname = "rainbox";
version = "0.18.0.10";
sha256 = "d692e95565b4ce4454536493ae4d6ba256eecf5e88e0495d156008ea76ba1b05";
libraryHaskellDepends = [
base
bytestring
containers
lens-simple
rainbow
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/massysett/rainbox";
description = "Two-dimensional box pretty printing, with colors";
license = stdenv.lib.licenses.bsd3;

}) {};
"ramus" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "ramus";
version = "0.1.2";
sha256 = "dcddddc416e79c401604565b7297a945f814edeed056fb3b897eda5f4f0b794e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NickSeagull/ramus#readme";
description = "Elm signal system for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"random" = callPackage
({
  mkDerivation
, base
, stdenv
, time
}:
mkDerivation {

pname = "random";
version = "1.1";
sha256 = "b718a41057e25a3a71df693ab0fe2263d492e759679b3c2fea6ea33b171d3a5a";
revision = "1";
editedCabalFile = "1pv5d7bm2rgap7llp5vjsplrg048gvf0226y0v19gpvdsx7n4rvv";
libraryHaskellDepends = [
base
time
];
doHaddock = false;
doCheck = false;
description = "random number library";
license = stdenv.lib.licenses.bsd3;

}) {};
"random-fu" = callPackage
({
  mkDerivation
, base
, erf
, log-domain
, math-functions
, monad-loops
, mtl
, random-shuffle
, random-source
, rvar
, stdenv
, syb
, template-haskell
, transformers
, vector
}:
mkDerivation {

pname = "random-fu";
version = "0.2.7.0";
sha256 = "b6b3a4b3ede34991d26e0447f90b14fa66af61f376fa0aed2e0899fdc879b0c4";
libraryHaskellDepends = [
base
erf
log-domain
math-functions
monad-loops
mtl
random-shuffle
random-source
rvar
syb
template-haskell
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/random-fu";
description = "Random number generation";
license = stdenv.lib.licenses.publicDomain;

}) {};
"random-shuffle" = callPackage
({
  mkDerivation
, base
, MonadRandom
, random
, stdenv
}:
mkDerivation {

pname = "random-shuffle";
version = "0.0.4";
sha256 = "52704411f040fd0bf2361dad162e35dc13caa6535b2e4908d3513c00a95d0615";
libraryHaskellDepends = [
base
MonadRandom
random
];
doHaddock = false;
doCheck = false;
description = "Random shuffle implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"random-source" = callPackage
({
  mkDerivation
, base
, flexible-defaults
, mersenne-random-pure64
, mtl
, mwc-random
, random
, stateref
, stdenv
, syb
, template-haskell
, th-extras
}:
mkDerivation {

pname = "random-source";
version = "0.3.0.6";
sha256 = "f3dfec3aef0614ff856abbba018f3bc3446295157895ea09a015737d67205b73";
libraryHaskellDepends = [
base
flexible-defaults
mersenne-random-pure64
mtl
mwc-random
random
stateref
syb
template-haskell
th-extras
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/random-fu";
description = "Generic basis for random number generators";
license = stdenv.lib.licenses.publicDomain;

}) {};
"random-tree" = callPackage
({
  mkDerivation
, base
, containers
, lens
, MonadRandom
, mtl
, random
, random-shuffle
, stdenv
, transformers
, tree-fun
}:
mkDerivation {

pname = "random-tree";
version = "0.6.0.5";
sha256 = "2b604e7ce184e2c877fac63dbac1df3060cdc023427b8eb5844106a826591cc2";
libraryHaskellDepends = [
base
containers
lens
MonadRandom
mtl
random
random-shuffle
transformers
tree-fun
];
doHaddock = false;
doCheck = false;
description = "Create random trees";
license = stdenv.lib.licenses.gpl3;

}) {};
"range" = callPackage
({
  mkDerivation
, base
, free
, parsec
, stdenv
}:
mkDerivation {

pname = "range";
version = "0.1.2.0";
sha256 = "4b997ffc63dfc93716938b086ceefffd9df14684c511e0fef4656e82d58b0b09";
libraryHaskellDepends = [
base
free
parsec
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/robertmassaioli/range";
description = "This has a bunch of code for specifying and managing ranges in your code";
license = stdenv.lib.licenses.mit;

}) {};
"range-set-list" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, hashable
, semigroups
, stdenv
}:
mkDerivation {

pname = "range-set-list";
version = "0.1.2.0";
sha256 = "3b749cf447dcf1f81f263c9c43dd61ee533b4fb25e6e4ca3bdbe2321702bab67";
revision = "1";
editedCabalFile = "061xbyarcjr4bcb08a5xyzqiyvagn9729p6hk5kzayzlkscx16j2";
libraryHaskellDepends = [
base
containers
deepseq
hashable
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/range-set-list#readme";
description = "Memory efficient sets with ranges of elements";
license = stdenv.lib.licenses.mit;

}) {};
"rank1dynamic" = callPackage
({
  mkDerivation
, base
, binary
, stdenv
}:
mkDerivation {

pname = "rank1dynamic";
version = "0.3.3.0";
sha256 = "ca32dde8475cf3ec809043ee7393fda51efd6afb741ef02af19c996bb8238f0b";
revision = "1";
editedCabalFile = "0fw91l7y3fgpgp6dalx18q1dr2g9ji0acs6m7hgk5mpqjz34azgb";
libraryHaskellDepends = [
base
binary
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com";
description = "Like Data.Dynamic/Data.Typeable but with support for rank-1 polymorphic types";
license = stdenv.lib.licenses.bsd3;

}) {};
"rasterific-svg" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, directory
, filepath
, FontyFruity
, JuicyPixels
, lens
, linear
, mtl
, optparse-applicative
, primitive
, Rasterific
, scientific
, stdenv
, svg-tree
, text
, transformers
, vector
}:
mkDerivation {

pname = "rasterific-svg";
version = "0.3.2.1";
sha256 = "717e87ea679f5fda726bfbbdbfafa40305bece2cce5ad137027e26eaeb57afdf";
revision = "1";
editedCabalFile = "19w6f01qc1ahwfsqnqb6ajsgv4wqy5vfy54f6x15z1pivnyw37sk";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
binary
bytestring
containers
directory
filepath
FontyFruity
JuicyPixels
lens
linear
mtl
primitive
Rasterific
scientific
svg-tree
text
transformers
vector
];
executableHaskellDepends = [
base
bytestring
directory
filepath
FontyFruity
JuicyPixels
optparse-applicative
Rasterific
svg-tree
];
doHaddock = false;
doCheck = false;
description = "SVG renderer based on Rasterific";
license = stdenv.lib.licenses.bsd3;

}) {};
"ratel" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, case-insensitive
, containers
, http-client
, http-client-tls
, http-types
, stdenv
, text
, uuid
}:
mkDerivation {

pname = "ratel";
version = "0.3.2";
sha256 = "99b838c7d85208cd49fdf733d99ca29baafbb924f9db8a0d45ae88c15fc6ba73";
libraryHaskellDepends = [
aeson
base
bytestring
case-insensitive
containers
http-client
http-client-tls
http-types
text
uuid
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/ratel#readme";
description = "Notify Honeybadger about exceptions";
license = stdenv.lib.licenses.mit;

}) {};
"ratel-wai" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, containers
, http-client
, ratel
, stdenv
, wai
}:
mkDerivation {

pname = "ratel-wai";
version = "0.2.0";
sha256 = "2714c211ee6252bad68a4f5828c5b196fe4e5fff9dfed778c9bf15918ac35911";
libraryHaskellDepends = [
base
bytestring
case-insensitive
containers
http-client
ratel
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/ratel-wai#readme";
description = "Notify Honeybadger about exceptions via a WAI middleware";
license = stdenv.lib.licenses.mit;

}) {};
"rattletrap" = callPackage
({
  mkDerivation
, aeson
, aeson-casing
, base
, bimap
, binary
, binary-bits
, bytestring
, containers
, data-binary-ieee754
, stdenv
, template-haskell
, text
, vector
}:
mkDerivation {

pname = "rattletrap";
version = "2.1.5";
sha256 = "ee0d7107df30d4be74908d4be2a92c0042a7b7ef92ec3886045bc17babd03bbe";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
aeson-casing
base
bimap
binary
binary-bits
bytestring
containers
data-binary-ieee754
template-haskell
text
vector
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/rattletrap#readme";
description = "Parse and generate Rocket League replays";
license = stdenv.lib.licenses.mit;

}) {};
"raw-strings-qq" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "raw-strings-qq";
version = "1.1";
sha256 = "2e011ec26aeaa53ab43c30b7d9b5b0f661f24b4ebef8884c12c571353c0fbed3";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/23Skidoo/raw-strings-qq";
description = "Raw string literals for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"rawfilepath" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, unix
}:
mkDerivation {

pname = "rawfilepath";
version = "0.1.0.0";
sha256 = "1673897fbcb4a4a194bb66ff8514a21db6c1d9f6ba0d960dc20677c9902c2614";
revision = "1";
editedCabalFile = "0jliirdlb3yzyy591qzms2cyj98xhxw2dss4kmicvdqxph952wsq";
libraryHaskellDepends = [
base
bytestring
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/xtendo-org/rawfilepath#readme";
description = "Use RawFilePath instead of FilePath";
license = stdenv.lib.licenses.bsd3;

}) {};
"rawstring-qm" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, template-haskell
, text
}:
mkDerivation {

pname = "rawstring-qm";
version = "0.2.3.0";
sha256 = "11a177bb7d685fb6a98390630196bd544e877b7460648e61a2905c21a71268fe";
libraryHaskellDepends = [
base
bytestring
template-haskell
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tolysz/rawstring-qm";
description = "Simple raw string quotation and dictionary interpolation";
license = stdenv.lib.licenses.bsd3;

}) {};
"rdf" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, deepseq
, dlist
, fgl
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "rdf";
version = "0.1.0.1";
sha256 = "4f320db1d89ccff1d93d5694d00f9d51eeaea81e2f3ba6da32e0d7badd333ea6";
libraryHaskellDepends = [
attoparsec
base
bytestring
deepseq
dlist
fgl
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/traviswhitaker/rdf";
description = "Representation and Incremental Processing of RDF Data";
license = stdenv.lib.licenses.mit;

}) {};
"read-editor" = callPackage
({
  mkDerivation
, base
, directory
, process
, stdenv
}:
mkDerivation {

pname = "read-editor";
version = "0.1.0.2";
sha256 = "ed8aeca86823fbaf11a0a543fd106c9c3abe65216ea974ed56050cbebf777085";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yamadapc/haskell-read-editor";
description = "Opens a temporary file on the system's EDITOR and returns the resulting edits";
license = stdenv.lib.licenses.mit;

}) {};
"read-env-var" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "read-env-var";
version = "0.1.0.1";
sha256 = "21962cca51ae11bacf7d92f1436cc76e76ff2d957fb81a0f7a8bcbcf1d0f2fe5";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/read-env-var#readme";
description = "Functions for safely reading environment variables";
license = stdenv.lib.licenses.bsd3;

}) {};
"readable" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "readable";
version = "0.3.1";
sha256 = "703037ad2cca4d6d42ba23e2758d1911cd82e3e922c4078076c273231e4b43c9";
libraryHaskellDepends = [
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mightybyte/readable";
description = "Reading from Text and ByteString";
license = stdenv.lib.licenses.bsd3;

}) {};
"readline" = callPackage
({
  mkDerivation
, base
, ncurses
, process
, readline
, stdenv
}:
mkDerivation {

pname = "readline";
version = "1.0.3.0";
sha256 = "c0b9e174910620db0edea8f9fd6fb6c1d7b066260d523e9a7208294c46a75feb";
libraryHaskellDepends = [
base
process
];
librarySystemDepends = [
ncurses
readline
];
doHaddock = false;
doCheck = false;
description = "An interface to the GNU readline library";
license = "GPL";

}) {inherit (pkgs) ncurses; inherit (pkgs) readline;};
"rebase" = callPackage
({
  mkDerivation
, base
, base-prelude
, bifunctors
, bytestring
, containers
, contravariant
, contravariant-extras
, deepseq
, dlist
, either
, fail
, hashable
, mtl
, profunctors
, scientific
, semigroupoids
, semigroups
, stdenv
, stm
, text
, time
, transformers
, unordered-containers
, uuid
, vector
, void
}:
mkDerivation {

pname = "rebase";
version = "1.0.8";
sha256 = "84d3a1f8e0663fa1f19f963b1a385ef12b0dcb41f8400b0fdda55e7cd7cfb8bd";
libraryHaskellDepends = [
base
base-prelude
bifunctors
bytestring
containers
contravariant
contravariant-extras
deepseq
dlist
either
fail
hashable
mtl
profunctors
scientific
semigroupoids
semigroups
stm
text
time
transformers
unordered-containers
uuid
vector
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/rebase";
description = "A more progressive alternative to the \"base\" package";
license = stdenv.lib.licenses.mit;

}) {};
"recursion-schemes" = callPackage
({
  mkDerivation
, base
, base-orphans
, bifunctors
, comonad
, free
, semigroups
, stdenv
, template-haskell
, transformers
, transformers-compat
}:
mkDerivation {

pname = "recursion-schemes";
version = "5.0.1";
sha256 = "b7a97c72fd7edc2d85060626a1f7e3c56756868aec43510dfe41c1e1fa43ff03";
revision = "1";
editedCabalFile = "0f5fhr93jgnm1jhl6kd3fbxxmkyfa6h7asgwk5klliy0m2j3y51n";
libraryHaskellDepends = [
base
base-orphans
bifunctors
comonad
free
semigroups
template-haskell
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/recursion-schemes/";
description = "Generalized bananas, lenses and barbed wire";
license = stdenv.lib.licenses.bsd3;

}) {};
"redis-io" = callPackage
({
  mkDerivation
, attoparsec
, auto-update
, base
, bytestring
, containers
, exceptions
, iproute
, monad-control
, mtl
, network
, operational
, redis-resp
, resource-pool
, semigroups
, stdenv
, stm
, time
, tinylog
, transformers
, transformers-base
}:
mkDerivation {

pname = "redis-io";
version = "0.7.0";
sha256 = "1f68cb184f29fd4dc27b7034ee6dd2c53a952fbda1084ba25afd83952518e619";
libraryHaskellDepends = [
attoparsec
auto-update
base
bytestring
containers
exceptions
iproute
monad-control
mtl
network
operational
redis-resp
resource-pool
semigroups
stm
time
tinylog
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/twittner/redis-io/";
description = "Yet another redis client";
license = stdenv.lib.licenses.mpl20;

}) {};
"redis-resp" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, bytestring-conversion
, containers
, dlist
, double-conversion
, operational
, semigroups
, split
, stdenv
, transformers
}:
mkDerivation {

pname = "redis-resp";
version = "0.4.0";
sha256 = "8bc0d592843e05c37a3fda22255daca74f1c17c4e4a7951531accd45cd2a9232";
libraryHaskellDepends = [
attoparsec
base
bytestring
bytestring-conversion
containers
dlist
double-conversion
operational
semigroups
split
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/twittner/redis-resp/";
description = "REdis Serialization Protocol (RESP) implementation";
license = stdenv.lib.licenses.mpl20;

}) {};
"reducers" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, fingertree
, hashable
, semigroupoids
, semigroups
, stdenv
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "reducers";
version = "3.12.1";
sha256 = "e43bb7678272691a358c049daecbac715c4b0fcece021c6b2ac7b2a1c16b6d5e";
revision = "2";
editedCabalFile = "00zxyyaj0grvr214qdrg68114b93iwp27vmww254s2yq9z701gf8";
libraryHaskellDepends = [
array
base
bytestring
containers
fingertree
hashable
semigroupoids
semigroups
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/reducers/";
description = "Semigroups, specialized containers and a general map/reduce framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"reedsolomon" = callPackage
({
  mkDerivation
, base
, bytestring
, exceptions
, gitrev
, loop
, mtl
, primitive
, profunctors
, stdenv
, vector
}:
mkDerivation {

pname = "reedsolomon";
version = "0.0.4.3";
sha256 = "b74acd24ee1524e684860a20a8bf44eea5524ff8fd22c6efd0baf20bb5a0a42b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
exceptions
gitrev
loop
mtl
primitive
profunctors
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/NicolasT/reedsolomon";
description = "Reed-Solomon Erasure Coding in Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"ref-fd" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
, transformers
}:
mkDerivation {

pname = "ref-fd";
version = "0.4.0.1";
sha256 = "e416f1afba149e3af9cbe1011381d0b89609c240d812127bd03b8a922a5f6037";
libraryHaskellDepends = [
base
stm
transformers
];
doHaddock = false;
doCheck = false;
description = "A type class for monads with references using functional dependencies";
license = stdenv.lib.licenses.bsd3;

}) {};
"refact" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "refact";
version = "0.3.0.2";
sha256 = "0ad029727797c8ca5d179c7abf1bfc135d86a7d72cf93785ee12ad243aeb1f6c";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Specify refactorings to perform with apply-refact";
license = stdenv.lib.licenses.bsd3;

}) {};
"references" = callPackage
({
  mkDerivation
, array
, base
, containers
, directory
, either
, filepath
, instance-control
, mtl
, stdenv
, template-haskell
, text
, transformers
, uniplate
}:
mkDerivation {

pname = "references";
version = "0.3.2.1";
sha256 = "184020e17d1f3e86bb9e350f9c4076a838f580c23d943801245ded92edd27624";
libraryHaskellDepends = [
array
base
containers
directory
either
filepath
instance-control
mtl
template-haskell
text
transformers
uniplate
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lazac/references";
description = "Selectors for reading and updating data";
license = stdenv.lib.licenses.bsd3;

}) {};
"reflection" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "reflection";
version = "2.1.2";
sha256 = "a909882c04b24016bedb85587c09f23cf06bad71a2b1f7e781e89abaa6023c39";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/reflection";
description = "Reifies arbitrary terms into types that can be reflected back into terms";
license = stdenv.lib.licenses.bsd3;

}) {};
"reform" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "reform";
version = "0.2.7.1";
sha256 = "59be2189906788ee4ecf82559aea2e7159a7a0c716c129cccce97e9d89819230";
libraryHaskellDepends = [
base
containers
mtl
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/";
description = "reform is a type-safe HTML form generation and validation library";
license = stdenv.lib.licenses.bsd3;

}) {};
"reform-blaze" = callPackage
({
  mkDerivation
, base
, blaze-html
, blaze-markup
, reform
, stdenv
, text
}:
mkDerivation {

pname = "reform-blaze";
version = "0.2.4.3";
sha256 = "11bcf127356bf5840a0947ea1058cbf1e08096ab0fc872aa5c1ec7d88e40b2e4";
libraryHaskellDepends = [
base
blaze-html
blaze-markup
reform
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/";
description = "Add support for using blaze-html with Reform";
license = stdenv.lib.licenses.bsd3;

}) {};
"reform-hamlet" = callPackage
({
  mkDerivation
, base
, blaze-markup
, reform
, shakespeare
, stdenv
, text
}:
mkDerivation {

pname = "reform-hamlet";
version = "0.0.5.3";
sha256 = "512729389fc3eec118a8079486eb2319e1e8eaecdeecafdd6b36205373ce3466";
libraryHaskellDepends = [
base
blaze-markup
reform
shakespeare
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/";
description = "Add support for using Hamlet with Reform";
license = stdenv.lib.licenses.bsd3;

}) {};
"reform-happstack" = callPackage
({
  mkDerivation
, base
, bytestring
, happstack-server
, mtl
, random
, reform
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "reform-happstack";
version = "0.2.5.1";
sha256 = "6fa06f0cc07251bf5ec38a553de468ede9b7495c4534ba9c3f96780c1adadaaa";
libraryHaskellDepends = [
base
bytestring
happstack-server
mtl
random
reform
text
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/";
description = "Happstack support for reform";
license = stdenv.lib.licenses.bsd3;

}) {};
"reform-hsp" = callPackage
({
  mkDerivation
, base
, hsp
, hsx2hs
, reform
, stdenv
, text
}:
mkDerivation {

pname = "reform-hsp";
version = "0.2.7.1";
sha256 = "48edd2a1322bacfb2d8574222c194cfa4ffdce135f4dff851d9d5e6fe3008d20";
libraryHaskellDepends = [
base
hsp
hsx2hs
reform
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/";
description = "Add support for using HSP with Reform";
license = stdenv.lib.licenses.bsd3;

}) {};
"regex-applicative" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, transformers
}:
mkDerivation {

pname = "regex-applicative";
version = "0.3.3";
sha256 = "6659a2cc1c8137d77ef57f75027723b075d473354d935233d98b1ae1b03c3be6";
libraryHaskellDepends = [
base
containers
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/regex-applicative";
description = "Regex-based parsing with applicative interface";
license = stdenv.lib.licenses.mit;

}) {};
"regex-applicative-text" = callPackage
({
  mkDerivation
, base
, regex-applicative
, stdenv
, text
}:
mkDerivation {

pname = "regex-applicative-text";
version = "0.1.0.1";
sha256 = "b093051f80865d257da2ded8ad1b566927b01b3d2f86d41da2ffee4a26c4e2d9";
revision = "2";
editedCabalFile = "19sdafr0i252xyy017yxmz76ipl5bdg3hiv3ka8sjbwryj16gdwi";
libraryHaskellDepends = [
base
regex-applicative
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/regex-applicative-text#readme";
description = "regex-applicative on text";
license = stdenv.lib.licenses.bsd3;

}) {};
"regex-base" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, mtl
, stdenv
}:
mkDerivation {

pname = "regex-base";
version = "0.93.2";
sha256 = "20dc5713a16f3d5e2e6d056b4beb9cfdc4368cd09fd56f47414c847705243278";
libraryHaskellDepends = [
array
base
bytestring
containers
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://sourceforge.net/projects/lazy-regex";
description = "Replaces/Enhances Text.Regex";
license = stdenv.lib.licenses.bsd3;

}) {};
"regex-compat" = callPackage
({
  mkDerivation
, array
, base
, regex-base
, regex-posix
, stdenv
}:
mkDerivation {

pname = "regex-compat";
version = "0.95.1";
sha256 = "d57cb1a5a4d66753b18eaa37a1621246f660472243b001894f970037548d953b";
libraryHaskellDepends = [
array
base
regex-base
regex-posix
];
doHaddock = false;
doCheck = false;
homepage = "http://sourceforge.net/projects/lazy-regex";
description = "Replaces/Enhances Text.Regex";
license = stdenv.lib.licenses.bsd3;

}) {};
"regex-compat-tdfa" = callPackage
({
  mkDerivation
, array
, base
, regex-base
, regex-tdfa
, stdenv
}:
mkDerivation {

pname = "regex-compat-tdfa";
version = "0.95.1.4";
sha256 = "4fa38ed24ae390eeffe6eef04bbe632d7ecd02b9123729e976e7420f927520dd";
libraryHaskellDepends = [
array
base
regex-base
regex-tdfa
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/shelarcy/regex-compat-tdfa";
description = "Unicode Support version of Text.Regex, using regex-tdfa";
license = stdenv.lib.licenses.bsd3;

}) {};
"regex-pcre" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, pcre
, regex-base
, stdenv
}:
mkDerivation {

pname = "regex-pcre";
version = "0.94.4";
sha256 = "8eaa7d4ac6c0a4ba35aa59fc3f6b8f8e252bb25a47e136791446a74752e226c0";
libraryHaskellDepends = [
array
base
bytestring
containers
regex-base
];
librarySystemDepends = [
pcre
];
doHaddock = false;
doCheck = false;
homepage = "http://hackage.haskell.org/package/regex-pcre";
description = "Replaces/Enhances Text.Regex";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) pcre;};
"regex-pcre-builtin" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, regex-base
, stdenv
}:
mkDerivation {

pname = "regex-pcre-builtin";
version = "0.94.4.8.8.35";
sha256 = "0bd1b695de953ba4b6e6e0de007021c346cb2a6c8e09356fbcd34f8a79d2ea78";
libraryHaskellDepends = [
array
base
bytestring
containers
regex-base
];
doHaddock = false;
doCheck = false;
homepage = "http://hackage.haskell.org/package/regex-pcre";
description = "Replaces/Enhances Text.Regex";
license = stdenv.lib.licenses.bsd3;

}) {};
"regex-posix" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, regex-base
, stdenv
}:
mkDerivation {

pname = "regex-posix";
version = "0.95.2";
sha256 = "56019921cd4a4c9682b81ec614236fea816ba8ed8785a1640cd66d8b24fc703e";
libraryHaskellDepends = [
array
base
bytestring
containers
regex-base
];
doHaddock = false;
doCheck = false;
homepage = "http://sourceforge.net/projects/lazy-regex";
description = "Replaces/Enhances Text.Regex";
license = stdenv.lib.licenses.bsd3;

}) {};
"regex-tdfa" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, ghc-prim
, mtl
, parsec
, regex-base
, stdenv
}:
mkDerivation {

pname = "regex-tdfa";
version = "1.2.2";
sha256 = "cb12d675be7b31ed8086d8d022023d03eb553e55dbee6e1b7a4154933d471d39";
revision = "1";
editedCabalFile = "0m2i94gm6a1m6sn3mj47jbnmjp5ksiqmdn6v4pdr7xsv5a15gfwn";
libraryHaskellDepends = [
array
base
bytestring
containers
ghc-prim
mtl
parsec
regex-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ChrisKuklewicz/regex-tdfa";
description = "Replaces/Enhances Text.Regex";
license = stdenv.lib.licenses.bsd3;

}) {};
"regex-tdfa-text" = callPackage
({
  mkDerivation
, array
, base
, regex-base
, regex-tdfa
, stdenv
, text
}:
mkDerivation {

pname = "regex-tdfa-text";
version = "1.0.0.3";
sha256 = "38d77a0d225c306c52c6d4eed12d11d05a4bc4194d547cb9a7a9b6f5a8792001";
libraryHaskellDepends = [
array
base
regex-base
regex-tdfa
text
];
doHaddock = false;
doCheck = false;
description = "Text interface for regex-tdfa";
license = stdenv.lib.licenses.bsd3;

}) {};
"reinterpret-cast" = callPackage
({
  mkDerivation
, array
, base
, stdenv
}:
mkDerivation {

pname = "reinterpret-cast";
version = "0.1.0";
sha256 = "5654622c904b42c62f2473c64624715dbd458ea00209ed9ab39396eabc1353e4";
libraryHaskellDepends = [
array
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nh2/reinterpret-cast";
description = "Memory reinterpretation casts for Float/Double and Word32/Word64";
license = stdenv.lib.licenses.mit;

}) {};
"relational-query" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, dlist
, names-th
, persistable-record
, sql-words
, stdenv
, template-haskell
, text
, th-reify-compat
, time
, time-locale-compat
, transformers
}:
mkDerivation {

pname = "relational-query";
version = "0.8.3.5";
sha256 = "473145c2bf23b03711a307b4dd6a22609606327e0c15f8f27f874ee783f7f1a6";
libraryHaskellDepends = [
array
base
bytestring
containers
dlist
names-th
persistable-record
sql-words
template-haskell
text
th-reify-compat
time
time-locale-compat
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "Typeful, Modular, Relational, algebraic query engine";
license = stdenv.lib.licenses.bsd3;

}) {};
"relational-query-HDBC" = callPackage
({
  mkDerivation
, base
, containers
, convertible
, dlist
, HDBC
, HDBC-session
, names-th
, persistable-record
, relational-query
, relational-schemas
, stdenv
, template-haskell
, th-data-compat
, transformers
}:
mkDerivation {

pname = "relational-query-HDBC";
version = "0.6.0.2";
sha256 = "af8a34fe854114401663b908612e2ad5404cb17e93550b3533b437e92f4f05ed";
libraryHaskellDepends = [
base
containers
convertible
dlist
HDBC
HDBC-session
names-th
persistable-record
relational-query
relational-schemas
template-haskell
th-data-compat
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "HDBC instance of relational-query and typed query interface for HDBC";
license = stdenv.lib.licenses.bsd3;

}) {};
"relational-record" = callPackage
({
  mkDerivation
, base
, persistable-types-HDBC-pg
, relational-query
, relational-query-HDBC
, stdenv
}:
mkDerivation {

pname = "relational-record";
version = "0.1.6.1";
sha256 = "c18bb200618b86a0baec590408ac941fb6a2a1d158ba74d6f9f4239a8d4bdada";
libraryHaskellDepends = [
base
persistable-types-HDBC-pg
relational-query
relational-query-HDBC
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "Meta package of Relational Record";
license = stdenv.lib.licenses.bsd3;

}) {};
"relational-schemas" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, persistable-record
, relational-query
, stdenv
, template-haskell
, time
}:
mkDerivation {

pname = "relational-schemas";
version = "0.1.3.1";
sha256 = "d13137773f21b73add30ef9659dc5abc0f5b51ab33c2061c9e9983e4d47151bd";
revision = "2";
editedCabalFile = "0m53lnymdd6w6zrlv3nlf7fn0ki7z164mph0r80fyl5abb0bns8g";
libraryHaskellDepends = [
base
bytestring
containers
persistable-record
relational-query
template-haskell
time
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "RDBMSs' schema templates for relational-query";
license = stdenv.lib.licenses.bsd3;

}) {};
"renderable" = callPackage
({
  mkDerivation
, base
, containers
, hashable
, stdenv
, transformers
}:
mkDerivation {

pname = "renderable";
version = "0.2.0.1";
sha256 = "d1ea5a8d2da8913700c326c3e757c8c4c8a87f1353125bbc9ea372729e04b6c5";
libraryHaskellDepends = [
base
containers
hashable
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/schell/renderable";
description = "An API for managing renderable resources";
license = stdenv.lib.licenses.mit;

}) {};
"repa" = callPackage
({
  mkDerivation
, base
, bytestring
, ghc-prim
, QuickCheck
, stdenv
, template-haskell
, vector
}:
mkDerivation {

pname = "repa";
version = "3.4.1.2";
sha256 = "57f80bbbf6df1c7bca0045a9de8694a25bebe0e5696f59276cc72f165b01dc57";
revision = "2";
editedCabalFile = "1br1ggwp4435817liwp04wsaizkdwxqbrlxpnygzdwxabdckknwr";
libraryHaskellDepends = [
base
bytestring
ghc-prim
QuickCheck
template-haskell
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://repa.ouroborus.net";
description = "High performance, regular, shape polymorphic parallel arrays";
license = stdenv.lib.licenses.bsd3;

}) {};
"repa-algorithms" = callPackage
({
  mkDerivation
, base
, repa
, stdenv
, vector
}:
mkDerivation {

pname = "repa-algorithms";
version = "3.4.1.1";
sha256 = "c4d07910ba2da080e9c5c434047655d7c1330dbfa27dff11a38b2c6e54847e28";
revision = "1";
editedCabalFile = "09r6wf5alhga1gv17jg42k6kr0xma2prbbrwiiffzf4xxzi5w0s9";
libraryHaskellDepends = [
base
repa
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://repa.ouroborus.net";
description = "Algorithms using the Repa array library";
license = stdenv.lib.licenses.bsd3;

}) {};
"repa-io" = callPackage
({
  mkDerivation
, base
, binary
, bmp
, bytestring
, old-time
, repa
, stdenv
, vector
}:
mkDerivation {

pname = "repa-io";
version = "3.4.1.1";
sha256 = "b5dbca96a988fb8bd918288ea1cfcf215fe46062e45001b209603b63a39ba9da";
revision = "2";
editedCabalFile = "0zslqm87abzrsbrw2dlnsmm8jnpvg7ldi2d83d7p5sih78ksfmmm";
libraryHaskellDepends = [
base
binary
bmp
bytestring
old-time
repa
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://repa.ouroborus.net";
description = "Read and write Repa arrays in various formats";
license = stdenv.lib.licenses.bsd3;

}) {};
"repline" = callPackage
({
  mkDerivation
, base
, containers
, haskeline
, mtl
, process
, stdenv
}:
mkDerivation {

pname = "repline";
version = "0.1.6.0";
sha256 = "61f800cecd9f2d1545164384c827dc4d1e49ce870be8c4547b41f3ebc0902a5b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
haskeline
mtl
process
];
executableHaskellDepends = [
base
containers
mtl
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sdiehl/repline";
description = "Haskeline wrapper for GHCi-like REPL interfaces";
license = stdenv.lib.licenses.mit;

}) {};
"req" = callPackage
({
  mkDerivation
, aeson
, authenticate-oauth
, base
, blaze-builder
, bytestring
, case-insensitive
, connection
, data-default-class
, http-api-data
, http-client
, http-client-tls
, http-types
, mtl
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "req";
version = "0.2.0";
sha256 = "e64e56622f1ec06df83e2c8516effa49058b4d7196c28127ab98190cc320ebbc";
revision = "3";
editedCabalFile = "1lqspa275mq04chvz6pvjkrlxkd9gscaxy2rcsj5wy0123x1azxp";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
authenticate-oauth
base
blaze-builder
bytestring
case-insensitive
connection
data-default-class
http-api-data
http-client
http-client-tls
http-types
mtl
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/req";
description = "Easy-to-use, type-safe, expandable, high-level HTTP library";
license = stdenv.lib.licenses.bsd3;

}) {};
"req-conduit" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, http-client
, req
, resourcet
, stdenv
, transformers
}:
mkDerivation {

pname = "req-conduit";
version = "0.1.0";
sha256 = "689a8592555b39859ab0d2e50b111217112d51077553dc7103d84afc865ca447";
revision = "2";
editedCabalFile = "0yx6858chc3kxx26lakr7gwqq8kdx32z05s51jyk4ii1a6kcyv6w";
libraryHaskellDepends = [
base
bytestring
conduit
http-client
req
resourcet
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/req-conduit";
description = "Conduit helpers for the req HTTP client library";
license = stdenv.lib.licenses.bsd3;

}) {};
"rerebase" = callPackage
({
  mkDerivation
, rebase
, stdenv
}:
mkDerivation {

pname = "rerebase";
version = "1.0.3";
sha256 = "63532e72cd0febdff280930658ad345e28f38c736a5391d5a313015e9942ffbe";
libraryHaskellDepends = [
rebase
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/rerebase";
description = "Reexports from \"base\" with a bunch of other standard libraries";
license = stdenv.lib.licenses.mit;

}) {};
"reroute" = callPackage
({
  mkDerivation
, base
, deepseq
, hashable
, http-api-data
, hvect
, mtl
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "reroute";
version = "0.4.1.0";
sha256 = "34a83f0d0240610b3e6867f02859d77a8255783e2225389bf025865d5d4c2508";
libraryHaskellDepends = [
base
deepseq
hashable
http-api-data
hvect
mtl
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/agrafix/Spock";
description = "abstract implementation of typed and untyped web routing";
license = stdenv.lib.licenses.mit;

}) {};
"resolve-trivial-conflicts" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, base-compat
, Diff
, directory
, filepath
, mtl
, optparse-applicative
, process
, stdenv
, unix
}:
mkDerivation {

pname = "resolve-trivial-conflicts";
version = "0.3.2.4";
sha256 = "62c38ac7859b1f2201e0e79dbfc5d3446b4fb2fd4164cef8c016093f79ae2221";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
ansi-terminal
base
base-compat
Diff
directory
filepath
mtl
optparse-applicative
process
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ElastiLotem/resolve-trivial-conflicts";
description = "Remove trivial conflict markers in a git repository";
license = stdenv.lib.licenses.gpl2;

}) {};
"resource-pool" = callPackage
({
  mkDerivation
, base
, hashable
, monad-control
, stdenv
, stm
, time
, transformers
, transformers-base
, vector
}:
mkDerivation {

pname = "resource-pool";
version = "0.2.3.2";
sha256 = "8627eea2bea8824af2723646e74e2af0c73f583dd0c496c9fd242cd9d242bc12";
libraryHaskellDepends = [
base
hashable
monad-control
stm
time
transformers
transformers-base
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/bos/pool";
description = "A high-performance striped resource pooling implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"resourcet" = callPackage
({
  mkDerivation
, base
, containers
, exceptions
, lifted-base
, mmorph
, monad-control
, mtl
, stdenv
, transformers
, transformers-base
, transformers-compat
}:
mkDerivation {

pname = "resourcet";
version = "1.1.9";
sha256 = "5a1999d26b896603cab8121b77f36723dc50960291872b691ff4a9533e162ef5";
libraryHaskellDepends = [
base
containers
exceptions
lifted-base
mmorph
monad-control
mtl
transformers
transformers-base
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/conduit";
description = "Deterministic allocation and freeing of scarce resources";
license = stdenv.lib.licenses.bsd3;

}) {};
"rest-client" = callPackage
({
  mkDerivation
, aeson-utils
, base
, bytestring
, case-insensitive
, data-default
, exceptions
, http-client
, http-conduit
, http-types
, hxt
, hxt-pickle-utils
, monad-control
, mtl
, resourcet
, rest-types
, stdenv
, tostring
, transformers
, transformers-base
, transformers-compat
, uri-encode
, utf8-string
}:
mkDerivation {

pname = "rest-client";
version = "0.5.1.1";
sha256 = "5da423c9f2c87b9b9797ea331c5f248408e5f863d460dfd94b3408249729f663";
revision = "2";
editedCabalFile = "0issr73rbnyaqfgx4c0wsy9sq948sqrkima2cr2sb1lkf8n4ihr8";
libraryHaskellDepends = [
aeson-utils
base
bytestring
case-insensitive
data-default
exceptions
http-client
http-conduit
http-types
hxt
hxt-pickle-utils
monad-control
mtl
resourcet
rest-types
tostring
transformers
transformers-base
transformers-compat
uri-encode
utf8-string
];
doHaddock = false;
doCheck = false;
description = "Utility library for use in generated API client libraries";
license = stdenv.lib.licenses.bsd3;

}) {};
"rest-core" = callPackage
({
  mkDerivation
, aeson
, aeson-utils
, base
, base-compat
, bytestring
, case-insensitive
, errors
, fclabels
, hxt
, hxt-pickle-utils
, json-schema
, mtl
, mtl-compat
, multipart
, random
, rest-stringmap
, rest-types
, safe
, split
, stdenv
, text
, transformers
, transformers-compat
, unordered-containers
, uri-encode
, utf8-string
, uuid
}:
mkDerivation {

pname = "rest-core";
version = "0.39";
sha256 = "d760d0547fc1a99cd949dde08b7945fb93af24f4e55d45ecf410c352d5005404";
revision = "8";
editedCabalFile = "12ia5ic2cas82h3dksdy4hzmcw42f13wqwqw0ilbn50q85j2k4pf";
libraryHaskellDepends = [
aeson
aeson-utils
base
base-compat
bytestring
case-insensitive
errors
fclabels
hxt
hxt-pickle-utils
json-schema
mtl
mtl-compat
multipart
random
rest-stringmap
rest-types
safe
split
text
transformers
transformers-compat
unordered-containers
uri-encode
utf8-string
uuid
];
doHaddock = false;
doCheck = false;
description = "Rest API library";
license = stdenv.lib.licenses.bsd3;

}) {};
"rest-gen" = callPackage
({
  mkDerivation
, aeson
, base
, base-compat
, blaze-html
, Cabal
, code-builder
, directory
, fclabels
, filepath
, hashable
, haskell-src-exts
, HStringTemplate
, hxt
, json-schema
, pretty
, process
, rest-core
, safe
, scientific
, semigroups
, split
, stdenv
, text
, uniplate
, unordered-containers
, vector
}:
mkDerivation {

pname = "rest-gen";
version = "0.20.0.0";
sha256 = "81a9486136f91773371858f9d3e248b80458e7d55aab11f17cc158c3ce68d542";
revision = "8";
editedCabalFile = "1x18sva575kcg9gg4brf17zbvvkzs0qi2rgkab5ijr4pnmhpwc62";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
base-compat
blaze-html
Cabal
code-builder
directory
fclabels
filepath
hashable
haskell-src-exts
HStringTemplate
hxt
json-schema
pretty
process
rest-core
safe
scientific
semigroups
split
text
uniplate
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
description = "Documentation and client generation from rest definition";
license = stdenv.lib.licenses.bsd3;

}) {};
"rest-happstack" = callPackage
({
  mkDerivation
, base
, containers
, happstack-server
, mtl
, rest-core
, rest-gen
, stdenv
, utf8-string
}:
mkDerivation {

pname = "rest-happstack";
version = "0.3.1.1";
sha256 = "794f06eb2c96b995397e21f4578bd7094a20334f43883e97af81dbe60b394ff6";
revision = "2";
editedCabalFile = "0yr1407fds0h73ijw6iivqq15ybiz3n6s555vxgaay4j4k4pkax9";
libraryHaskellDepends = [
base
containers
happstack-server
mtl
rest-core
rest-gen
utf8-string
];
doHaddock = false;
doCheck = false;
description = "Rest driver for Happstack";
license = stdenv.lib.licenses.bsd3;

}) {};
"rest-snap" = callPackage
({
  mkDerivation
, base
, base-compat
, bytestring
, case-insensitive
, rest-core
, safe
, snap-core
, stdenv
, unordered-containers
, uri-encode
, utf8-string
}:
mkDerivation {

pname = "rest-snap";
version = "0.2.0.1";
sha256 = "24ff57b82808aac05a04d8b1e4ac24e5a2a71655991d95415d8a713533c402d5";
revision = "1";
editedCabalFile = "0y39l49ywl1cx0hdr37sgacm31q7sdh4y81qk5115sy68wgxn1gw";
libraryHaskellDepends = [
base
base-compat
bytestring
case-insensitive
rest-core
safe
snap-core
unordered-containers
uri-encode
utf8-string
];
doHaddock = false;
doCheck = false;
description = "Rest driver for Snap";
license = stdenv.lib.licenses.bsd3;

}) {};
"rest-stringmap" = callPackage
({
  mkDerivation
, aeson
, base
, containers
, hashable
, hxt
, json-schema
, stdenv
, tostring
, unordered-containers
}:
mkDerivation {

pname = "rest-stringmap";
version = "0.2.0.6";
sha256 = "66e5a32f04cfcf9826296b3c053c22caa745fd890ccc6ea9199c34529507524a";
revision = "7";
editedCabalFile = "14jqqpxxs7vkrf6syycrg2ymh79gl83z13kq261alw5gy8yjnszv";
libraryHaskellDepends = [
aeson
base
containers
hashable
hxt
json-schema
tostring
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Maps with stringy keys that can be transcoded to JSON and XML";
license = stdenv.lib.licenses.bsd3;

}) {};
"rest-types" = callPackage
({
  mkDerivation
, aeson
, base
, base-compat
, case-insensitive
, generic-aeson
, generic-xmlpickler
, hxt
, json-schema
, rest-stringmap
, stdenv
, text
, uuid
}:
mkDerivation {

pname = "rest-types";
version = "1.14.1.1";
sha256 = "b7e08e65bbae20bd891f0905c9c785184182172094673ab13e66499e4fe3969a";
revision = "4";
editedCabalFile = "04s5xcjycbw9fqhmpx0kmy5wmkpgcs84vam68w428rb7y64099mb";
libraryHaskellDepends = [
aeson
base
base-compat
case-insensitive
generic-aeson
generic-xmlpickler
hxt
json-schema
rest-stringmap
text
uuid
];
doHaddock = false;
doCheck = false;
description = "Silk Rest Framework Types";
license = stdenv.lib.licenses.bsd3;

}) {};
"rest-wai" = callPackage
({
  mkDerivation
, base
, base-compat
, bytestring
, case-insensitive
, containers
, http-types
, mime-types
, mtl
, rest-core
, stdenv
, text
, unordered-containers
, wai
}:
mkDerivation {

pname = "rest-wai";
version = "0.2.0.1";
sha256 = "38205eb7b85a4e052f11db099dd65e9d952b8533d1a35001f0b1958b443c0d02";
revision = "2";
editedCabalFile = "1n3sd3vszi0ifw098jf2yan8xcnrxckr22jssl61k0vn74573hw3";
libraryHaskellDepends = [
base
base-compat
bytestring
case-insensitive
containers
http-types
mime-types
mtl
rest-core
text
unordered-containers
wai
];
doHaddock = false;
doCheck = false;
description = "Rest driver for WAI applications";
license = stdenv.lib.licenses.bsd3;

}) {};
"result" = callPackage
({
  mkDerivation
, base
, bifunctors
, keys
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "result";
version = "0.2.6.0";
sha256 = "f526d97cdab851f24e215e346f6d54d3a504a6ac5d9264f580c4f72d606178c5";
libraryHaskellDepends = [
base
bifunctors
keys
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/srijs/haskell-result";
description = "Encode success or at least one error";
license = stdenv.lib.licenses.mit;

}) {};
"rethinkdb" = callPackage
({
  mkDerivation
, aeson
, base
, base64-bytestring
, binary
, bytestring
, containers
, data-default
, mtl
, network
, scientific
, stdenv
, text
, time
, unordered-containers
, utf8-string
, vector
}:
mkDerivation {

pname = "rethinkdb";
version = "2.2.0.8";
sha256 = "444938d62cba4cbe8606507e3c0abd341f45fd9acf6000102f1743ddb5a0e50f";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
base64-bytestring
binary
bytestring
containers
data-default
mtl
network
scientific
text
time
unordered-containers
utf8-string
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/atnnn/haskell-rethinkdb";
description = "A driver for RethinkDB 2.2";
license = stdenv.lib.licenses.asl20;

}) {};
"rethinkdb-client-driver" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, bytestring
, containers
, hashable
, mtl
, network
, old-locale
, scientific
, stdenv
, stm
, template-haskell
, text
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "rethinkdb-client-driver";
version = "0.0.23";
sha256 = "cee5a3cb533bb49e6fd5416216a4d24641fa634524a938fc51342ab37ac20443";
revision = "1";
editedCabalFile = "1vgv2zfdkpxbrg8nssas8x85cbmah8d59ks9744hd7zc461kgfzl";
libraryHaskellDepends = [
aeson
base
binary
bytestring
containers
hashable
mtl
network
old-locale
scientific
stm
template-haskell
text
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/wereHamster/rethinkdb-client-driver";
description = "Client driver for RethinkDB";
license = stdenv.lib.licenses.mit;

}) {};
"retry" = callPackage
({
  mkDerivation
, base
, data-default-class
, exceptions
, ghc-prim
, random
, stdenv
, transformers
}:
mkDerivation {

pname = "retry";
version = "0.7.4.2";
sha256 = "521b392570b37b17ac8aaea2586a0a16a578f56b9cd0bbf69813b35f7ed2b47c";
libraryHaskellDepends = [
base
data-default-class
exceptions
ghc-prim
random
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/Soostone/retry";
description = "Retry combinators for monadic actions that may fail";
license = stdenv.lib.licenses.bsd3;

}) {};
"rev-state" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "rev-state";
version = "0.1.2";
sha256 = "ee070e39d7f7d673593e2f356ab317bc2fdd0d8a283f8316c0e5b5adbdf0f919";
revision = "2";
editedCabalFile = "0dfiwf4808vjhayv7xr058rzwl6jmsmhzy03mk48m9kmlqibk3fy";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/DanBurton/rev-state#readme";
description = "Reverse State monad transformer";
license = stdenv.lib.licenses.bsd3;

}) {};
"rfc5051" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, stdenv
}:
mkDerivation {

pname = "rfc5051";
version = "0.1.0.3";
sha256 = "e38dab28a5625774be60545c8c99e647b79bbc0ac0bc9c65fe6b2ebef160642b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
];
doHaddock = false;
doCheck = false;
description = "Simple unicode collation as per RFC5051";
license = stdenv.lib.licenses.bsd3;

}) {};
"riak" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, binary
, blaze-builder
, bytestring
, containers
, data-default-class
, deepseq
, enclosed-exceptions
, exceptions
, hashable
, mersenne-random-pure64
, monad-control
, network
, protocol-buffers
, pureMD5
, random
, resource-pool
, riak-protobuf
, semigroups
, stdenv
, stm
, text
, time
, transformers
, transformers-base
, unordered-containers
, vector
}:
mkDerivation {

pname = "riak";
version = "1.1.1.0";
sha256 = "e6ec85c65c76c30a9cf0dce266e2dc62fa7047dcb0628410085a44c417f3769f";
libraryHaskellDepends = [
aeson
attoparsec
base
binary
blaze-builder
bytestring
containers
data-default-class
deepseq
enclosed-exceptions
exceptions
hashable
mersenne-random-pure64
monad-control
network
protocol-buffers
pureMD5
random
resource-pool
riak-protobuf
semigroups
stm
text
time
transformers
transformers-base
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/markhibberd/riak-haskell-client";
description = "A Haskell client for the Riak decentralized data store";
license = "unknown";

}) {};
"riak-protobuf" = callPackage
({
  mkDerivation
, array
, base
, parsec
, protocol-buffers
, protocol-buffers-descriptor
, stdenv
}:
mkDerivation {

pname = "riak-protobuf";
version = "0.22.0.0";
sha256 = "32b576289697bfcc1800806e5cc8b4be63df13fe95f9357f96b3f8b47b5a6919";
libraryHaskellDepends = [
array
base
parsec
protocol-buffers
protocol-buffers-descriptor
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/markhibberd/riak-haskell-client";
description = "Haskell types for the Riak protocol buffer API";
license = "unknown";

}) {};
"rng-utils" = callPackage
({
  mkDerivation
, base
, bytestring
, mwc-random
, stdenv
, vector
}:
mkDerivation {

pname = "rng-utils";
version = "0.2.1";
sha256 = "cac94b9ae624b1a4cbbfd47ff901570517f6416a9eee219065c0b5d5c036de87";
libraryHaskellDepends = [
base
bytestring
mwc-random
vector
];
doHaddock = false;
doCheck = false;
description = "RNG within an MVar for convenient concurrent use";
license = stdenv.lib.licenses.bsd3;

}) {};
"rose-trees" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, hashable
, mtl
, QuickCheck
, quickcheck-instances
, semigroupoids
, semigroups
, sets
, stdenv
, unordered-containers
, witherable
}:
mkDerivation {

pname = "rose-trees";
version = "0.0.4.3";
sha256 = "bdd180b27e959316af0825a0de7151ef7cb640fefaa1aecdcfdfab1b94d5e426";
libraryHaskellDepends = [
base
containers
deepseq
hashable
mtl
QuickCheck
quickcheck-instances
semigroupoids
semigroups
sets
unordered-containers
witherable
];
doHaddock = false;
doCheck = false;
description = "A collection of rose tree structures";
license = stdenv.lib.licenses.bsd3;

}) {};
"rot13" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "rot13";
version = "0.1.0.2";
sha256 = "0d1a579df566f2a9debb9d049bbe7fe2dd9390e003dd5676b9ae8bc4dc072c35";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kvanberendonck/codec-rot13";
description = "Fast ROT13 cipher for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"rotating-log" = callPackage
({
  mkDerivation
, base
, bytestring
, directory
, filepath
, old-locale
, stdenv
, time
, time-locale-compat
}:
mkDerivation {

pname = "rotating-log";
version = "0.4.2";
sha256 = "6ef0ae7ecb9e30387b4088edc173fbb90b8c8b7514f9f7b8b6d92f7d95f754ec";
libraryHaskellDepends = [
base
bytestring
directory
filepath
old-locale
time
time-locale-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/Soostone/rotating-log";
description = "Size-limited, concurrent, automatically-rotating log writer";
license = stdenv.lib.licenses.bsd3;

}) {};
"rss-conduit" = callPackage
({
  mkDerivation
, base
, conduit
, conduit-combinators
, containers
, lens-simple
, mono-traversable
, safe
, safe-exceptions
, stdenv
, text
, time
, timerep
, uri-bytestring
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "rss-conduit";
version = "0.3.0.0";
sha256 = "370a507c6df71af1bdce4c27381ebaa2c87664c5ae6e853e9f43c927e3345f5c";
revision = "1";
editedCabalFile = "19gpfrihchggkn8cxc002fgyl71n676mjh5xszhr1mh9idfzqmiz";
libraryHaskellDepends = [
base
conduit
conduit-combinators
containers
lens-simple
mono-traversable
safe
safe-exceptions
text
time
timerep
uri-bytestring
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
description = "Streaming parser/renderer for the RSS 2.0 standard.";
license = stdenv.lib.licenses.publicDomain;

}) {};
"runmemo" = callPackage
({
  mkDerivation
, stdenv
}:
mkDerivation {

pname = "runmemo";
version = "1.0.0.1";
sha256 = "ba5ef3177f8fe5f443808e44f62d03b23ac19bbef7f708e40532031a3505d689";
doHaddock = false;
doCheck = false;
homepage = "https://github.com/DanBurton/runmemo";
description = "A simple memoization helper library";
license = stdenv.lib.licenses.bsd3;

}) {};
"rvar" = callPackage
({
  mkDerivation
, base
, MonadPrompt
, mtl
, random-source
, stdenv
, transformers
}:
mkDerivation {

pname = "rvar";
version = "0.2.0.3";
sha256 = "d78aaf2ffdba182dda95d1692fec7abc5d77fa371120618a397b5675438c6bc0";
libraryHaskellDepends = [
base
MonadPrompt
mtl
random-source
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/random-fu";
description = "Random Variables";
license = stdenv.lib.licenses.publicDomain;

}) {};
"s3-signer" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, cryptohash
, http-types
, stdenv
, time
, utf8-string
}:
mkDerivation {

pname = "s3-signer";
version = "0.3.0.0";
sha256 = "89e957f81211a417c425214d3d7eafb0f15f695ffe0002f4198f2e34b43bc494";
libraryHaskellDepends = [
base
base64-bytestring
cryptohash
http-types
time
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dmjio/s3-signer";
description = "Pre-signed Amazon S3 URLs";
license = stdenv.lib.licenses.bsd3;

}) {};
"safe" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "safe";
version = "0.3.14";
sha256 = "db580cc748f6421e54a9a86a4cbf75c39cfc696880e31f972f99731737fdc88f";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/safe#readme";
description = "Library of safe (exception free) functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"safe-exceptions" = callPackage
({
  mkDerivation
, base
, deepseq
, exceptions
, stdenv
, transformers
}:
mkDerivation {

pname = "safe-exceptions";
version = "0.1.4.0";
sha256 = "c52078c8457f8233a3796f84a3ae3f336f4668a013ba935e74c7218eeb9a41a6";
libraryHaskellDepends = [
base
deepseq
exceptions
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/safe-exceptions#readme";
description = "Safe, consistent, and easy exception handling";
license = stdenv.lib.licenses.mit;

}) {};
"safe-exceptions-checked" = callPackage
({
  mkDerivation
, base
, deepseq
, safe-exceptions
, stdenv
, transformers
}:
mkDerivation {

pname = "safe-exceptions-checked";
version = "0.1.0";
sha256 = "d807552b828de308d80805f65ee41f3e25571506b10e6b28b0b81de4aec0ca3f";
revision = "3";
editedCabalFile = "004id0k46j545zvkldfcv5qjgxzl35brm9h6fq72y43b9hl2y55f";
libraryHaskellDepends = [
base
deepseq
safe-exceptions
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mitchellwrosen/safe-exceptions-checked#readme";
description = "Safe, checked exceptions";
license = stdenv.lib.licenses.bsd3;

}) {};
"safecopy" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, cereal
, containers
, old-time
, stdenv
, template-haskell
, text
, time
, vector
}:
mkDerivation {

pname = "safecopy";
version = "0.9.2";
sha256 = "ba666b242653d6b23fc9bc19dfa9d4367148aeb9235baf3738b91150ac9b6ed3";
libraryHaskellDepends = [
array
base
bytestring
cereal
containers
old-time
template-haskell
text
time
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/acid-state/safecopy";
description = "Binary serialization with version control";
license = stdenv.lib.licenses.publicDomain;

}) {};
"sampling" = callPackage
({
  mkDerivation
, base
, containers
, foldl
, mwc-random
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "sampling";
version = "0.3.2";
sha256 = "a66156e4600ffb15bde127a841251d49f2d0ff67a85e05961b91839b4769824e";
libraryHaskellDepends = [
base
containers
foldl
mwc-random
primitive
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jtobin/sampling";
description = "Sample values from collections";
license = stdenv.lib.licenses.mit;

}) {};
"sandi" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, exceptions
, stdenv
, stringsearch
}:
mkDerivation {

pname = "sandi";
version = "0.4.0";
sha256 = "40c895a4b26904e3a4b4488e93f37225bdb48e6787dffed627d16242f01aaeea";
libraryHaskellDepends = [
base
bytestring
conduit
exceptions
stringsearch
];
doHaddock = false;
doCheck = false;
homepage = "http://hackage.haskell.org/package/sandi";
description = "Data encoding library";
license = stdenv.lib.licenses.bsd3;

}) {};
"sandman" = callPackage
({
  mkDerivation
, base
, Cabal
, containers
, directory
, filepath
, optparse-applicative
, process
, stdenv
, text
, unix-compat
}:
mkDerivation {

pname = "sandman";
version = "0.2.0.1";
sha256 = "407d283e1fc4a2a369615bac569683bf399ac14ddbce1331850bfe1d7837ce64";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
Cabal
containers
directory
filepath
optparse-applicative
process
text
unix-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/abhinav/sandman#readme";
description = "Manages Cabal sandboxes to avoid rebuilding packages";
license = stdenv.lib.licenses.mit;

}) {};
"say" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "say";
version = "0.1.0.0";
sha256 = "f26fdb94ed81a2ae503beca0dcea74da7ee37408ba2e41ab3fdcaa9a7622fc40";
libraryHaskellDepends = [
base
bytestring
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/say#readme";
description = "Initial project template from stack";
license = stdenv.lib.licenses.mit;

}) {};
"sbv" = callPackage
({
  mkDerivation
, array
, async
, base
, base-compat
, containers
, crackNum
, data-binary-ieee754
, deepseq
, directory
, filepath
, ghc
, HUnit
, mtl
, old-time
, pretty
, process
, QuickCheck
, random
, stdenv
, syb
}:
mkDerivation {

pname = "sbv";
version = "5.14";
sha256 = "92dc71b96071162a47383c5f4833e8b78c2874009e671e2a6bc8de9707328e7e";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
array
async
base
base-compat
containers
crackNum
data-binary-ieee754
deepseq
directory
filepath
ghc
mtl
old-time
pretty
process
QuickCheck
random
syb
];
executableHaskellDepends = [
base
data-binary-ieee754
directory
filepath
HUnit
process
syb
];
doHaddock = false;
doCheck = false;
homepage = "http://leventerkok.github.com/sbv/";
description = "SMT Based Verification: Symbolic Haskell theorem prover using SMT solving";
license = stdenv.lib.licenses.bsd3;

}) {};
"scalpel" = callPackage
({
  mkDerivation
, base
, bytestring
, curl
, data-default
, scalpel-core
, stdenv
, tagsoup
, text
}:
mkDerivation {

pname = "scalpel";
version = "0.5.0";
sha256 = "1635b45543cac398a5c0a54cb3bd6fffb7d11150ddbc55b3fbd92b7a6736632f";
libraryHaskellDepends = [
base
bytestring
curl
data-default
scalpel-core
tagsoup
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fimad/scalpel";
description = "A high level web scraping library for Haskell";
license = stdenv.lib.licenses.asl20;

}) {};
"scalpel-core" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, data-default
, fail
, regex-base
, regex-tdfa
, stdenv
, tagsoup
, text
, vector
}:
mkDerivation {

pname = "scalpel-core";
version = "0.5.0";
sha256 = "b24a0dbfa4ebfba9e20b08e2b2f9f39c27bd575e1652d1bab944ae2784e00dda";
libraryHaskellDepends = [
base
bytestring
containers
data-default
fail
regex-base
regex-tdfa
tagsoup
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fimad/scalpel";
description = "A high level web scraping library for Haskell";
license = stdenv.lib.licenses.asl20;

}) {};
"scanner" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "scanner";
version = "0.2";
sha256 = "3a020d68a0372a5211c72e55eeb299738ea608d17184bc68f74d31ebe667a5e9";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Yuras/scanner";
description = "Fast non-backtracking incremental combinator parsing for bytestrings";
license = stdenv.lib.licenses.bsd3;

}) {};
"scientific" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, deepseq
, ghc-prim
, hashable
, integer-gmp
, integer-logarithms
, stdenv
, text
, vector
}:
mkDerivation {

pname = "scientific";
version = "0.3.4.10";
sha256 = "4d3b8ae5d741facfb0e84a2f1b6964a7ab3817269568c37de44f1be5cc0ff1a1";
libraryHaskellDepends = [
base
binary
bytestring
containers
deepseq
ghc-prim
hashable
integer-gmp
integer-logarithms
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/basvandijk/scientific";
description = "Numbers represented using scientific notation";
license = stdenv.lib.licenses.bsd3;

}) {};
"scotty" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-builder
, bytestring
, case-insensitive
, data-default-class
, fail
, http-types
, monad-control
, mtl
, nats
, network
, regex-compat
, stdenv
, text
, transformers
, transformers-base
, transformers-compat
, wai
, wai-extra
, warp
}:
mkDerivation {

pname = "scotty";
version = "0.11.0";
sha256 = "892203c937ccf1279f5005ddb78ebea84629b80687a1e38fc118b38011a386ed";
revision = "10";
editedCabalFile = "0y0ll3nn3n6n1ry2mvqm1g28a688hpba8kaw30m17p7fnv0m7368";
libraryHaskellDepends = [
aeson
base
blaze-builder
bytestring
case-insensitive
data-default-class
fail
http-types
monad-control
mtl
nats
network
regex-compat
text
transformers
transformers-base
transformers-compat
wai
wai-extra
warp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/scotty-web/scotty";
description = "Haskell web framework inspired by Ruby's Sinatra, using WAI and Warp";
license = stdenv.lib.licenses.bsd3;

}) {};
"scrypt" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, entropy
, stdenv
}:
mkDerivation {

pname = "scrypt";
version = "0.5.0";
sha256 = "3ec0a622393e2a4dbbce4c899602c848d924f8516688491b1162331b7093d9b2";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
entropy
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/informatikr/scrypt";
description = "Stronger password hashing via sequential memory-hard functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"sdl2" = callPackage
({
  mkDerivation
, base
, bytestring
, exceptions
, linear
, SDL2
, StateVar
, stdenv
, text
, transformers
, vector
}:
mkDerivation {

pname = "sdl2";
version = "2.2.0";
sha256 = "5a3a83fad8936539a4ff1a4a845f2a30b859d2d62e1cda7ab1f39cb59378c484";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
exceptions
linear
StateVar
text
transformers
vector
];
librarySystemDepends = [
SDL2
];
libraryPkgconfigDepends = [
SDL2
];
doHaddock = false;
doCheck = false;
description = "Both high- and low-level bindings to the SDL library (version 2.0.4+).";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) SDL2;};
"sdl2-gfx" = callPackage
({
  mkDerivation
, base
, bytestring
, lifted-base
, linear
, monad-control
, SDL2
, sdl2
, SDL2_gfx
, stdenv
, template-haskell
, text
, transformers
, vector
}:
mkDerivation {

pname = "sdl2-gfx";
version = "0.2";
sha256 = "8c1e10b7a675d782cd650820c75c4ef9225718ad6aaa3f8db02e869b7720c50d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
lifted-base
linear
monad-control
sdl2
template-haskell
text
transformers
vector
];
libraryPkgconfigDepends = [
SDL2
SDL2_gfx
];
executableHaskellDepends = [
base
linear
sdl2
vector
];
doHaddock = false;
doCheck = false;
description = "Bindings to SDL2_gfx";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) SDL2; inherit (pkgs) SDL2_gfx;};
"sdl2-image" = callPackage
({
  mkDerivation
, base
, bytestring
, SDL2
, sdl2
, SDL2_image
, stdenv
, template-haskell
, text
, transformers
}:
mkDerivation {

pname = "sdl2-image";
version = "2.0.0";
sha256 = "399742b2b7e64fe4e58c9d8a44ad29b2c355589233535238f8c9b371de6c26df";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
sdl2
template-haskell
text
transformers
];
libraryPkgconfigDepends = [
SDL2
SDL2_image
];
executableHaskellDepends = [
base
sdl2
text
];
doHaddock = false;
doCheck = false;
description = "Bindings to SDL2_image";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) SDL2; inherit (pkgs) SDL2_image;};
"sdl2-mixer" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default-class
, lifted-base
, monad-control
, sdl2
, SDL2_mixer
, stdenv
, template-haskell
, text
, transformers
, vector
}:
mkDerivation {

pname = "sdl2-mixer";
version = "0.1";
sha256 = "d924f31d9e1c87eed92d357ce20273dba44637861927188b8a44db2c0b2e2bc0";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
data-default-class
lifted-base
monad-control
sdl2
template-haskell
text
transformers
vector
];
librarySystemDepends = [
SDL2_mixer
];
libraryPkgconfigDepends = [
SDL2_mixer
];
executableHaskellDepends = [
base
data-default-class
sdl2
vector
];
doHaddock = false;
doCheck = false;
description = "Bindings to SDL2_mixer";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) SDL2_mixer;};
"securemem" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, ghc-prim
, memory
, stdenv
}:
mkDerivation {

pname = "securemem";
version = "0.1.9";
sha256 = "feb60dc542ea3ce9cdb449093b85dc69e43df310aab4fd161e4cdaa3ba847036";
libraryHaskellDepends = [
base
byteable
bytestring
ghc-prim
memory
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-securemem";
description = "abstraction to an auto scrubbing and const time eq, memory chunk";
license = stdenv.lib.licenses.bsd3;

}) {};
"semigroupoid-extras" = callPackage
({
  mkDerivation
, base
, profunctors
, semigroupoids
, stdenv
}:
mkDerivation {

pname = "semigroupoid-extras";
version = "5";
sha256 = "102e33b55cc3b15a1b714825a3703f3fc2bb09d8038404af442d35c0ac0c3832";
libraryHaskellDepends = [
base
profunctors
semigroupoids
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/semigroupoid-extras";
description = "Semigroupoids that depend on PolyKinds";
license = stdenv.lib.licenses.bsd3;

}) {};
"semigroupoids" = callPackage
({
  mkDerivation
, base
, base-orphans
, bifunctors
, comonad
, containers
, contravariant
, distributive
, semigroups
, stdenv
, tagged
, transformers
, transformers-compat
}:
mkDerivation {

pname = "semigroupoids";
version = "5.1";
sha256 = "16ac8ce9b40b0407cdb1b1197a704ec58ec689d5a6de891165a577725361f835";
revision = "1";
editedCabalFile = "1d5cyf7syvhqa5dk2kimgwxfm6ia5aj4y93b85dlj5s3mqyhzrxb";
libraryHaskellDepends = [
base
base-orphans
bifunctors
comonad
containers
contravariant
distributive
semigroups
tagged
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/semigroupoids";
description = "Semigroupoids: Category sans id";
license = stdenv.lib.licenses.bsd3;

}) {};
"semigroups" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "semigroups";
version = "0.18.2";
sha256 = "5dc9ff8622af25412fb071098063da288cd408a844e67c3371b78daa86d5d0e4";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/semigroups/";
description = "Anything that associates";
license = stdenv.lib.licenses.bsd3;

}) {};
"semiring-simple" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "semiring-simple";
version = "1.0.0.1";
sha256 = "c08d1b533f4559fc55119f563a6cf3d74ad7c6f5916c2efe00b50d2a5169fd28";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A module for dealing with semirings";
license = stdenv.lib.licenses.bsd3;

}) {};
"semver" = callPackage
({
  mkDerivation
, attoparsec
, base
, deepseq
, stdenv
, text
}:
mkDerivation {

pname = "semver";
version = "0.3.3.1";
sha256 = "36d3369706836d60f3bc517f30c6860734481866363723904b8768823b6bc8b1";
libraryHaskellDepends = [
attoparsec
base
deepseq
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/semver";
description = "Representation, manipulation, and de/serialisation of Semantic Versions";
license = "unknown";

}) {};
"sendfile" = callPackage
({
  mkDerivation
, base
, bytestring
, network
, stdenv
}:
mkDerivation {

pname = "sendfile";
version = "0.7.9";
sha256 = "102fdf6db8c00f5a5981c6eed5acba1368a2d79b2970ce5b22ceb180aa0fdc42";
libraryHaskellDepends = [
base
bytestring
network
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/stepcut/sendfile";
description = "A portable sendfile library";
license = stdenv.lib.licenses.bsd3;

}) {};
"seqalign" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, vector
}:
mkDerivation {

pname = "seqalign";
version = "0.2.0.4";
sha256 = "4ea194658d865890157d3df882ed21b0c089cdff7f80ea613ae25c5f3d744305";
libraryHaskellDepends = [
base
bytestring
vector
];
doHaddock = false;
doCheck = false;
description = "Sequence Alignment";
license = stdenv.lib.licenses.bsd3;

}) {};
"seqloc" = callPackage
({
  mkDerivation
, attoparsec
, base
, biocore
, bytestring
, hashable
, stdenv
, unordered-containers
, vector
}:
mkDerivation {

pname = "seqloc";
version = "0.6.1.1";
sha256 = "4435e76ba86417612b6bd6a173dc99444d5fe9184a9822b1edf13c808d4f55c3";
libraryHaskellDepends = [
attoparsec
base
biocore
bytestring
hashable
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://www.ingolia-lab.org/seqloc-tutorial.html";
description = "Handle sequence locations for bioinformatics";
license = stdenv.lib.licenses.mit;

}) {};
"serf" = callPackage
({
  mkDerivation
, attoparsec
, base
, conduit
, conduit-extra
, mtl
, operational
, process
, resourcet
, stdenv
, text
}:
mkDerivation {

pname = "serf";
version = "0.1.1.0";
sha256 = "d6c9c6ddf99a2119c6686732caf9f04ef8e9c4df5519a8bbd4ac7f5531d4c067";
libraryHaskellDepends = [
attoparsec
base
conduit
conduit-extra
mtl
operational
process
resourcet
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/sanetracker/serf";
description = "Interact with Serf via Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"servant" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base-compat
, bytestring
, case-insensitive
, http-api-data
, http-media
, http-types
, mmorph
, mtl
, network-uri
, stdenv
, string-conversions
, text
, vault
}:
mkDerivation {

pname = "servant";
version = "0.9.1.1";
sha256 = "fb3372f676ab07dfab1695ccd0e23d98c948318f4b4d5ae827a6fa5284c4e5fa";
revision = "1";
editedCabalFile = "0kfy554fwl2skdb6cagrpbypg7jv15rf6bspyivdqr34dvpr7gm9";
libraryHaskellDepends = [
aeson
attoparsec
base
base-compat
bytestring
case-insensitive
http-api-data
http-media
http-types
mmorph
mtl
network-uri
string-conversions
text
vault
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "A family of combinators for defining webservices APIs";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-JuicyPixels" = callPackage
({
  mkDerivation
, base
, bytestring
, http-media
, JuicyPixels
, servant
, servant-server
, stdenv
, wai
, warp
}:
mkDerivation {

pname = "servant-JuicyPixels";
version = "0.3.0.2";
sha256 = "34ed22ef256d7ff3af3fff56484261448928f140b1b4287965619fe6b10b3ebd";
revision = "1";
editedCabalFile = "1sj4qyaf75nf1mciddga30b8ddrwv94184cz751n9abxidl18r49";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
http-media
JuicyPixels
servant
];
executableHaskellDepends = [
base
JuicyPixels
servant
servant-server
wai
warp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tvh/servant-JuicyPixels";
description = "Servant support for JuicyPixels";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-aeson-specs" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, bytestring
, directory
, filepath
, hspec
, hspec-golden-aeson
, QuickCheck
, quickcheck-arbitrary-adt
, random
, servant
, stdenv
}:
mkDerivation {

pname = "servant-aeson-specs";
version = "0.5.2.0";
sha256 = "2728ee897c7920423ab730cb32d64defc0784d7226ff95733c72aa142121f2dd";
libraryHaskellDepends = [
aeson
aeson-pretty
base
bytestring
directory
filepath
hspec
hspec-golden-aeson
QuickCheck
quickcheck-arbitrary-adt
random
servant
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/plow-technologies/servant-aeson-specs#readme";
description = "generic tests for aeson serialization in servant";
license = stdenv.lib.licenses.mit;

}) {};
"servant-auth-cookie" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, blaze-builder
, bytestring
, cereal
, cookie
, cryptonite
, data-default
, exceptions
, http-api-data
, http-types
, memory
, mtl
, servant
, servant-server
, stdenv
, tagged
, time
, transformers
, wai
}:
mkDerivation {

pname = "servant-auth-cookie";
version = "0.4.3.2";
sha256 = "faf62ad020d449638c3059847f16af7d72bfa623d9f5a8ad375e2add9f2c2e3c";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
base64-bytestring
blaze-builder
bytestring
cereal
cookie
cryptonite
data-default
exceptions
http-api-data
http-types
memory
mtl
servant
servant-server
tagged
time
transformers
wai
];
doHaddock = false;
doCheck = false;
description = "Authentication via encrypted cookies";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-blaze" = callPackage
({
  mkDerivation
, base
, blaze-html
, http-media
, servant
, stdenv
}:
mkDerivation {

pname = "servant-blaze";
version = "0.7.1";
sha256 = "90ed1c7a22b83bee344ef3896203f3699b7633bf986ffa064752c3596c072646";
revision = "6";
editedCabalFile = "051m44rqmxkl30n96qcbz1xwwsw2n7l7laflnc0xydc40ws0bj96";
libraryHaskellDepends = [
base
blaze-html
http-media
servant
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "Blaze-html support for servant";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-cassava" = callPackage
({
  mkDerivation
, base
, cassava
, http-media
, servant
, stdenv
, vector
}:
mkDerivation {

pname = "servant-cassava";
version = "0.8";
sha256 = "5d9b85f7dc2fc42c7fe47bf92e4502e4ff5dde03724a6ee6ab20887524dce4fb";
revision = "2";
editedCabalFile = "0yl56hhm4isxli1srv3jvisyzic3fj5j786mikbvx1q0vv946r2b";
libraryHaskellDepends = [
base
cassava
http-media
servant
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "Servant CSV content-type for cassava";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-client" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base-compat
, base64-bytestring
, bytestring
, exceptions
, http-api-data
, http-client
, http-client-tls
, http-media
, http-types
, mtl
, network-uri
, safe
, servant
, stdenv
, string-conversions
, text
, transformers
, transformers-compat
}:
mkDerivation {

pname = "servant-client";
version = "0.9.1.1";
sha256 = "6e085faa1a8ecab076ffdec61b97b6e7c8fff7eb18a9a4cf3538c26b7b99c724";
revision = "1";
editedCabalFile = "1ic2m9pm1id250dszlh4dy5pxf5kza7ps8vnc3wfpmhxn78p5b6k";
libraryHaskellDepends = [
aeson
attoparsec
base
base-compat
base64-bytestring
bytestring
exceptions
http-api-data
http-client
http-client-tls
http-media
http-types
mtl
network-uri
safe
servant
string-conversions
text
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "automatical derivation of querying functions for servant webservices";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-docs" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, bytestring
, case-insensitive
, control-monad-omega
, hashable
, http-media
, http-types
, lens
, servant
, stdenv
, string-conversions
, text
, unordered-containers
}:
mkDerivation {

pname = "servant-docs";
version = "0.9.1.1";
sha256 = "7c4205d25caa926355221e62842c3e58337d05022b1e4341045ac385e568bc79";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
aeson-pretty
base
bytestring
case-insensitive
control-monad-omega
hashable
http-media
http-types
lens
servant
string-conversions
text
unordered-containers
];
executableHaskellDepends = [
aeson
base
lens
servant
string-conversions
text
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "generate API docs for your servant webservice";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-elm" = callPackage
({
  mkDerivation
, base
, elm-export
, lens
, servant
, servant-foreign
, stdenv
, text
, wl-pprint-text
}:
mkDerivation {

pname = "servant-elm";
version = "0.4.0.1";
sha256 = "69b3a5dcbb680fc1e923d76afa8255987d4613e0d4387eb493de071c9842ffc5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
elm-export
lens
servant
servant-foreign
text
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/mattjbray/servant-elm#readme";
description = "Automatically derive Elm functions to query servant webservices";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-foreign" = callPackage
({
  mkDerivation
, base
, http-types
, lens
, servant
, stdenv
, text
}:
mkDerivation {

pname = "servant-foreign";
version = "0.9.1.1";
sha256 = "da9baf46c97b3ef3009a69c8d1ca40e188409c0027490c9e173b9ebd3da7c9ca";
libraryHaskellDepends = [
base
http-types
lens
servant
text
];
doHaddock = false;
doCheck = false;
description = "Helpers for generating clients for servant APIs in any programming language";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-js" = callPackage
({
  mkDerivation
, base
, base-compat
, charset
, lens
, servant
, servant-foreign
, stdenv
, text
}:
mkDerivation {

pname = "servant-js";
version = "0.9.1";
sha256 = "bbc8a860d7b84f716fcff7337654115cf6b7ba756d9a325cc0b1124cf82ade27";
revision = "2";
editedCabalFile = "0dymm939f8fz4xw6lmihb4xkcpsxmrc980dfyz9fdzbx54nr3g5s";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
base-compat
charset
lens
servant
servant-foreign
text
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "Automatically derive javascript functions to query servant webservices";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-lucid" = callPackage
({
  mkDerivation
, base
, http-media
, lucid
, servant
, stdenv
}:
mkDerivation {

pname = "servant-lucid";
version = "0.7.1";
sha256 = "ec26ba7d159b09be10beacf6242f6ae1bd111e9c738bfbf3cf2f560f48e0fe40";
revision = "6";
editedCabalFile = "0bz3j6xjig6qj7qwkvzv9kqvivd6qvz0kn42lpwg1kcf1j6w31mc";
libraryHaskellDepends = [
base
http-media
lucid
servant
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "Servant support for lucid";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-mock" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, http-types
, QuickCheck
, servant
, servant-server
, stdenv
, transformers
, wai
, warp
}:
mkDerivation {

pname = "servant-mock";
version = "0.8.1.1";
sha256 = "d7371a5899460bc6e86b003afbbf92f4609bd94299f0bbc89d14cd9212d7197d";
revision = "1";
editedCabalFile = "0kfv4nbzbny7wx5d7pgc3f2jgm9xq6zabldfdm8215bh5x3sfh90";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
http-types
QuickCheck
servant
servant-server
transformers
wai
];
executableHaskellDepends = [
aeson
base
QuickCheck
servant-server
warp
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "Derive a mock server for free from your servant API types";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-purescript" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, directory
, filepath
, http-types
, lens
, mainland-pretty
, purescript-bridge
, servant
, servant-foreign
, servant-server
, servant-subscriber
, stdenv
, text
}:
mkDerivation {

pname = "servant-purescript";
version = "0.6.0.0";
sha256 = "e66cd9e49f41ae26c41b37a87d27f6a7848a9f9b3dd41b162bbc7d1d6808285c";
libraryHaskellDepends = [
aeson
base
bytestring
containers
directory
filepath
http-types
lens
mainland-pretty
purescript-bridge
servant
servant-foreign
servant-server
servant-subscriber
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/eskimor/servant-purescript#readme";
description = "Generate PureScript accessor functions for you servant API";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-server" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base-compat
, base64-bytestring
, bytestring
, containers
, filepath
, http-api-data
, http-types
, mtl
, network
, network-uri
, safe
, servant
, split
, stdenv
, string-conversions
, system-filepath
, text
, transformers
, transformers-compat
, wai
, wai-app-static
, warp
, word8
}:
mkDerivation {

pname = "servant-server";
version = "0.9.1.1";
sha256 = "1e0683557ece1f7a8a7b11e5c7cd1fd042783777157d95a67e28a0518c91bdd1";
revision = "1";
editedCabalFile = "0wcpfg1v36jp5flf82dr5z27avff4gml9ag1znkgahxbsix17m8g";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
attoparsec
base
base-compat
base64-bytestring
bytestring
containers
filepath
http-api-data
http-types
mtl
network
network-uri
safe
servant
split
string-conversions
system-filepath
text
transformers
transformers-compat
wai
wai-app-static
warp
word8
];
executableHaskellDepends = [
aeson
base
servant
text
wai
warp
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "A family of combinators for defining webservices APIs and serving them";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-subscriber" = callPackage
({
  mkDerivation
, aeson
, async
, attoparsec
, base
, blaze-builder
, bytestring
, case-insensitive
, containers
, directory
, filepath
, http-types
, lens
, lifted-base
, monad-control
, monad-logger
, network-uri
, purescript-bridge
, servant
, servant-foreign
, servant-server
, stdenv
, stm
, text
, time
, transformers
, wai
, wai-websockets
, warp
, websockets
}:
mkDerivation {

pname = "servant-subscriber";
version = "0.5.0.3";
sha256 = "0530f47c565c12624524c028dcc4f12517bd05d31ef1fed1b6a4aa084507842a";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
async
attoparsec
base
blaze-builder
bytestring
case-insensitive
containers
directory
filepath
http-types
lens
lifted-base
monad-control
monad-logger
network-uri
servant
servant-foreign
servant-server
stm
text
time
transformers
wai
wai-websockets
warp
websockets
];
executableHaskellDepends = [
base
purescript-bridge
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/eskimor/servant-subscriber#readme";
description = "When REST is not enough ...";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-swagger" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, hspec
, http-media
, insert-ordered-containers
, lens
, QuickCheck
, servant
, stdenv
, swagger2
, text
, unordered-containers
}:
mkDerivation {

pname = "servant-swagger";
version = "1.1.2";
sha256 = "1aa55cdf092189fed02e5d5bddf052eafafd23df54e0671ec32adc5ac4c8c47e";
revision = "2";
editedCabalFile = "10f0f010wkz3q834c9nfnv9dg0m4hbz21r3zy39dnvjm4zjyfk0v";
libraryHaskellDepends = [
aeson
base
bytestring
hspec
http-media
insert-ordered-containers
lens
QuickCheck
servant
swagger2
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-servant/servant-swagger";
description = "Generate Swagger specification for your servant API";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-swagger-ui" = callPackage
({
  mkDerivation
, base
, blaze-markup
, bytestring
, directory
, file-embed
, filepath
, http-media
, servant
, servant-blaze
, servant-server
, servant-swagger
, stdenv
, swagger2
, template-haskell
, text
, transformers
, transformers-compat
, wai-app-static
}:
mkDerivation {

pname = "servant-swagger-ui";
version = "0.2.2.2.2.8";
sha256 = "7dcfbc55eb6aab3ebb739e7a056107cbe0d0720c3e2e6f820afe52e7e84084fb";
libraryHaskellDepends = [
base
blaze-markup
bytestring
directory
file-embed
filepath
http-media
servant
servant-blaze
servant-server
servant-swagger
swagger2
template-haskell
text
transformers
transformers-compat
wai-app-static
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/servant-swagger-ui#readme";
description = "Servant swagger ui";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-yaml" = callPackage
({
  mkDerivation
, base
, bytestring
, http-media
, servant
, stdenv
, yaml
}:
mkDerivation {

pname = "servant-yaml";
version = "0.1.0.0";
sha256 = "c917d9b046b06a9c4386f743a78142c27cf7f0ec1ad8562770ab9828f2ee3204";
revision = "19";
editedCabalFile = "1hlfly2j0c3c4sbzbkbzvwgvfnngkmx0r67ddv4ccg2if6pc5nqv";
libraryHaskellDepends = [
base
bytestring
http-media
servant
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/servant-yaml#readme";
description = "Servant support for yaml";
license = stdenv.lib.licenses.bsd3;

}) {};
"serversession" = callPackage
({
  mkDerivation
, aeson
, base
, base64-bytestring
, bytestring
, data-default
, hashable
, nonce
, path-pieces
, stdenv
, text
, time
, transformers
, unordered-containers
}:
mkDerivation {

pname = "serversession";
version = "1.0.1";
sha256 = "3ffbefd87017e8d46fbbe380f59e24672aa9c06b999da5f9ae0b052094d94822";
libraryHaskellDepends = [
aeson
base
base64-bytestring
bytestring
data-default
hashable
nonce
path-pieces
text
time
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/serversession";
description = "Secure, modular server-side sessions";
license = stdenv.lib.licenses.mit;

}) {};
"serversession-backend-acid-state" = callPackage
({
  mkDerivation
, acid-state
, base
, containers
, mtl
, safecopy
, serversession
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "serversession-backend-acid-state";
version = "1.0.3";
sha256 = "005317d6b31500738979d5affc858c5d2642dc86122b360c28a0737aac2a7ce6";
libraryHaskellDepends = [
acid-state
base
containers
mtl
safecopy
serversession
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/serversession";
description = "Storage backend for serversession using acid-state";
license = stdenv.lib.licenses.mit;

}) {};
"serversession-frontend-wai" = callPackage
({
  mkDerivation
, base
, bytestring
, cookie
, data-default
, path-pieces
, serversession
, stdenv
, text
, time
, transformers
, unordered-containers
, vault
, wai
, wai-session
}:
mkDerivation {

pname = "serversession-frontend-wai";
version = "1.0";
sha256 = "0b48130e3d3915dc46ec2392984e7862d066f6ddd454127a98b0c21c2574b167";
libraryHaskellDepends = [
base
bytestring
cookie
data-default
path-pieces
serversession
text
time
transformers
unordered-containers
vault
wai
wai-session
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/serversession";
description = "wai-session bindings for serversession";
license = stdenv.lib.licenses.mit;

}) {};
"serversession-frontend-yesod" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, cookie
, data-default
, path-pieces
, serversession
, stdenv
, text
, time
, transformers
, unordered-containers
, wai
, yesod-core
}:
mkDerivation {

pname = "serversession-frontend-yesod";
version = "1.0";
sha256 = "063946df7bf693e26973f81dd72b3586115dfac6b358421e4a7ada48e47c6753";
libraryHaskellDepends = [
base
bytestring
containers
cookie
data-default
path-pieces
serversession
text
time
transformers
unordered-containers
wai
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/serversession";
description = "Yesod bindings for serversession";
license = stdenv.lib.licenses.mit;

}) {};
"servius" = callPackage
({
  mkDerivation
, base
, blaze-builder
, blaze-html
, bytestring
, http-types
, markdown
, shakespeare
, stdenv
, text
, wai
, wai-app-static
}:
mkDerivation {

pname = "servius";
version = "1.2.0.2";
sha256 = "c11682eb485f028aaf2dc6abdbda38cc5a68fd57521cc3ffb5b56b765e9b5d2b";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
blaze-builder
blaze-html
bytestring
http-types
markdown
shakespeare
text
wai
wai-app-static
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/servius#readme";
description = "Warp web server with template rendering";
license = stdenv.lib.licenses.mit;

}) {};
"set-monad" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, stdenv
}:
mkDerivation {

pname = "set-monad";
version = "0.2.0.0";
sha256 = "eb2b4312c4a71024ea1c85683065c1052b0065b7d96df68cd1c4390c1ab2afdb";
libraryHaskellDepends = [
base
containers
deepseq
];
doHaddock = false;
doCheck = false;
description = "Set monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"setenv" = callPackage
({
  mkDerivation
, base
, stdenv
, unix
}:
mkDerivation {

pname = "setenv";
version = "0.1.1.3";
sha256 = "e358df39afc03d5a39e2ec650652d845c85c80cc98fe331654deafb4767ecb32";
revision = "1";
editedCabalFile = "0ny4g3kjys0hqg41mnwrsymy1bwhl8l169kis4y4fa58sb06m4f5";
libraryHaskellDepends = [
base
unix
];
doHaddock = false;
doCheck = false;
description = "A cross-platform library for setting environment variables";
license = stdenv.lib.licenses.mit;

}) {};
"setlocale" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "setlocale";
version = "1.0.0.4";
sha256 = "32396aedcb8fdd6c56821dcde25c2cbd76462b13a6dc229bec29cb78df1fa7e9";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/IchUndNichtDu/haskell-setlocale";
description = "Haskell bindings to setlocale";
license = stdenv.lib.licenses.bsd3;

}) {};
"sets" = callPackage
({
  mkDerivation
, base
, commutative
, composition
, containers
, contravariant
, hashable
, keys
, mtl
, QuickCheck
, semigroupoids
, semigroups
, stdenv
, transformers
, transformers-base
, unordered-containers
, witherable
}:
mkDerivation {

pname = "sets";
version = "0.0.5.2";
sha256 = "be20d5b7b4a5770b7089879f3ef7226c485f4d5bb17e87f979f3bb6475e48713";
libraryHaskellDepends = [
base
commutative
composition
containers
contravariant
hashable
keys
mtl
QuickCheck
semigroupoids
semigroups
transformers
transformers-base
unordered-containers
witherable
];
doHaddock = false;
doCheck = false;
description = "Ducktyped set interface for Haskell containers";
license = stdenv.lib.licenses.mit;

}) {};
"shake" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, deepseq
, directory
, extra
, filepath
, hashable
, js-flot
, js-jquery
, primitive
, process
, random
, stdenv
, time
, transformers
, unix
, unordered-containers
, utf8-string
}:
mkDerivation {

pname = "shake";
version = "0.15.11";
sha256 = "05520d833ce9563977aa57d777a644b2a2322366a9f54c1004d83967e826b1bb";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
binary
bytestring
deepseq
directory
extra
filepath
hashable
js-flot
js-jquery
process
random
time
transformers
unix
unordered-containers
utf8-string
];
executableHaskellDepends = [
base
binary
bytestring
deepseq
directory
extra
filepath
hashable
js-flot
js-jquery
primitive
process
random
time
transformers
unix
unordered-containers
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://shakebuild.com";
description = "Build system library, like Make, but more accurate dependencies";
license = stdenv.lib.licenses.bsd3;

}) {};
"shake-language-c" = callPackage
({
  mkDerivation
, base
, data-default-class
, fclabels
, process
, shake
, split
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "shake-language-c";
version = "0.10.0";
sha256 = "1b0f031c37db7ac320f80e09ab79dca2bdb85ba922a48c10f0954efd6d407888";
libraryHaskellDepends = [
base
data-default-class
fclabels
process
shake
split
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/samplecount/shake-language-c";
description = "Utilities for cross-compiling with Shake";
license = stdenv.lib.licenses.asl20;

}) {};
"shakespeare" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-html
, blaze-markup
, bytestring
, containers
, directory
, exceptions
, ghc-prim
, parsec
, process
, scientific
, stdenv
, template-haskell
, text
, time
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "shakespeare";
version = "2.0.12.1";
sha256 = "057d7153a19a4f28a012f30b5d54b9e1296695ff94ccdfa23c28fa82bd3488ac";
libraryHaskellDepends = [
aeson
base
blaze-html
blaze-markup
bytestring
containers
directory
exceptions
ghc-prim
parsec
process
scientific
template-haskell
text
time
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/shakespearean-templates";
description = "A toolkit for making compile-time interpolated templates";
license = stdenv.lib.licenses.mit;

}) {};
"shell-conduit" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, conduit
, conduit-extra
, control-monad-loop
, directory
, filepath
, monad-control
, monads-tf
, process
, resourcet
, semigroups
, split
, stdenv
, template-haskell
, text
, transformers
, transformers-base
, unix
}:
mkDerivation {

pname = "shell-conduit";
version = "4.5.2";
sha256 = "427bc36d11b0b67f6cdfabc85a2dea95e65aed1dc16223af68832f4cff4b6c12";
libraryHaskellDepends = [
async
base
bytestring
conduit
conduit-extra
control-monad-loop
directory
filepath
monad-control
monads-tf
process
resourcet
semigroups
split
template-haskell
text
transformers
transformers-base
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chrisdone/shell-conduit";
description = "Write shell scripts with Conduit";
license = stdenv.lib.licenses.bsd3;

}) {};
"shortcut-links" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "shortcut-links";
version = "0.4.2.0";
sha256 = "1e6b75c5e94fddf9e2e665821ac70f5083e5d40d1fd55813e94943ce02335027";
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/shortcut-links";
description = "Link shortcuts for use in text markup";
license = stdenv.lib.licenses.bsd3;

}) {};
"should-not-typecheck" = callPackage
({
  mkDerivation
, base
, deepseq
, HUnit
, stdenv
}:
mkDerivation {

pname = "should-not-typecheck";
version = "2.1.0";
sha256 = "f538ac70ce07679bc2e6c1651db82a86866664ab995665fdc78e6cb12bd8d591";
libraryHaskellDepends = [
base
deepseq
HUnit
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/CRogers/should-not-typecheck";
description = "A HUnit/hspec assertion library to verify that an expression does not typecheck";
license = stdenv.lib.licenses.bsd3;

}) {};
"show-prettyprint" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, stdenv
, trifecta
}:
mkDerivation {

pname = "show-prettyprint";
version = "0.1.2";
sha256 = "5b9e93c48e91f1c91d3b2fcf214ea085f08292ee36916c324709532a7446e7a6";
libraryHaskellDepends = [
ansi-wl-pprint
base
trifecta
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/quchen/show-prettyprint#readme";
description = "Robust prettyprinter for output of auto-generated Show instances";
license = stdenv.lib.licenses.bsd3;

}) {};
"sibe" = callPackage
({
  mkDerivation
, base
, Chart
, Chart-cairo
, containers
, data-default-class
, deepseq
, directory
, hmatrix
, JuicyPixels
, lens
, random
, random-shuffle
, regex-base
, regex-pcre
, split
, stdenv
, stemmer
, text
, vector
}:
mkDerivation {

pname = "sibe";
version = "0.2.0.4";
sha256 = "104038b009602b8cd3a9a9211d2c67cf585c7c5e3d69a2a16df0348fa5958ddc";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
Chart
Chart-cairo
containers
data-default-class
deepseq
hmatrix
lens
random
random-shuffle
regex-base
regex-pcre
split
stemmer
text
vector
];
executableHaskellDepends = [
base
Chart
Chart-cairo
containers
data-default-class
directory
hmatrix
JuicyPixels
random
random-shuffle
split
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mdibaiee/sibe";
description = "Machine Learning algorithms";
license = stdenv.lib.licenses.gpl3;

}) {};
"signal" = callPackage
({
  mkDerivation
, base
, stdenv
, unix
}:
mkDerivation {

pname = "signal";
version = "0.1.0.3";
sha256 = "1df5108befee3eaefb5a826eb83df60f192ff3f3e264d998a7e491d60f388ac7";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
unix
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/pmlodawski/signal";
description = "Multiplatform signal support for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"silently" = callPackage
({
  mkDerivation
, base
, deepseq
, directory
, stdenv
}:
mkDerivation {

pname = "silently";
version = "1.2.5";
sha256 = "cef625635053a46032ca53b43d311921875a437910b6568ded17027fdca83839";
libraryHaskellDepends = [
base
deepseq
directory
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hspec/silently";
description = "Prevent or capture writing to stdout and other handles";
license = stdenv.lib.licenses.bsd3;

}) {};
"simple" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base64-bytestring
, blaze-builder
, bytestring
, cmdargs
, directory
, filepath
, http-types
, mime-types
, monad-control
, mtl
, process
, setenv
, simple-templates
, stdenv
, text
, transformers
, transformers-base
, unordered-containers
, vector
, wai
, wai-extra
}:
mkDerivation {

pname = "simple";
version = "0.11.1";
sha256 = "74c3cfb9a92cbaebb47e8abbc7d918947a05340fd0d4fab1661ff8e777f5e815";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
base64-bytestring
blaze-builder
bytestring
directory
filepath
http-types
mime-types
monad-control
mtl
simple-templates
text
transformers
transformers-base
unordered-containers
vector
wai
wai-extra
];
executableHaskellDepends = [
aeson
attoparsec
base
bytestring
cmdargs
directory
filepath
process
setenv
simple-templates
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://simple.cx";
description = "A minimalist web framework for the WAI server interface";
license = stdenv.lib.licenses.lgpl3;

}) {};
"simple-download" = callPackage
({
  mkDerivation
, base
, conduit-combinators
, http-client
, http-conduit
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "simple-download";
version = "0.0.2";
sha256 = "57aafeb55eb54811b6bba0f41f01af2a95e6bb8d1288bab5d2fd7749b9f90fce";
libraryHaskellDepends = [
base
conduit-combinators
http-client
http-conduit
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/TerrorJack/simple-download#readme";
description = "A simple wrapper of http-conduit for file download";
license = stdenv.lib.licenses.bsd3;

}) {};
"simple-log" = callPackage
({
  mkDerivation
, async
, base
, containers
, deepseq
, directory
, exceptions
, filepath
, mtl
, SafeSemaphore
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "simple-log";
version = "0.5.1";
sha256 = "d1b7cd207877886538332e10b80ae39815e418474c5431b80bc9aa10df2edbf6";
revision = "1";
editedCabalFile = "0xqzi65hhmazyqpvw2c7rzs49xdm4rah84kcz7w3c25zac9hbxl2";
libraryHaskellDepends = [
async
base
containers
deepseq
directory
exceptions
filepath
mtl
SafeSemaphore
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/mvoidex/simple-log";
description = "Simple log for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"simple-reflect" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "simple-reflect";
version = "0.3.2";
sha256 = "38224eb3d0d5eafc7101ad48fa92001c3e753a015d53bb12753a3836b871ecb6";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://twanvl.nl/blog/haskell/simple-reflection-of-expressions";
description = "Simple reflection of expressions containing variables";
license = stdenv.lib.licenses.bsd3;

}) {};
"simple-sendfile" = callPackage
({
  mkDerivation
, base
, bytestring
, network
, stdenv
, unix
}:
mkDerivation {

pname = "simple-sendfile";
version = "0.2.25";
sha256 = "0ae68821cd828b29772654b5613d514a421b1b1440d82a4b610339e67a92294d";
revision = "1";
editedCabalFile = "1axghvn2iz0gzlc0ics4q8abl15ggwvcwcmly5cxhmc32hqv8y5c";
libraryHaskellDepends = [
base
bytestring
network
unix
];
doHaddock = false;
doCheck = false;
description = "Cross platform library for the sendfile system call";
license = stdenv.lib.licenses.bsd3;

}) {};
"simple-session" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, blaze-builder
, byteable
, bytestring
, containers
, cookie
, cryptohash
, http-types
, simple
, stdenv
, transformers
, wai
, wai-extra
}:
mkDerivation {

pname = "simple-session";
version = "0.10.1.1";
sha256 = "8a9c9cb7a80080b6440a80549919d3cee3409af6c516b3d10d1392708b48e7c1";
libraryHaskellDepends = [
base
base64-bytestring
blaze-builder
byteable
bytestring
containers
cookie
cryptohash
http-types
simple
transformers
wai
wai-extra
];
doHaddock = false;
doCheck = false;
homepage = "http://simple.cx";
description = "Cookie-based session management for the Simple web framework";
license = stdenv.lib.licenses.lgpl3;

}) {};
"simple-smt" = callPackage
({
  mkDerivation
, base
, process
, stdenv
}:
mkDerivation {

pname = "simple-smt";
version = "0.6.0";
sha256 = "0cb4d409cb0cf99a9f26c405dc7626c1206d5bffec925ce202f42327b769b695";
libraryHaskellDepends = [
base
process
];
doHaddock = false;
doCheck = false;
description = "A simple way to interact with an SMT solver process";
license = stdenv.lib.licenses.bsd3;

}) {};
"simple-templates" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, scientific
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "simple-templates";
version = "0.8.0.1";
sha256 = "28e10f916320bb5097d9ed323a1726d88d17a51b0ac0290a91806d97840bca8e";
libraryHaskellDepends = [
aeson
attoparsec
base
scientific
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://simple.cx";
description = "A basic template language for the Simple web framework";
license = stdenv.lib.licenses.lgpl3;

}) {};
"singleton-bool" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "singleton-bool";
version = "0.1.2.0";
sha256 = "33bbd0460a5363260f56b29b130babfc16921ba87cb4576569ecc0a0664d449d";
revision = "1";
editedCabalFile = "13x8chqhrlmrsca0018p7z5by3przlr9921yhjc072c8433br586";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/singleton-bool#readme";
description = "Type level booleans";
license = stdenv.lib.licenses.bsd3;

}) {};
"singletons" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
, syb
, template-haskell
, th-desugar
}:
mkDerivation {

pname = "singletons";
version = "2.2";
sha256 = "33bd06e08b4f8eab23a01074b06056507a6e3525e228b4e7ae3b2ed4c3d58caf";
libraryHaskellDepends = [
base
containers
mtl
syb
template-haskell
th-desugar
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/goldfirere/singletons";
description = "A framework for generating singleton types";
license = stdenv.lib.licenses.bsd3;

}) {};
"siphash" = callPackage
({
  mkDerivation
, base
, bytestring
, cpu
, stdenv
}:
mkDerivation {

pname = "siphash";
version = "1.0.3";
sha256 = "cf81ce41c6ca40c4fec9add5dcebc161cb2d31f522f9ad727df23d30ac6a05f3";
revision = "1";
editedCabalFile = "1q2dy0ywngm9iv7k6d9gnf860m9hpf62q5qvdzmxw5s629gk4afn";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
cpu
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-siphash";
description = "siphash: a fast short input PRF";
license = stdenv.lib.licenses.bsd3;

}) {};
"skein" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, crypto-api
, stdenv
, tagged
}:
mkDerivation {

pname = "skein";
version = "1.0.9.4";
sha256 = "f882ca0cc5ed336ef898fb3c89579e392900259296b2320edf968b9fc16cb8c9";
libraryHaskellDepends = [
base
bytestring
cereal
crypto-api
tagged
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/meteficha/skein";
description = "Skein, a family of cryptographic hash functions. Includes Skein-MAC as well.";
license = stdenv.lib.licenses.bsd3;

}) {};
"skeletons" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, containers
, directory
, filepath
, stdenv
, text
, tinytemplate
, transformers
, transformers-compat
}:
mkDerivation {

pname = "skeletons";
version = "0.4.0";
sha256 = "3dd5045d09131434a794b9452980b4a54da4312d2e1116ac455bbc9bdf6fbcc6";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
ansi-wl-pprint
base
containers
directory
filepath
text
tinytemplate
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jb55/skeletons";
description = "Manage project skeletons";
license = stdenv.lib.licenses.mit;

}) {};
"skylighting" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-html
, bytestring
, case-insensitive
, containers
, directory
, filepath
, hxt
, mtl
, regex-pcre-builtin
, safe
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "skylighting";
version = "0.1.1.5";
sha256 = "0a4b666b2ccfeed35386bd364d663e919adc1815547e6360e83487253e33b13c";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
blaze-html
bytestring
case-insensitive
containers
directory
filepath
hxt
mtl
regex-pcre-builtin
safe
text
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jgm/skylighting";
description = "syntax highlighting library";
license = stdenv.lib.licenses.gpl2;

}) {};
"slave-thread" = callPackage
({
  mkDerivation
, base
, base-prelude
, list-t
, mmorph
, partial-handler
, stdenv
, stm-containers
, transformers
}:
mkDerivation {

pname = "slave-thread";
version = "1.0.2";
sha256 = "e47120598dd65ebee33253911a31518021323a5ccfa52588e13c44fd5f5b4b13";
libraryHaskellDepends = [
base
base-prelude
list-t
mmorph
partial-handler
stm-containers
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/slave-thread";
description = "A principal solution to ghost threads and silent exceptions";
license = stdenv.lib.licenses.mit;

}) {};
"slug" = callPackage
({
  mkDerivation
, aeson
, base
, exceptions
, http-api-data
, path-pieces
, persistent
, QuickCheck
, stdenv
, text
}:
mkDerivation {

pname = "slug";
version = "0.1.6";
sha256 = "c4d589b30d7d4788ed5dbf1a24652a5f880751a0250707bf8ac82a3714734692";
revision = "1";
editedCabalFile = "1q5adw6i43d588kbhci086blj1cvldbxcils2k99p4hs8qlzymbj";
libraryHaskellDepends = [
aeson
base
exceptions
http-api-data
path-pieces
persistent
QuickCheck
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/slug";
description = "Type-safe slugs for Yesod ecosystem";
license = stdenv.lib.licenses.bsd3;

}) {};
"smallcaps" = callPackage
({
  mkDerivation
, attoparsec
, base
, containers
, data-default
, directory
, filepath
, parsec
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "smallcaps";
version = "0.6.0.4";
sha256 = "c5224d8f48f86b6d8e788194cbe1e4f13015ba3eb90794ea5d99ff78ddff85d3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
attoparsec
base
containers
data-default
directory
filepath
parsec
text
transformers
];
executableHaskellDepends = [
base
containers
data-default
text
];
doHaddock = false;
doCheck = false;
description = "Flatten camel case text in LaTeX files";
license = stdenv.lib.licenses.bsd3;

}) {};
"smallcheck" = callPackage
({
  mkDerivation
, base
, ghc-prim
, logict
, mtl
, pretty
, stdenv
}:
mkDerivation {

pname = "smallcheck";
version = "1.1.1";
sha256 = "4d17607c1a620491e7e495a17575b73952932c761e7f9bdfa87e0102fb52f9f9";
revision = "1";
editedCabalFile = "1ykq0hqs1alw86p0ssa6dhsb1a8d4m6bqwibkhvzcd6c28dq975i";
libraryHaskellDepends = [
base
ghc-prim
logict
mtl
pretty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/smallcheck";
description = "A property-based testing library";
license = stdenv.lib.licenses.bsd3;

}) {};
"smoothie" = callPackage
({
  mkDerivation
, aeson
, base
, linear
, stdenv
, text
, vector
}:
mkDerivation {

pname = "smoothie";
version = "0.4.2.6";
sha256 = "9225877499dd0b4504d91e26403b23f6d8517c097073abf07982fc5041836174";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
linear
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phaazon/smoothie";
description = "Smooth curves via several interpolation modes";
license = stdenv.lib.licenses.bsd3;

}) {};
"smtLib" = callPackage
({
  mkDerivation
, base
, pretty
, stdenv
}:
mkDerivation {

pname = "smtLib";
version = "1.0.8";
sha256 = "37016f9322742c88c89d692e62d01c419b03242bbc6d84da4dab772408ad21a9";
libraryHaskellDepends = [
base
pretty
];
doHaddock = false;
doCheck = false;
description = "A library for working with the SMTLIB format";
license = stdenv.lib.licenses.bsd3;

}) {};
"smtp-mail" = callPackage
({
  mkDerivation
, array
, base
, base16-bytestring
, base64-bytestring
, bytestring
, cryptohash
, filepath
, mime-mail
, network
, stdenv
, text
}:
mkDerivation {

pname = "smtp-mail";
version = "0.1.4.6";
sha256 = "86dacbef87a2519222a1165b49401a437887a249f5bfd63a99702198dad214bc";
libraryHaskellDepends = [
array
base
base16-bytestring
base64-bytestring
bytestring
cryptohash
filepath
mime-mail
network
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jhickner/smtp-mail";
description = "Simple email sending via SMTP";
license = stdenv.lib.licenses.bsd3;

}) {};
"snap-core" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, bytestring-builder
, case-insensitive
, containers
, directory
, filepath
, HUnit
, io-streams
, lifted-base
, monad-control
, mtl
, old-locale
, random
, readable
, regex-posix
, stdenv
, text
, time
, transformers
, transformers-base
, unix-compat
, unordered-containers
, vector
}:
mkDerivation {

pname = "snap-core";
version = "1.0.1.0";
sha256 = "f5d2a8b690e77b03626e7bd1856011fc2a13b286939176bde7b61c064aafa37c";
revision = "1";
editedCabalFile = "1j288lpkzj6ki9gk1a1knbjh5pa87zdr3w62zgg3bmf91gi8n97g";
libraryHaskellDepends = [
attoparsec
base
bytestring
bytestring-builder
case-insensitive
containers
directory
filepath
HUnit
io-streams
lifted-base
monad-control
mtl
old-locale
random
readable
regex-posix
text
time
transformers
transformers-base
unix-compat
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://snapframework.com/";
description = "Snap: A Haskell Web Framework (core interfaces and types)";
license = stdenv.lib.licenses.bsd3;

}) {};
"snap-server" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-builder
, bytestring
, bytestring-builder
, case-insensitive
, clock
, containers
, filepath
, HsOpenSSL
, io-streams
, io-streams-haproxy
, lifted-base
, mtl
, network
, old-locale
, openssl-streams
, snap-core
, stdenv
, text
, time
, unix
, unix-compat
, vector
}:
mkDerivation {

pname = "snap-server";
version = "1.0.1.1";
sha256 = "878d83a815b9cc8f3d282ef6fafc441528b5f7819147f17f0c1b1f9904146c70";
revision = "1";
editedCabalFile = "19zr69g7yq8xb9z6nlzzai2ywxzx9bmz976z5065kf1jvxqq16sv";
configureFlags = [
"-fopenssl"
];
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
attoparsec
base
blaze-builder
bytestring
bytestring-builder
case-insensitive
clock
containers
filepath
HsOpenSSL
io-streams
io-streams-haproxy
lifted-base
mtl
network
old-locale
openssl-streams
snap-core
text
time
unix
unix-compat
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://snapframework.com/";
description = "A web server for the Snap Framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"snowflake" = callPackage
({
  mkDerivation
, base
, stdenv
, time
}:
mkDerivation {

pname = "snowflake";
version = "0.1.1.1";
sha256 = "f156ca321ae17033fe1cbe7e676fea403136198e1c3a132924a080cd3145cddd";
revision = "1";
editedCabalFile = "1y5v3nsin8iyxvh0abfhs7ma75p5zjvha0lp41801pdiikacfzha";
libraryHaskellDepends = [
base
time
];
doHaddock = false;
doCheck = false;
description = "A loose port of Twitter Snowflake to Haskell. Generates arbitrary precision, unique, time-sortable identifiers.";
license = stdenv.lib.licenses.asl20;

}) {};
"soap" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, configurator
, data-default
, exceptions
, http-client
, http-types
, iconv
, mtl
, resourcet
, stdenv
, text
, unordered-containers
, xml-conduit
, xml-conduit-writer
, xml-types
}:
mkDerivation {

pname = "soap";
version = "0.2.3.3";
sha256 = "2d1759c83bc75cacc470ffc64af218f971d55875a61c2de10be1276bd9845979";
libraryHaskellDepends = [
base
bytestring
conduit
configurator
data-default
exceptions
http-client
http-types
iconv
mtl
resourcet
text
unordered-containers
xml-conduit
xml-conduit-writer
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/dpwiz/haskell-soap";
description = "SOAP client tools";
license = stdenv.lib.licenses.mit;

}) {};
"soap-openssl" = callPackage
({
  mkDerivation
, base
, configurator
, data-default
, HsOpenSSL
, http-client
, http-client-openssl
, soap
, stdenv
, text
}:
mkDerivation {

pname = "soap-openssl";
version = "0.1.0.2";
sha256 = "2008547f4fd22063479ce1cd1c483db926f5f08a2ff6fb0c60fb2f0f7d42830f";
revision = "1";
editedCabalFile = "1b3aivn9jfaax00id7x4cqvpmd6lgynslchlry0qsmq1lj466cdf";
libraryHaskellDepends = [
base
configurator
data-default
HsOpenSSL
http-client
http-client-openssl
soap
text
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/dpwiz/haskell-soap";
description = "TLS-enabled SOAP transport (using openssl bindings)";
license = stdenv.lib.licenses.mit;

}) {};
"soap-tls" = callPackage
({
  mkDerivation
, base
, configurator
, connection
, data-default
, http-client
, http-client-tls
, soap
, stdenv
, text
, tls
, x509
, x509-store
, x509-validation
}:
mkDerivation {

pname = "soap-tls";
version = "0.1.1.2";
sha256 = "e43abafb0ed390b9f5f99cc957973367d40e91c8d3ae7e22b3250a08ebe7df76";
revision = "1";
editedCabalFile = "0h6jgiifrphdphxfvgk95and4a86xp6afxi90v0b93cs2zyi0vsy";
libraryHaskellDepends = [
base
configurator
connection
data-default
http-client
http-client-tls
soap
text
tls
x509
x509-store
x509-validation
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/dpwiz/haskell-soap";
description = "TLS-enabled SOAP transport (using tls package)";
license = stdenv.lib.licenses.mit;

}) {};
"socket" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "socket";
version = "0.7.0.0";
sha256 = "84dad156fe2d792194e86c4496db648e5fe0bbb55db2070b93058d6aa5f08962";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lpeterse/haskell-socket";
description = "An extensible socket library";
license = stdenv.lib.licenses.mit;

}) {};
"socket-activation" = callPackage
({
  mkDerivation
, base
, network
, stdenv
, transformers
, unix
}:
mkDerivation {

pname = "socket-activation";
version = "0.1.0.2";
sha256 = "b99e7b4f296cd462aac84e5bb61fb02953e2080d1351e9e10a63d35dc34eb43b";
libraryHaskellDepends = [
base
network
transformers
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ddfisher/haskell-socket-activation";
description = "systemd socket activation library";
license = stdenv.lib.licenses.bsd3;

}) {};
"socks" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, network
, stdenv
}:
mkDerivation {

pname = "socks";
version = "0.5.5";
sha256 = "2647ea93e21ad1dfd77e942c022c8707e468d25e1ff672a88be82508034fc868";
revision = "1";
editedCabalFile = "0nz8q0xvd8y6f42bd1w3q8d8bg1qzl8ggx0a23kb3jb60g36dmvw";
libraryHaskellDepends = [
base
bytestring
cereal
network
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-socks";
description = "Socks proxy (version 5) implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"solga" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, http-types
, resourcet
, safe-exceptions
, stdenv
, text
, wai
, wai-extra
}:
mkDerivation {

pname = "solga";
version = "0.1.0.2";
sha256 = "fdb4825ebac855d411c6841e015fe7dd1ac0a56a3bcc78aef7a91a1d8444b06a";
libraryHaskellDepends = [
aeson
base
bytestring
containers
http-types
resourcet
safe-exceptions
text
wai
wai-extra
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chpatrick/solga";
description = "Simple typesafe web routing";
license = stdenv.lib.licenses.mit;

}) {};
"solga-swagger" = callPackage
({
  mkDerivation
, base
, bytestring
, dlist
, http-types
, insert-ordered-containers
, lens
, mtl
, solga
, stdenv
, swagger2
, text
, unordered-containers
}:
mkDerivation {

pname = "solga-swagger";
version = "0.1.0.2";
sha256 = "dcb77313090c82ce9f35843ecec2ce59741fffa5f7a337d77b5d545a8e2136d4";
libraryHaskellDepends = [
base
bytestring
dlist
http-types
insert-ordered-containers
lens
mtl
solga
swagger2
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chpatrick/solga";
description = "Swagger generation for Solga";
license = stdenv.lib.licenses.mit;

}) {};
"sorted-list" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "sorted-list";
version = "0.2.0.0";
sha256 = "cc52c787b056f4d3a9ecc59f06701695602558a4233042ff8f613cdd4985d138";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Daniel-Diaz/sorted-list/blob/master/README.md";
description = "Type-enforced sorted lists and related functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"sourcemap" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, process
, stdenv
, text
, unordered-containers
, utf8-string
}:
mkDerivation {

pname = "sourcemap";
version = "0.1.6";
sha256 = "b9a04cccb4fe7eea8b37a2eaf2bc776eae5640038ab76fb948c5a3ea09a9ce7a";
revision = "1";
editedCabalFile = "1f7q44ar6qfip8fsllg43jyn7r15ifn2r0vz32cbmx0sb0d38dax";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
process
text
unordered-containers
utf8-string
];
doHaddock = false;
doCheck = false;
description = "Implementation of source maps as proposed by Google and Mozilla";
license = stdenv.lib.licenses.bsd3;

}) {};
"sparkle" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, choice
, distributed-closure
, filepath
, jni
, jvm
, jvm-streaming
, process
, regex-tdfa
, singletons
, stdenv
, streaming
, text
, vector
, zip-archive
}:
mkDerivation {

pname = "sparkle";
version = "0.4.0.2";
sha256 = "778c4858a51480f685b7f48c3ffea76535dd690119414de1a5d03535c3e3cfaf";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
binary
bytestring
choice
distributed-closure
jni
jvm
jvm-streaming
singletons
streaming
text
vector
];
executableHaskellDepends = [
base
bytestring
filepath
process
regex-tdfa
text
zip-archive
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/tweag/sparkle#readme";
description = "Distributed Apache Spark applications in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"sparse-linear-algebra" = callPackage
({
  mkDerivation
, base
, containers
, exceptions
, mtl
, stdenv
, transformers
, vector
, vector-algorithms
, vector-space
}:
mkDerivation {

pname = "sparse-linear-algebra";
version = "0.2.9.4";
sha256 = "5d97d81653785f08783cd29107f0f87c01611cf5b1ad1395ef1a8b799a04adf6";
libraryHaskellDepends = [
base
containers
exceptions
mtl
transformers
vector
vector-algorithms
vector-space
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ocramz/sparse-linear-algebra";
description = "Numerical computation in native Haskell";
license = stdenv.lib.licenses.gpl3;

}) {};
"spdx" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "spdx";
version = "0.2.1.0";
sha256 = "a7f0d6098e201f5d7b14c13387fe699b9830c95c0192bbd8ceda446a30c980f2";
revision = "1";
editedCabalFile = "0qffjk0iz3fnd4099n9bqzakpma6ffw6znk99x67j3i8qdmk1fmd";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/spdx";
description = "SPDX license expression language";
license = stdenv.lib.licenses.bsd3;

}) {};
"speculation" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
, stm
, transformers
}:
mkDerivation {

pname = "speculation";
version = "1.5.0.3";
sha256 = "73bf641a87e0d28a2ba233922db936e0776c3dc24ed421f6f963f015e2eb4d3f";
libraryHaskellDepends = [
base
ghc-prim
stm
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/speculation";
description = "A framework for safe, programmable, speculative parallelism";
license = stdenv.lib.licenses.bsd3;

}) {};
"speedy-slice" = callPackage
({
  mkDerivation
, base
, kan-extensions
, lens
, mcmc-types
, mwc-probability
, pipes
, primitive
, stdenv
, transformers
}:
mkDerivation {

pname = "speedy-slice";
version = "0.3.0";
sha256 = "efbf8a10b681b940078f70fb9aca43fec8ba436c82f3faf719bbe495ba152899";
libraryHaskellDepends = [
base
kan-extensions
lens
mcmc-types
mwc-probability
pipes
primitive
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jtobin/speedy-slice";
description = "Speedy slice sampling";
license = stdenv.lib.licenses.mit;

}) {};
"sphinx" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, data-binary-ieee754
, network
, stdenv
, text
, text-icu
, xml
}:
mkDerivation {

pname = "sphinx";
version = "0.6.0.2";
sha256 = "76a977c6ce6e71c220bd5fed7acd0be500c2a1b5c8d081a29564a8e37ba7a6df";
libraryHaskellDepends = [
base
binary
bytestring
data-binary-ieee754
network
text
text-icu
xml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/gregwebs/haskell-sphinx-client";
description = "Haskell bindings to the Sphinx full-text searching daemon";
license = stdenv.lib.licenses.bsd3;

}) {};
"splice" = callPackage
({
  mkDerivation
, base
, network
, stdenv
}:
mkDerivation {

pname = "splice";
version = "0.6.1.1";
sha256 = "81fabe6652571f0dbf6b8904bd782daaeccc9d89d40f77b15dff46b7499d4e53";
libraryHaskellDepends = [
base
network
];
doHaddock = false;
doCheck = false;
homepage = "http://corsis.github.com/splice/";
description = "Cross-platform Socket to Socket Data Splicing";
license = stdenv.lib.licenses.bsd3;

}) {};
"split" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "split";
version = "0.2.3.1";
sha256 = "7615b60adee20c19ddafd9d74456e8fe8e4274e2c676a5e858511b664205c688";
revision = "1";
editedCabalFile = "1kbf588dpzivh8fzrfgs761i4pqzcnpn8di7zxnq0ir9lwhfk2b0";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Combinator library for splitting lists";
license = stdenv.lib.licenses.bsd3;

}) {};
"spool" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, vector
}:
mkDerivation {

pname = "spool";
version = "0.1";
sha256 = "868c72b98aaf9f041f424d949d8cef05c9b859984e4e35d57026fad9d9f873eb";
libraryHaskellDepends = [
base
bytestring
vector
];
doHaddock = false;
doCheck = false;
description = "Convert between ByteString and Vector.Storable without copying";
license = stdenv.lib.licenses.bsd3;

}) {};
"spoon" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "spoon";
version = "0.3.1";
sha256 = "b9b350b6730e34c246bbf7e228a86b3d4925b52c95542f7676d719ef2a9881d4";
revision = "1";
editedCabalFile = "09s5jjcsg4g4qxchq9g2l4i9d5zh3rixpkbiysqcgl69kj8mwv74";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
description = "Catch errors thrown from pure computations";
license = stdenv.lib.licenses.bsd3;

}) {};
"sql-words" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "sql-words";
version = "0.1.4.1";
sha256 = "f53ea8f9621281ad85607a55a56cebb8bdb485f02000aa2ab3c4f867b2ff3dae";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "Simple idea SQL keywords data constructor into OverloadedString";
license = stdenv.lib.licenses.bsd3;

}) {};
"sqlite-simple" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-builder
, blaze-textual
, bytestring
, containers
, direct-sqlite
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "sqlite-simple";
version = "0.4.12.1";
sha256 = "2f24f4dfea3b3bc1657b26c786666abd041bb89e09c22d084eaea43d67112227";
revision = "1";
editedCabalFile = "0vqdj4q0dwv8l440bihqk1gpi29gn91jjfcprgwvg2frp51h9m28";
libraryHaskellDepends = [
attoparsec
base
blaze-builder
blaze-textual
bytestring
containers
direct-sqlite
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/nurpax/sqlite-simple";
description = "Mid-Level SQLite client library";
license = stdenv.lib.licenses.bsd3;

}) {};
"sqlite-simple-errors" = callPackage
({
  mkDerivation
, base
, parsec
, sqlite-simple
, stdenv
, text
}:
mkDerivation {

pname = "sqlite-simple-errors";
version = "0.6.0.0";
sha256 = "e697ba5ff6b4df227d782cb2d2327ce5df4282acdb17e8087ae76adbfabfd980";
libraryHaskellDepends = [
base
parsec
sqlite-simple
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/caneroj1/sqlite-simple-errors";
description = "Wrapper around errors from sqlite-simple";
license = stdenv.lib.licenses.bsd3;

}) {};
"srcloc" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "srcloc";
version = "0.5.1.0";
sha256 = "e61df6ce79c8ac42a7a9a15ab3553ef5448174c0bfaee7192ff4c3d6a5695aff";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://www.cs.drexel.edu/~mainland/";
description = "Data types for managing source code locations";
license = stdenv.lib.licenses.bsd3;

}) {};
"stache" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, deepseq
, directory
, exceptions
, filepath
, megaparsec
, mtl
, stdenv
, template-haskell
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "stache";
version = "0.2.0";
sha256 = "0952d6849a297d3ef020feaeb128be4af7d25ab97fa948eb0339a7f75d0a1831";
revision = "2";
editedCabalFile = "009d8w860yzzy9s2l7zccjf428zqyxsqhvqnn0j2agkblniak6a8";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
deepseq
directory
exceptions
filepath
megaparsec
mtl
template-haskell
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/stackbuilders/stache";
description = "Mustache templates for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"stack-type" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "stack-type";
version = "0.1.0.0";
sha256 = "f310965736f096cdf099e0a61c5fad39b066692d72643da989b64e61ae196c8e";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/aiya000/hs-stack-type";
description = "The basic stack type";
license = stdenv.lib.licenses.mit;

}) {};
"state-plus" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "state-plus";
version = "0.1.2";
sha256 = "c6ed155137d40262bf8aa38155bd93ecdc4bdbcb4ac83f5b980eeb8545ee377d";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
description = "MonadPlus for StateT";
license = stdenv.lib.licenses.bsd3;

}) {};
"stateWriter" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "stateWriter";
version = "0.2.8";
sha256 = "dbed209ec350b751b2c56388ab751149874f6b76c0d7a6725de1583682ccc6e2";
libraryHaskellDepends = [
base
mtl
transformers
];
doHaddock = false;
doCheck = false;
description = "A faster variant of the RWS monad transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"stateref" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, stm
}:
mkDerivation {

pname = "stateref";
version = "0.3";
sha256 = "7dd390aab346ca877cde1217d5b62145cdfa6f9390e3b7a53c9296229ee1b741";
libraryHaskellDepends = [
base
mtl
stm
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~mokus/stateref/";
description = "Abstraction for things that work like IORef";
license = stdenv.lib.licenses.publicDomain;

}) {};
"statestack" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "statestack";
version = "0.2.0.5";
sha256 = "f4eadcf9b08c14cb084436f81e16edf78d6eeda77a3f93e38ba5d7e263ea5f66";
revision = "2";
editedCabalFile = "0c10cv107ls0wm7gs3gvknd8a1gqvrkk97frn8lp1ch697mz44rp";
libraryHaskellDepends = [
base
mtl
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
description = "Simple State-like monad transformer with saveable and restorable state";
license = stdenv.lib.licenses.bsd3;

}) {};
"static-canvas" = callPackage
({
  mkDerivation
, base
, double-conversion
, free
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "static-canvas";
version = "0.2.0.3";
sha256 = "370824df08cedef2aacbbc8b855fd5cd3c80cfcc07ae2931e0f25397a61dd749";
revision = "1";
editedCabalFile = "1z3mi5z590xxmipd5fxylcmf39rrwvmwva2rkk6km1nxb5kfasl7";
libraryHaskellDepends = [
base
double-conversion
free
mtl
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jeffreyrosenbluth/static-canvas";
description = "DSL to generate HTML5 Canvas javascript";
license = stdenv.lib.licenses.bsd3;

}) {};
"statistics" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, deepseq
, erf
, math-functions
, monad-par
, mwc-random
, primitive
, stdenv
, vector
, vector-algorithms
, vector-binary-instances
}:
mkDerivation {

pname = "statistics";
version = "0.13.3.0";
sha256 = "6e7fe0f10086725c696fdd855caf4b6fb58ca5100bd0c9995f575f5b071381ed";
libraryHaskellDepends = [
aeson
base
binary
deepseq
erf
math-functions
monad-par
mwc-random
primitive
vector
vector-algorithms
vector-binary-instances
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/statistics";
description = "A library of statistical types, data, and functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"stb-image-redux" = callPackage
({
  mkDerivation
, base
, stdenv
, vector
}:
mkDerivation {

pname = "stb-image-redux";
version = "0.2.1.0";
sha256 = "c0e4a5d2bf6d99934430ffd068cb3d28003554c5c8beb84ce76dd487f191eb1d";
revision = "2";
editedCabalFile = "1ils1w36y3c4ik0mxnadrhxw1fy426av438ckg2fgnzys0i5zqp2";
libraryHaskellDepends = [
base
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sasinestro/stb-image-redux#readme";
description = "Image loading and writing microlibrary";
license = stdenv.lib.licenses.bsd3;

}) {};
"stemmer" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "stemmer";
version = "0.5.2";
sha256 = "757449eda1d1a8c64139a8e4ea12e616382961e0b7ed8f2dbaf1a970d35ce6dd";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/bgamari/stemmer";
description = "Haskell bindings to the Snowball stemming library";
license = stdenv.lib.licenses.bsd3;

}) {};
"stm" = callPackage
({
  mkDerivation
, array
, base
, stdenv
}:
mkDerivation {

pname = "stm";
version = "2.4.4.1";
sha256 = "8f999095ed8d50d2056fc6e185035ee8166c50751e1af8de02ac38d382bf3384";
revision = "1";
editedCabalFile = "0kzw4rw9fgmc4qyxmm1lwifdyrx5r1356150xm14vy4mp86diks9";
libraryHaskellDepends = [
array
base
];
doHaddock = false;
doCheck = false;
description = "Software Transactional Memory";
license = stdenv.lib.licenses.bsd3;

}) {};
"stm-chans" = callPackage
({
  mkDerivation
, base
, Cabal
, stdenv
, stm
}:
mkDerivation {

pname = "stm-chans";
version = "3.0.0.4";
sha256 = "2344fc5bfa33d565bad7b009fc0e2c5a7a595060ba149c661f44419fc0d54738";
revision = "1";
editedCabalFile = "0v9axxcfszqdmf3dhjxy34ybh22x3r5c48mdnbvjh5i5lp7g7vp2";
setupHaskellDepends = [
base
Cabal
];
libraryHaskellDepends = [
base
stm
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "Additional types of channels for STM";
license = stdenv.lib.licenses.bsd3;

}) {};
"stm-conduit" = callPackage
({
  mkDerivation
, async
, base
, cereal
, cereal-conduit
, conduit
, conduit-combinators
, conduit-extra
, directory
, ghc-prim
, lifted-async
, lifted-base
, monad-control
, monad-loops
, resourcet
, stdenv
, stm
, stm-chans
, transformers
, void
}:
mkDerivation {

pname = "stm-conduit";
version = "3.0.0";
sha256 = "cf6f663c069fb8991831ed792e5d22b8786966740797306c9391e610651da809";
revision = "1";
editedCabalFile = "0wmjqypqjw9irmpsmra6zbj1sa4l14xnx5xpaz2zvfsk4x90qyyg";
libraryHaskellDepends = [
async
base
cereal
cereal-conduit
conduit
conduit-combinators
conduit-extra
directory
ghc-prim
lifted-async
lifted-base
monad-control
monad-loops
resourcet
stm
stm-chans
transformers
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cgaebel/stm-conduit";
description = "Introduces conduits to channels, and promotes using conduits concurrently";
license = stdenv.lib.licenses.bsd3;

}) {};
"stm-containers" = callPackage
({
  mkDerivation
, base
, base-prelude
, focus
, hashable
, list-t
, primitive
, stdenv
, transformers
}:
mkDerivation {

pname = "stm-containers";
version = "0.2.15";
sha256 = "452483bcbe131475c216a463b67c3c43011a3e26493e0365379ce2ba6bd6b2e0";
libraryHaskellDepends = [
base
base-prelude
focus
hashable
list-t
primitive
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/stm-containers";
description = "Containers for STM";
license = stdenv.lib.licenses.mit;

}) {};
"stm-delay" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
}:
mkDerivation {

pname = "stm-delay";
version = "0.1.1.1";
sha256 = "b132581aac47e6cba6a1691a485e1700fbb047c02b7e1e43ae9bbd8476108a32";
libraryHaskellDepends = [
base
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/joeyadams/haskell-stm-delay";
description = "Updatable one-shot timer polled with STM";
license = stdenv.lib.licenses.bsd3;

}) {};
"stm-extras" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
}:
mkDerivation {

pname = "stm-extras";
version = "0.1.0.1";
sha256 = "ffa81349733b1631c1bad5ce3e5d4bcd35eb76dee10e4790fa050d40cb98e9cd";
libraryHaskellDepends = [
base
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/stm-extras#readme";
description = "Extra STM functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"stm-stats" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, stm
, template-haskell
, time
}:
mkDerivation {

pname = "stm-stats";
version = "0.2.0.0";
sha256 = "0a4f39b1e9fffe50d6dfaa9c0b04977e510fae8b6bd3d7abb7076e8aa8f01345";
libraryHaskellDepends = [
base
containers
stm
template-haskell
time
];
doHaddock = false;
doCheck = false;
description = "retry statistics for STM transactions";
license = stdenv.lib.licenses.bsd3;

}) {};
"stm-supply" = callPackage
({
  mkDerivation
, base
, concurrent-supply
, stdenv
}:
mkDerivation {

pname = "stm-supply";
version = "0.2.0.0";
sha256 = "f839ada6e5ac9549731086ed13fcf4c9f03a6ff93d64c0a857148820864f388c";
libraryHaskellDepends = [
base
concurrent-supply
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/caneroj1/stm-supply#readme";
description = "STM wrapper around Control.Concurrent.Supply.";
license = stdenv.lib.licenses.bsd3;

}) {};
"stopwatch" = callPackage
({
  mkDerivation
, base
, clock
, stdenv
, transformers
}:
mkDerivation {

pname = "stopwatch";
version = "0.1.0.4";
sha256 = "b9f4c22f93359491c9fd20a0bd1ff9abd7e077aadfce1a213293e7e124b1b5c2";
libraryHaskellDepends = [
base
clock
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/debug-ito/stopwatch";
description = "A simple stopwatch utility";
license = stdenv.lib.licenses.bsd3;

}) {};
"storable-complex" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "storable-complex";
version = "0.2.2";
sha256 = "ab076f15c47a2a324a2119c8feee0a78e1d2af488d0d24b7113b4bb7eee47c06";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cartazio/storable-complex";
description = "Storable instance for Complex";
license = stdenv.lib.licenses.bsd3;

}) {};
"storable-endian" = callPackage
({
  mkDerivation
, base
, byteorder
, stdenv
}:
mkDerivation {

pname = "storable-endian";
version = "0.2.6";
sha256 = "3743ac8f084ed3187b83f17b4fac280e77c5df01f7910f42b6a1bf09d5a65489";
revision = "1";
editedCabalFile = "12f8sscsvsarlwz3p6kk9vbvqsbyhs8lhafgn9h7c0z6pz1amrya";
libraryHaskellDepends = [
base
byteorder
];
doHaddock = false;
doCheck = false;
description = "Storable instances with endianness";
license = stdenv.lib.licenses.bsd3;

}) {};
"storable-record" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
, utility-ht
}:
mkDerivation {

pname = "storable-record";
version = "0.0.3.1";
sha256 = "74e5ceee49e0b7625d13759597d21e714843406b8b80e9168a0bb1199ffdadba";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
transformers
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~thielema/storable-record/";
description = "Elegant definition of Storable instances for records";
license = stdenv.lib.licenses.bsd3;

}) {};
"stratosphere" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, bytestring
, hashable
, lens
, stdenv
, template-haskell
, text
, unordered-containers
}:
mkDerivation {

pname = "stratosphere";
version = "0.4.0";
sha256 = "27c7b48ff3f78231711eab021b4a54b82b3b58e0dfa43e02b8c41a8be9c4527d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
aeson-pretty
base
bytestring
hashable
lens
template-haskell
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/frontrowed/stratosphere#readme";
description = "EDSL for AWS CloudFormation";
license = stdenv.lib.licenses.mit;

}) {};
"streaming" = callPackage
({
  mkDerivation
, base
, containers
, exceptions
, ghc-prim
, mmorph
, monad-control
, mtl
, resourcet
, stdenv
, time
, transformers
, transformers-base
}:
mkDerivation {

pname = "streaming";
version = "0.1.4.5";
sha256 = "d6a920e2c08cea30480fc5823ef83bcd312f2e052ae3b54a2ed16ba0a5da6843";
libraryHaskellDepends = [
base
containers
exceptions
ghc-prim
mmorph
monad-control
mtl
resourcet
time
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/michaelt/streaming";
description = "an elementary streaming prelude and general stream type";
license = stdenv.lib.licenses.bsd3;

}) {};
"streaming-bytestring" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, exceptions
, mmorph
, mtl
, resourcet
, stdenv
, streaming
, transformers
, transformers-base
}:
mkDerivation {

pname = "streaming-bytestring";
version = "0.1.4.6";
sha256 = "89d597dd78ebcf292347441ccca226fb6b67e125205db74f7aadab5592ce6a02";
libraryHaskellDepends = [
base
bytestring
deepseq
exceptions
mmorph
mtl
resourcet
streaming
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/michaelt/streaming-bytestring";
description = "effectful byte steams, or: bytestring io done right";
license = stdenv.lib.licenses.bsd3;

}) {};
"streaming-commons" = callPackage
({
  mkDerivation
, array
, async
, base
, blaze-builder
, bytestring
, directory
, network
, process
, random
, stdenv
, stm
, text
, transformers
, unix
, zlib
}:
mkDerivation {

pname = "streaming-commons";
version = "0.1.17";
sha256 = "e50a38cb8b626ef2f031c195e22171ffce00e20cbe63e8c768887564a7f47da9";
libraryHaskellDepends = [
array
async
base
blaze-builder
bytestring
directory
network
process
random
stm
text
transformers
unix
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/streaming-commons";
description = "Common lower-level functions needed by various streaming data libraries";
license = stdenv.lib.licenses.mit;

}) {};
"streaming-utils" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, http-client
, http-client-tls
, json-stream
, mtl
, network
, network-simple
, pipes
, resourcet
, stdenv
, streaming
, streaming-bytestring
, streaming-commons
, transformers
}:
mkDerivation {

pname = "streaming-utils";
version = "0.1.4.7";
sha256 = "d75d3baaf5afa5a020a8a48830779835112047c4da1b708cfb3901ac6c068d48";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
http-client
http-client-tls
json-stream
mtl
network
network-simple
pipes
resourcet
streaming
streaming-bytestring
streaming-commons
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/michaelt/streaming-utils";
description = "http, attoparsec, pipes and other utilities for the streaming libraries";
license = stdenv.lib.licenses.bsd3;

}) {};
"streaming-wai" = callPackage
({
  mkDerivation
, base
, bytestring
, bytestring-builder
, http-types
, stdenv
, streaming
, wai
}:
mkDerivation {

pname = "streaming-wai";
version = "0.1.1";
sha256 = "35b4182386cc1d23731b3eac78dda79a1b7878c0b6bd78fd99907c776dbfaf30";
libraryHaskellDepends = [
base
bytestring
bytestring-builder
http-types
streaming
wai
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jb55/streaming-wai";
description = "Streaming Wai utilities";
license = stdenv.lib.licenses.mit;

}) {};
"streamproc" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "streamproc";
version = "1.6.2";
sha256 = "e76effaaff83e6a066df949415db109b405bda0aaeb95f0710906c65892584f2";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/peti/streamproc";
description = "Stream Processer Arrow";
license = stdenv.lib.licenses.bsd3;

}) {};
"streams" = callPackage
({
  mkDerivation
, adjunctions
, base
, comonad
, distributive
, semigroupoids
, semigroups
, stdenv
}:
mkDerivation {

pname = "streams";
version = "3.3";
sha256 = "2933f80d6a83fed326af5588b0cce93985b07233359c311bd69c5bac19954e40";
libraryHaskellDepends = [
adjunctions
base
comonad
distributive
semigroupoids
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/streams/issues";
description = "Various Haskell 2010 stream comonads";
license = stdenv.lib.licenses.bsd3;

}) {};
"strict" = callPackage
({
  mkDerivation
, array
, base
, stdenv
}:
mkDerivation {

pname = "strict";
version = "0.3.2";
sha256 = "2cd35a67938db635a87617d9576d5df0158b581e8e5694f07487c0f4b1549221";
libraryHaskellDepends = [
array
base
];
doHaddock = false;
doCheck = false;
homepage = "http://www.cse.unsw.edu.au/~rl/code/strict.html";
description = "Strict data types and String IO";
license = stdenv.lib.licenses.bsd3;

}) {};
"strict-base-types" = callPackage
({
  mkDerivation
, aeson
, base
, bifunctors
, binary
, deepseq
, ghc-prim
, hashable
, lens
, QuickCheck
, stdenv
, strict
}:
mkDerivation {

pname = "strict-base-types";
version = "0.5.0";
sha256 = "febcadf3d7f97f9c8c161a98e2537ba83a8adc4e4f6015e65430d7367104a1cb";
libraryHaskellDepends = [
aeson
base
bifunctors
binary
deepseq
ghc-prim
hashable
lens
QuickCheck
strict
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/meiersi/strict-base-types";
description = "Strict variants of the types provided in base";
license = stdenv.lib.licenses.bsd3;

}) {};
"string-class" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, tagged
, text
}:
mkDerivation {

pname = "string-class";
version = "0.1.6.5";
sha256 = "821dc13ee0521e0bee335e689c88596efb193130835a6edc45f94dcc9f72237a";
libraryHaskellDepends = [
base
bytestring
tagged
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bairyn/string-class";
description = "String class library";
license = stdenv.lib.licenses.bsd3;

}) {};
"string-combinators" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "string-combinators";
version = "0.6.0.5";
sha256 = "94914abfbd7d17051edab4bc9927c191fd05a652d9ef3cf259b5d0e0ca177e1e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/basvandijk/string-combinators";
description = "Polymorphic functions to build and combine stringlike values";
license = stdenv.lib.licenses.bsd3;

}) {};
"string-conv" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "string-conv";
version = "0.1.2";
sha256 = "f259a03e6f296af19a71c07ab9a98a38661dfe40679f360f8e371334ea226039";
libraryHaskellDepends = [
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Soostone/string-conv";
description = "Standardized conversion between string types";
license = stdenv.lib.licenses.bsd3;

}) {};
"string-conversions" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "string-conversions";
version = "0.4.0.1";
sha256 = "46bcce6d9ce62c558b7658a75d9c6a62f7259d6b0473d011d8078234ad6a1994";
libraryHaskellDepends = [
base
bytestring
text
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/soenkehahn/string-conversions#readme";
description = "Simplifies dealing with different types for strings";
license = stdenv.lib.licenses.bsd3;

}) {};
"string-qq" = callPackage
({
  mkDerivation
, base
, Cabal
, process
, stdenv
, template-haskell
}:
mkDerivation {

pname = "string-qq";
version = "0.0.2";
sha256 = "9757cad387856a313729caffe0639215a10be7d72b09c44bcab9e55ee2a8c218";
revision = "1";
editedCabalFile = "1flc6mr1nnv8mx69cy1ilwk5gxsidcns82vjdg8dcs8z5axg95kp";
enableSeparateDataOutput = true;
setupHaskellDepends = [
base
Cabal
process
];
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
description = "QuasiQuoter for non-interpolated strings, texts and bytestrings";
license = stdenv.lib.licenses.publicDomain;

}) {};
"stringable" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, system-filepath
, text
}:
mkDerivation {

pname = "stringable";
version = "0.1.3";
sha256 = "e7af961e1eb52c89330aeb5434d7cfdebd3b712dd39812f68dcbd685e3da5a82";
libraryHaskellDepends = [
base
bytestring
system-filepath
text
];
doHaddock = false;
doCheck = false;
description = "A Stringable type class, in the spirit of Foldable and Traversable";
license = stdenv.lib.licenses.mit;

}) {};
"stringbuilder" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "stringbuilder";
version = "0.5.0";
sha256 = "8966882622fc06fd4e588da626a558b54daa313f2328c188d9305b0c6f2fe9aa";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A writer monad for multi-line string literals";
license = stdenv.lib.licenses.mit;

}) {};
"stringsearch" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, stdenv
}:
mkDerivation {

pname = "stringsearch";
version = "0.3.6.6";
sha256 = "295f1971920bc52263d8275d7054ad223a7e1aefe75533f9887735c9644ffe4a";
libraryHaskellDepends = [
array
base
bytestring
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/dafis/stringsearch";
description = "Fast searching, splitting and replacing of ByteStrings";
license = stdenv.lib.licenses.bsd3;

}) {};
"strive" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, data-default
, gpolyline
, http-client
, http-client-tls
, http-types
, stdenv
, template-haskell
, text
, time
, transformers
}:
mkDerivation {

pname = "strive";
version = "3.0.2";
sha256 = "94f1dcef7ded8a27365d448e2db70baa5fafc91fa047dbb35164f82fd84f0b0f";
libraryHaskellDepends = [
aeson
base
bytestring
data-default
gpolyline
http-client
http-client-tls
http-types
template-haskell
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/strive#readme";
description = "A client for the Strava V3 API";
license = stdenv.lib.licenses.mit;

}) {};
"stylish-haskell" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, directory
, filepath
, haskell-src-exts
, mtl
, optparse-applicative
, stdenv
, strict
, syb
, yaml
}:
mkDerivation {

pname = "stylish-haskell";
version = "0.7.1.0";
sha256 = "570a643ae6798995a43b0b357005e71c1529ed43ebafa2748fc97a236e0c01bc";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
directory
filepath
haskell-src-exts
mtl
syb
yaml
];
executableHaskellDepends = [
aeson
base
bytestring
containers
directory
filepath
haskell-src-exts
mtl
optparse-applicative
strict
syb
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jaspervdj/stylish-haskell";
description = "Haskell code prettifier";
license = stdenv.lib.licenses.bsd3;

}) {};
"success" = callPackage
({
  mkDerivation
, base
, monad-control
, mtl
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "success";
version = "0.2.6";
sha256 = "e995e77e8ae13bc4d543ea771f6a4d17853dea1ae46ef294131fc8c582f2dab6";
libraryHaskellDepends = [
base
monad-control
mtl
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/success";
description = "A version of Either specialised for encoding of success or failure";
license = stdenv.lib.licenses.mit;

}) {};
"sundown" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "sundown";
version = "0.6";
sha256 = "cb9b7e98138311375148ffe0fa4c4b04eb7a9f8ec2ae13a674d465e5d71db027";
libraryHaskellDepends = [
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bitonic/sundown";
description = "Bindings to the sundown markdown library";
license = stdenv.lib.licenses.publicDomain;

}) {};
"superbuffer" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "superbuffer";
version = "0.2.0.1";
sha256 = "ced2a0ed729661412d28da1248d39a5b47bb4513847deae59219a0fc12b51166";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/superbuffer#readme";
description = "Efficiently build a bytestring from smaller chunks";
license = stdenv.lib.licenses.bsd3;

}) {};
"svg-builder" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, hashable
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "svg-builder";
version = "0.1.0.2";
sha256 = "81490cf0c843d6d7795ba32ac6cb05acf4a92431fe7702aa634ec52d60bfee54";
revision = "1";
editedCabalFile = "1h3bzkimiydj5j2rh7cyp5bhphvy6hglpkidhlfwy520sqsw3zvx";
libraryHaskellDepends = [
base
blaze-builder
bytestring
hashable
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jeffreyrosenbluth/svg-builder.git";
description = "DSL for building SVG";
license = stdenv.lib.licenses.bsd3;

}) {};
"svg-tree" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, containers
, JuicyPixels
, lens
, linear
, mtl
, scientific
, stdenv
, text
, transformers
, vector
, xml
}:
mkDerivation {

pname = "svg-tree";
version = "0.6";
sha256 = "7b055b1f66fe8aeacb91bb01315275b3669ddb84b057bd28fdbed17d1e1c5732";
libraryHaskellDepends = [
attoparsec
base
bytestring
containers
JuicyPixels
lens
linear
mtl
scientific
text
transformers
vector
xml
];
doHaddock = false;
doCheck = false;
description = "SVG file loader and serializer";
license = stdenv.lib.licenses.bsd3;

}) {};
"swagger" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "swagger";
version = "0.3.0";
sha256 = "c7144fb22a0d223eb2463a896200936eab665dc01f39affc103d2ee6a38f54d0";
libraryHaskellDepends = [
aeson
base
bytestring
text
time
transformers
];
doHaddock = false;
doCheck = false;
description = "Implementation of swagger data model";
license = "unknown";

}) {};
"swagger2" = callPackage
({
  mkDerivation
, aeson
, base
, base-compat
, bytestring
, containers
, generics-sop
, hashable
, http-media
, insert-ordered-containers
, lens
, mtl
, network
, scientific
, stdenv
, template-haskell
, text
, time
, transformers
, unordered-containers
, uuid-types
, vector
}:
mkDerivation {

pname = "swagger2";
version = "2.1.3";
sha256 = "4d14f30ab538fc48d6b621f3082da6cf225d812f534a641babae0afebcc644ef";
revision = "2";
editedCabalFile = "185c6ym2aaw1daa8zi9s2sjwfmdxk9pj78ihdz8y9mqjbhyai80s";
libraryHaskellDepends = [
aeson
base
base-compat
bytestring
containers
generics-sop
hashable
http-media
insert-ordered-containers
lens
mtl
network
scientific
template-haskell
text
time
transformers
unordered-containers
uuid-types
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/GetShopTV/swagger2";
description = "Swagger 2.0 data model";
license = stdenv.lib.licenses.bsd3;

}) {};
"syb" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "syb";
version = "0.6";
sha256 = "a38d1f7e6a40e2c990fec85215c45063a508bf73df98a4483ec78c5025b66cdc";
revision = "1";
editedCabalFile = "158ngdnlq9n1mil7cq2bzy4zkgx73zzms9q56wp6ll93m5mc4nlx";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/SYB";
description = "Scrap Your Boilerplate";
license = stdenv.lib.licenses.bsd3;

}) {};
"syb-with-class" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, stdenv
, template-haskell
}:
mkDerivation {

pname = "syb-with-class";
version = "0.6.1.7";
sha256 = "5c521870d8c533dabb0483015592897e1bc2356dacd19ad7f279e41b69e66abb";
libraryHaskellDepends = [
array
base
bytestring
containers
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Scrap Your Boilerplate With Class";
license = stdenv.lib.licenses.bsd3;

}) {};
"symbol" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, stdenv
}:
mkDerivation {

pname = "symbol";
version = "0.2.4";
sha256 = "d074a7741f6ce0f2a604e4467c1c46e1acc2b707db107b3458395e646a9b8831";
revision = "1";
editedCabalFile = "01ab7600ja88wfvg9x8zmxksw44j9klmm71y9zmig7qxs1qslb25";
libraryHaskellDepends = [
base
containers
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "http://www.cs.drexel.edu/~mainland/";
description = "A 'Symbol' type for fast symbol comparison";
license = stdenv.lib.licenses.bsd3;

}) {};
"symengine" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "symengine";
version = "0.1.2.0";
sha256 = "0a59f76a924686ae84b1873c8783eb80f6e4092c90f3c971340053c1e6ca82f4";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/symengine/symengine.hs#readme";
description = "SymEngine symbolic mathematics engine for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"system-argv0" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, system-filepath
, text
}:
mkDerivation {

pname = "system-argv0";
version = "0.1.1";
sha256 = "6d51da9d2157be14a83f8dca3e9d4196d420e667cd685effb8d7b39185cf4ec6";
libraryHaskellDepends = [
base
bytestring
system-filepath
text
];
doHaddock = false;
doCheck = false;
homepage = "https://john-millikin.com/software/haskell-filesystem/";
description = "Get argv[0] as a FilePath";
license = stdenv.lib.licenses.mit;

}) {};
"system-fileio" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, system-filepath
, text
, time
, unix
}:
mkDerivation {

pname = "system-fileio";
version = "0.3.16.3";
sha256 = "3175707cb322c65760fa2eb2ab17327f251c8294ad688efc6258e82328830491";
libraryHaskellDepends = [
base
bytestring
system-filepath
text
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/haskell-filesystem";
description = "Consistent filesystem interaction across GHC versions (deprecated)";
license = stdenv.lib.licenses.mit;

}) {};
"system-filepath" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, stdenv
, text
}:
mkDerivation {

pname = "system-filepath";
version = "0.4.13.4";
sha256 = "345d7dec968b74ab1b8c0e7bb78c2ef1e5be7be6b7bac455340fd658abfec5fb";
libraryHaskellDepends = [
base
bytestring
deepseq
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/haskell-filesystem";
description = "High-level, byte-based file and directory path manipulations (deprecated)";
license = stdenv.lib.licenses.mit;

}) {};
"system-posix-redirect" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, unix
}:
mkDerivation {

pname = "system-posix-redirect";
version = "1.1.0.1";
sha256 = "53535011e64c1792052987bc1e8799222286c30c349dd36d3fc08c8612fa6ef2";
libraryHaskellDepends = [
base
bytestring
unix
];
doHaddock = false;
doCheck = false;
description = "A toy module to temporarily redirect a program's stdout";
license = stdenv.lib.licenses.bsd3;

}) {};
"syz" = callPackage
({
  mkDerivation
, base
, stdenv
, syb
}:
mkDerivation {

pname = "syz";
version = "0.2.0.0";
sha256 = "3e85801a83fa2a7e57093a7d0aa52f21cba07a0bd6d1ba82d2ddfb335249a3d4";
libraryHaskellDepends = [
base
syb
];
doHaddock = false;
doCheck = false;
homepage = "http://www.cs.indiana.edu/~adamsmd/papers/scrap_your_zippers/";
description = "Scrap Your Zippers";
license = stdenv.lib.licenses.bsd3;

}) {};
"tabular" = callPackage
({
  mkDerivation
, base
, csv
, html
, mtl
, stdenv
}:
mkDerivation {

pname = "tabular";
version = "0.2.2.7";
sha256 = "13f8da12108dafcf3194eb6bf25febf0081c7e4734f66d2d4aeee899f3c14ffb";
libraryHaskellDepends = [
base
csv
html
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/kowey/tabular";
description = "Two-dimensional data tables with rendering functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"tagged" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
, template-haskell
, transformers
, transformers-compat
}:
mkDerivation {

pname = "tagged";
version = "0.8.5";
sha256 = "e47c51c955ed77b0fa36897f652df990aa0a8c4eb278efaddcd604be00fc8d99";
revision = "2";
editedCabalFile = "0r2knfcq0b4s652vlvlnfwxlc2mkc2ra9kl8bp4zdn1awmfy0ia5";
libraryHaskellDepends = [
base
deepseq
template-haskell
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/tagged";
description = "Haskell 98 phantom types to avoid unsafely passing dummy arguments";
license = stdenv.lib.licenses.bsd3;

}) {};
"tagged-binary" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, pureMD5
, stdenv
}:
mkDerivation {

pname = "tagged-binary";
version = "0.2.0.0";
sha256 = "35e30f2f9183a9890557be7a28e4f88b19c68b0cfd688e906d8491f72b247745";
libraryHaskellDepends = [
base
binary
bytestring
pureMD5
];
doHaddock = false;
doCheck = false;
description = "Provides tools for serializing data tagged with type information";
license = stdenv.lib.licenses.mit;

}) {};
"tagged-identity" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "tagged-identity";
version = "0.1.1";
sha256 = "dcf0676dca1422165d48795ab1e4a512a6fd678aef685c85c00b5fcaba001aa8";
libraryHaskellDepends = [
base
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/tagged-identity";
description = "Trivial monad transformer that allows identical monad stacks have different types";
license = stdenv.lib.licenses.bsd3;

}) {};
"taggy" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-html
, blaze-markup
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "taggy";
version = "0.2.0";
sha256 = "c36b0bebb1e384afe9a11760183bc15a665fb2b352a5035d545321351c630207";
revision = "1";
editedCabalFile = "02xmvs9m977szhf5cgy31rbadi662g194giq3djzvsd41c1sshq3";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
attoparsec
base
blaze-html
blaze-markup
text
unordered-containers
vector
];
executableHaskellDepends = [
attoparsec
base
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/alpmestan/taggy";
description = "Efficient and simple HTML/XML parsing library";
license = stdenv.lib.licenses.bsd3;

}) {};
"taggy-lens" = callPackage
({
  mkDerivation
, base
, lens
, stdenv
, taggy
, text
, unordered-containers
}:
mkDerivation {

pname = "taggy-lens";
version = "0.1.2";
sha256 = "2bce7b9a008819f4a6ef5224136e0573bb0f2170b80d6bfe079efc0c7062a216";
libraryHaskellDepends = [
base
lens
taggy
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/alpmestan/taggy-lens";
description = "Lenses for the taggy html/xml parser";
license = stdenv.lib.licenses.bsd3;

}) {};
"tagshare" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
}:
mkDerivation {

pname = "tagshare";
version = "0.0";
sha256 = "d2314bae2e6820700f2a61db9c9f7976e1b53547a49cdd3352bdf29ac3856ce0";
libraryHaskellDepends = [
base
containers
mtl
];
doHaddock = false;
doCheck = false;
description = "TagShare - explicit sharing with tags";
license = stdenv.lib.licenses.bsd3;

}) {};
"tagsoup" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, stdenv
, text
}:
mkDerivation {

pname = "tagsoup";
version = "0.14";
sha256 = "90822d8bb9d3a40d070a1f282fb2f7f6beec13f01f958f716de9d005e2e9ea1e";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/tagsoup#readme";
description = "Parsing and extracting information from (possibly malformed) HTML/XML documents";
license = stdenv.lib.licenses.bsd3;

}) {};
"tagstream-conduit" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-builder
, bytestring
, case-insensitive
, conduit
, conduit-extra
, data-default
, resourcet
, stdenv
, text
, transformers
, xml-conduit
}:
mkDerivation {

pname = "tagstream-conduit";
version = "0.5.5.3";
sha256 = "b296e8f0ba18ae951b5bb3fc2d9d964954666df61ea9363d667f251af17134ab";
libraryHaskellDepends = [
attoparsec
base
blaze-builder
bytestring
case-insensitive
conduit
conduit-extra
data-default
resourcet
text
transformers
xml-conduit
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yihuang/tagstream-conduit";
description = "streamlined html tag parser";
license = stdenv.lib.licenses.bsd3;

}) {};
"tar" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, deepseq
, directory
, filepath
, stdenv
, time
}:
mkDerivation {

pname = "tar";
version = "0.5.0.3";
sha256 = "d8d9ad876365f88bdccd02073049e58715cd5ba94de06eb98e21d595244918a3";
revision = "1";
editedCabalFile = "0ds7hjyvbpnxly0nwsrmzl2mazpw7ajm7ibv6aqa5s5vk9p1wwjx";
libraryHaskellDepends = [
array
base
bytestring
containers
deepseq
directory
filepath
time
];
doHaddock = false;
doCheck = false;
description = "Reading, writing and manipulating \".tar\" archive files.";
license = stdenv.lib.licenses.bsd3;

}) {};
"tar-conduit" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit-combinators
, stdenv
}:
mkDerivation {

pname = "tar-conduit";
version = "0.1.0";
sha256 = "64cd8ea8d072b3a43e539e3c8d1f9e0936430ad9f9ff3a54d1e237c077878e2f";
libraryHaskellDepends = [
base
bytestring
conduit-combinators
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/tar-conduit#readme";
description = "Parse tar files using conduit for streaming";
license = stdenv.lib.licenses.mit;

}) {};
"tardis" = callPackage
({
  mkDerivation
, base
, mmorph
, mtl
, stdenv
}:
mkDerivation {

pname = "tardis";
version = "0.4.1.0";
sha256 = "e672abadd75055c2372d722c98058f7f3403fcca18258565d1cdd8e0dc25a5d9";
revision = "1";
editedCabalFile = "1wp6vp90g19hv8r2l83ava7qxf0933gb7ni2zgyfa66vlvxvhibv";
libraryHaskellDepends = [
base
mmorph
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/DanBurton/tardis";
description = "Bidirectional state monad transformer";
license = stdenv.lib.licenses.bsd3;

}) {};
"tasty" = callPackage
({
  mkDerivation
, ansi-terminal
, async
, base
, clock
, containers
, deepseq
, mtl
, optparse-applicative
, regex-tdfa
, stdenv
, stm
, tagged
, unbounded-delays
}:
mkDerivation {

pname = "tasty";
version = "0.11.2";
sha256 = "d26fbc4e5112af9ec3ca0a4a45d0f5edc5ae6675ffd72f922acb768062db675e";
revision = "1";
editedCabalFile = "002q694wajal211r742g3finyzgqiqjm1j7rydb8zcq45rjx6rpc";
libraryHaskellDepends = [
ansi-terminal
async
base
clock
containers
deepseq
mtl
optparse-applicative
regex-tdfa
stm
tagged
unbounded-delays
];
doHaddock = false;
doCheck = false;
homepage = "http://documentup.com/feuerbach/tasty";
description = "Modern and extensible testing framework";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-ant-xml" = callPackage
({
  mkDerivation
, base
, containers
, directory
, filepath
, generic-deriving
, ghc-prim
, mtl
, stdenv
, stm
, tagged
, tasty
, transformers
, xml
}:
mkDerivation {

pname = "tasty-ant-xml";
version = "1.0.4";
sha256 = "4d91c509e0e80919d96c16eaa3ee11089b7ee7c87fbe59a947d26bf0c5aef188";
libraryHaskellDepends = [
base
containers
directory
filepath
generic-deriving
ghc-prim
mtl
stm
tagged
tasty
transformers
xml
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ocharles/tasty-ant-xml";
description = "Render tasty output to XML for Jenkins";
license = stdenv.lib.licenses.bsd3;

}) {};
"tasty-auto" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
}:
mkDerivation {

pname = "tasty-auto";
version = "0.1.0.2";
sha256 = "d76076b780cce1a83b50b4602928d3756a5df72f4294e50b5f1499c5f6381a1c";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
filepath
];
executableHaskellDepends = [
base
directory
filepath
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/tasty-auto#readme";
description = "Auto discovery for Tasty with support for ingredients and test tree generation";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-dejafu" = callPackage
({
  mkDerivation
, base
, dejafu
, stdenv
, tagged
, tasty
}:
mkDerivation {

pname = "tasty-dejafu";
version = "0.3.0.2";
sha256 = "1f1d2ebbad76c763e036871ec481f40c532334f7692dc187a94b77519dbe2f5d";
libraryHaskellDepends = [
base
dejafu
tagged
tasty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/dejafu";
description = "Deja Fu support for the Tasty test framework";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-discover" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
, tasty
, tasty-hspec
, tasty-hunit
, tasty-quickcheck
, tasty-th
}:
mkDerivation {

pname = "tasty-discover";
version = "1.1.0";
sha256 = "023568259c04b596fdd6c8030667b08d2a17f50cbc2cd514595ddd635ca8a3c5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
filepath
tasty
tasty-hspec
tasty-hunit
tasty-quickcheck
tasty-th
];
executableHaskellDepends = [
base
directory
filepath
tasty-th
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lwm/tasty-discover/";
description = "Test discovery for the tasty framework";
license = stdenv.lib.licenses.gpl3;

}) {};
"tasty-expected-failure" = callPackage
({
  mkDerivation
, base
, stdenv
, tagged
, tasty
}:
mkDerivation {

pname = "tasty-expected-failure";
version = "0.11.0.4";
sha256 = "41ed5a34e250ee5dc78daf93aa02a25d751b2c6423302faf49f28986822ba564";
revision = "1";
editedCabalFile = "07sz28vm5rllp9yj1ibhz015s6c4gcq1vzxlphhqam1ah096jc42";
libraryHaskellDepends = [
base
tagged
tasty
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/nomeata/tasty-expected-failure";
description = "Mark tasty tests as failure expected";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-fail-fast" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, stm
, tagged
, tasty
}:
mkDerivation {

pname = "tasty-fail-fast";
version = "0.0.2";
sha256 = "28e463b3e85e356f1a0676a4accd7ecc002814dc0487323613f0c6aacc153ac6";
libraryHaskellDepends = [
base
containers
stm
tagged
tasty
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/MichaelXavier/tasty-fail-fast#readme";
description = "Adds the ability to fail a tasty test suite on first test failure";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-golden" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, containers
, deepseq
, directory
, filepath
, mtl
, optparse-applicative
, process
, stdenv
, tagged
, tasty
, temporary
}:
mkDerivation {

pname = "tasty-golden";
version = "2.3.1.1";
sha256 = "9e87fa5b29f840731c12722049563655cedb6522b5e5792c5eb596eb352c8e5d";
libraryHaskellDepends = [
async
base
bytestring
containers
deepseq
directory
filepath
mtl
optparse-applicative
process
tagged
tasty
temporary
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/tasty-golden";
description = "Golden tests support for tasty";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-hspec" = callPackage
({
  mkDerivation
, base
, hspec
, hspec-core
, QuickCheck
, random
, stdenv
, tagged
, tasty
, tasty-quickcheck
, tasty-smallcheck
}:
mkDerivation {

pname = "tasty-hspec";
version = "1.1.3.1";
sha256 = "8ac658b530202d84e34891a6274df1e8e08495a2e5d9d75a8e53a88d2ad85444";
revision = "2";
editedCabalFile = "0d8cwpkqayf7qgg4xvs8aj4wxk3qkilmjfy74s3jkxyrxsg22d73";
libraryHaskellDepends = [
base
hspec
hspec-core
QuickCheck
random
tagged
tasty
tasty-quickcheck
tasty-smallcheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mitchellwrosen/tasty-hspec";
description = "Hspec support for the Tasty test framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"tasty-html" = callPackage
({
  mkDerivation
, base
, blaze-html
, bytestring
, containers
, filepath
, generic-deriving
, mtl
, stdenv
, stm
, tagged
, tasty
, text
, transformers
}:
mkDerivation {

pname = "tasty-html";
version = "0.4.1.1";
sha256 = "0eea1c9fcf1ef3aeb94b811086e11d87ce59f90bb91afa8765152b943c591f1a";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
blaze-html
bytestring
containers
filepath
generic-deriving
mtl
stm
tagged
tasty
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/feuerbach/tasty-html";
description = "Render tasty output to HTML";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-hunit" = callPackage
({
  mkDerivation
, base
, stdenv
, tasty
}:
mkDerivation {

pname = "tasty-hunit";
version = "0.9.2";
sha256 = "ae1efc2a750dfc09f9276d3a57e6a8f8b30f1a6932e81c53fcd67132b8ea1623";
libraryHaskellDepends = [
base
tasty
];
doHaddock = false;
doCheck = false;
homepage = "http://documentup.com/feuerbach/tasty";
description = "HUnit support for the Tasty test framework";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-kat" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, tasty
}:
mkDerivation {

pname = "tasty-kat";
version = "0.0.3";
sha256 = "a72501f0f77db372648566bbba1dd1d6d0d0c975b42238875d663313e9a5db93";
libraryHaskellDepends = [
base
bytestring
tasty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/tasty-kat";
description = "Known Answer Tests (KAT) framework for tasty";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-program" = callPackage
({
  mkDerivation
, base
, deepseq
, directory
, filepath
, process
, stdenv
, tasty
}:
mkDerivation {

pname = "tasty-program";
version = "1.0.5";
sha256 = "4cb255ad5f037029cc6ae244fffdfb0ed7c65a4b0575d98ec61c067d6f5829c4";
libraryHaskellDepends = [
base
deepseq
directory
filepath
process
tasty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jstolarek/tasty-program";
description = "Use tasty framework to test whether a program executes correctly";
license = stdenv.lib.licenses.bsd3;

}) {};
"tasty-quickcheck" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
, tagged
, tasty
}:
mkDerivation {

pname = "tasty-quickcheck";
version = "0.8.4";
sha256 = "365f4cb6db70cce36ebdc133a2f6388cab71df2ca11f223f0458565956ec3297";
libraryHaskellDepends = [
base
QuickCheck
tagged
tasty
];
doHaddock = false;
doCheck = false;
homepage = "http://documentup.com/feuerbach/tasty";
description = "QuickCheck support for the Tasty test framework";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-rerun" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, optparse-applicative
, reducers
, split
, stdenv
, stm
, tagged
, tasty
, transformers
}:
mkDerivation {

pname = "tasty-rerun";
version = "1.1.6";
sha256 = "ed33270c8a1f1576985e9907087921fd4f8fba19253fe3bfefec2d05f9799d79";
libraryHaskellDepends = [
base
containers
mtl
optparse-applicative
reducers
split
stm
tagged
tasty
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ocharles/tasty-rerun";
description = "Run tests by filtering the test tree depending on the result of previous test runs";
license = stdenv.lib.licenses.bsd3;

}) {};
"tasty-silver" = callPackage
({
  mkDerivation
, ansi-terminal
, async
, base
, bytestring
, containers
, deepseq
, directory
, filepath
, mtl
, optparse-applicative
, process
, process-extras
, regex-tdfa
, stdenv
, stm
, tagged
, tasty
, temporary
, text
}:
mkDerivation {

pname = "tasty-silver";
version = "3.1.9";
sha256 = "7067a64be061c42102eca6c09215bcaebe27c8bb9c554c38521c105dcc69b630";
libraryHaskellDepends = [
ansi-terminal
async
base
bytestring
containers
deepseq
directory
filepath
mtl
optparse-applicative
process
process-extras
regex-tdfa
stm
tagged
tasty
temporary
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phile314/tasty-silver";
description = "A fancy test runner, including support for golden tests";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-smallcheck" = callPackage
({
  mkDerivation
, async
, base
, smallcheck
, stdenv
, tagged
, tasty
}:
mkDerivation {

pname = "tasty-smallcheck";
version = "0.8.1";
sha256 = "314ba7acdb7793730e7677f553a72dd6a4a8f9a45ff3e931cd7d384affb3c6d8";
libraryHaskellDepends = [
async
base
smallcheck
tagged
tasty
];
doHaddock = false;
doCheck = false;
homepage = "http://documentup.com/feuerbach/tasty";
description = "SmallCheck support for the Tasty test framework";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-tap" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, stm
, tasty
}:
mkDerivation {

pname = "tasty-tap";
version = "0.0.4";
sha256 = "c85ee6356f7bcdf3756add5baca06d942656400c3e9765e5087229b53d2eff75";
libraryHaskellDepends = [
base
containers
stm
tasty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/michaelxavier/tasty-tap";
description = "TAP (Test Anything Protocol) Version 13 formatter for tasty";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-th" = callPackage
({
  mkDerivation
, base
, stdenv
, tasty
, template-haskell
}:
mkDerivation {

pname = "tasty-th";
version = "0.1.4";
sha256 = "18a14d693e709046eba3bb1a4e9febfce09d04059342728f06178788a24ece35";
libraryHaskellDepends = [
base
tasty
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/bennofs/tasty-th";
description = "Automatic tasty test case discovery using TH";
license = stdenv.lib.licenses.bsd3;

}) {};
"tce-conf" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "tce-conf";
version = "1.3";
sha256 = "b051843bb941ed137242edfcfb28b1c15083951272fe292e82c140c9e1ad26a2";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
];
executableHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/dino/tce-conf";
description = "Very simple config file reading";
license = stdenv.lib.licenses.bsd3;

}) {};
"tcp-streams" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default-class
, io-streams
, network
, pem
, stdenv
, tls
, x509
, x509-store
, x509-system
}:
mkDerivation {

pname = "tcp-streams";
version = "0.6.0.0";
sha256 = "cfd94893d4b4c177e600186ae8e369bd728c26ed7e626653b29ace274c4e0fbc";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
data-default-class
io-streams
network
pem
tls
x509
x509-store
x509-system
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/tcp-streams";
description = "One stop solution for tcp client and server with tls support";
license = stdenv.lib.licenses.bsd3;

}) {};
"tcp-streams-openssl" = callPackage
({
  mkDerivation
, base
, bytestring
, HsOpenSSL
, HsOpenSSL-x509-system
, io-streams
, network
, stdenv
, tcp-streams
}:
mkDerivation {

pname = "tcp-streams-openssl";
version = "0.6.0.0";
sha256 = "4c4c18ed031fe372507ef2361a79ffbfea9c2cda134eecf017aa48ac00bf8d94";
libraryHaskellDepends = [
base
bytestring
HsOpenSSL
HsOpenSSL-x509-system
io-streams
network
tcp-streams
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/tcp-streams";
description = "Tcp streams using openssl for tls support";
license = stdenv.lib.licenses.bsd3;

}) {};
"telegram-api" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, http-api-data
, http-client
, http-media
, http-types
, mime-types
, mtl
, servant
, servant-client
, stdenv
, string-conversions
, text
, transformers
}:
mkDerivation {

pname = "telegram-api";
version = "0.6.0.2";
sha256 = "e5a29e558d5a5930be9c7d79cb16c66499fe12d9c5ffe663f830be683d3527f7";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
bytestring
http-api-data
http-client
http-media
http-types
mime-types
mtl
servant
servant-client
string-conversions
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/klappvisor/haskell-telegram-api#readme";
description = "Telegram Bot API bindings";
license = stdenv.lib.licenses.bsd3;

}) {};
"template" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "template";
version = "0.2.0.10";
sha256 = "8fd5a321b1c62f8ca5ed68c098e676917a5dac4d65809fceaed4b52c22b4ac82";
libraryHaskellDepends = [
base
mtl
text
];
doHaddock = false;
doCheck = false;
description = "Simple string substitution";
license = stdenv.lib.licenses.bsd3;

}) {};
"temporary" = callPackage
({
  mkDerivation
, base
, directory
, exceptions
, filepath
, stdenv
, transformers
, unix
}:
mkDerivation {

pname = "temporary";
version = "1.2.0.4";
sha256 = "51e713804246404df8a728919a2e7d1994f8cfda42cfa7a74ea65d8b7d206762";
libraryHaskellDepends = [
base
directory
exceptions
filepath
transformers
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/feuerbach/temporary";
description = "Portable temporary file and directory support for Windows and Unix, based on code from Cabal";
license = stdenv.lib.licenses.bsd3;

}) {};
"temporary-rc" = callPackage
({
  mkDerivation
, base
, directory
, exceptions
, filepath
, stdenv
, transformers
, unix
}:
mkDerivation {

pname = "temporary-rc";
version = "1.2.0.3";
sha256 = "1a4f8dd65f7db92316a68ef64c3518873799115babce92ef9869103d318011db";
libraryHaskellDepends = [
base
directory
exceptions
filepath
transformers
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/feuerbach/temporary";
description = "Portable temporary file and directory support for Windows and Unix, based on code from Cabal";
license = stdenv.lib.licenses.bsd3;

}) {};
"terminal-progress-bar" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
, stm-chans
}:
mkDerivation {

pname = "terminal-progress-bar";
version = "0.1.1";
sha256 = "2053a7ac9113378a6ae8852447b4e7ba430c014776443046788e84183dc9f380";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
stm
stm-chans
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/roelvandijk/terminal-progress-bar";
description = "A simple progress bar in the terminal";
license = stdenv.lib.licenses.bsd3;

}) {};
"terminal-size" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "terminal-size";
version = "0.3.2.1";
sha256 = "b5c23e964756bc13914649a67d63233f59ad0a813abe7cadeb2fc9d586dc9658";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Get terminal window height and width";
license = stdenv.lib.licenses.bsd3;

}) {};
"terminfo" = callPackage
({
  mkDerivation
, base
, ncurses
, stdenv
}:
mkDerivation {

pname = "terminfo";
version = "0.4.0.2";
sha256 = "fea88b28443f5efd316c7699685b3925c0a7613992305f11af03746139d8f856";
libraryHaskellDepends = [
base
];
librarySystemDepends = [
ncurses
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/judah/terminfo";
description = "Haskell bindings to the terminfo library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) ncurses;};
"test-fixture" = callPackage
({
  mkDerivation
, base
, data-default
, haskell-src-exts
, haskell-src-meta
, mtl
, stdenv
, template-haskell
, th-orphans
}:
mkDerivation {

pname = "test-fixture";
version = "0.5.0.0";
sha256 = "084877f777878d2cabfb661e957dd8f5517000650c120308f8e2dbe7eda6772d";
libraryHaskellDepends = [
base
data-default
haskell-src-exts
haskell-src-meta
mtl
template-haskell
th-orphans
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/cjdev/test-fixture#readme";
description = "Test monadic side-effects";
license = stdenv.lib.licenses.bsd3;

}) {};
"test-framework" = callPackage
({
  mkDerivation
, ansi-terminal
, ansi-wl-pprint
, base
, containers
, hostname
, old-locale
, random
, regex-posix
, stdenv
, time
, xml
}:
mkDerivation {

pname = "test-framework";
version = "0.8.1.1";
sha256 = "7883626a5aebb1df327bf26dbd382208946250a79f9cc3bf9a9eb0b0767bb273";
revision = "3";
editedCabalFile = "1b6pi4j1dpcbiyx1bpfks29x293j02z7ashs2sdc8fhzbwsr9lxj";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-terminal
ansi-wl-pprint
base
containers
hostname
old-locale
random
regex-posix
time
xml
];
doHaddock = false;
doCheck = false;
homepage = "https://batterseapower.github.io/test-framework/";
description = "Framework for running and organising tests, with HUnit and QuickCheck support";
license = stdenv.lib.licenses.bsd3;

}) {};
"test-framework-hunit" = callPackage
({
  mkDerivation
, base
, extensible-exceptions
, HUnit
, stdenv
, test-framework
}:
mkDerivation {

pname = "test-framework-hunit";
version = "0.3.0.2";
sha256 = "95cb8ee02a850b164bfdabdf4dbc839d621361f3ac770ad21ea43a8bde360bf8";
revision = "3";
editedCabalFile = "0i9mlalv7cl1iq43ld5myrnpszq5rxmd79hk495dcb08rglhgl3z";
libraryHaskellDepends = [
base
extensible-exceptions
HUnit
test-framework
];
doHaddock = false;
doCheck = false;
homepage = "https://batterseapower.github.io/test-framework/";
description = "HUnit support for the test-framework package";
license = stdenv.lib.licenses.bsd3;

}) {};
"test-framework-quickcheck2" = callPackage
({
  mkDerivation
, base
, extensible-exceptions
, QuickCheck
, random
, stdenv
, test-framework
}:
mkDerivation {

pname = "test-framework-quickcheck2";
version = "0.3.0.3";
sha256 = "cc96c6f30c29b16a3f7ec5c108f320a6c0f0d3ef71afff8a1cb98caf33ffe18a";
revision = "4";
editedCabalFile = "1j1lk0xpbdfvp42h6c34yq1snhl1mk6sf393raxvakfl0l7nybqd";
libraryHaskellDepends = [
base
extensible-exceptions
QuickCheck
random
test-framework
];
doHaddock = false;
doCheck = false;
homepage = "https://batterseapower.github.io/test-framework/";
description = "QuickCheck2 support for the test-framework package";
license = stdenv.lib.licenses.bsd3;

}) {};
"test-framework-smallcheck" = callPackage
({
  mkDerivation
, base
, smallcheck
, stdenv
, test-framework
, transformers
}:
mkDerivation {

pname = "test-framework-smallcheck";
version = "0.2";
sha256 = "6081c4f35967b0d0cb92ac09a915fa9e2da01c401266b20ce18793fbc2bceff6";
libraryHaskellDepends = [
base
smallcheck
test-framework
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/smallcheck";
description = "Support for SmallCheck tests in test-framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"test-framework-th" = callPackage
({
  mkDerivation
, base
, haskell-src-exts
, language-haskell-extract
, regex-posix
, stdenv
, template-haskell
, test-framework
}:
mkDerivation {

pname = "test-framework-th";
version = "0.2.4";
sha256 = "8b780d9e3edd8d91e24f72d9fa1f80420e52959428ad7c22d0694901a43f9c8a";
libraryHaskellDepends = [
base
haskell-src-exts
language-haskell-extract
regex-posix
template-haskell
test-framework
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/finnsson/test-generator";
description = "Automagically generate the HUnit- and Quickcheck-bulk-code using Template Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"test-simple" = callPackage
({
  mkDerivation
, base
, mtl
, QuickCheck
, state-plus
, stdenv
, template-haskell
}:
mkDerivation {

pname = "test-simple";
version = "0.1.9";
sha256 = "eaee79bf997272fe0c97a0cfb80347c760ca5de8ffb0d639ddbf00ba6f6ef51d";
libraryHaskellDepends = [
base
mtl
QuickCheck
state-plus
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Simple Perl inspired testing";
license = stdenv.lib.licenses.bsd3;

}) {};
"testing-feat" = callPackage
({
  mkDerivation
, base
, mtl
, QuickCheck
, stdenv
, tagshare
, template-haskell
}:
mkDerivation {

pname = "testing-feat";
version = "0.4.0.3";
sha256 = "34ca9c7849c4054b951cb359dc55ec1d24f5c2f7cf31d6211959778ad35407ce";
revision = "1";
editedCabalFile = "05j5i1sfg1k94prhwmg6z50w0flb9k181nhabwr3m9gkrrqzb4b4";
libraryHaskellDepends = [
base
mtl
QuickCheck
tagshare
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Functional Enumeration of Algebraic Types";
license = stdenv.lib.licenses.bsd3;

}) {};
"texmath" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, pandoc-types
, parsec
, stdenv
, syb
, xml
}:
mkDerivation {

pname = "texmath";
version = "0.9.1";
sha256 = "cafb98d25da63bdd76f75b29bf395c9e023cf46d753db9a1534e84879cb8697e";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
mtl
pandoc-types
parsec
syb
xml
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jgm/texmath";
description = "Conversion between formats used to represent mathematics";
license = "GPL";

}) {};
"text" = callPackage
({
  mkDerivation
, array
, base
, binary
, bytestring
, deepseq
, ghc-prim
, integer-gmp
, stdenv
}:
mkDerivation {

pname = "text";
version = "1.2.2.1";
sha256 = "1addb1bdf36293c996653c9a0a320b5491714495862d997a23fb1ecd41ff395b";
revision = "1";
editedCabalFile = "1y9v539ngplrpnw1wd3wvazxqb90iwxivnlzrhaljryijp9zlvqw";
libraryHaskellDepends = [
array
base
binary
bytestring
deepseq
ghc-prim
integer-gmp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/text";
description = "An efficient packed Unicode text type";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-all" = callPackage
({
  mkDerivation
, base
, stdenv
, text
, text-format
, text-show
}:
mkDerivation {

pname = "text-all";
version = "0.3.0.2";
sha256 = "1874b6d56a4e31e3754be6d7dadcb3f64dbc86fe473063631a4794f27fa13f85";
libraryHaskellDepends = [
base
text
text-format
text-show
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/text-all";
description = "Everything Data.Text related in one package";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-binary" = callPackage
({
  mkDerivation
, base
, binary
, stdenv
, text
}:
mkDerivation {

pname = "text-binary";
version = "0.2.1.1";
sha256 = "b697b2bd09080643d4686705c779122129638904870df5c1d41c8fc72f08f4a1";
libraryHaskellDepends = [
base
binary
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kawu/text-binary";
description = "Binary instances for text types";
license = stdenv.lib.licenses.bsd2;

}) {};
"text-conversions" = callPackage
({
  mkDerivation
, base
, base16-bytestring
, base64-bytestring
, bytestring
, errors
, stdenv
, text
}:
mkDerivation {

pname = "text-conversions";
version = "0.3.0";
sha256 = "1756be2f6b515fea9e00b383c00d1ee851f8b25ddbc2901dd6be27d9b6292c21";
libraryHaskellDepends = [
base
base16-bytestring
base64-bytestring
bytestring
errors
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cjdev/text-conversions#readme";
description = "Safe conversions between textual types";
license = stdenv.lib.licenses.isc;

}) {};
"text-format" = callPackage
({
  mkDerivation
, array
, base
, double-conversion
, ghc-prim
, integer-gmp
, old-locale
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "text-format";
version = "0.3.1.1";
sha256 = "6de112764446a65370204f35a5fc4b1831106049f90918545d5dcd2ddd7fee0b";
revision = "1";
editedCabalFile = "1ap2paddh2q1ifs3nwdj0f1r7fypnsa669l7gdvgyfidz3w5vzic";
libraryHaskellDepends = [
array
base
double-conversion
ghc-prim
integer-gmp
old-locale
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/text-format";
description = "Text formatting";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-generic-pretty" = callPackage
({
  mkDerivation
, base
, containers
, ghc-prim
, groom
, ixset-typed
, protolude
, QuickCheck
, stdenv
, string-conversions
, text
, time
, unordered-containers
, wl-pprint-text
}:
mkDerivation {

pname = "text-generic-pretty";
version = "1.2.1";
sha256 = "cff331fdea2f695cf9a2583f4bd7393935b4a6ffa2bd47eb7dd983c6184752c7";
libraryHaskellDepends = [
base
containers
ghc-prim
groom
ixset-typed
protolude
QuickCheck
string-conversions
text
time
unordered-containers
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/joe9/GenericPretty";
description = "A generic, derivable, haskell pretty printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-icu" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, icu
, stdenv
, text
}:
mkDerivation {

pname = "text-icu";
version = "0.7.0.1";
sha256 = "e2764c2749033706eed5b9fb3cda11177ad15cdf11912028f551eca39a2c7f78";
libraryHaskellDepends = [
base
bytestring
deepseq
text
];
librarySystemDepends = [
icu
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/text-icu";
description = "Bindings to the ICU library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) icu;};
"text-ldap" = callPackage
({
  mkDerivation
, attoparsec
, base
, base64-bytestring
, bytestring
, containers
, dlist
, semigroups
, stdenv
, transformers
}:
mkDerivation {

pname = "text-ldap";
version = "0.1.1.8";
sha256 = "f2466df70426db84435a52bb0fa82065186e49f873aba334dfd06c92ed29c039";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
attoparsec
base
base64-bytestring
bytestring
containers
dlist
semigroups
transformers
];
executableHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "Parser and Printer for LDAP text data stream";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-manipulate" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "text-manipulate";
version = "0.2.0.1";
sha256 = "e0e9c71d9b1cfb7d3bca3d0a500d939b3efc6684515c0d7bd685503aa4f49d2f";
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/text-manipulate";
description = "Case conversion, word boundary manipulation, and textual subjugation";
license = "unknown";

}) {};
"text-metrics" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "text-metrics";
version = "0.2.0";
sha256 = "082304ce14ac6182cbb93f51207d90b91d104e5d1fc1b17bbe1c9280ebffe43a";
revision = "1";
editedCabalFile = "1j3xzb7l2qd2340p4hzfpp26y5414h61nkvhpwpg4brmd041h7fh";
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/text-metrics";
description = "Calculate various string metrics efficiently";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-postgresql" = callPackage
({
  mkDerivation
, base
, dlist
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "text-postgresql";
version = "0.0.2.2";
sha256 = "91344e495a83ee7ca372977166523a28bf201a964cac1cc2d8260a448462200d";
libraryHaskellDepends = [
base
dlist
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "Parser and Printer of PostgreSQL extended types";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-region" = callPackage
({
  mkDerivation
, aeson
, base
, base-unicode-symbols
, bytestring
, containers
, groups
, lens
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "text-region";
version = "0.1.0.1";
sha256 = "5217ff7af33898ca615e5444ba4293f214d6a5cbc8c4eb34ba53845151f61bf1";
libraryHaskellDepends = [
aeson
base
base-unicode-symbols
bytestring
containers
groups
lens
mtl
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mvoidex/text-region";
description = "Marking text regions";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-show" = callPackage
({
  mkDerivation
, array
, base
, base-compat
, bifunctors
, bytestring
, bytestring-builder
, containers
, contravariant
, generic-deriving
, ghc-boot-th
, ghc-prim
, integer-gmp
, nats
, semigroups
, stdenv
, tagged
, template-haskell
, text
, th-lift
, transformers
, transformers-compat
, void
}:
mkDerivation {

pname = "text-show";
version = "3.4.1.1";
sha256 = "f0ba04cb7389decad861b668764f7d7e58a6371269f2ac5809f842d2844f9921";
revision = "2";
editedCabalFile = "1282q12n11pzih3f86aj1jx60c471s1qz9ih6w7ridgymfdw2iyk";
libraryHaskellDepends = [
array
base
base-compat
bifunctors
bytestring
bytestring-builder
containers
contravariant
generic-deriving
ghc-boot-th
ghc-prim
integer-gmp
nats
semigroups
tagged
template-haskell
text
th-lift
transformers
transformers-compat
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RyanGlScott/text-show";
description = "Efficient conversion of values into Text";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-show-instances" = callPackage
({
  mkDerivation
, base
, base-compat
, bifunctors
, binary
, bytestring
, containers
, directory
, ghc-boot-th
, haskeline
, hoopl
, hpc
, old-locale
, old-time
, pretty
, random
, semigroups
, stdenv
, tagged
, template-haskell
, terminfo
, text
, text-show
, time
, transformers
, transformers-compat
, unix
, unordered-containers
, vector
, xhtml
}:
mkDerivation {

pname = "text-show-instances";
version = "3.5";
sha256 = "0c7dbf6e6742460be0d08777ab3759434c12c5b65f273be35afbe0c945690342";
revision = "1";
editedCabalFile = "1jbqpmphh4zrbdbqrazqls099gd73zmri1maf1qssvm4drz0ffgn";
libraryHaskellDepends = [
base
base-compat
bifunctors
binary
bytestring
containers
directory
ghc-boot-th
haskeline
hoopl
hpc
old-locale
old-time
pretty
random
semigroups
tagged
template-haskell
terminfo
text
text-show
time
transformers
transformers-compat
unix
unordered-containers
vector
xhtml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RyanGlScott/text-show-instances";
description = "Additional instances for text-show";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-zipper" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
, text
, vector
}:
mkDerivation {

pname = "text-zipper";
version = "0.10";
sha256 = "c59a649757b4e7026c204bdebc08bcfe234f2dbcd252467a6cd8d71c0f38176e";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
deepseq
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jtdaugherty/text-zipper/";
description = "A text editor zipper library";
license = stdenv.lib.licenses.bsd3;

}) {};
"textlocal" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, http-client
, http-client-tls
, http-conduit
, stdenv
, text
, unix-time
}:
mkDerivation {

pname = "textlocal";
version = "0.1.0.5";
sha256 = "8954ff6270c9920fc390be6b9f398975ea06dd6808a411cbf8fa5fb4a9cf3087";
libraryHaskellDepends = [
aeson
base
bytestring
http-client
http-client-tls
http-conduit
text
unix-time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/just-chow/textlocal";
description = "Haskell wrapper for textlocal SMS gateway";
license = stdenv.lib.licenses.bsd3;

}) {};
"tf-random" = callPackage
({
  mkDerivation
, base
, primitive
, random
, stdenv
, time
}:
mkDerivation {

pname = "tf-random";
version = "0.5";
sha256 = "2e30cec027b313c9e1794d326635d8fc5f79b6bf6e7580ab4b00186dadc88510";
libraryHaskellDepends = [
base
primitive
random
time
];
doHaddock = false;
doCheck = false;
description = "High-quality splittable pseudorandom number generator";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-data-compat" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "th-data-compat";
version = "0.0.2.2";
sha256 = "a1b58dfb959d982d0935494c3effe75a5c3804d0a15357b7cab12ce9be62ce38";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Compatibility for data definition template of TH";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-desugar" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
, syb
, template-haskell
, th-expand-syns
, th-lift
, th-orphans
}:
mkDerivation {

pname = "th-desugar";
version = "1.6";
sha256 = "c8f8ece2bde9b12070ea50bc089fbc672f144659225d837478fbc793777f634f";
revision = "2";
editedCabalFile = "0rimjzkqky6sq4yba7vqra7hj29903f9xsn2g8rc23abrm35vds3";
libraryHaskellDepends = [
base
containers
mtl
syb
template-haskell
th-expand-syns
th-lift
th-orphans
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/goldfirere/th-desugar";
description = "Functions to desugar Template Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-expand-syns" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, syb
, template-haskell
}:
mkDerivation {

pname = "th-expand-syns";
version = "0.4.2.0";
sha256 = "66fed79828e9a13375f0f801f5ecc3763186667228ad91e19919219ff1654db9";
libraryHaskellDepends = [
base
containers
syb
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/DanielSchuessler/th-expand-syns";
description = "Expands type synonyms in Template Haskell ASTs";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-extras" = callPackage
({
  mkDerivation
, base
, stdenv
, syb
, template-haskell
}:
mkDerivation {

pname = "th-extras";
version = "0.0.0.4";
sha256 = "8feff450aaf28ec4f08c45a5656c62879861a8e7f45591cb367d5351ddc3fbed";
libraryHaskellDepends = [
base
syb
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/th-extras";
description = "A grab bag of functions for use with Template Haskell";
license = stdenv.lib.licenses.publicDomain;

}) {};
"th-lift" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
, template-haskell
}:
mkDerivation {

pname = "th-lift";
version = "0.7.6";
sha256 = "326a2c9dac32506d5b7e5d9f3234c0e7a33a612256e4745bfb8de5a32803ecd1";
libraryHaskellDepends = [
base
ghc-prim
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/mboes/th-lift";
description = "Derive Template Haskell's Lift class for datatypes";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-lift-instances" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, stdenv
, template-haskell
, text
, th-lift
, vector
}:
mkDerivation {

pname = "th-lift-instances";
version = "0.1.11";
sha256 = "1da46afabdc73c86f279a0557d5a8f9af1296f9f6043264ba354b1c9cc65a6b8";
libraryHaskellDepends = [
base
bytestring
containers
template-haskell
text
th-lift
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/bennofs/th-lift-instances/";
description = "Lift instances for template-haskell for common data types";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-orphans" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, template-haskell
, th-lift
, th-lift-instances
, th-reify-many
}:
mkDerivation {

pname = "th-orphans";
version = "0.13.3";
sha256 = "7380d5b66d0c754e383e7b16e982b5d9ddf5f45f5a33118a20023ec8af78c46d";
libraryHaskellDepends = [
base
mtl
template-haskell
th-lift
th-lift-instances
th-reify-many
];
doHaddock = false;
doCheck = false;
description = "Orphan instances for TH datatypes";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-reify-compat" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "th-reify-compat";
version = "0.0.1.1";
sha256 = "721ca5a1e2c31c8381e53a30a551057309c077c68904667b16a94a357c1ac513";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/khibino/haskell-th-reify-compat/";
description = "Compatibility for the result type of TH reify";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-reify-many" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, safe
, stdenv
, template-haskell
, th-expand-syns
}:
mkDerivation {

pname = "th-reify-many";
version = "0.1.6";
sha256 = "aea5d277af954ec41d8c129b9e0761a0e628b6e216d0243fb2600339bbfce6ac";
libraryHaskellDepends = [
base
containers
mtl
safe
template-haskell
th-expand-syns
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/mgsloan/th-reify-many";
description = "Recurseively reify template haskell datatype info";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-to-exp" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "th-to-exp";
version = "0.0.1.0";
sha256 = "30283dcba984a48a048f77a5405be78df338050ad97da9df21fcfe49e519bf56";
revision = "1";
editedCabalFile = "0lnknwrvaj8q2i68g09rakg8rdyi5860xia5p5jb2r1z0ggwbbwi";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lexi-lambda/th-to-exp#readme";
description = "Provides a way to persist data from compile-time to runtime";
license = stdenv.lib.licenses.isc;

}) {};
"these" = callPackage
({
  mkDerivation
, aeson
, base
, bifunctors
, binary
, containers
, data-default-class
, deepseq
, hashable
, keys
, mtl
, profunctors
, QuickCheck
, semigroupoids
, stdenv
, transformers
, transformers-compat
, unordered-containers
, vector
, vector-instances
}:
mkDerivation {

pname = "these";
version = "0.7.3";
sha256 = "14339c111ec2caffcb2a9f64164a5dc307a0afb716925ddcb1774d9d442a3d9b";
revision = "4";
editedCabalFile = "1hkhibphw12xshs24nnx20pkb0mdn5df67kjldj7phkvg88jmcyw";
libraryHaskellDepends = [
aeson
base
bifunctors
binary
containers
data-default-class
deepseq
hashable
keys
mtl
profunctors
QuickCheck
semigroupoids
transformers
transformers-compat
unordered-containers
vector
vector-instances
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/isomorphism/these";
description = "An either-or-both data type & a generalized 'zip with padding' typeclass";
license = stdenv.lib.licenses.bsd3;

}) {};
"thread-local-storage" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "thread-local-storage";
version = "0.1.1";
sha256 = "11a0dfa77abf3d39e33529975aade945b0a6720143b3b134fd9460b0889845ca";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rrnewton/thread-local-storage";
description = "Several options for thread-local-storage (TLS) in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"threads" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
}:
mkDerivation {

pname = "threads";
version = "0.5.1.4";
sha256 = "d3b805b743cc7c0bce2a9b142f45bb1ad07e7bd6c2bd97a5fc442c007276febd";
libraryHaskellDepends = [
base
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/basvandijk/threads";
description = "Fork threads and wait for their result";
license = stdenv.lib.licenses.bsd3;

}) {};
"threepenny-gui" = callPackage
({
  mkDerivation
, aeson
, async
, base
, bytestring
, containers
, data-default
, deepseq
, filepath
, hashable
, network-uri
, safe
, snap-core
, snap-server
, stdenv
, stm
, template-haskell
, text
, transformers
, unordered-containers
, vault
, vector
, websockets
, websockets-snap
}:
mkDerivation {

pname = "threepenny-gui";
version = "0.7.0.1";
sha256 = "b5802dbb6c43304d613373f464d6fd16a4f219a5d289be003a28c2c46cae44c8";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
async
base
bytestring
containers
data-default
deepseq
filepath
hashable
network-uri
safe
snap-core
snap-server
stm
template-haskell
text
transformers
unordered-containers
vault
vector
websockets
websockets-snap
];
doHaddock = false;
doCheck = false;
homepage = "http://wiki.haskell.org/Threepenny-gui";
description = "GUI framework that uses the web browser as a display";
license = stdenv.lib.licenses.bsd3;

}) {};
"through-text" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, stdenv
, text
}:
mkDerivation {

pname = "through-text";
version = "0.1.0.0";
sha256 = "933225da128906e61865ccd1da73463781b890d742cbb38f52524d94ac19b4cd";
revision = "3";
editedCabalFile = "1gia9j7zq3g74kqvkzwp68d690nhddix1kpmj23d5a3zns3rxasn";
libraryHaskellDepends = [
base
bytestring
case-insensitive
text
];
doHaddock = false;
doCheck = false;
homepage = "https://www.github.com/bergmark/through-text";
description = "Convert textual types through Text without needing O(n^2) instances";
license = stdenv.lib.licenses.bsd3;

}) {};
"thumbnail-plus" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-extra
, data-default
, directory
, either
, gd
, imagesize-conduit
, resourcet
, stdenv
, temporary
, transformers
}:
mkDerivation {

pname = "thumbnail-plus";
version = "1.0.5";
sha256 = "81907f62a172f044dbc5c17feb18adee3512eb39c0fd54fb3af42b6d9ff3400c";
libraryHaskellDepends = [
base
bytestring
conduit
conduit-extra
data-default
directory
either
gd
imagesize-conduit
resourcet
temporary
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/prowdsponsor/thumbnail-plus";
description = "Generate thumbnails easily and safely";
license = stdenv.lib.licenses.mit;

}) {};
"thyme" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, containers
, cpphs
, deepseq
, mtl
, old-locale
, profunctors
, QuickCheck
, random
, stdenv
, text
, time
, vector
, vector-space
, vector-th-unbox
}:
mkDerivation {

pname = "thyme";
version = "0.3.5.5";
sha256 = "84c6701fb7b40841d22582202382c362fd9e0d6e5f1c959b7e0f2f91a85c796c";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
containers
deepseq
mtl
old-locale
profunctors
QuickCheck
random
text
time
vector
vector-space
vector-th-unbox
];
libraryToolDepends = [
cpphs
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/liyang/thyme";
description = "A faster time library";
license = stdenv.lib.licenses.bsd3;

}) {};
"tidal" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, colour
, containers
, hashable
, hmt
, hosc
, mersenne-random-pure64
, mtl
, parsec
, process
, stdenv
, text
, time
, transformers
, websockets
}:
mkDerivation {

pname = "tidal";
version = "0.8.2";
sha256 = "f79854db40b83ec24055d27e49c37678c8d2fe2054143c66b410754648443a8b";
libraryHaskellDepends = [
base
binary
bytestring
colour
containers
hashable
hmt
hosc
mersenne-random-pure64
mtl
parsec
process
text
time
transformers
websockets
];
doHaddock = false;
doCheck = false;
homepage = "http://tidal.lurk.org/";
description = "Pattern language for improvised music";
license = stdenv.lib.licenses.gpl3;

}) {};
"time-compat" = callPackage
({
  mkDerivation
, base
, old-time
, stdenv
, time
}:
mkDerivation {

pname = "time-compat";
version = "0.1.0.3";
sha256 = "590711214510c0d2d09780c7fe3b21748bc4802e9053f78ccd6658e951fe0f7f";
libraryHaskellDepends = [
base
old-time
time
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/dag/time-compat";
description = "Compatibility with old-time for the time package";
license = stdenv.lib.licenses.bsd3;

}) {};
"time-lens" = callPackage
({
  mkDerivation
, base
, data-lens-light
, stdenv
, time
}:
mkDerivation {

pname = "time-lens";
version = "0.4.0.1";
sha256 = "9f53888424e7f68be8966ac25c8e36dae03cf576f120c76248588d6495c32624";
libraryHaskellDepends = [
base
data-lens-light
time
];
doHaddock = false;
doCheck = false;
description = "Lens-based interface to Data.Time data structures";
license = stdenv.lib.licenses.bsd3;

}) {};
"time-locale-compat" = callPackage
({
  mkDerivation
, base
, old-locale
, stdenv
, time
}:
mkDerivation {

pname = "time-locale-compat";
version = "0.1.1.3";
sha256 = "9144bf68b47791a2ac73f45aeadbc5910be2da9ad174909e1a10a70b4576aced";
libraryHaskellDepends = [
base
old-locale
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/khibino/haskell-time-locale-compat";
description = "Compatibility of TimeLocale between old-locale and time-1.5";
license = stdenv.lib.licenses.bsd3;

}) {};
"time-parsers" = callPackage
({
  mkDerivation
, base
, parsers
, stdenv
, template-haskell
, time
}:
mkDerivation {

pname = "time-parsers";
version = "0.1.2.0";
sha256 = "4e50d40f13f8e6c5175be22b91586f909607ecb631f8209ff45bce2031bb3c24";
revision = "2";
editedCabalFile = "1qvhmwkdb4a0msxpfssyqdz0fmi45iv7iwmw7b1mf4flqz6jvaql";
libraryHaskellDepends = [
base
parsers
template-haskell
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/time-parsers#readme";
description = "Parsers for types in `time`";
license = stdenv.lib.licenses.bsd3;

}) {};
"timeit" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "timeit";
version = "1.0.0.0";
sha256 = "bd48d90bf96802580d0fa4e9c99150ef3c32cdf97bf345bf40e83633cc5d7236";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Time a computation";
license = stdenv.lib.licenses.bsd3;

}) {};
"timelens" = callPackage
({
  mkDerivation
, base
, lens
, stdenv
, time
}:
mkDerivation {

pname = "timelens";
version = "0.2.0.2";
sha256 = "f4e6fa016ec37f79c96a62cff174929f04152831c308ab1f9a797f5b5674a764";
libraryHaskellDepends = [
base
lens
time
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/massysett/timelens";
description = "Lenses for the time package";
license = stdenv.lib.licenses.bsd3;

}) {};
"timemap" = callPackage
({
  mkDerivation
, base
, containers
, focus
, hashable
, list-t
, stdenv
, stm
, stm-containers
, time
, unordered-containers
}:
mkDerivation {

pname = "timemap";
version = "0.0.4";
sha256 = "6e7c85c727fd9152db635c33ddb72cab5dca9ae240d41fcb653883f1bcd1d9e3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
focus
hashable
list-t
stm
stm-containers
time
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "A mutable hashmap, implicitly indexed by UTCTime";
license = stdenv.lib.licenses.bsd3;

}) {};
"timerep" = callPackage
({
  mkDerivation
, attoparsec
, base
, monoid-subclasses
, stdenv
, text
, time
}:
mkDerivation {

pname = "timerep";
version = "2.0.0.2";
sha256 = "1d4e417f3ca08921941c16791680e13b66fb1844d94759068846ede78c965339";
libraryHaskellDepends = [
attoparsec
base
monoid-subclasses
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/HugoDaniel/timerep";
description = "Parse and display time according to some RFCs (RFC3339, RFC2822, RFC822)";
license = stdenv.lib.licenses.bsd3;

}) {};
"timespan" = callPackage
({
  mkDerivation
, base
, stdenv
, time
}:
mkDerivation {

pname = "timespan";
version = "0.3.0.0";
sha256 = "46a51e1e0d776d65d0094bf8158c938255491fbaa4d4f39b0a1477806312851f";
libraryHaskellDepends = [
base
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/timespan#readme";
description = "Useful timespan datatype and functions";
license = stdenv.lib.licenses.mit;

}) {};
"timezone-olson" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, extensible-exceptions
, stdenv
, time
, timezone-series
}:
mkDerivation {

pname = "timezone-olson";
version = "0.1.7";
sha256 = "232f55b670531dced3b4f86b97b8f597073da6540e2b4e085936f73f30dea6aa";
revision = "2";
editedCabalFile = "1ss4ipn11m6y8bq9pw9i7cs3yciqacf7y281749xc77a1w2nw19b";
libraryHaskellDepends = [
base
binary
bytestring
extensible-exceptions
time
timezone-series
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/time-ng/";
description = "A pure Haskell parser and renderer for binary Olson timezone files";
license = stdenv.lib.licenses.bsd3;

}) {};
"timezone-series" = callPackage
({
  mkDerivation
, base
, stdenv
, time
}:
mkDerivation {

pname = "timezone-series";
version = "0.1.6.1";
sha256 = "65ea9a8c3b1143a0f1d154943ac8311b53bb2ec7b5e52b09bd035343025c2cc3";
libraryHaskellDepends = [
base
time
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/time-ng/";
description = "Enhanced timezone handling for Data.Time";
license = stdenv.lib.licenses.bsd3;

}) {};
"tinylog" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, double-conversion
, fast-logger
, stdenv
, text
, transformers
, unix-time
}:
mkDerivation {

pname = "tinylog";
version = "0.14.0";
sha256 = "322f56178011707436a8e5234a879c5254a468f789ad8db635c98adf752a73ea";
libraryHaskellDepends = [
base
bytestring
containers
double-conversion
fast-logger
text
transformers
unix-time
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/twittner/tinylog/";
description = "Simplistic logging using fast-logger";
license = stdenv.lib.licenses.mpl20;

}) {};
"tinytemplate" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "tinytemplate";
version = "0.1.2.0";
sha256 = "30c73964f575bd139ccb214b1123caa99bc330d1904c4d3a5e31e33c31d17d0a";
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/dicomgrid/tinytemplate";
description = "A tiny text templating library";
license = stdenv.lib.licenses.mit;

}) {};
"titlecase" = callPackage
({
  mkDerivation
, base
, blaze-markup
, semigroups
, stdenv
, text
}:
mkDerivation {

pname = "titlecase";
version = "0.1.0.3";
sha256 = "67bbc3f21d7e020afa4547aaacabf8927d53fd5e6dae41f3a0b92ab018172222";
revision = "1";
editedCabalFile = "0p7f68d4v1rp9lf2zaa2bx195ylrsxrds5ybl8mhdr49p0y642qf";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
blaze-markup
semigroups
text
];
executableHaskellDepends = [
base
blaze-markup
semigroups
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/peti/titlecase#readme";
description = "Convert English words to title case";
license = stdenv.lib.licenses.bsd3;

}) {};
"tls" = callPackage
({
  mkDerivation
, asn1-encoding
, asn1-types
, async
, base
, bytestring
, cereal
, cryptonite
, data-default-class
, memory
, mtl
, network
, stdenv
, transformers
, x509
, x509-store
, x509-validation
}:
mkDerivation {

pname = "tls";
version = "1.3.9";
sha256 = "81355e16528796d3097719e74f7f1f8cae50daed06926d1995731bab8e02267b";
libraryHaskellDepends = [
asn1-encoding
asn1-types
async
base
bytestring
cereal
cryptonite
data-default-class
memory
mtl
network
transformers
x509
x509-store
x509-validation
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-tls";
description = "TLS/SSL protocol native implementation (Server and Client)";
license = stdenv.lib.licenses.bsd3;

}) {};
"tls-debug" = callPackage
({
  mkDerivation
, base
, bytestring
, cryptonite
, data-default-class
, network
, pem
, stdenv
, time
, tls
, x509
, x509-store
, x509-system
, x509-validation
}:
mkDerivation {

pname = "tls-debug";
version = "0.4.4";
sha256 = "e5e7e416de38f21de5ba4ca17a904d843d6f3f66f6b6309b6ab9770f897c551d";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
bytestring
cryptonite
data-default-class
network
pem
time
tls
x509
x509-store
x509-system
x509-validation
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-tls";
description = "Set of programs for TLS testing and debugging";
license = stdenv.lib.licenses.bsd3;

}) {};
"token-bucket" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "token-bucket";
version = "0.1.0.1";
sha256 = "312609c0037271b1091f23c2edf467e9449edca5bbed0cfb45c2c93c1bee6ad0";
revision = "3";
editedCabalFile = "1gqlxy3rwrgag4qbjkh1f2kya4gcy1x5ic9xn997nzc6yi334v7m";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/token-bucket";
description = "Rate limiter using lazy bucket algorithm";
license = stdenv.lib.licenses.gpl3;

}) {};
"tostring" = callPackage
({
  mkDerivation
, base
, case-insensitive
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "tostring";
version = "0.2.1.1";
sha256 = "efa700d44aec57c82be60c0eabd610f62f2df0d9b06cf41b5fc35a2b77502531";
libraryHaskellDepends = [
base
case-insensitive
text
utf8-string
];
doHaddock = false;
doCheck = false;
description = "The ToString class";
license = stdenv.lib.licenses.bsd3;

}) {};
"tracy" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "tracy";
version = "0.1.4.0";
sha256 = "e778ebf70161ac37878629bf8857021969a71bea1b04140a0c306d0b9d0f430f";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Convenience wrappers for non-intrusive debug tracing";
license = stdenv.lib.licenses.mit;

}) {};
"transformers-base" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
, transformers
, transformers-compat
}:
mkDerivation {

pname = "transformers-base";
version = "0.4.4";
sha256 = "6aa3494fc70659342fbbb163035d5827ecfd8079e3c929e2372adf771fd52387";
revision = "1";
editedCabalFile = "196pr3a4lhgklyw6nq6rv1j9djwzmvx7xrpp58carxnb55gk06pv";
libraryHaskellDepends = [
base
stm
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mvv/transformers-base";
description = "Lift computations from the bottom of a transformer stack";
license = stdenv.lib.licenses.bsd3;

}) {};
"transformers-compat" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
, transformers
}:
mkDerivation {

pname = "transformers-compat";
version = "0.5.1.4";
sha256 = "d881ef4ec164b631591b222efe7ff555af6d5397c9d86475b309ba9402a8ca9f";
libraryHaskellDepends = [
base
ghc-prim
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/transformers-compat/";
description = "A small compatibility shim exposing the new types from transformers 0.3 and 0.4 to older Haskell platforms.";
license = stdenv.lib.licenses.bsd3;

}) {};
"transformers-lift" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "transformers-lift";
version = "0.1.0.1";
sha256 = "c29d11f58fb9b2c1011c162f8f9f98cb0f2d12ca1317f40f4c88d9881840aa74";
revision = "1";
editedCabalFile = "0jk65y544gm09hi3wl0d599aay5a6d484wi3l9nwv2yml97x9inw";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
description = "Ad-hoc type classes for lifting";
license = stdenv.lib.licenses.bsd3;

}) {};
"transient" = callPackage
({
  mkDerivation
, base
, containers
, directory
, mtl
, random
, stdenv
, stm
, time
, transformers
}:
mkDerivation {

pname = "transient";
version = "0.4.4.1";
sha256 = "f1ad34b6c3d4044d294abf4b37f35efb764b710851eab6e58e1b9abb8a68d0ed";
libraryHaskellDepends = [
base
containers
directory
mtl
random
stm
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.fpcomplete.com/user/agocorona";
description = "Making composable programs with multithreading, events and distributed computing";
license = stdenv.lib.licenses.mit;

}) {};
"transient-universe" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, containers
, directory
, filepath
, hashable
, HTTP
, iproute
, mtl
, network
, network-info
, network-uri
, process
, random
, stdenv
, stm
, TCache
, text
, time
, transformers
, transient
, vector
, websockets
}:
mkDerivation {

pname = "transient-universe";
version = "0.3.5.1";
sha256 = "7613bf9a99b111423649793f687b7a2b81241b89840a8046a316793ecc7df985";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
case-insensitive
containers
directory
filepath
hashable
HTTP
iproute
mtl
network
network-info
network-uri
process
random
stm
TCache
text
time
transformers
transient
vector
websockets
];
executableHaskellDepends = [
base
transformers
transient
];
doHaddock = false;
doCheck = false;
homepage = "http://www.fpcomplete.com/user/agocorona";
description = "Remote execution and map-reduce: distributed computing for Transient";
license = stdenv.lib.licenses.mit;

}) {};
"traverse-with-class" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "traverse-with-class";
version = "0.2.0.4";
sha256 = "9d54e9ceac37f1253af616204139d9630ac3b3b5d618bbe03b74db4d7e208772";
libraryHaskellDepends = [
base
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
description = "Generic applicative traversals";
license = stdenv.lib.licenses.mit;

}) {};
"tree-fun" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
}:
mkDerivation {

pname = "tree-fun";
version = "0.8.1.0";
sha256 = "2ae925f198e9700dedbf809c2b77086fef32f58b4a4adb6c398dca49f4d56f1f";
libraryHaskellDepends = [
base
containers
mtl
];
doHaddock = false;
doCheck = false;
description = "Library for functions pertaining to tree exploration and manipulation";
license = stdenv.lib.licenses.gpl3;

}) {};
"trifecta" = callPackage
({
  mkDerivation
, ansi-terminal
, ansi-wl-pprint
, array
, base
, blaze-builder
, blaze-html
, blaze-markup
, bytestring
, charset
, comonad
, containers
, deepseq
, fingertree
, ghc-prim
, hashable
, lens
, mtl
, parsers
, profunctors
, reducers
, semigroups
, stdenv
, transformers
, unordered-containers
, utf8-string
}:
mkDerivation {

pname = "trifecta";
version = "1.6.2.1";
sha256 = "bab3724de8ed4f5283deb99013debf2e223e9e2c3c975e7d9b9bd44a9b30fbe5";
revision = "1";
editedCabalFile = "0qy2nqxn2h20fp9gf5chvgimb2281pjwm075ap7ar7pk2k4n8ljr";
libraryHaskellDepends = [
ansi-terminal
ansi-wl-pprint
array
base
blaze-builder
blaze-html
blaze-markup
bytestring
charset
comonad
containers
deepseq
fingertree
ghc-prim
hashable
lens
mtl
parsers
profunctors
reducers
semigroups
transformers
unordered-containers
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/trifecta/";
description = "A modern parser combinator library with convenient diagnostics";
license = stdenv.lib.licenses.bsd3;

}) {};
"true-name" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "true-name";
version = "0.1.0.2";
sha256 = "067627890569fe5a241b6bd7e0de44b2f2fa22a2e9e2e29eaed6aadc2e6e1cb0";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/liyang/true-name";
description = "Template Haskell hack to violate module abstractions";
license = stdenv.lib.licenses.bsd3;

}) {};
"ttrie" = callPackage
({
  mkDerivation
, atomic-primops
, base
, hashable
, primitive
, stdenv
, stm
}:
mkDerivation {

pname = "ttrie";
version = "0.1.2.1";
sha256 = "50444fe989559a0b16120df72765321ffd9de2fd97c943104513d894f21f4a68";
libraryHaskellDepends = [
atomic-primops
base
hashable
primitive
stm
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/mcschroeder/ttrie";
description = "Contention-free STM hash map";
license = stdenv.lib.licenses.mit;

}) {};
"tttool" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, bytestring
, containers
, directory
, executable-path
, filepath
, hashable
, haskeline
, HPDF
, JuicyPixels
, mtl
, natural-sort
, optparse-applicative
, parsec
, process
, random
, split
, spool
, stdenv
, template-haskell
, time
, vector
, yaml
, zlib
}:
mkDerivation {

pname = "tttool";
version = "1.7.0.1";
sha256 = "b41fc9b2899a625a0a364dd8fc4ef8f7c070ec7cbcbf5ef2acfc256cfb434fe6";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
aeson
base
binary
bytestring
containers
directory
executable-path
filepath
hashable
haskeline
HPDF
JuicyPixels
mtl
natural-sort
optparse-applicative
parsec
process
random
split
spool
template-haskell
time
vector
yaml
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/entropia/tip-toi-reveng";
description = "Working with files for the Tiptoi® pen";
license = stdenv.lib.licenses.mit;

}) {};
"tuple" = callPackage
({
  mkDerivation
, base
, OneTuple
, stdenv
}:
mkDerivation {

pname = "tuple";
version = "0.3.0.2";
sha256 = "2fcb068ffafbe64170e02094a363f83d1725f44f8af963d9dad943a592e89624";
libraryHaskellDepends = [
base
OneTuple
];
doHaddock = false;
doCheck = false;
description = "Various functions on tuples";
license = stdenv.lib.licenses.bsd3;

}) {};
"tuple-th" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, template-haskell
}:
mkDerivation {

pname = "tuple-th";
version = "0.2.5";
sha256 = "56ea37dcede07b5cf5385108540ae626db163f9df0387583d3c7afdaf72634d7";
libraryHaskellDepends = [
base
containers
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Generate (non-recursive) utility functions for tuples of statically known size";
license = stdenv.lib.licenses.bsd3;

}) {};
"tuples-homogenous-h98" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "tuples-homogenous-h98";
version = "0.1.1.0";
sha256 = "025afc8f0fe9c92fb43cebedfa6a764f744d3dc3a3d52935d0a01bc80d111f3a";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ppetr/tuples-homogenous-h98";
description = "Wrappers for n-ary tuples with Traversable and Applicative/Monad instances";
license = stdenv.lib.licenses.bsd3;

}) {};
"turtle" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, async
, base
, bytestring
, clock
, directory
, foldl
, hostname
, managed
, optional-args
, optparse-applicative
, process
, stdenv
, stm
, system-fileio
, system-filepath
, temporary
, text
, time
, transformers
, unix
, unix-compat
}:
mkDerivation {

pname = "turtle";
version = "1.3.1";
sha256 = "233d05f8d73d171278be765872d623e56f1d795234a94d33a57f1bcca98edd5e";
libraryHaskellDepends = [
ansi-wl-pprint
async
base
bytestring
clock
directory
foldl
hostname
managed
optional-args
optparse-applicative
process
stm
system-fileio
system-filepath
temporary
text
time
transformers
unix
unix-compat
];
doHaddock = false;
doCheck = false;
description = "Shell programming, Haskell-style";
license = stdenv.lib.licenses.bsd3;

}) {};
"turtle-options" = callPackage
({
  mkDerivation
, base
, optional-args
, parsec
, stdenv
, text
, turtle
}:
mkDerivation {

pname = "turtle-options";
version = "0.1.0.4";
sha256 = "c2c76b0bc0bc93397827c12b6f049e682afe702f9f662a1b0818e8e221d51ace";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
optional-args
parsec
text
turtle
];
executableHaskellDepends = [
base
turtle
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/elaye/turtle-options#readme";
description = "Collection of command line options and parsers for these options";
license = stdenv.lib.licenses.bsd3;

}) {};
"twitter-feed" = callPackage
({
  mkDerivation
, aeson
, authenticate-oauth
, base
, bytestring
, http-conduit
, stdenv
}:
mkDerivation {

pname = "twitter-feed";
version = "0.2.0.11";
sha256 = "8b98b4ddfb88f4c14f8eb43bd74a4c4e7941a92d44b90717e9b8dbe4c454c889";
revision = "3";
editedCabalFile = "0hzrh34ar9a5sfxq7zbh0hr38ndvd3x5pjp59j7b6vdalpk3r1af";
libraryHaskellDepends = [
aeson
authenticate-oauth
base
bytestring
http-conduit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/stackbuilders/twitter-feed";
description = "Client for fetching Twitter timeline via Oauth";
license = stdenv.lib.licenses.mit;

}) {};
"type-aligned" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "type-aligned";
version = "0.9.6";
sha256 = "1b877271cbfc365563f2dc779dc2ee4820be144e1708318882a3cd11786ade55";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/atzeus/type-aligned";
description = "Various type-aligned sequence data structures";
license = stdenv.lib.licenses.bsd3;

}) {};
"type-assertions" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "type-assertions";
version = "0.1.0.0";
sha256 = "aac74571c99fa0170970716385570cf0e0bbb18fc93f1d7ad372824fe7a679bb";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lexi-lambda/type-assertions#readme";
description = "Runtime type assertions for testing";
license = stdenv.lib.licenses.isc;

}) {};
"type-eq" = callPackage
({
  mkDerivation
, base
, cpphs
, stdenv
}:
mkDerivation {

pname = "type-eq";
version = "0.5";
sha256 = "9fcf4c4f1734b113625f0fd38a239a9637366e176736a4183f22f60e2ccdfa00";
revision = "1";
editedCabalFile = "1g8m6f73pbz8mqvqbrvxhp2klj7lf624jgqdn1gchd56z4pcnryw";
libraryHaskellDepends = [
base
];
libraryToolDepends = [
cpphs
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/glaebhoerl/type-eq";
description = "Type equality evidence you can carry around";
license = stdenv.lib.licenses.bsd3;

}) {};
"type-fun" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "type-fun";
version = "0.1.1";
sha256 = "df5ec7428a101235df46c0b819a9ab3562d1d27991cc3b04303643952c555da1";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/s9gf4ult/type-fun";
description = "Collection of widely reimplemented type families";
license = stdenv.lib.licenses.bsd3;

}) {};
"type-level-kv-list" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "type-level-kv-list";
version = "1.1.0";
sha256 = "4ff032e59108edc7dd27309ac0ee8987cc41ffba695d9699700bd37c6e7f7d73";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/arowM/type-level-kv-list#readme";
description = "A module for hash map like object with type level keys";
license = stdenv.lib.licenses.mit;

}) {};
"type-level-numbers" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "type-level-numbers";
version = "0.1.1.1";
sha256 = "5b56ef5f6e0b6476b9aba46055c3919e67823cbc1b87ed8e6ed70113b1f2318a";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Type level numbers implemented using type families";
license = stdenv.lib.licenses.bsd3;

}) {};
"type-list" = callPackage
({
  mkDerivation
, base
, singletons
, stdenv
}:
mkDerivation {

pname = "type-list";
version = "0.5.0.0";
sha256 = "ffba5f4b467e06e3c8dffc00614d78604e0bdcfe3921fb258cd5a8d6772c690c";
libraryHaskellDepends = [
base
singletons
];
doHaddock = false;
doCheck = false;
description = "Operations on type-level lists and tuples";
license = stdenv.lib.licenses.bsd3;

}) {};
"type-operators" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "type-operators";
version = "0.1.0.4";
sha256 = "dbbcedf368c23c46abac04f157cb4f2c812099a4f75d606b24f1ac1116d40b74";
libraryHaskellDepends = [
base
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Shou/type-operators#readme";
description = "Various type-level operators";
license = stdenv.lib.licenses.bsd3;

}) {};
"type-spec" = callPackage
({
  mkDerivation
, base
, pretty
, stdenv
}:
mkDerivation {

pname = "type-spec";
version = "0.3.0.1";
sha256 = "aecd1a319efc13eb42b73b489cf374f94bf126f19fdc28b2f5cd6f73dda3a241";
libraryHaskellDepends = [
base
pretty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sheyll/type-spec#readme";
description = "Type Level Specification by Example";
license = stdenv.lib.licenses.bsd3;

}) {};
"typed-process" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, conduit
, conduit-extra
, exceptions
, process
, stdenv
, stm
, transformers
}:
mkDerivation {

pname = "typed-process";
version = "0.1.0.0";
sha256 = "de866bc6ccb3ae3ccce20701add8bd913f7d7b4e252a9133eac35d035d0a10f8";
libraryHaskellDepends = [
async
base
bytestring
conduit
conduit-extra
exceptions
process
stm
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/typed-process#readme";
description = "Run external processes, with strong typing of streams";
license = stdenv.lib.licenses.mit;

}) {};
"typelits-witnesses" = callPackage
({
  mkDerivation
, base
, base-compat
, constraints
, reflection
, stdenv
, transformers
}:
mkDerivation {

pname = "typelits-witnesses";
version = "0.2.3.0";
sha256 = "a56e92f9c1be1a3063ae3ba3c55c9715ad298b8c5ff8fcf293cf6eabc6ff210c";
libraryHaskellDepends = [
base
base-compat
constraints
reflection
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mstksg/typelits-witnesses";
description = "Existential witnesses, singletons, and classes for operations on GHC TypeLits";
license = stdenv.lib.licenses.mit;

}) {};
"typography-geometry" = callPackage
({
  mkDerivation
, base
, containers
, parallel
, polynomials-bernstein
, stdenv
, vector
}:
mkDerivation {

pname = "typography-geometry";
version = "1.0.0.1";
sha256 = "edaeafb60126be19f0e4fdda54be89b92317dd03b59e9d8b6f119064c1642ad7";
libraryHaskellDepends = [
base
containers
parallel
polynomials-bernstein
vector
];
doHaddock = false;
doCheck = false;
description = "Drawings for printed text documents";
license = "GPL";

}) {};
"tz" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, data-default
, deepseq
, stdenv
, template-haskell
, time
, tzdata
, vector
}:
mkDerivation {

pname = "tz";
version = "0.1.2.1";
sha256 = "d187f59e0c1bb452a70cf734de09e0beefb86a6bcbb48f36fc5b32f11727c492";
libraryHaskellDepends = [
base
binary
bytestring
containers
data-default
deepseq
template-haskell
time
tzdata
vector
];
doHaddock = false;
doCheck = false;
preConfigure = "export TZDIR=${pkgs.tzdata}/share/zoneinfo";
homepage = "https://github.com/nilcons/haskell-tz";
description = "Efficient time zone handling";
license = stdenv.lib.licenses.asl20;

}) {};
"tzdata" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, deepseq
, stdenv
, vector
}:
mkDerivation {

pname = "tzdata";
version = "0.1.20161123.0";
sha256 = "cb99701d6b3ef7a286a9b15dd4fa3ed023917afeaebf4e90be7d9934464dccb6";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
containers
deepseq
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nilcons/haskell-tzdata";
description = "Time zone database (as files and as a module)";
license = stdenv.lib.licenses.asl20;

}) {};
"ua-parser" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, data-default
, file-embed
, pcre-light
, stdenv
, text
, yaml
}:
mkDerivation {

pname = "ua-parser";
version = "0.7.3";
sha256 = "bdb23301552c6e429765ea503d1ec598eec3cdfd15732b34745b08e7bcce7a10";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
bytestring
data-default
file-embed
pcre-light
text
yaml
];
doHaddock = false;
doCheck = false;
description = "A library for parsing User-Agent strings, official Haskell port of ua-parser";
license = stdenv.lib.licenses.bsd3;

}) {};
"uglymemo" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "uglymemo";
version = "0.1.0.1";
sha256 = "fe89ef49c0cb15867c58815b050b33f17d394d4c48a9b7240a39780a5a79b847";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
description = "A simple (but internally ugly) memoization function";
license = stdenv.lib.licenses.publicDomain;

}) {};
"unbound" = callPackage
({
  mkDerivation
, base
, binary
, containers
, mtl
, RepLib
, stdenv
, transformers
}:
mkDerivation {

pname = "unbound";
version = "0.5.1";
sha256 = "22647d5f6e052a206aa1de71bfae6e2ea0fa9e7b54abc2542329dede9c694e32";
libraryHaskellDepends = [
base
binary
containers
mtl
RepLib
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sweirich/replib";
description = "Generic support for programming with names and binders";
license = stdenv.lib.licenses.bsd3;

}) {};
"unbound-generics" = callPackage
({
  mkDerivation
, base
, containers
, contravariant
, deepseq
, mtl
, profunctors
, stdenv
, template-haskell
, transformers
, transformers-compat
}:
mkDerivation {

pname = "unbound-generics";
version = "0.3.1";
sha256 = "1f85672c8edfc8cbea638bcbf1e29d04934d79470177cb59e6dba0f9bb7a6440";
libraryHaskellDepends = [
base
containers
contravariant
deepseq
mtl
profunctors
template-haskell
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/lambdageek/unbound-generics";
description = "Support for programming with names and binders using GHC Generics";
license = stdenv.lib.licenses.bsd3;

}) {};
"unbounded-delays" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "unbounded-delays";
version = "0.1.0.9";
sha256 = "4010ca5c4ca800039db259fc7a5180f10fc98f00580c7223ac7ad401ca4190b8";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/basvandijk/unbounded-delays";
description = "Unbounded thread delays and timeouts";
license = stdenv.lib.licenses.bsd3;

}) {};
"uncertain" = callPackage
({
  mkDerivation
, ad
, base
, base-compat
, containers
, free
, mwc-random
, primitive
, stdenv
, transformers
}:
mkDerivation {

pname = "uncertain";
version = "0.3.1.0";
sha256 = "6f67855ed4799e0c3465dfaef062b637efc61fbea40ebc44ced163028a996ff2";
libraryHaskellDepends = [
ad
base
base-compat
containers
free
mwc-random
primitive
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mstksg/uncertain";
description = "Manipulating numbers with inherent experimental/measurement uncertainty";
license = stdenv.lib.licenses.bsd3;

}) {};
"unexceptionalio" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "unexceptionalio";
version = "0.3.0";
sha256 = "927e2be6bb9ced73c1c17d79c981cadef4039d9ee45d2d3d6b4c133ff93ff0b8";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/singpolyma/unexceptionalio";
description = "IO without any non-error, synchronous exceptions";
license = "unknown";

}) {};
"unicode-show" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "unicode-show";
version = "0.1.0.2";
sha256 = "7ee394879b345ee397aef87ca058628cd79d59cbfc1cec81aeda7fea65f53943";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/nushio3/unicode-show#readme";
description = "print and show in unicode";
license = stdenv.lib.licenses.bsd3;

}) {};
"unicode-transforms" = callPackage
({
  mkDerivation
, base
, bitarray
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "unicode-transforms";
version = "0.2.1";
sha256 = "1d8baa0de3c58685aa1e476961f7f3765395ba257d79258c66e86b06a87f3abc";
libraryHaskellDepends = [
base
bitarray
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/harendra-kumar/unicode-transforms";
description = "Unicode normalization";
license = stdenv.lib.licenses.bsd3;

}) {};
"unification-fd" = callPackage
({
  mkDerivation
, base
, containers
, logict
, mtl
, stdenv
}:
mkDerivation {

pname = "unification-fd";
version = "0.10.0.1";
sha256 = "5bf46760e6db104c57f915322b32744f7604323281f5c7dd20185f905fb51996";
libraryHaskellDepends = [
base
containers
logict
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "Simple generic unification algorithms";
license = stdenv.lib.licenses.bsd3;

}) {};
"union" = callPackage
({
  mkDerivation
, base
, deepseq
, profunctors
, stdenv
, tagged
, vinyl
}:
mkDerivation {

pname = "union";
version = "0.1.1.1";
sha256 = "819e57439061cde958467e6a52ca9f9aeac6e61c84b8ead4f8c2489995ca44f4";
revision = "2";
editedCabalFile = "0wxjv55bbjknyfn9489s77b22r31qwab6v16687mfj24a1cliad8";
libraryHaskellDepends = [
base
deepseq
profunctors
tagged
vinyl
];
doHaddock = false;
doCheck = false;
description = "Extensible type-safe unions";
license = stdenv.lib.licenses.bsd3;

}) {};
"union-find" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, transformers
}:
mkDerivation {

pname = "union-find";
version = "0.2";
sha256 = "e6c2682bb8c06e8c43e360f45658d0eea17209cce84953e2a7d2f0240591f0ec";
revision = "1";
editedCabalFile = "13cwjh03n82sgshbk4fdlvhc0pb3v979sdcdrpvnpjdqmvcprs92";
libraryHaskellDepends = [
base
containers
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/nominolo/union-find";
description = "Efficient union and equivalence testing of sets";
license = stdenv.lib.licenses.bsd3;

}) {};
"uniplate" = callPackage
({
  mkDerivation
, base
, containers
, hashable
, stdenv
, syb
, unordered-containers
}:
mkDerivation {

pname = "uniplate";
version = "1.6.12";
sha256 = "fcc60bc6b3f6e925f611646db90e6db9f05286a9363405f844df1dc15572a8b7";
libraryHaskellDepends = [
base
containers
hashable
syb
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://community.haskell.org/~ndm/uniplate/";
description = "Help writing simple, concise and fast generic operations";
license = stdenv.lib.licenses.bsd3;

}) {};
"units" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, lens
, linear
, mtl
, multimap
, singletons
, stdenv
, syb
, template-haskell
, th-desugar
, units-parser
, vector-space
}:
mkDerivation {

pname = "units";
version = "2.4";
sha256 = "5060ef295a832b620bb60b057b57c18de4d0b187634bee691dbd64df2d6aa641";
libraryHaskellDepends = [
base
containers
deepseq
lens
linear
mtl
multimap
singletons
syb
template-haskell
th-desugar
units-parser
vector-space
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/goldfirere/units";
description = "A domain-specific type system for dimensional analysis";
license = stdenv.lib.licenses.bsd3;

}) {};
"units-defs" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
, units
}:
mkDerivation {

pname = "units-defs";
version = "2.0.1.1";
sha256 = "82a72caa7c277d4513de4a769805097820b0f5299a4b93615d91d431217b295d";
libraryHaskellDepends = [
base
template-haskell
units
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/goldfirere/units-defs";
description = "Definitions for use with the units package";
license = stdenv.lib.licenses.bsd3;

}) {};
"units-parser" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, multimap
, parsec
, stdenv
}:
mkDerivation {

pname = "units-parser";
version = "0.1.0.0";
sha256 = "d8558536a4f82795cb880f3910fec536005b7199662810662f61c27b95d24141";
libraryHaskellDepends = [
base
containers
mtl
multimap
parsec
];
doHaddock = false;
doCheck = false;
description = "A parser for units of measure";
license = stdenv.lib.licenses.bsd3;

}) {};
"universe" = callPackage
({
  mkDerivation
, stdenv
, universe-instances-base
, universe-instances-extended
, universe-instances-trans
, universe-reverse-instances
}:
mkDerivation {

pname = "universe";
version = "1.0";
sha256 = "1f80e4788d348d53e39a32c8514940418a71c49c5423eb70b94e1786d94ff9a7";
libraryHaskellDepends = [
universe-instances-base
universe-instances-extended
universe-instances-trans
universe-reverse-instances
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dmwit/universe";
description = "Classes for types where we know all the values";
license = stdenv.lib.licenses.bsd3;

}) {};
"universe-base" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "universe-base";
version = "1.0.2.1";
sha256 = "07c48350afacdc0b5569f72e3d6a27a8ff3c208b7a6f22d00e149a201798bb51";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dmwit/universe";
description = "A class for finite and recursively enumerable types and some helper functions for enumerating them";
license = stdenv.lib.licenses.bsd3;

}) {};
"universe-instances-base" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, universe-base
}:
mkDerivation {

pname = "universe-instances-base";
version = "1.0";
sha256 = "a21150ee3bb71283522a573bf092c8d96b2e28a95336a95505aa4c2a067dd212";
revision = "1";
editedCabalFile = "13s8gxsvkw6phwvd79h9f3xaqbyzsx1svpysbmq72z1hv3mqyz8a";
libraryHaskellDepends = [
base
containers
universe-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dmwit/universe";
description = "Universe instances for types from the base package";
license = stdenv.lib.licenses.bsd3;

}) {};
"universe-instances-extended" = callPackage
({
  mkDerivation
, adjunctions
, base
, comonad
, stdenv
, universe-instances-base
, void
}:
mkDerivation {

pname = "universe-instances-extended";
version = "1.0.0.1";
sha256 = "665b272701b16a6bb8d40a5396aa1dcb038f002452ebdc29d353e3be2070c997";
revision = "2";
editedCabalFile = "1di3jk3ciikjrxzr76i0mqqza26mclnbxxak7ybkk4l06yqanj38";
libraryHaskellDepends = [
adjunctions
base
comonad
universe-instances-base
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dmwit/universe";
description = "Universe instances for types from select extra packages";
license = stdenv.lib.licenses.bsd3;

}) {};
"universe-instances-trans" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
, universe-base
, universe-instances-base
}:
mkDerivation {

pname = "universe-instances-trans";
version = "1.0.0.1";
sha256 = "0d047cf1eb4af9f2052f44f487e7d2d44c86f51b54a3cc1fc5243ad816e8310e";
revision = "1";
editedCabalFile = "0dcwgbgmbkjwzbxlncpl1b5hgjrmkl73djknjkhbnh02pysbwv69";
libraryHaskellDepends = [
base
mtl
transformers
universe-base
universe-instances-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dmwit/universe";
description = "Universe instances for types from the transformers and mtl packages";
license = stdenv.lib.licenses.bsd3;

}) {};
"universe-reverse-instances" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, universe-instances-base
}:
mkDerivation {

pname = "universe-reverse-instances";
version = "1.0";
sha256 = "e9d41cbf26eabd77587fddf69493d7ad23028303d1c1d1d2ee1de1bf3d3e8d49";
revision = "1";
editedCabalFile = "0rq6h7yghnzrnv56pxnlfr6cfih8dbnhc6hh5416pgy5bxsa0ydj";
libraryHaskellDepends = [
base
containers
universe-instances-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dmwit/universe";
description = "instances of standard classes that are made possible by enumerations";
license = stdenv.lib.licenses.bsd3;

}) {};
"unix-bytestring" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "unix-bytestring";
version = "0.3.7.3";
sha256 = "a3ec273da411988b7d9eb7317f6d84ce47f4b7fd39bdc721acd5229e7cff808c";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "Unix/Posix-specific functions for ByteStrings";
license = stdenv.lib.licenses.bsd3;

}) {};
"unix-compat" = callPackage
({
  mkDerivation
, base
, stdenv
, unix
}:
mkDerivation {

pname = "unix-compat";
version = "0.4.3.1";
sha256 = "72801d5a654a6e108c153f412ebd54c37fb445643770e0b97701a59e109f7e27";
revision = "2";
editedCabalFile = "0b5jicn8nm53yxxzwlvfcv4xp5rrqp98x5wwqh234wn9x44z54d2";
libraryHaskellDepends = [
base
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jystic/unix-compat";
description = "Portable POSIX-compatibility layer";
license = stdenv.lib.licenses.bsd3;

}) {};
"unix-time" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, old-time
, stdenv
}:
mkDerivation {

pname = "unix-time";
version = "0.3.7";
sha256 = "1131301131dd3e73353a346daa04578ec067073e7674d447051ac1a87262b4e1";
libraryHaskellDepends = [
base
binary
bytestring
old-time
];
doHaddock = false;
doCheck = false;
description = "Unix time parser/formatter and utilities";
license = stdenv.lib.licenses.bsd3;

}) {};
"unlit" = callPackage
({
  mkDerivation
, base
, directory
, stdenv
, text
}:
mkDerivation {

pname = "unlit";
version = "0.4.0.0";
sha256 = "489ecde4843f1911ebdaac3099241d703bb1161f3d386e2b5143f2fd6c355515";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
text
];
executableHaskellDepends = [
base
directory
text
];
doHaddock = false;
doCheck = false;
description = "Tool to convert literate code between styles or to code";
license = stdenv.lib.licenses.bsd3;

}) {};
"unordered-containers" = callPackage
({
  mkDerivation
, base
, deepseq
, hashable
, stdenv
}:
mkDerivation {

pname = "unordered-containers";
version = "0.2.7.2";
sha256 = "7f5c4344fcab01f6046378c64522f0dfd69e417f6c1a8858a24bdabaadb3e56e";
revision = "1";
editedCabalFile = "124apmss1pqgvpsvivg7211m7np2mi2p2zs1v80b5y57xwmj5hhh";
libraryHaskellDepends = [
base
deepseq
hashable
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tibbe/unordered-containers";
description = "Efficient hashing-based container types";
license = stdenv.lib.licenses.bsd3;

}) {};
"uri-bytestring" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-builder
, bytestring
, containers
, stdenv
}:
mkDerivation {

pname = "uri-bytestring";
version = "0.2.2.1";
sha256 = "9185e8f05d5c5154348c0d57d0df2b92ba6d09153fbdebded995b2f54e71c67e";
libraryHaskellDepends = [
attoparsec
base
blaze-builder
bytestring
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Soostone/uri-bytestring";
description = "Haskell URI parsing as ByteStrings";
license = stdenv.lib.licenses.bsd3;

}) {};
"uri-encode" = callPackage
({
  mkDerivation
, base
, bytestring
, network-uri
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "uri-encode";
version = "1.5.0.5";
sha256 = "e82b588aad63112d34f6bad6f1ef72489b9edebfe14f2f523dc1dabdcbe2b186";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
network-uri
text
utf8-string
];
doHaddock = false;
doCheck = false;
description = "Unicode aware uri-encoding";
license = stdenv.lib.licenses.bsd3;

}) {};
"uri-templater" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, charset
, containers
, dlist
, HTTP
, mtl
, parsers
, stdenv
, template-haskell
, text
, trifecta
, unordered-containers
, vector
}:
mkDerivation {

pname = "uri-templater";
version = "0.2.1.0";
sha256 = "b18621a1c4deed63e892395d4a2b0d20c7dbc81ecc8d977a18d99f23cc03943c";
revision = "1";
editedCabalFile = "0ypji50mx12qqnjs5fc5vwzx0gg97wq9pvwiysnk7s7x3r6wwh9q";
libraryHaskellDepends = [
ansi-wl-pprint
base
charset
containers
dlist
HTTP
mtl
parsers
template-haskell
text
trifecta
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/iand675/uri-templater";
description = "Parsing & Quasiquoting for RFC 6570 URI Templates";
license = stdenv.lib.licenses.mit;

}) {};
"url" = callPackage
({
  mkDerivation
, base
, stdenv
, utf8-string
}:
mkDerivation {

pname = "url";
version = "2.1.3";
sha256 = "5af27e3f8c0a27e52d0dcb98ef06a0fdd01efe8bb21242c29432e1bc380a4f61";
libraryHaskellDepends = [
base
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Url";
description = "A library for working with URLs";
license = stdenv.lib.licenses.bsd3;

}) {};
"urlpath" = callPackage
({
  mkDerivation
, base
, exceptions
, mmorph
, monad-control
, monad-logger
, mtl
, path-extra
, resourcet
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "urlpath";
version = "5.0.0.1";
sha256 = "03ee80654c36609bb82df91278ec081c3bb415b46f9bb54b9d76fc2fbd587ce3";
libraryHaskellDepends = [
base
exceptions
mmorph
monad-control
monad-logger
mtl
path-extra
resourcet
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
description = "Painfully simple URL deployment";
license = stdenv.lib.licenses.mit;

}) {};
"userid" = callPackage
({
  mkDerivation
, aeson
, base
, boomerang
, safecopy
, stdenv
, web-routes
, web-routes-th
}:
mkDerivation {

pname = "userid";
version = "0.1.2.8";
sha256 = "b0b2718880dacfefbd7ded80e4fcd1d016a51e5ec638200b6cd5552f4f102124";
libraryHaskellDepends = [
aeson
base
boomerang
safecopy
web-routes
web-routes-th
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/Happstack/userid";
description = "The UserId type and useful instances for web development";
license = stdenv.lib.licenses.bsd3;

}) {};
"users" = callPackage
({
  mkDerivation
, aeson
, base
, bcrypt
, path-pieces
, stdenv
, text
, time
}:
mkDerivation {

pname = "users";
version = "0.5.0.0";
sha256 = "6761ac937b0d4c13c5158239a0c51199c394facb72cc734ada90a391f01e53d4";
revision = "1";
editedCabalFile = "1x26g7k6kmq2vng9y5qkz82z06rs322s2y8bs9y6r4vayvg07q9v";
libraryHaskellDepends = [
aeson
base
bcrypt
path-pieces
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/users";
description = "A library simplifying user management for web applications";
license = stdenv.lib.licenses.mit;

}) {};
"users-postgresql-simple" = callPackage
({
  mkDerivation
, base
, bytestring
, mtl
, postgresql-simple
, stdenv
, text
, time
, users
, uuid
}:
mkDerivation {

pname = "users-postgresql-simple";
version = "0.5.0.2";
sha256 = "051b5d2c9c6cdeaacb6271a50ee4084cc1473de8d873825dc6d98023e96ec100";
libraryHaskellDepends = [
base
bytestring
mtl
postgresql-simple
text
time
users
uuid
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/users";
description = "A PostgreSQL backend for the users package";
license = stdenv.lib.licenses.mit;

}) {};
"users-test" = callPackage
({
  mkDerivation
, base
, hspec
, stdenv
, text
, users
}:
mkDerivation {

pname = "users-test";
version = "0.5.0.1";
sha256 = "f68549fa0cc002b16dc55f23a73b1a423aa2e64ab584c4041252a3bb6a5cac3e";
libraryHaskellDepends = [
base
hspec
text
users
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/users";
description = "Library to test backends for the users library";
license = stdenv.lib.licenses.mit;

}) {};
"utf8-light" = callPackage
({
  mkDerivation
, base
, bytestring
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "utf8-light";
version = "0.4.2";
sha256 = "184c428ce7896d702da46f6f107e6873ff100dbc1af40b49b5ce87317e619e67";
libraryHaskellDepends = [
base
bytestring
ghc-prim
];
doHaddock = false;
doCheck = false;
description = "Unicode";
license = stdenv.lib.licenses.bsd3;

}) {};
"utf8-string" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "utf8-string";
version = "1.0.1.1";
sha256 = "fb0b9e3acbe0605bcd1c63e51f290a7bbbe6628dfa3294ff453e4235fbaef140";
revision = "3";
editedCabalFile = "02vhj5gykkqa2dyn7s6gn8is1b5fdn9xcqqvlls268g7cpv6rk38";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/glguy/utf8-string/";
description = "Support for reading and writing UTF8 Strings";
license = stdenv.lib.licenses.bsd3;

}) {};
"utility-ht" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "utility-ht";
version = "0.0.12";
sha256 = "a4445f436354599c1f3e923dfb3e4463b6f65e7c1dabea1e2d34d11c4a5b05ef";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Various small helper functions for Lists, Maybes, Tuples, Functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"uu-interleaved" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "uu-interleaved";
version = "0.2.0.0";
sha256 = "3195ec570e94beb3b42d882940d9518bddb66ab6a27895d21a046769d055dae7";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://www.cs.uu.nl/wiki/bin/view/HUT/ParserCombinators";
description = "Providing an interleaving combinator for use with applicative/alternative style implementations";
license = stdenv.lib.licenses.mit;

}) {};
"uu-parsinglib" = callPackage
({
  mkDerivation
, base
, ListLike
, stdenv
, time
, uu-interleaved
}:
mkDerivation {

pname = "uu-parsinglib";
version = "2.9.1.1";
sha256 = "d25f5ae36641136143c72b1d29f24d093cb07327d14a7518af90801e5d67bb6c";
libraryHaskellDepends = [
base
ListLike
time
uu-interleaved
];
doHaddock = false;
doCheck = false;
homepage = "http://www.cs.uu.nl/wiki/bin/view/HUT/ParserCombinators";
description = "Fast, online, error-correcting, monadic, applicative, merging, permuting, interleaving, idiomatic parser combinators";
license = stdenv.lib.licenses.mit;

}) {};
"uuid" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, cryptohash-md5
, cryptohash-sha1
, entropy
, network-info
, random
, stdenv
, text
, time
, uuid-types
}:
mkDerivation {

pname = "uuid";
version = "1.3.13";
sha256 = "dfac808a7026217d018b408eab18facc6a85c6183be308d4ac7877e80599b027";
revision = "2";
editedCabalFile = "0m185q62jkfb5jsv358nxbnrkv8y8hd0qqvgvh22wvc5g9ipz0r9";
libraryHaskellDepends = [
base
binary
bytestring
cryptohash-md5
cryptohash-sha1
entropy
network-info
random
text
time
uuid-types
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/uuid";
description = "For creating, comparing, parsing and printing Universally Unique Identifiers";
license = stdenv.lib.licenses.bsd3;

}) {};
"uuid-orphans" = callPackage
({
  mkDerivation
, base
, safecopy
, stdenv
, text
, th-lift
, uuid-types
, web-routes
}:
mkDerivation {

pname = "uuid-orphans";
version = "1.4.1";
sha256 = "3261ff63bc6d4dd8365272b16e02801b48a14c5ac46cd46428ef169b4d7c1da6";
libraryHaskellDepends = [
base
safecopy
text
th-lift
uuid-types
web-routes
];
doHaddock = false;
doCheck = false;
description = "Orphan instances for the UUID datatype";
license = stdenv.lib.licenses.bsd3;

}) {};
"uuid-types" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, deepseq
, hashable
, random
, stdenv
, text
}:
mkDerivation {

pname = "uuid-types";
version = "1.0.3";
sha256 = "9276517ab24a9b06f39d6e3c33c6c2b4ace1fc2126dbc1cd9806866a6551b3fd";
revision = "1";
editedCabalFile = "0iwwj07gp28g357hv76k4h8pvlzamvchnw003cv3qk778pcpx201";
libraryHaskellDepends = [
base
binary
bytestring
deepseq
hashable
random
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/aslatter/uuid";
description = "Type definitions for Universally Unique Identifiers";
license = stdenv.lib.licenses.bsd3;

}) {};
"vado" = callPackage
({
  mkDerivation
, attoparsec
, base
, directory
, filepath
, process
, stdenv
, text
}:
mkDerivation {

pname = "vado";
version = "0.0.8";
sha256 = "bb085062b807c08adc3bed2c0e736d4f888bd15a85e1d3d2babf4e6e25acc256";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
attoparsec
base
directory
filepath
process
text
];
executableHaskellDepends = [
attoparsec
base
directory
filepath
process
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hamishmack/vado";
description = "Runs commands on remote machines using ssh";
license = stdenv.lib.licenses.mit;

}) {};
"validate-input" = callPackage
({
  mkDerivation
, base
, bytestring
, either
, mtl
, pcre-heavy
, semigroups
, stdenv
, string-conversions
, text
}:
mkDerivation {

pname = "validate-input";
version = "0.4.0.0";
sha256 = "20fae24b17429df923b835968720b76c581dc2c5037a2df9374b98a3fa41a1f9";
libraryHaskellDepends = [
base
bytestring
either
mtl
pcre-heavy
semigroups
string-conversions
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/validate-input";
description = "Input validation combinator library";
license = stdenv.lib.licenses.mit;

}) {};
"varying" = callPackage
({
  mkDerivation
, base
, stdenv
, time
, transformers
}:
mkDerivation {

pname = "varying";
version = "0.7.0.3";
sha256 = "6cd417fad6b30d8f9bd5a01dd21d059ecbc26cd1faf27bb7973eea43b5640309";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
transformers
];
executableHaskellDepends = [
base
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/schell/varying";
description = "FRP through value streams and monadic splines";
license = stdenv.lib.licenses.mit;

}) {};
"vault" = callPackage
({
  mkDerivation
, base
, containers
, hashable
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "vault";
version = "0.3.0.6";
sha256 = "0b433de60fa3d20e93dce6013293e18089fb3233c34211ffa3f860408866ef48";
libraryHaskellDepends = [
base
containers
hashable
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/HeinrichApfelmus/vault";
description = "a persistent store for values of arbitrary types";
license = stdenv.lib.licenses.bsd3;

}) {};
"vcswrapper" = callPackage
({
  mkDerivation
, base
, containers
, directory
, filepath
, hxt
, mtl
, parsec
, process
, split
, stdenv
, text
}:
mkDerivation {

pname = "vcswrapper";
version = "0.1.5";
sha256 = "56584523ecd4c40a58345e0fcfc66a8aba4cfcdf49c8b1269d767f3b82b1f17b";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
containers
directory
filepath
hxt
mtl
parsec
process
split
text
];
executableHaskellDepends = [
base
containers
directory
filepath
hxt
mtl
parsec
process
split
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/forste/haskellVCSWrapper";
description = "Wrapper for source code management systems";
license = "GPL";

}) {};
"vector" = callPackage
({
  mkDerivation
, base
, deepseq
, ghc-prim
, primitive
, stdenv
}:
mkDerivation {

pname = "vector";
version = "0.11.0.0";
sha256 = "0a5320ed44c3f2b04b7f61e0f63f4fcd5b337524e601e01d5813ace3f5a432e4";
revision = "2";
editedCabalFile = "1kjafhgsyjqlvrpfv2vj17hipyv0zw56a2kbl6khzn5li9szvyib";
libraryHaskellDepends = [
base
deepseq
ghc-prim
primitive
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell/vector";
description = "Efficient Arrays";
license = stdenv.lib.licenses.bsd3;

}) {};
"vector-algorithms" = callPackage
({
  mkDerivation
, base
, bytestring
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "vector-algorithms";
version = "0.7.0.1";
sha256 = "ed460a41ca068f568bc2027579ab14185fbb72c7ac469b5179ae5f8a52719070";
revision = "1";
editedCabalFile = "1996aj239vasr4hd5c0pi9i0bd08r6clzr76nqvf3hc5kjs7vml2";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
primitive
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~dolio/";
description = "Efficient algorithms for vector arrays";
license = stdenv.lib.licenses.bsd3;

}) {};
"vector-binary-instances" = callPackage
({
  mkDerivation
, base
, binary
, stdenv
, vector
}:
mkDerivation {

pname = "vector-binary-instances";
version = "0.2.3.4";
sha256 = "f3cef04ff645bbf25198c2c0c33d0c13e44bfe63602e1e694c2be9abf0e57d00";
libraryHaskellDepends = [
base
binary
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/vector-binary-instances";
description = "Instances of Data.Binary and Data.Serialize for vector";
license = stdenv.lib.licenses.bsd3;

}) {};
"vector-buffer" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
, vector
}:
mkDerivation {

pname = "vector-buffer";
version = "0.4.1";
sha256 = "9b5a9b57488267a765d9e7a8f2aa387ee0d3153989c169952da1e1229a60fd9b";
libraryHaskellDepends = [
base
deepseq
vector
];
doHaddock = false;
doCheck = false;
description = "A buffer compatible with Data.Vector.*";
license = stdenv.lib.licenses.bsd3;

}) {};
"vector-fftw" = callPackage
({
  mkDerivation
, base
, fftw
, primitive
, stdenv
, storable-complex
, vector
}:
mkDerivation {

pname = "vector-fftw";
version = "0.1.3.7";
sha256 = "e3c21826d6bfb45c82a6c5a972b060f33b4feab3c9e6f389251208daaa7f8176";
libraryHaskellDepends = [
base
primitive
storable-complex
vector
];
librarySystemDepends = [
fftw
];
doHaddock = false;
doCheck = false;
homepage = "http://hackage.haskell.org/package/vector-fftw";
description = "A binding to the fftw library for one-dimensional vectors";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) fftw;};
"vector-instances" = callPackage
({
  mkDerivation
, base
, comonad
, hashable
, keys
, pointed
, semigroupoids
, semigroups
, stdenv
, vector
}:
mkDerivation {

pname = "vector-instances";
version = "3.4";
sha256 = "1b0246ef0cf8372d61d5c7840d857f49299af2304b5107510377255ed4dd5381";
libraryHaskellDepends = [
base
comonad
hashable
keys
pointed
semigroupoids
semigroups
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/vector-instances";
description = "Orphan Instances for 'Data.Vector'";
license = stdenv.lib.licenses.bsd3;

}) {};
"vector-sized" = callPackage
({
  mkDerivation
, base
, deepseq
, finite-typelits
, stdenv
, vector
}:
mkDerivation {

pname = "vector-sized";
version = "0.5.1.0";
sha256 = "2116bd082413e6b3ceb2290ac7d3aa2affcbfc76c7bebe22fbbf58e562369ae5";
revision = "1";
editedCabalFile = "16mgiqg1v8wbcng6j7nwn8j9grvjgyszdwyxzm8k0h9425f80flz";
libraryHaskellDepends = [
base
deepseq
finite-typelits
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/expipiplus1/vector-sized#readme";
description = "Size tagged vectors";
license = stdenv.lib.licenses.bsd3;

}) {};
"vector-space" = callPackage
({
  mkDerivation
, base
, Boolean
, MemoTrie
, NumInstances
, stdenv
}:
mkDerivation {

pname = "vector-space";
version = "0.10.4";
sha256 = "b712cc9fc675b1d9e592f56ed08a9636c87783c11d6ac84b5f18f46cdcbefda2";
libraryHaskellDepends = [
base
Boolean
MemoTrie
NumInstances
];
doHaddock = false;
doCheck = false;
description = "Vector & affine spaces, linear maps, and derivatives";
license = stdenv.lib.licenses.bsd3;

}) {};
"vector-split" = callPackage
({
  mkDerivation
, base
, stdenv
, vector
}:
mkDerivation {

pname = "vector-split";
version = "1.0.0.2";
sha256 = "b4aeeea50fec52e594b2d3c05aca3a112b2095d1e5238ced065cecf2d89bbd16";
libraryHaskellDepends = [
base
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fhaust/vector-split";
description = "Combinator library for splitting vectors";
license = stdenv.lib.licenses.mit;

}) {};
"vector-th-unbox" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
, vector
}:
mkDerivation {

pname = "vector-th-unbox";
version = "0.2.1.6";
sha256 = "be87d4a6f1005ee2d0de6adf521e05c9e83c441568a8a8b60c79efe24ae90235";
libraryHaskellDepends = [
base
template-haskell
vector
];
doHaddock = false;
doCheck = false;
description = "Deriver for Data.Vector.Unboxed using Template Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"vectortiles" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, containers
, deepseq
, protobuf
, stdenv
, text
, transformers
, vector
}:
mkDerivation {

pname = "vectortiles";
version = "1.2.0.2";
sha256 = "9540f0b55c63ae9185a7e2e264a4f10a5fbd0e682e3ecad33e52245d5e32a886";
libraryHaskellDepends = [
base
bytestring
cereal
containers
deepseq
protobuf
text
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fosskers/vectortiles";
description = "GIS Vector Tiles, as defined by Mapbox";
license = stdenv.lib.licenses.asl20;

}) {};
"versions" = callPackage
({
  mkDerivation
, base
, megaparsec
, semigroups
, stdenv
, text
}:
mkDerivation {

pname = "versions";
version = "3.0.0";
sha256 = "468eb7d61a7320ce592a6542c2f3c2fa2a74784a8fbf5b6a9e30edada4defc38";
libraryHaskellDepends = [
base
megaparsec
semigroups
text
];
doHaddock = false;
doCheck = false;
description = "Types and parsers for software version numbers";
license = stdenv.lib.licenses.bsd3;

}) {};
"vhd" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, cereal
, cipher-aes
, cryptohash
, directory
, filepath
, mmap
, random
, stdenv
, storable-endian
, text
, time
}:
mkDerivation {

pname = "vhd";
version = "0.2.2";
sha256 = "7c678f076395f44d853f87a4538635bc83d7a10319933dec9e06b40ce409ea7c";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
byteable
bytestring
cereal
cipher-aes
cryptohash
directory
filepath
mmap
random
storable-endian
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-vhd";
description = "Provides functions to inspect and manipulate virtual hard disk (VHD) files";
license = stdenv.lib.licenses.bsd3;

}) {};
"viewprof" = callPackage
({
  mkDerivation
, base
, brick
, containers
, ghc-prof
, lens
, scientific
, stdenv
, text
, vector
, vector-algorithms
, vty
}:
mkDerivation {

pname = "viewprof";
version = "0.0.0.1";
sha256 = "2e899ac1bab582314e18bb89f95c2623c11bb15dae5c2cce48652251f8bcf7be";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
brick
containers
ghc-prof
lens
scientific
text
vector
vector-algorithms
vty
];
doHaddock = false;
doCheck = false;
description = "Text-based interactive GHC .prof viewer";
license = stdenv.lib.licenses.bsd3;

}) {};
"vinyl" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "vinyl";
version = "0.5.3";
sha256 = "00f86a43def432c564226daae42b130a67c5fb413f3b097f43a14fbfb57608a6";
libraryHaskellDepends = [
base
ghc-prim
];
doHaddock = false;
doCheck = false;
description = "Extensible Records";
license = stdenv.lib.licenses.mit;

}) {};
"vinyl-utils" = callPackage
({
  mkDerivation
, base
, contravariant
, stdenv
, transformers
, vinyl
}:
mkDerivation {

pname = "vinyl-utils";
version = "0.3.0.0";
sha256 = "e6d7668cd91d5ef14b54396561c10930654dae9398cedefc1fb6faab00c4143f";
libraryHaskellDepends = [
base
contravariant
transformers
vinyl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/marcinmrotek/vinyl-utils";
description = "Utilities for vinyl";
license = stdenv.lib.licenses.bsd3;

}) {};
"void" = callPackage
({
  mkDerivation
, base
, deepseq
, ghc-prim
, hashable
, semigroups
, stdenv
}:
mkDerivation {

pname = "void";
version = "0.7.1";
sha256 = "c9f0fd93680c029abb9654b5464be260652829961b18b7046f96a0df95e825f4";
libraryHaskellDepends = [
base
deepseq
ghc-prim
hashable
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/void";
description = "A Haskell 98 logically uninhabited data type";
license = stdenv.lib.licenses.bsd3;

}) {};
"vty" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, containers
, deepseq
, directory
, filepath
, hashable
, microlens
, microlens-mtl
, microlens-th
, mtl
, parallel
, parsec
, stdenv
, stm
, terminfo
, text
, transformers
, unix
, utf8-string
, vector
}:
mkDerivation {

pname = "vty";
version = "5.15";
sha256 = "03bf0fa5132c271248e0f721ad9fb3f5003dc93cff99776fcc7cb7920a85d7f7";
revision = "2";
editedCabalFile = "0115flc2rjjikaksx0zi7x199cv85i2xvybwwkg2wl07xpjrns3w";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
blaze-builder
bytestring
containers
deepseq
directory
filepath
hashable
microlens
microlens-mtl
microlens-th
mtl
parallel
parsec
stm
terminfo
text
transformers
unix
utf8-string
vector
];
executableHaskellDepends = [
base
containers
microlens
microlens-mtl
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jtdaugherty/vty";
description = "A simple terminal UI library";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, bytestring-builder
, http-types
, network
, stdenv
, text
, transformers
, vault
}:
mkDerivation {

pname = "wai";
version = "3.2.1.1";
sha256 = "5d80a68f5d8806682d8267b7dacc383d094e3ef7ecd705f20e42c91cad564e21";
libraryHaskellDepends = [
base
blaze-builder
bytestring
bytestring-builder
http-types
network
text
transformers
vault
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/wai";
description = "Web Application Interface";
license = stdenv.lib.licenses.mit;

}) {};
"wai-app-static" = callPackage
({
  mkDerivation
, base
, blaze-builder
, blaze-html
, blaze-markup
, bytestring
, containers
, cryptonite
, directory
, file-embed
, filepath
, http-date
, http-types
, memory
, mime-types
, old-locale
, optparse-applicative
, stdenv
, template-haskell
, text
, time
, transformers
, unix-compat
, unordered-containers
, wai
, wai-extra
, warp
, zlib
}:
mkDerivation {

pname = "wai-app-static";
version = "3.1.6.1";
sha256 = "b318acf31e2e809411f119744a016ba0a78f52554ac7321a3a1410a218886668";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
blaze-builder
blaze-html
blaze-markup
bytestring
containers
cryptonite
directory
file-embed
filepath
http-date
http-types
memory
mime-types
old-locale
optparse-applicative
template-haskell
text
time
transformers
unix-compat
unordered-containers
wai
wai-extra
warp
zlib
];
executableHaskellDepends = [
base
bytestring
containers
directory
mime-types
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/web-application-interface";
description = "WAI application for static serving";
license = stdenv.lib.licenses.mit;

}) {};
"wai-conduit" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, conduit
, http-types
, stdenv
, transformers
, wai
}:
mkDerivation {

pname = "wai-conduit";
version = "3.0.0.3";
sha256 = "e49720a7c7b58e78a56991e42fa550a722936af274dc27755a735781258f7aff";
libraryHaskellDepends = [
base
blaze-builder
bytestring
conduit
http-types
transformers
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/wai";
description = "conduit wrappers for WAI";
license = stdenv.lib.licenses.mit;

}) {};
"wai-cors" = callPackage
({
  mkDerivation
, attoparsec
, base
, base-unicode-symbols
, bytestring
, case-insensitive
, http-types
, mtl
, stdenv
, transformers
, wai
}:
mkDerivation {

pname = "wai-cors";
version = "0.2.5";
sha256 = "25089b8a043e0eb042ef63070ddd7ecc4d961c74526c9c00b292eda4b92d766e";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
attoparsec
base
base-unicode-symbols
bytestring
case-insensitive
http-types
mtl
transformers
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/larskuhtz/wai-cors";
description = "CORS for WAI";
license = stdenv.lib.licenses.mit;

}) {};
"wai-eventsource" = callPackage
({
  mkDerivation
, stdenv
, wai
}:
mkDerivation {

pname = "wai-eventsource";
version = "3.0.0";
sha256 = "785005f23bf9bf4e1dfaae0705472c0e3ea4c3843ff6a8625db8d1e327a6bfc0";
libraryHaskellDepends = [
wai
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/web-application-interface";
description = "WAI support for server-sent events (deprecated)";
license = stdenv.lib.licenses.mit;

}) {};
"wai-extra" = callPackage
({
  mkDerivation
, aeson
, ansi-terminal
, base
, base64-bytestring
, blaze-builder
, bytestring
, case-insensitive
, containers
, cookie
, data-default-class
, deepseq
, directory
, fast-logger
, http-types
, iproute
, lifted-base
, network
, old-locale
, resourcet
, stdenv
, streaming-commons
, stringsearch
, text
, time
, transformers
, unix
, unix-compat
, vault
, void
, wai
, wai-logger
, word8
, zlib
}:
mkDerivation {

pname = "wai-extra";
version = "3.0.19.1";
sha256 = "f7e7ca4432fd868bb549f16ff2671534cab4e0bcfff194b9de55aa561b21a7f6";
libraryHaskellDepends = [
aeson
ansi-terminal
base
base64-bytestring
blaze-builder
bytestring
case-insensitive
containers
cookie
data-default-class
deepseq
directory
fast-logger
http-types
iproute
lifted-base
network
old-locale
resourcet
streaming-commons
stringsearch
text
time
transformers
unix
unix-compat
vault
void
wai
wai-logger
word8
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yesodweb/wai";
description = "Provides some basic WAI handlers and middleware";
license = stdenv.lib.licenses.mit;

}) {};
"wai-handler-launch" = callPackage
({
  mkDerivation
, async
, base
, blaze-builder
, bytestring
, http-types
, process
, stdenv
, streaming-commons
, transformers
, wai
, warp
}:
mkDerivation {

pname = "wai-handler-launch";
version = "3.0.2.2";
sha256 = "9c94c4da533ebcbbd28cf3dfbeb44a5e953dbf73b53cab0179f16931fa102908";
libraryHaskellDepends = [
async
base
blaze-builder
bytestring
http-types
process
streaming-commons
transformers
wai
warp
];
doHaddock = false;
doCheck = false;
description = "Launch a web app in the default browser";
license = stdenv.lib.licenses.mit;

}) {};
"wai-logger" = callPackage
({
  mkDerivation
, base
, blaze-builder
, byteorder
, bytestring
, case-insensitive
, fast-logger
, http-types
, network
, stdenv
, unix
, unix-time
, wai
}:
mkDerivation {

pname = "wai-logger";
version = "2.3.0";
sha256 = "90cd993c657e72a0480a988220b288aeb2561efa53d2c8f819197b6de3060bf0";
libraryHaskellDepends = [
base
blaze-builder
byteorder
bytestring
case-insensitive
fast-logger
http-types
network
unix
unix-time
wai
];
doHaddock = false;
doCheck = false;
description = "A logging system for WAI";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-middleware-caching" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, http-types
, stdenv
, wai
}:
mkDerivation {

pname = "wai-middleware-caching";
version = "0.1.0.2";
sha256 = "15b5fb9c92599d5ecb6a70ba40bad024488f9eca7139abe23b961ba21602d78d";
libraryHaskellDepends = [
base
blaze-builder
bytestring
http-types
wai
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching#readme";
description = "WAI Middleware to cache things";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-middleware-caching-lru" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, http-types
, lrucache
, stdenv
, text
, wai
, wai-middleware-caching
}:
mkDerivation {

pname = "wai-middleware-caching-lru";
version = "0.1.0.0";
sha256 = "377dc842f5ad77b98e8a817e092c891ccfd0da978fb9f69a380f001a95da28d3";
libraryHaskellDepends = [
base
blaze-builder
bytestring
http-types
lrucache
text
wai
wai-middleware-caching
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching-lru#readme";
description = "Initial project template from stack";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-middleware-caching-redis" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, hedis
, http-types
, stdenv
, text
, wai
, wai-middleware-caching
}:
mkDerivation {

pname = "wai-middleware-caching-redis";
version = "0.2.0.0";
sha256 = "6ff53783db20d8f0ff00514ea2679f7022ca59eb20ffad22628ac17c13bf7c4c";
libraryHaskellDepends = [
base
blaze-builder
bytestring
hedis
http-types
text
wai
wai-middleware-caching
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching-redis#readme";
description = "Cache Wai Middleware using Redis backend";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-middleware-consul" = callPackage
({
  mkDerivation
, async
, base
, base-prelude
, bytestring
, conduit
, conduit-extra
, consul-haskell
, enclosed-exceptions
, http-client
, http-types
, monad-control
, monad-logger
, network
, process
, resourcet
, stdenv
, text
, transformers
, void
, wai
, wai-conduit
}:
mkDerivation {

pname = "wai-middleware-consul";
version = "0.1.0.2";
sha256 = "d89d5a5bf0b08cf4fcd300d9e16c351a146119c34a9f31949498a874699c0763";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
async
base
base-prelude
bytestring
conduit
conduit-extra
consul-haskell
enclosed-exceptions
http-client
http-types
monad-control
monad-logger
network
process
resourcet
text
transformers
void
wai
wai-conduit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/wai-middleware-consul";
description = "Wai Middleware for Consul";
license = stdenv.lib.licenses.mit;

}) {};
"wai-middleware-content-type" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-builder
, blaze-html
, bytestring
, clay
, exceptions
, hashable
, http-media
, http-types
, lucid
, mmorph
, monad-control
, monad-logger
, mtl
, pandoc
, resourcet
, shakespeare
, stdenv
, text
, transformers
, transformers-base
, unordered-containers
, urlpath
, wai
, wai-transformers
}:
mkDerivation {

pname = "wai-middleware-content-type";
version = "0.5.0.1";
sha256 = "2dcdccb959f0fbb42a06e56818a466017e30edb88fd8eb57abaa9c437f08bd86";
libraryHaskellDepends = [
aeson
base
blaze-builder
blaze-html
bytestring
clay
exceptions
hashable
http-media
http-types
lucid
mmorph
monad-control
monad-logger
mtl
pandoc
resourcet
shakespeare
text
transformers
transformers-base
unordered-containers
urlpath
wai
wai-transformers
];
doHaddock = false;
doCheck = false;
description = "Route to different middlewares based on the incoming Accept header";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-middleware-crowd" = callPackage
({
  mkDerivation
, authenticate
, base
, base64-bytestring
, binary
, blaze-builder
, bytestring
, case-insensitive
, clientsession
, containers
, cookie
, gitrev
, http-client
, http-client-tls
, http-reverse-proxy
, http-types
, optparse-applicative
, resourcet
, stdenv
, template-haskell
, text
, time
, transformers
, unix-compat
, vault
, wai
, wai-app-static
, wai-extra
, warp
}:
mkDerivation {

pname = "wai-middleware-crowd";
version = "0.1.4.2";
sha256 = "1136b61a6ce7729093664b63a4ab70de73e356d34b0c7a8114b639b18626b058";
revision = "1";
editedCabalFile = "0qvh92p9s80kmzg5w7rga54kfqbwcrkkv5p03pd92px04j2h5lbm";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
authenticate
base
base64-bytestring
binary
blaze-builder
bytestring
case-insensitive
clientsession
containers
cookie
http-client
http-client-tls
http-types
resourcet
text
time
unix-compat
vault
wai
];
executableHaskellDepends = [
base
bytestring
clientsession
gitrev
http-client
http-client-tls
http-reverse-proxy
http-types
optparse-applicative
template-haskell
text
transformers
wai
wai-app-static
wai-extra
warp
];
doHaddock = false;
doCheck = false;
description = "Middleware and utilities for using Atlassian Crowd authentication";
license = stdenv.lib.licenses.mit;

}) {};
"wai-middleware-metrics" = callPackage
({
  mkDerivation
, base
, ekg-core
, http-types
, stdenv
, text
, time
, wai
}:
mkDerivation {

pname = "wai-middleware-metrics";
version = "0.2.3";
sha256 = "c9123ca10c2d0d223ce0c39faa7097de2e61ec2b9a24cff042d7248850ea2e2a";
libraryHaskellDepends = [
base
ekg-core
http-types
text
time
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Helkafen/wai-middleware-metrics";
description = "A WAI middleware to collect EKG request metrics";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-middleware-prometheus" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default
, http-types
, prometheus-client
, stdenv
, text
, time
, wai
}:
mkDerivation {

pname = "wai-middleware-prometheus";
version = "0.1.0.1";
sha256 = "6da4cb9dd96912332050dd2abf6f489ef94aa856c409bd6205f706257bbe3037";
libraryHaskellDepends = [
base
bytestring
data-default
http-types
prometheus-client
text
time
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fimad/prometheus-haskell";
description = "WAI middlware for exposing http://prometheus.io metrics.";
license = stdenv.lib.licenses.asl20;

}) {};
"wai-middleware-static" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, cryptonite
, directory
, expiring-cache-map
, filepath
, http-types
, memory
, mime-types
, mtl
, old-locale
, semigroups
, stdenv
, text
, time
, wai
}:
mkDerivation {

pname = "wai-middleware-static";
version = "0.8.1";
sha256 = "e0b5f13f410f81897759acf43198a08101d2af4c9d506164367c7d1a96d55375";
revision = "5";
editedCabalFile = "1lb4whil5x1arjb3503x8j9i3wmf678ii1dx0paqqx7dchs6cfwl";
libraryHaskellDepends = [
base
bytestring
containers
cryptonite
directory
expiring-cache-map
filepath
http-types
memory
mime-types
mtl
old-locale
semigroups
text
time
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/scotty-web/wai-middleware-static";
description = "WAI middleware that serves requests to static files";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-middleware-throttle" = callPackage
({
  mkDerivation
, base
, containers
, hashable
, http-types
, network
, stdenv
, stm
, token-bucket
, transformers
, wai
}:
mkDerivation {

pname = "wai-middleware-throttle";
version = "0.2.1.0";
sha256 = "862ac07bb8c8e21b4f56a6398444e2e6bdf9512a198ae394fa9d023f7cfcf87c";
libraryHaskellDepends = [
base
containers
hashable
http-types
network
stm
token-bucket
transformers
wai
];
doHaddock = false;
doCheck = false;
description = "WAI Middleware for Request Throttling";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-middleware-verbs" = callPackage
({
  mkDerivation
, base
, errors
, exceptions
, hashable
, http-types
, mmorph
, monad-logger
, mtl
, resourcet
, stdenv
, transformers
, transformers-base
, unordered-containers
, wai
}:
mkDerivation {

pname = "wai-middleware-verbs";
version = "0.3.2";
sha256 = "691fa97fda7204d84e1fa8f953334ca51cb1055577a5ec1d56cc5f07491aaa66";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
errors
exceptions
hashable
http-types
mmorph
monad-logger
mtl
resourcet
transformers
transformers-base
unordered-containers
wai
];
doHaddock = false;
doCheck = false;
description = "Route different middleware responses based on the incoming HTTP verb";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-predicates" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, bytestring-conversion
, case-insensitive
, cookie
, http-types
, singletons
, stdenv
, transformers
, vault
, vector
, wai
}:
mkDerivation {

pname = "wai-predicates";
version = "0.9.0";
sha256 = "1802d3aa8cec1ce0049cc115166504a83e6866e279d0345e1a72986f1d4e1b50";
libraryHaskellDepends = [
attoparsec
base
bytestring
bytestring-conversion
case-insensitive
cookie
http-types
singletons
transformers
vault
vector
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/twittner/wai-predicates/";
description = "WAI request predicates";
license = "unknown";

}) {};
"wai-route" = callPackage
({
  mkDerivation
, base
, bytestring
, http-types
, stdenv
, unordered-containers
, wai
}:
mkDerivation {

pname = "wai-route";
version = "0.3.1.1";
sha256 = "43fe7d52f5a3c388f67a309b1642353d59dc3cb33b30ca550ce4649da59c2c0f";
libraryHaskellDepends = [
base
bytestring
http-types
unordered-containers
wai
];
doHaddock = false;
doCheck = false;
description = "Minimalistic, efficient routing for WAI";
license = stdenv.lib.licenses.mpl20;

}) {};
"wai-routes" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-builder
, bytestring
, case-insensitive
, containers
, cookie
, data-default-class
, filepath
, http-types
, mime-types
, monad-loops
, mtl
, path-pieces
, random
, stdenv
, template-haskell
, text
, vault
, wai
, wai-app-static
, wai-extra
}:
mkDerivation {

pname = "wai-routes";
version = "0.9.10";
sha256 = "e872338221f64c5c1ac3e4421b2b31e3b32116b1eac0fba3f6adc73d3e255672";
libraryHaskellDepends = [
aeson
base
blaze-builder
bytestring
case-insensitive
containers
cookie
data-default-class
filepath
http-types
mime-types
monad-loops
mtl
path-pieces
random
template-haskell
text
vault
wai
wai-app-static
wai-extra
];
doHaddock = false;
doCheck = false;
homepage = "https://ajnsit.github.io/wai-routes/";
description = "Typesafe URLs for Wai applications";
license = stdenv.lib.licenses.mit;

}) {};
"wai-routing" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, bytestring-conversion
, case-insensitive
, cookie
, http-types
, stdenv
, transformers
, wai
, wai-predicates
, wai-route
}:
mkDerivation {

pname = "wai-routing";
version = "0.13.0";
sha256 = "f4841b028e20f49e3617d13247c04f457c850421321a92e7ab4e372ee85cde8f";
libraryHaskellDepends = [
attoparsec
base
bytestring
bytestring-conversion
case-insensitive
cookie
http-types
transformers
wai
wai-predicates
wai-route
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/twittner/wai-routing/";
description = "Declarative routing for WAI";
license = stdenv.lib.licenses.mpl20;

}) {};
"wai-session" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, containers
, cookie
, http-types
, StateVar
, stdenv
, time
, transformers
, vault
, wai
}:
mkDerivation {

pname = "wai-session";
version = "0.3.2";
sha256 = "83739ca93cf1db1e5b54dec7e2590dabfcc77a97ac1388f2f2f18840917c8326";
libraryHaskellDepends = [
base
blaze-builder
bytestring
containers
cookie
http-types
StateVar
time
transformers
vault
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/singpolyma/wai-session";
description = "Flexible session middleware for WAI";
license = "unknown";

}) {};
"wai-session-postgresql" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, cookie
, data-default
, entropy
, postgresql-simple
, resource-pool
, stdenv
, text
, time
, transformers
, wai
, wai-session
}:
mkDerivation {

pname = "wai-session-postgresql";
version = "0.2.1.0";
sha256 = "34f6a08e8a26ab1a58ad2e1f707ede69541f5788b7b0454a83dc26ad3afbbe9a";
libraryHaskellDepends = [
base
bytestring
cereal
cookie
data-default
entropy
postgresql-simple
resource-pool
text
time
transformers
wai
wai-session
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hce/postgresql-session#readme";
description = "PostgreSQL backed Wai session store";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-transformers" = callPackage
({
  mkDerivation
, base
, exceptions
, stdenv
, transformers
, wai
, wai-websockets
, websockets
}:
mkDerivation {

pname = "wai-transformers";
version = "0.0.7";
sha256 = "1a1801a2048eb84808a09e44cb899d6cc689948619eeeea005e312ea5a2fe32c";
libraryHaskellDepends = [
base
exceptions
transformers
wai
wai-websockets
websockets
];
doHaddock = false;
doCheck = false;
description = "Simple parameterization of Wai's Application type";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-websockets" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, case-insensitive
, file-embed
, http-types
, network
, stdenv
, text
, transformers
, wai
, wai-app-static
, warp
, websockets
}:
mkDerivation {

pname = "wai-websockets";
version = "3.0.1.1";
sha256 = "6abeafea574d9e8f4d41de091afec4594489877aa8717f97e91af5543fd38a31";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
blaze-builder
bytestring
case-insensitive
http-types
network
transformers
wai
websockets
];
executableHaskellDepends = [
base
blaze-builder
bytestring
case-insensitive
file-embed
http-types
network
text
transformers
wai
wai-app-static
warp
websockets
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yesodweb/wai";
description = "Provide a bridge between WAI and the websockets package";
license = stdenv.lib.licenses.mit;

}) {};
"waitra" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, directory
, filepath
, http-types
, regex-applicative
, stdenv
, template-haskell
, text
, wai
}:
mkDerivation {

pname = "waitra";
version = "0.0.4.0";
sha256 = "5610c69eb377e2714c3e502cf47fff7e116e356890aefb1f4144d3e6c1b16c12";
revision = "2";
editedCabalFile = "13xxz3dvmdnhzb61zr5y3q1g818mbjq36clrqc1v73imw17rsbvv";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
directory
filepath
http-types
regex-applicative
template-haskell
text
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/futurice/waitra";
description = "A very simple Wai router";
license = stdenv.lib.licenses.mit;

}) {};
"warp" = callPackage
({
  mkDerivation
, array
, async
, auto-update
, base
, blaze-builder
, bytestring
, bytestring-builder
, case-insensitive
, containers
, ghc-prim
, hashable
, http-date
, http-types
, http2
, iproute
, network
, simple-sendfile
, stdenv
, stm
, streaming-commons
, text
, unix
, unix-compat
, vault
, wai
, word8
}:
mkDerivation {

pname = "warp";
version = "3.2.11";
sha256 = "193e6cd899c09850819c09ae4a4368f569ee65559eef3f440be83b6c2b2cffac";
revision = "1";
editedCabalFile = "12sc057fbnljdndcnxz9x5x6rnj4qcpr69nnjc8mpfbj57v8n4jr";
libraryHaskellDepends = [
array
async
auto-update
base
blaze-builder
bytestring
bytestring-builder
case-insensitive
containers
ghc-prim
hashable
http-date
http-types
http2
iproute
network
simple-sendfile
stm
streaming-commons
text
unix
unix-compat
vault
wai
word8
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yesodweb/wai";
description = "A fast, light-weight web server for WAI applications";
license = stdenv.lib.licenses.mit;

}) {};
"warp-tls" = callPackage
({
  mkDerivation
, base
, bytestring
, cryptonite
, data-default-class
, network
, stdenv
, streaming-commons
, tls
, wai
, warp
}:
mkDerivation {

pname = "warp-tls";
version = "3.2.3";
sha256 = "f5c4c871fee62021a7b3b22d1f2af3543843a0c54632da6f7be9ef58e65fa292";
libraryHaskellDepends = [
base
bytestring
cryptonite
data-default-class
network
streaming-commons
tls
wai
warp
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yesodweb/wai";
description = "HTTP over TLS support for Warp via the TLS package";
license = stdenv.lib.licenses.mit;

}) {};
"wave" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, containers
, data-default-class
, stdenv
, transformers
}:
mkDerivation {

pname = "wave";
version = "0.1.4";
sha256 = "686687782dca7c522190bca70171682b24af8c89e4f3aa63da455c331daeb6bc";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
cereal
containers
data-default-class
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/wave";
description = "Work with WAVE and RF64 files";
license = stdenv.lib.licenses.bsd3;

}) {};
"wavefront" = callPackage
({
  mkDerivation
, attoparsec
, base
, dlist
, filepath
, mtl
, stdenv
, text
, transformers
, vector
}:
mkDerivation {

pname = "wavefront";
version = "0.7.0.3";
sha256 = "7e6ee21fa04410c4c01f0b86fa0acdc3d4d64d3167614e2cb58ce7528bbd0d65";
libraryHaskellDepends = [
attoparsec
base
dlist
filepath
mtl
text
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phaazon/wavefront";
description = "Wavefront OBJ loader";
license = stdenv.lib.licenses.bsd3;

}) {};
"wavefront-obj" = callPackage
({
  mkDerivation
, attoparsec
, base
, containers
, linear
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "wavefront-obj";
version = "0.1.0.1";
sha256 = "f73744ebc9dd035686f089c368434bf6940bd0c9928258aa00b7258677c0e258";
revision = "1";
editedCabalFile = "1233pbi1q0qlf31m5kspsq8w9sj3ii25ayavn3s0li9lvqkc696c";
libraryHaskellDepends = [
attoparsec
base
containers
linear
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sasinestro/wavefront-obj#readme";
description = "Wavefront .obj file loader";
license = stdenv.lib.licenses.bsd3;

}) {};
"web-plugins" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
, stm
, text
}:
mkDerivation {

pname = "web-plugins";
version = "0.2.9";
sha256 = "e63bfd7f666b40c7ff962a070c64dc5bef4a5c490af745fa7ee8f964284a7a50";
libraryHaskellDepends = [
base
containers
mtl
stm
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/clckwrks/web-plugins";
description = "dynamic plugin system for web applications";
license = stdenv.lib.licenses.bsd3;

}) {};
"web-routes" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, exceptions
, ghc-prim
, http-types
, mtl
, parsec
, split
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "web-routes";
version = "0.27.11";
sha256 = "45624d4d8a912809603d72a36bf738a027ebec71ce0104928f144abb16de8cd8";
revision = "1";
editedCabalFile = "1kq9x2s1z2l9ldsbmzl29b4xbpv1w3ls98ca76d8d4dnwg5va14a";
libraryHaskellDepends = [
base
blaze-builder
bytestring
exceptions
ghc-prim
http-types
mtl
parsec
split
text
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/docs/crashcourse/index.html#web-routes";
description = "portable, type-safe URL routing";
license = stdenv.lib.licenses.bsd3;

}) {};
"web-routes-boomerang" = callPackage
({
  mkDerivation
, base
, boomerang
, mtl
, parsec
, stdenv
, text
, web-routes
}:
mkDerivation {

pname = "web-routes-boomerang";
version = "0.28.4.2";
sha256 = "7ea892cd6e8c25e4adabf999d2332248a7b458662479a28a812bafd8dd2b7827";
libraryHaskellDepends = [
base
boomerang
mtl
parsec
text
web-routes
];
doHaddock = false;
doCheck = false;
description = "Use boomerang for type-safe URL parsers/printers";
license = stdenv.lib.licenses.bsd3;

}) {};
"web-routes-happstack" = callPackage
({
  mkDerivation
, base
, bytestring
, happstack-server
, stdenv
, text
, web-routes
}:
mkDerivation {

pname = "web-routes-happstack";
version = "0.23.10";
sha256 = "a7bbf337cea91b3dbf41d1785a4edef238a1e7d78e64dd153b90e36df35afbed";
libraryHaskellDepends = [
base
bytestring
happstack-server
text
web-routes
];
doHaddock = false;
doCheck = false;
description = "Adds support for using web-routes with Happstack";
license = stdenv.lib.licenses.bsd3;

}) {};
"web-routes-hsp" = callPackage
({
  mkDerivation
, base
, hsp
, stdenv
, text
, web-routes
}:
mkDerivation {

pname = "web-routes-hsp";
version = "0.24.6.1";
sha256 = "ca7cf5bf026c52fee5b6af3ca173c7341cd991dcd38508d07589cc7ea8102cab";
libraryHaskellDepends = [
base
hsp
text
web-routes
];
doHaddock = false;
doCheck = false;
description = "Adds XMLGenerator instance for RouteT monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"web-routes-th" = callPackage
({
  mkDerivation
, base
, parsec
, split
, stdenv
, template-haskell
, text
, web-routes
}:
mkDerivation {

pname = "web-routes-th";
version = "0.22.6.1";
sha256 = "249b47bbe00922a69533254dd07fa105e2e90d63676f273215fc9100cdaa21d2";
libraryHaskellDepends = [
base
parsec
split
template-haskell
text
web-routes
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/happstack/web-routes-th";
description = "Support for deriving PathInfo using Template Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"web-routes-wai" = callPackage
({
  mkDerivation
, base
, bytestring
, http-types
, stdenv
, text
, wai
, web-routes
}:
mkDerivation {

pname = "web-routes-wai";
version = "0.24.3";
sha256 = "0737b8f1b0324b2c5aa5f90ee14263a391fc62e2d61ca3d5be4f944d67a30f1c";
libraryHaskellDepends = [
base
bytestring
http-types
text
wai
web-routes
];
doHaddock = false;
doCheck = false;
description = "Library for maintaining correctness of URLs within an application";
license = stdenv.lib.licenses.bsd3;

}) {};
"webdriver" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base64-bytestring
, bytestring
, data-default-class
, directory
, directory-tree
, exceptions
, filepath
, http-client
, http-types
, lifted-base
, monad-control
, network
, network-uri
, scientific
, stdenv
, temporary
, text
, time
, transformers
, transformers-base
, unordered-containers
, vector
, zip-archive
}:
mkDerivation {

pname = "webdriver";
version = "0.8.4";
sha256 = "347f2935e7b9498d1a0391f929b347e295fa8b19a3ea0ac7b81802fda4164f23";
libraryHaskellDepends = [
aeson
attoparsec
base
base64-bytestring
bytestring
data-default-class
directory
directory-tree
exceptions
filepath
http-client
http-types
lifted-base
monad-control
network
network-uri
scientific
temporary
text
time
transformers
transformers-base
unordered-containers
vector
zip-archive
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kallisti-dev/hs-webdriver";
description = "a Haskell client for the Selenium WebDriver protocol";
license = stdenv.lib.licenses.bsd3;

}) {};
"webdriver-angular" = callPackage
({
  mkDerivation
, aeson
, base
, language-javascript
, stdenv
, template-haskell
, text
, transformers
, unordered-containers
, webdriver
}:
mkDerivation {

pname = "webdriver-angular";
version = "0.1.11";
sha256 = "5ebb650cdd9d0815ec897b4972cb0ab7f93d223e8f810e9bf30d6e1fd2ff49f6";
libraryHaskellDepends = [
aeson
base
language-javascript
template-haskell
text
transformers
unordered-containers
webdriver
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/wuzzeb/webdriver-utils";
description = "Webdriver actions to assist with testing a webpage which uses Angular.Js";
license = stdenv.lib.licenses.mit;

}) {};
"webkitgtk3" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, cairo
, glib
, gtk2hs-buildtools
, gtk3
, mtl
, pango
, stdenv
, text
, transformers
, webkitgtk24x-gtk3
}:
mkDerivation {

pname = "webkitgtk3";
version = "0.14.2.1";
sha256 = "6a71c475efbbfdac1c6d2fec12fb3c986dc13e09e1abdbde3dcf7a20421ab4f6";
enableSeparateDataOutput = true;
setupHaskellDepends = [
base
Cabal
gtk2hs-buildtools
];
libraryHaskellDepends = [
base
bytestring
cairo
glib
gtk3
mtl
pango
text
transformers
];
libraryPkgconfigDepends = [
webkitgtk24x-gtk3
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/gtk2hs/";
description = "Binding to the Webkit library";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) webkitgtk24x-gtk3;};
"webkitgtk3-javascriptcore" = callPackage
({
  mkDerivation
, base
, Cabal
, gtk2hs-buildtools
, stdenv
, webkitgtk24x-gtk3
}:
mkDerivation {

pname = "webkitgtk3-javascriptcore";
version = "0.14.2.1";
sha256 = "922080150c96c9276ea3ddd9ef19d867f5e179017b56e8fec02e2606d4cc924d";
setupHaskellDepends = [
base
Cabal
gtk2hs-buildtools
];
libraryHaskellDepends = [
base
];
libraryPkgconfigDepends = [
webkitgtk24x-gtk3
];
doHaddock = false;
doCheck = false;
description = "JavaScriptCore FFI from webkitgtk";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) webkitgtk24x-gtk3;};
"webpage" = callPackage
({
  mkDerivation
, base
, blaze-html
, data-default
, lucid
, stdenv
, text
}:
mkDerivation {

pname = "webpage";
version = "0.0.4";
sha256 = "17fba395357bf4d1462d1a50e2a06d1004d0df02cab524dc26e982a90f70c648";
libraryHaskellDepends = [
base
blaze-html
data-default
lucid
text
];
doHaddock = false;
doCheck = false;
description = "Organized and simple web page scaffold for blaze and lucid";
license = stdenv.lib.licenses.mit;

}) {};
"webrtc-vad" = callPackage
({
  mkDerivation
, base
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "webrtc-vad";
version = "0.1.0.3";
sha256 = "89cc6691d314c8c2ae7801bf56e1cca0252617536af4ac94acb92ad6d560d453";
libraryHaskellDepends = [
base
primitive
vector
];
doHaddock = false;
doCheck = false;
description = "Easy voice activity detection";
license = stdenv.lib.licenses.mit;

}) {};
"websockets" = callPackage
({
  mkDerivation
, attoparsec
, base
, base64-bytestring
, binary
, blaze-builder
, bytestring
, case-insensitive
, containers
, entropy
, network
, random
, SHA
, stdenv
, text
}:
mkDerivation {

pname = "websockets";
version = "0.10.0.0";
sha256 = "3ee56fa6683912928a7d336d591c43e4948886037b5aa72cbab2f33fb43fa2eb";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
attoparsec
base
base64-bytestring
binary
blaze-builder
bytestring
case-insensitive
containers
entropy
network
random
SHA
text
];
doHaddock = false;
doCheck = false;
homepage = "http://jaspervdj.be/websockets";
description = "A sensible and clean way to write WebSocket-capable servers in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"websockets-snap" = callPackage
({
  mkDerivation
, base
, bytestring
, bytestring-builder
, io-streams
, mtl
, snap-core
, snap-server
, stdenv
, websockets
}:
mkDerivation {

pname = "websockets-snap";
version = "0.10.2.0";
sha256 = "294173c3dbc327ce3873ff310dcd14590d6a1ec05d54ea8d1a0cda0498dbe4a2";
libraryHaskellDepends = [
base
bytestring
bytestring-builder
io-streams
mtl
snap-core
snap-server
websockets
];
doHaddock = false;
doCheck = false;
description = "Snap integration for the websockets library";
license = stdenv.lib.licenses.bsd3;

}) {};
"weigh" = callPackage
({
  mkDerivation
, base
, deepseq
, mtl
, process
, split
, stdenv
, template-haskell
}:
mkDerivation {

pname = "weigh";
version = "0.0.3";
sha256 = "396853c0e8347c7c13ec013259dc2a2c91663aa3f3e7f8bc9fa588f41d0af86a";
libraryHaskellDepends = [
base
deepseq
mtl
process
split
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/weigh#readme";
description = "Measure allocations of a Haskell functions/values";
license = stdenv.lib.licenses.bsd3;

}) {};
"wikicfp-scraper" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, scalpel-core
, stdenv
, text
, time
}:
mkDerivation {

pname = "wikicfp-scraper";
version = "0.1.0.8";
sha256 = "645077540aadceb4de7b095462baa99967dd279203d7ed66a052562ac83b94a3";
libraryHaskellDepends = [
attoparsec
base
bytestring
scalpel-core
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/debug-ito/wikicfp-scraper";
description = "Scrape WikiCFP web site";
license = stdenv.lib.licenses.bsd3;

}) {};
"wild-bind" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "wild-bind";
version = "0.1.0.3";
sha256 = "f2f5764b9b33aee30d87646a849e6db063fde2b92c8bce0e08ebb94b6b9f737f";
libraryHaskellDepends = [
base
containers
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/debug-ito/wild-bind";
description = "Dynamic key binding framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"wild-bind-indicator" = callPackage
({
  mkDerivation
, base
, containers
, gtk
, stdenv
, text
, transformers
, wild-bind
}:
mkDerivation {

pname = "wild-bind-indicator";
version = "0.1.0.1";
sha256 = "d57e697f44510a08f7d7608b181e06b6dea099b4f9ccd46058134105f8677053";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
containers
gtk
text
transformers
wild-bind
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/debug-ito/wild-bind";
description = "Graphical indicator for WildBind";
license = stdenv.lib.licenses.bsd3;

}) {};
"wild-bind-task-x11" = callPackage
({
  mkDerivation
, base
, stdenv
, text
, transformers
, wild-bind
, wild-bind-indicator
, wild-bind-x11
}:
mkDerivation {

pname = "wild-bind-task-x11";
version = "0.1.0.1";
sha256 = "d49347eadf4db6fe28b5de45db962e489014ebc3a9dc19353994976290527ac3";
libraryHaskellDepends = [
base
text
transformers
wild-bind
wild-bind-indicator
wild-bind-x11
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/debug-ito/wild-bind";
description = "Task to install and export everything you need to use WildBind in X11";
license = stdenv.lib.licenses.bsd3;

}) {};
"wild-bind-x11" = callPackage
({
  mkDerivation
, base
, containers
, fold-debounce
, stdenv
, stm
, text
, transformers
, wild-bind
, X11
}:
mkDerivation {

pname = "wild-bind-x11";
version = "0.1.0.6";
sha256 = "1e144b2833acee00da55cab3b28b57bc5347186f761cb1d7375532cfca38e4b4";
libraryHaskellDepends = [
base
containers
fold-debounce
stm
text
transformers
wild-bind
X11
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/debug-ito/wild-bind";
description = "X11-specific implementation for WildBind";
license = stdenv.lib.licenses.bsd3;

}) {};
"wire-streams" = callPackage
({
  mkDerivation
, base
, binary
, binary-parsers
, bytestring
, io-streams
, stdenv
}:
mkDerivation {

pname = "wire-streams";
version = "0.1.1.0";
sha256 = "96dffb70c08c89589881c96f199d271b55e4a5b3cc5be0f3e24e101858e2fb27";
revision = "1";
editedCabalFile = "1j7gpk3k82h0kxnhpv40jmnqxpnr0v0m4lj6bhpga81vlmznr088";
libraryHaskellDepends = [
base
binary
binary-parsers
bytestring
io-streams
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/wire-streams";
description = "Fast binary io-streams adapter";
license = stdenv.lib.licenses.bsd3;

}) {};
"with-location" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "with-location";
version = "0.1.0";
sha256 = "2c91d70cb28d39d6d5fbb37800c7d984aed4254cdcbf03ffa0787404bddefde7";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sol/with-location#readme";
description = "Use ImplicitParams-based source locations in a backward compatible way";
license = stdenv.lib.licenses.mit;

}) {};
"withdependencies" = callPackage
({
  mkDerivation
, base
, conduit
, containers
, mtl
, profunctors
, stdenv
}:
mkDerivation {

pname = "withdependencies";
version = "0.2.4";
sha256 = "a13eddc8fce5061204abf7289bed49bceb5b86a7981ba6a1b3fe510727fe267f";
libraryHaskellDepends = [
base
conduit
containers
mtl
profunctors
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bartavelle/withdependencies";
description = "Run computations that depend on one or more elements in a stream";
license = stdenv.lib.licenses.gpl3;

}) {};
"witherable" = callPackage
({
  mkDerivation
, base
, base-orphans
, containers
, hashable
, stdenv
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "witherable";
version = "0.1.3.3";
sha256 = "6fdfd607e71b442d17b48ab7e00fe3d8dda2c39cf041134d01d49da83421cf6c";
libraryHaskellDepends = [
base
base-orphans
containers
hashable
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fumieval/witherable";
description = "Generalization of filter and catMaybes";
license = stdenv.lib.licenses.bsd3;

}) {};
"witness" = callPackage
({
  mkDerivation
, base
, constraints
, semigroupoids
, stdenv
, transformers
}:
mkDerivation {

pname = "witness";
version = "0.4";
sha256 = "93c6c83681a3ab94f53e49c07d0d1474e21169f779c917a896c9d6ed1bf01ea0";
libraryHaskellDepends = [
base
constraints
semigroupoids
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AshleyYakeley/witness";
description = "values that witness types";
license = stdenv.lib.licenses.bsd3;

}) {};
"wizards" = callPackage
({
  mkDerivation
, base
, containers
, control-monad-free
, haskeline
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "wizards";
version = "1.0.2";
sha256 = "4ba12c726d60688b8173db3891aa1dce7f57c6364c40ba2f1c2c8d16404bd30b";
revision = "1";
editedCabalFile = "15vwynd5v6xm92dxkxf125grd8sv599n5bnj92qqmhlc89psxhxk";
libraryHaskellDepends = [
base
containers
control-monad-free
haskeline
mtl
transformers
];
doHaddock = false;
doCheck = false;
description = "High level, generic library for interrogative user interfaces";
license = stdenv.lib.licenses.bsd3;

}) {};
"wl-pprint" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "wl-pprint";
version = "1.2";
sha256 = "198003fa7edd3a2d625ec54402cdc5645434b60ad5983e93525f58fec9dcdf98";
revision = "1";
editedCabalFile = "04w1mm6c0k39x3aglrz5rgqjxszxb6jld0s7qrl4zhndl92nzi5c";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "The Wadler/Leijen Pretty Printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"wl-pprint-annotated" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, stdenv
, text
}:
mkDerivation {

pname = "wl-pprint-annotated";
version = "0.0.1.4";
sha256 = "0919c897b894771dd86877c41d6832bc11e4d3800efbebbcf59c10ce7ba848b0";
libraryHaskellDepends = [
base
containers
deepseq
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/wl-pprint-annotated#readme";
description = "Wadler/Leijen pretty printer with annotations and slightly modernized API";
license = stdenv.lib.licenses.bsd3;

}) {};
"wl-pprint-console" = callPackage
({
  mkDerivation
, base
, bytestring
, colorful-monoids
, stdenv
, text
, wl-pprint-annotated
}:
mkDerivation {

pname = "wl-pprint-console";
version = "0.1.0.1";
sha256 = "a7c7f6aa14f78bf6a8aae1a629433872f8bfb377b1392f08047520cdcb3b70fc";
revision = "1";
editedCabalFile = "1mlbjjk5mhv3jxzqvfspm07di09pns0xfalhx68k2r39z4lj1fa5";
libraryHaskellDepends = [
base
bytestring
colorful-monoids
text
wl-pprint-annotated
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/wl-pprint-console#readme";
description = "Wadler/Leijen pretty printer supporting colorful console output";
license = stdenv.lib.licenses.mit;

}) {};
"wl-pprint-extras" = callPackage
({
  mkDerivation
, base
, containers
, nats
, semigroupoids
, semigroups
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "wl-pprint-extras";
version = "3.5.0.5";
sha256 = "a9c21a85a729191fc422938a1f785d61be52f3a2923d8d79dade9b21e8e98d8f";
libraryHaskellDepends = [
base
containers
nats
semigroupoids
semigroups
text
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/wl-pprint-extras/";
description = "A free monad based on the Wadler/Leijen pretty printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"wl-pprint-terminfo" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, nats
, semigroups
, stdenv
, terminfo
, text
, transformers
, wl-pprint-extras
}:
mkDerivation {

pname = "wl-pprint-terminfo";
version = "3.7.1.4";
sha256 = "3cdaba571fc3f8c51e39d14773b23f0f8237bb2d33dbaf9230a98d4b2f388d20";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
containers
nats
semigroups
terminfo
text
transformers
wl-pprint-extras
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/wl-pprint-terminfo/";
description = "A color pretty printer with terminfo support";
license = stdenv.lib.licenses.bsd3;

}) {};
"wl-pprint-text" = callPackage
({
  mkDerivation
, base
, base-compat
, stdenv
, text
}:
mkDerivation {

pname = "wl-pprint-text";
version = "1.1.1.0";
sha256 = "2960c8201c05d912a1df748a3ceeadc7525905ff1c371d7b4972f4011eca0acd";
libraryHaskellDepends = [
base
base-compat
text
];
doHaddock = false;
doCheck = false;
description = "A Wadler/Leijen Pretty Printer for Text values";
license = stdenv.lib.licenses.bsd3;

}) {};
"word-trie" = callPackage
({
  mkDerivation
, base
, binary
, containers
, stdenv
}:
mkDerivation {

pname = "word-trie";
version = "0.3.0";
sha256 = "a3f3c2c088c64219ae35f7383a5dc1a368217183ba603e98785c110ac3f29282";
revision = "1";
editedCabalFile = "01aanzslm69z94lqy43hgyxj1ys7sqfqwn72l0snw3h2n3pjwn45";
libraryHaskellDepends = [
base
binary
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/word-trie";
description = "Implementation of a finite trie over words";
license = stdenv.lib.licenses.gpl2;

}) {};
"word24" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "word24";
version = "2.0.1";
sha256 = "c34ba17cc88df314151ef27dea192102ed73d5f0678f1359a5fe59799dc3a086";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/word24";
description = "24-bit word and int types for GHC";
license = stdenv.lib.licenses.bsd3;

}) {};
"word8" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "word8";
version = "0.1.2";
sha256 = "3cbae3755a078ecff46524b3f6e0018f7e796e6dac9c710fe09b433c544676dd";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Word8 library";
license = stdenv.lib.licenses.bsd3;

}) {};
"wordpass" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, directory
, filepath
, hflags
, random-fu
, random-source
, stdenv
, text
, unix-compat
, vector
}:
mkDerivation {

pname = "wordpass";
version = "1.0.0.7";
sha256 = "2283d16807261457c54022ca028e3c3a7fec1df6b66b9074ddbf0f14e721d9d8";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
deepseq
directory
filepath
random-fu
random-source
text
unix-compat
vector
];
executableHaskellDepends = [
base
containers
deepseq
directory
filepath
hflags
random-fu
random-source
text
unix-compat
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mgajda/wordpass";
description = "Dictionary-based password generator";
license = stdenv.lib.licenses.bsd3;

}) {};
"wrap" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "wrap";
version = "0.0.0";
sha256 = "f8bbc4b417b2291532784d0c7940c0f1a24d054e6012963f7d727ad13977f50e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Wrap a function's return value with another function";
license = stdenv.lib.licenses.bsd3;

}) {};
"writer-cps-full" = callPackage
({
  mkDerivation
, base
, stdenv
, writer-cps-lens
, writer-cps-morph
, writer-cps-mtl
, writer-cps-transformers
}:
mkDerivation {

pname = "writer-cps-full";
version = "0.1.0.0";
sha256 = "ba51df5149470be6d70fd179f2af4cae30824a3a63528f1549a97f57610a5e95";
libraryHaskellDepends = [
base
writer-cps-lens
writer-cps-morph
writer-cps-mtl
writer-cps-transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/writer-cps-full#readme";
description = "WriteT and RWST monad transformers (Reexport with all dependencies)";
license = stdenv.lib.licenses.bsd3;

}) {};
"writer-cps-lens" = callPackage
({
  mkDerivation
, base
, lens
, profunctors
, stdenv
, transformers
, writer-cps-mtl
, writer-cps-transformers
}:
mkDerivation {

pname = "writer-cps-lens";
version = "0.1.0.0";
sha256 = "23daa611fc16cddc8b8df3436818870c34ec87795b960b3cea2a3e3c408e3448";
libraryHaskellDepends = [
base
lens
profunctors
transformers
writer-cps-mtl
writer-cps-transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/writer-cps-lens#readme";
description = "Lens instances for the stricter CPS WriterT and RWST";
license = stdenv.lib.licenses.bsd3;

}) {};
"writer-cps-morph" = callPackage
({
  mkDerivation
, base
, mmorph
, stdenv
, writer-cps-transformers
}:
mkDerivation {

pname = "writer-cps-morph";
version = "0.1.0.1";
sha256 = "bd685fa9dec074ef7d0f545f95eaf20bd0b600d2fb067f3dcfdc3a3b0e678cee";
revision = "1";
editedCabalFile = "0xrvnnrqmk7f50xqfrvcf72zm7wa0jmv51bl4f1d2lqanwbb48bg";
libraryHaskellDepends = [
base
mmorph
writer-cps-transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/writer-cps-morph#readme";
description = "MFunctor instance for CPS style WriterT and RWST";
license = stdenv.lib.licenses.bsd3;

}) {};
"writer-cps-mtl" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
, writer-cps-transformers
}:
mkDerivation {

pname = "writer-cps-mtl";
version = "0.1.1.2";
sha256 = "55d14bfe21dad79b4254c188b5b3f30144d741a821bfb024e38c798dbf7c5f61";
libraryHaskellDepends = [
base
mtl
transformers
writer-cps-transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/writer-cps-mtl#readme";
description = "MonadWriter orphan instances for writer-cps-transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"writer-cps-transformers" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "writer-cps-transformers";
version = "0.1.1.2";
sha256 = "3c82d9a2157da42229b9f7eaa476d26ce9ce2f3910efe8afc603e07fa4da348a";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/writer-cps-transformers#readme";
description = "WriteT and RWST monad transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"wuss" = callPackage
({
  mkDerivation
, base
, bytestring
, connection
, network
, stdenv
, websockets
}:
mkDerivation {

pname = "wuss";
version = "1.1.3";
sha256 = "691f03173df3b9af98760f27597318e3d028bef2d65ed58ea9e1fabf11bec8b0";
libraryHaskellDepends = [
base
bytestring
connection
network
websockets
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/wuss#readme";
description = "Secure WebSocket (WSS) clients";
license = stdenv.lib.licenses.mit;

}) {};
"x509" = callPackage
({
  mkDerivation
, asn1-encoding
, asn1-parse
, asn1-types
, base
, bytestring
, containers
, cryptonite
, hourglass
, memory
, mtl
, pem
, stdenv
}:
mkDerivation {

pname = "x509";
version = "1.6.5";
sha256 = "b53894214e23ab2795f2a9f4c885e37b35a223bbc03763b0017ce06dc8394783";
revision = "1";
editedCabalFile = "1rkwwkglxpr6ckxxwcj1pp8cfd83gxkdyvshdlb26fyhi49gslj3";
libraryHaskellDepends = [
asn1-encoding
asn1-parse
asn1-types
base
bytestring
containers
cryptonite
hourglass
memory
mtl
pem
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-certificate";
description = "X509 reader and writer";
license = stdenv.lib.licenses.bsd3;

}) {};
"x509-store" = callPackage
({
  mkDerivation
, asn1-encoding
, asn1-types
, base
, bytestring
, containers
, cryptonite
, directory
, filepath
, mtl
, pem
, stdenv
, x509
}:
mkDerivation {

pname = "x509-store";
version = "1.6.2";
sha256 = "49fd261c7e55a45fd357931a6d9f81e22f242e6047304d3e2662e43db94d807b";
libraryHaskellDepends = [
asn1-encoding
asn1-types
base
bytestring
containers
cryptonite
directory
filepath
mtl
pem
x509
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-certificate";
description = "X.509 collection accessing and storing methods";
license = stdenv.lib.licenses.bsd3;

}) {};
"x509-system" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, filepath
, mtl
, pem
, process
, stdenv
, x509
, x509-store
}:
mkDerivation {

pname = "x509-system";
version = "1.6.4";
sha256 = "d98ef028855ad73a872ed86026f205aba383378bf1e63462c5d3e4733b60ff4c";
libraryHaskellDepends = [
base
bytestring
containers
directory
filepath
mtl
pem
process
x509
x509-store
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-certificate";
description = "Handle per-operating-system X.509 accessors and storage";
license = stdenv.lib.licenses.bsd3;

}) {};
"x509-validation" = callPackage
({
  mkDerivation
, asn1-encoding
, asn1-types
, base
, byteable
, bytestring
, containers
, cryptonite
, data-default-class
, hourglass
, memory
, mtl
, pem
, stdenv
, x509
, x509-store
}:
mkDerivation {

pname = "x509-validation";
version = "1.6.5";
sha256 = "d1f73197677b6d19795fc80e4a1fa93e810d567ee4e3edc74e841b3eb20e1ca4";
libraryHaskellDepends = [
asn1-encoding
asn1-types
base
byteable
bytestring
containers
cryptonite
data-default-class
hourglass
memory
mtl
pem
x509
x509-store
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-certificate";
description = "X.509 Certificate and CRL validation";
license = stdenv.lib.licenses.bsd3;

}) {};
"xdcc" = callPackage
({
  mkDerivation
, ascii-progress
, async
, base
, bytestring
, case-insensitive
, concurrent-output
, errors
, iproute
, irc-client
, irc-dcc
, monad-control
, network
, optparse-applicative
, path
, random
, safe-exceptions
, signal
, stdenv
, stm
, text
, transformers
, transformers-base
, unix-compat
}:
mkDerivation {

pname = "xdcc";
version = "1.1.3";
sha256 = "b34b1b10c8fc92347b0713b5b2d1ebb7450984fd7dd284d8501c291e016db49e";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
ascii-progress
async
base
bytestring
case-insensitive
concurrent-output
errors
iproute
irc-client
irc-dcc
monad-control
network
optparse-applicative
path
random
safe-exceptions
signal
stm
text
transformers
transformers-base
unix-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/JanGe/xdcc";
description = "A wget-like utility for retrieving files from XDCC bots on IRC";
license = stdenv.lib.licenses.mit;

}) {};
"xdg-basedir" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
}:
mkDerivation {

pname = "xdg-basedir";
version = "0.2.2";
sha256 = "e461c3a5c6007c55ceaea03be3be0ef3a92aa0ea1aea936da0c43671bbfaf42b";
libraryHaskellDepends = [
base
directory
filepath
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/willdonnelly/xdg-basedir";
description = "A basic implementation of the XDG Base Directory specification";
license = stdenv.lib.licenses.bsd3;

}) {};
"xenstore" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, mtl
, network
, stdenv
}:
mkDerivation {

pname = "xenstore";
version = "0.1.1";
sha256 = "c2b538c9ce6716f4a1b4c0cb63ed5c6e5ee3e69e80dbb7826ee7f5392f45e874";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
cereal
mtl
network
];
doHaddock = false;
doCheck = false;
description = "Xenstore client access";
license = stdenv.lib.licenses.bsd3;

}) {};
"xhtml" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "xhtml";
version = "3000.2.1";
sha256 = "33020782170c1c083bc59fc3bfcb72cec2db223e02d1181c07ae23b9fa7fdcd8";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell/xhtml";
description = "An XHTML combinator library";
license = stdenv.lib.licenses.bsd3;

}) {};
"xlsior" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-markup
, bytestring
, conduit
, conduit-extra
, data-default
, exceptions
, mtl
, resourcet
, scientific
, stdenv
, text
, time
, time-locale-compat
, vector
, xml-conduit
, xml-types
, zip-archive
}:
mkDerivation {

pname = "xlsior";
version = "0.1.0.1";
sha256 = "f34d6bf6c5d35f9be46c9a1ea974befdb4f193a966c35052603b6bc1661b6b36";
libraryHaskellDepends = [
attoparsec
base
blaze-markup
bytestring
conduit
conduit-extra
data-default
exceptions
mtl
resourcet
scientific
text
time
time-locale-compat
vector
xml-conduit
xml-types
zip-archive
];
doHaddock = false;
doCheck = false;
description = "Streaming Excel file generation and parsing";
license = stdenv.lib.licenses.mit;

}) {};
"xlsx" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, binary-search
, bytestring
, conduit
, containers
, data-default
, errors
, extra
, filepath
, lens
, mtl
, mtl-compat
, network-uri
, old-locale
, safe
, stdenv
, text
, time
, transformers
, vector
, xml-conduit
, zip-archive
, zlib
}:
mkDerivation {

pname = "xlsx";
version = "0.4.3";
sha256 = "1862f1a68be3d4d8619c60d858355aa9c1ad535b79845c359686ab5f1e0699a0";
libraryHaskellDepends = [
base
base64-bytestring
binary-search
bytestring
conduit
containers
data-default
errors
extra
filepath
lens
mtl
mtl-compat
network-uri
old-locale
safe
text
time
transformers
vector
xml-conduit
zip-archive
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/qrilka/xlsx";
description = "Simple and incomplete Excel file parser/writer";
license = stdenv.lib.licenses.mit;

}) {};
"xlsx-tabular" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, data-default
, lens
, stdenv
, text
, xlsx
}:
mkDerivation {

pname = "xlsx-tabular";
version = "0.2.2";
sha256 = "d4d95c3f6ead3af2185f22d7bd1ab0f0fb972864553f1edde6eb2fbb4ef75556";
libraryHaskellDepends = [
aeson
base
bytestring
containers
data-default
lens
text
xlsx
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kkazuo/xlsx-tabular";
description = "Xlsx table cell value extraction utility";
license = stdenv.lib.licenses.bsd3;

}) {};
"xml" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "xml";
version = "1.3.14";
sha256 = "32d1a1a9f21a59176d84697f96ae3a13a0198420e3e4f1c48abbab7d2425013d";
libraryHaskellDepends = [
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://code.galois.com";
description = "A simple XML library";
license = stdenv.lib.licenses.bsd3;

}) {};
"xml-conduit" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-builder
, blaze-html
, blaze-markup
, bytestring
, conduit
, conduit-extra
, containers
, data-default
, deepseq
, monad-control
, resourcet
, stdenv
, text
, transformers
, xml-types
}:
mkDerivation {

pname = "xml-conduit";
version = "1.4.0.4";
sha256 = "11058279d3f75a71b5731d26fc490f86fc1b7cc461053cd54aedde8f152d52fc";
libraryHaskellDepends = [
attoparsec
base
blaze-builder
blaze-html
blaze-markup
bytestring
conduit
conduit-extra
containers
data-default
deepseq
monad-control
resourcet
text
transformers
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/xml";
description = "Pure-Haskell utilities for dealing with XML with the conduit package";
license = stdenv.lib.licenses.mit;

}) {};
"xml-conduit-parse" = callPackage
({
  mkDerivation
, base
, conduit
, conduit-parse
, containers
, exceptions
, parsers
, stdenv
, text
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "xml-conduit-parse";
version = "0.3.1.0";
sha256 = "62a8aacdd03e216cc1f89882205b933016c0aebe2ed3e113a966c5956ec572d5";
libraryHaskellDepends = [
base
conduit
conduit-parse
containers
exceptions
parsers
text
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/k0ral/xml-conduit-parse";
description = "Streaming XML parser based on conduits";
license = "unknown";

}) {};
"xml-conduit-writer" = callPackage
({
  mkDerivation
, base
, containers
, dlist
, mtl
, stdenv
, text
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "xml-conduit-writer";
version = "0.1.1.1";
sha256 = "4b547cdc629a583f0231bed45d568f12eb0244fdaeb904c11eeb0d9365c771c5";
libraryHaskellDepends = [
base
containers
dlist
mtl
text
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/dpwiz/xml-conduit-writer";
description = "Warm and fuzzy creation of XML documents";
license = stdenv.lib.licenses.mit;

}) {};
"xml-hamlet" = callPackage
({
  mkDerivation
, base
, containers
, parsec
, shakespeare
, stdenv
, template-haskell
, text
, xml-conduit
}:
mkDerivation {

pname = "xml-hamlet";
version = "0.4.1";
sha256 = "7df390f59599a0b16831c3f2cbb13ad0bebb92faa4a350fc6ae613bfba4ec2bb";
revision = "2";
editedCabalFile = "1qlhn3lir1b534mqwxvx5ndnmn4h4qvmd809zapadx8s1q0i0f53";
libraryHaskellDepends = [
base
containers
parsec
shakespeare
template-haskell
text
xml-conduit
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Hamlet-style quasiquoter for XML content";
license = stdenv.lib.licenses.bsd3;

}) {};
"xml-html-qq" = callPackage
({
  mkDerivation
, base
, blaze-markup
, conduit
, data-default
, from-sum
, heterocephalus
, html-conduit
, resourcet
, stdenv
, template-haskell
, text
, th-lift
, th-lift-instances
, xml-conduit
}:
mkDerivation {

pname = "xml-html-qq";
version = "0.1.0.1";
sha256 = "1a2ebb1f4ca58a4f442c470db6d3271e6b1069d41860f8683b5da9082329235a";
libraryHaskellDepends = [
base
blaze-markup
conduit
data-default
from-sum
heterocephalus
html-conduit
resourcet
template-haskell
text
th-lift
th-lift-instances
xml-conduit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/xml-html-qq";
description = "Quasi-quoters for XML and HTML Documents";
license = stdenv.lib.licenses.bsd3;

}) {};
"xml-lens" = callPackage
({
  mkDerivation
, base
, case-insensitive
, containers
, lens
, stdenv
, text
, xml-conduit
}:
mkDerivation {

pname = "xml-lens";
version = "0.1.6.3";
sha256 = "4dd7f1a91fbb12ae52d5a14badd9f38c0f0d7556f08ee77d79a67cc546dcb1e8";
revision = "1";
editedCabalFile = "1fbk4wv7zr10wsh8a0svd799im64fybnlb09rjpfl2pvb6i6h1qs";
libraryHaskellDepends = [
base
case-insensitive
containers
lens
text
xml-conduit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fumieval/xml-lens";
description = "Lenses, traversals, and prisms for xml-conduit";
license = stdenv.lib.licenses.bsd3;

}) {};
"xml-picklers" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, text
, xml-types
}:
mkDerivation {

pname = "xml-picklers";
version = "0.3.6";
sha256 = "d1b802cd9543a228c6699928e6695539c28f6cbd8e7859a65ca874543ef1d1a4";
libraryHaskellDepends = [
base
containers
text
xml-types
];
doHaddock = false;
doCheck = false;
description = "XML picklers based on xml-types, ported from hexpat-pickle";
license = stdenv.lib.licenses.bsd3;

}) {};
"xml-to-json-fast" = callPackage
({
  mkDerivation
, base
, directory
, process
, stdenv
, tagsoup
, text
}:
mkDerivation {

pname = "xml-to-json-fast";
version = "2.0.0";
sha256 = "dd852fe1aa54db3c6d87a2e74b5345b0f14effdd49bad5b73d79571e1b47563f";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
tagsoup
text
];
executableHaskellDepends = [
base
directory
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sinelaw/xml-to-json-fast";
description = "Fast, light converter of xml to json capable of handling huge xml files";
license = stdenv.lib.licenses.mit;

}) {};
"xml-types" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
, text
}:
mkDerivation {

pname = "xml-types";
version = "0.3.6";
sha256 = "9937d440072552c03c6d8ad79f61e61467dc28dcd5adeaad81038b9b94eef8c9";
libraryHaskellDepends = [
base
deepseq
text
];
doHaddock = false;
doCheck = false;
homepage = "https://john-millikin.com/software/haskell-xml/";
description = "Basic types for representing XML";
license = stdenv.lib.licenses.mit;

}) {};
"xmlgen" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, containers
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "xmlgen";
version = "0.6.2.1";
sha256 = "9027a17e7ae648997a0e8279d7c01aa6615adda8b93f753b907a01dd797abae6";
libraryHaskellDepends = [
base
blaze-builder
bytestring
containers
mtl
text
];
doHaddock = false;
doCheck = false;
description = "Fast XML generation library";
license = stdenv.lib.licenses.bsd3;

}) {};
"xmlhtml" = callPackage
({
  mkDerivation
, base
, blaze-builder
, blaze-html
, blaze-markup
, bytestring
, containers
, parsec
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "xmlhtml";
version = "0.2.3.5";
sha256 = "e333a1c7afd5068b60b143457fea7325a34408cc65b3ac55f5b342eb0274b06d";
revision = "4";
editedCabalFile = "073a98mmczjb80bjblzwcybnidchj9vgivcj6b5rdvh584iwbhz2";
libraryHaskellDepends = [
base
blaze-builder
blaze-html
blaze-markup
bytestring
containers
parsec
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snapframework/xmlhtml";
description = "XML parser and renderer with HTML 5 quirks mode";
license = stdenv.lib.licenses.bsd3;

}) {};
"xmonad" = callPackage
({
  mkDerivation
, base
, containers
, data-default
, directory
, extensible-exceptions
, filepath
, mtl
, process
, setlocale
, stdenv
, unix
, utf8-string
, X11
}:
mkDerivation {

pname = "xmonad";
version = "0.13";
sha256 = "f9f81b63569f18c777a939741024ec3ae34e4ec84015e5cc50f6622034a303ca";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
containers
data-default
directory
extensible-exceptions
filepath
mtl
process
setlocale
unix
utf8-string
X11
];
executableHaskellDepends = [
base
mtl
unix
X11
];
doHaddock = false;
doCheck = false;
postInstall = ''
  shopt -s globstar
  mkdir -p $doc/share/man/man1
  mv "$data/"**"/man/"*[0-9] $doc/share/man/man1/
  rm "$data/"**"/man/"*
'';
homepage = "http://xmonad.org";
description = "A tiling window manager";
license = stdenv.lib.licenses.bsd3;

}) {};
"xss-sanitize" = callPackage
({
  mkDerivation
, attoparsec
, base
, containers
, css-text
, network-uri
, stdenv
, tagsoup
, text
, utf8-string
}:
mkDerivation {

pname = "xss-sanitize";
version = "0.3.5.7";
sha256 = "955856413e70375c794766d04ac9ab7f0d3337dbb04a412c9b7ff5c415acac00";
libraryHaskellDepends = [
attoparsec
base
containers
css-text
network-uri
tagsoup
text
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yesodweb/haskell-xss-sanitize";
description = "sanitize untrusted HTML to prevent XSS attacks";
license = stdenv.lib.licenses.bsd2;

}) {};
"yackage" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-builder
, blaze-html
, bytestring
, Cabal
, cmdargs
, conduit
, containers
, directory
, http-conduit
, http-types
, shakespeare
, stdenv
, tar
, text
, transformers
, unordered-containers
, vector
, wai
, warp
, yaml
, yesod-core
, yesod-form
, zlib
}:
mkDerivation {

pname = "yackage";
version = "0.8.1";
sha256 = "1d48064cbfd2c51f4fd33a6289c9efe1c8d49f063d850a9dd7ae3a226136cae5";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
aeson
base
blaze-builder
blaze-html
bytestring
Cabal
cmdargs
conduit
containers
directory
http-conduit
http-types
shakespeare
tar
text
transformers
unordered-containers
vector
wai
warp
yaml
yesod-core
yesod-form
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/yackage";
description = "Personal Hackage replacement for testing new packages";
license = stdenv.lib.licenses.bsd3;

}) {};
"yahoo-finance-api" = callPackage
({
  mkDerivation
, aeson
, base
, either
, http-api-data
, http-client
, mtl
, servant
, servant-client
, stdenv
, text
, time
, transformers
, vector
}:
mkDerivation {

pname = "yahoo-finance-api";
version = "0.2.0.1";
sha256 = "329eea56d8a285877164e82110a3376a6b604fff2198d387def727d06979e496";
libraryHaskellDepends = [
aeson
base
either
http-api-data
http-client
mtl
servant
servant-client
text
time
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/yahoo-finance-api";
description = "Read quotes from Yahoo Finance API";
license = stdenv.lib.licenses.bsd3;

}) {};
"yaml" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, conduit
, containers
, directory
, enclosed-exceptions
, filepath
, libyaml
, resourcet
, scientific
, semigroups
, stdenv
, template-haskell
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "yaml";
version = "0.8.21.2";
sha256 = "441cf712cd20ac6b0ded900562ca33770c8752702963ab267bff72b0657fef29";
configureFlags = [
"-fsystem-libyaml"
];
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
conduit
containers
directory
enclosed-exceptions
filepath
resourcet
scientific
semigroups
template-haskell
text
transformers
unordered-containers
vector
];
libraryPkgconfigDepends = [
libyaml
];
executableHaskellDepends = [
aeson
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/yaml/";
description = "Support for parsing and rendering YAML documents";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) libyaml;};
"yes-precure5-command" = callPackage
({
  mkDerivation
, base
, Cabal
, containers
, mtl
, parsec
, random
, stdenv
}:
mkDerivation {

pname = "yes-precure5-command";
version = "5.5.3";
sha256 = "27f2f2dcd81923a18450cda21a31585d0d3887afde504190667cb7dbf0a0af7e";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
Cabal
containers
mtl
parsec
random
];
executableHaskellDepends = [
base
Cabal
containers
mtl
parsec
random
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/igrep/yes-precure5-command/";
description = "Extended yes command to reproduce phrases in Yes! Precure 5";
license = stdenv.lib.licenses.mit;

}) {};
"yesod" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-html
, blaze-markup
, bytestring
, conduit
, conduit-extra
, data-default-class
, directory
, fast-logger
, monad-control
, monad-logger
, resourcet
, semigroups
, shakespeare
, stdenv
, streaming-commons
, template-haskell
, text
, transformers
, unix
, unordered-containers
, wai
, wai-extra
, wai-logger
, warp
, yaml
, yesod-core
, yesod-form
, yesod-persistent
}:
mkDerivation {

pname = "yesod";
version = "1.4.4";
sha256 = "5f2caade2435754ff35060c3ae58390ad87650b975e83a65f8013e80ea7bea2c";
libraryHaskellDepends = [
aeson
base
blaze-html
blaze-markup
bytestring
conduit
conduit-extra
data-default-class
directory
fast-logger
monad-control
monad-logger
resourcet
semigroups
shakespeare
streaming-commons
template-haskell
text
transformers
unix
unordered-containers
wai
wai-extra
wai-logger
warp
yaml
yesod-core
yesod-form
yesod-persistent
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Creation of type-safe, RESTful web applications";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-auth" = callPackage
({
  mkDerivation
, aeson
, authenticate
, base
, base16-bytestring
, base64-bytestring
, binary
, blaze-builder
, blaze-html
, blaze-markup
, byteable
, bytestring
, conduit
, conduit-extra
, containers
, cryptohash
, data-default
, email-validate
, file-embed
, http-client
, http-conduit
, http-types
, lifted-base
, mime-mail
, network-uri
, nonce
, persistent
, persistent-template
, random
, resourcet
, safe
, shakespeare
, stdenv
, template-haskell
, text
, time
, transformers
, unordered-containers
, wai
, yesod-core
, yesod-form
, yesod-persistent
}:
mkDerivation {

pname = "yesod-auth";
version = "1.4.16";
sha256 = "a2c76409522ac276b92d31e13ffa94ae51194ffdb902a41f979d25181a5182d2";
libraryHaskellDepends = [
aeson
authenticate
base
base16-bytestring
base64-bytestring
binary
blaze-builder
blaze-html
blaze-markup
byteable
bytestring
conduit
conduit-extra
containers
cryptohash
data-default
email-validate
file-embed
http-client
http-conduit
http-types
lifted-base
mime-mail
network-uri
nonce
persistent
persistent-template
random
resourcet
safe
shakespeare
template-haskell
text
time
transformers
unordered-containers
wai
yesod-core
yesod-form
yesod-persistent
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Authentication for Yesod";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-auth-account" = callPackage
({
  mkDerivation
, base
, blaze-html
, bytestring
, mtl
, nonce
, persistent
, pwstore-fast
, stdenv
, text
, yesod-auth
, yesod-core
, yesod-form
, yesod-persistent
}:
mkDerivation {

pname = "yesod-auth-account";
version = "1.4.3";
sha256 = "e9f077d58d64023b80d6ff502933e8dfc6832c95afbdabce3124dddc918664af";
libraryHaskellDepends = [
base
blaze-html
bytestring
mtl
nonce
persistent
pwstore-fast
text
yesod-auth
yesod-core
yesod-form
yesod-persistent
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/wuzzeb/yesod-auth-account";
description = "An account authentication plugin for Yesod";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-auth-basic" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, exceptions
, stdenv
, text
, wai
, word8
, yesod
}:
mkDerivation {

pname = "yesod-auth-basic";
version = "0.1.0.2";
sha256 = "aaaf330bc05b86ddd53cf092d48df1279e4bea47f67cbc6a8b67f1308ef39b2c";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
exceptions
text
wai
word8
yesod
];
doHaddock = false;
doCheck = false;
description = "Yesod Middleware for HTTP Basic Authentication";
license = stdenv.lib.licenses.bsd3;

}) {};
"yesod-auth-hashdb" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, persistent
, pwstore-fast
, stdenv
, text
, yesod-auth
, yesod-core
, yesod-form
, yesod-persistent
}:
mkDerivation {

pname = "yesod-auth-hashdb";
version = "1.6.0.1";
sha256 = "8fe73fb7e4301e02e69cac312227078fd01927c8a006224f7e3fd8a93aa9cb75";
libraryHaskellDepends = [
aeson
base
bytestring
persistent
pwstore-fast
text
yesod-auth
yesod-core
yesod-form
yesod-persistent
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/paul-rouse/yesod-auth-hashdb";
description = "Authentication plugin for Yesod";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-bin" = callPackage
({
  mkDerivation
, async
, attoparsec
, base
, base64-bytestring
, blaze-builder
, bytestring
, Cabal
, conduit
, conduit-extra
, containers
, data-default-class
, deepseq
, directory
, file-embed
, filepath
, fsnotify
, http-client
, http-client-tls
, http-reverse-proxy
, http-types
, lifted-base
, network
, optparse-applicative
, parsec
, process
, project-template
, resourcet
, safe-exceptions
, say
, shakespeare
, split
, stdenv
, stm
, streaming-commons
, tar
, template-haskell
, text
, time
, transformers
, transformers-compat
, typed-process
, unix-compat
, unordered-containers
, wai
, wai-extra
, warp
, warp-tls
, yaml
, zlib
}:
mkDerivation {

pname = "yesod-bin";
version = "1.5.1";
sha256 = "034114dade5a23ec39ffeb9f78a04b7bd9fc0b8942b1a11118475e4c594863cd";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
async
attoparsec
base
base64-bytestring
blaze-builder
bytestring
Cabal
conduit
conduit-extra
containers
data-default-class
deepseq
directory
file-embed
filepath
fsnotify
http-client
http-client-tls
http-reverse-proxy
http-types
lifted-base
network
optparse-applicative
parsec
process
project-template
resourcet
safe-exceptions
say
shakespeare
split
stm
streaming-commons
tar
template-haskell
text
time
transformers
transformers-compat
typed-process
unix-compat
unordered-containers
wai
wai-extra
warp
warp-tls
yaml
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "The yesod helper executable";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-core" = callPackage
({
  mkDerivation
, aeson
, auto-update
, base
, blaze-builder
, blaze-html
, blaze-markup
, byteable
, bytestring
, case-insensitive
, cereal
, clientsession
, conduit
, conduit-extra
, containers
, cookie
, data-default
, deepseq
, deepseq-generics
, directory
, exceptions
, fast-logger
, http-types
, lifted-base
, monad-control
, monad-logger
, mtl
, mwc-random
, old-locale
, parsec
, path-pieces
, primitive
, random
, resourcet
, safe
, semigroups
, shakespeare
, stdenv
, template-haskell
, text
, time
, transformers
, transformers-base
, unix-compat
, unordered-containers
, vector
, wai
, wai-extra
, wai-logger
, warp
, word8
}:
mkDerivation {

pname = "yesod-core";
version = "1.4.31";
sha256 = "9a2e4c39c9ce66c2881d5da6c9a621c07492c950d935231aa7e12ed3a008d7af";
revision = "2";
editedCabalFile = "1pqhmg963nwkqn3c37g45qlizslsfps3ywzk9h2vpw03bv0gaaf9";
libraryHaskellDepends = [
aeson
auto-update
base
blaze-builder
blaze-html
blaze-markup
byteable
bytestring
case-insensitive
cereal
clientsession
conduit
conduit-extra
containers
cookie
data-default
deepseq
deepseq-generics
directory
exceptions
fast-logger
http-types
lifted-base
monad-control
monad-logger
mtl
mwc-random
old-locale
parsec
path-pieces
primitive
random
resourcet
safe
semigroups
shakespeare
template-haskell
text
time
transformers
transformers-base
unix-compat
unordered-containers
vector
wai
wai-extra
wai-logger
warp
word8
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Creation of type-safe, RESTful web applications";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-eventsource" = callPackage
({
  mkDerivation
, base
, blaze-builder
, conduit
, stdenv
, transformers
, wai
, wai-eventsource
, wai-extra
, yesod-core
}:
mkDerivation {

pname = "yesod-eventsource";
version = "1.4.0.1";
sha256 = "a5ec061ca8c426c4a8179bace45edd8100de96c947b8294445aae890dd175d48";
libraryHaskellDepends = [
base
blaze-builder
conduit
transformers
wai
wai-eventsource
wai-extra
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Server-sent events support for Yesod apps";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-fay" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, data-default
, directory
, fay
, fay-dom
, filepath
, monad-loops
, process
, pureMD5
, shakespeare
, stdenv
, template-haskell
, text
, transformers
, utf8-string
, yesod-core
, yesod-form
, yesod-static
}:
mkDerivation {

pname = "yesod-fay";
version = "0.8.0";
sha256 = "ee2113c9fe5c04a8d4a855fad7584ba1a4a0311a2755f8705ff6354e7808dd46";
libraryHaskellDepends = [
aeson
base
bytestring
data-default
directory
fay
fay-dom
filepath
monad-loops
process
pureMD5
shakespeare
template-haskell
text
transformers
utf8-string
yesod-core
yesod-form
yesod-static
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/yesod-fay";
description = "Utilities for using the Fay Haskell-to-JS compiler with Yesod";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-form" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, blaze-builder
, blaze-html
, blaze-markup
, byteable
, bytestring
, containers
, data-default
, email-validate
, network-uri
, persistent
, resourcet
, semigroups
, shakespeare
, stdenv
, template-haskell
, text
, time
, transformers
, wai
, xss-sanitize
, yesod-core
, yesod-persistent
}:
mkDerivation {

pname = "yesod-form";
version = "1.4.10";
sha256 = "ddeb72988e1dffb1c3766c35941520aa6ff6a8b09d6bdeb453d9c75d11ad8e43";
libraryHaskellDepends = [
aeson
attoparsec
base
blaze-builder
blaze-html
blaze-markup
byteable
bytestring
containers
data-default
email-validate
network-uri
persistent
resourcet
semigroups
shakespeare
template-haskell
text
time
transformers
wai
xss-sanitize
yesod-core
yesod-persistent
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Form handling support for Yesod Web Framework";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-form-richtext" = callPackage
({
  mkDerivation
, base
, blaze-builder
, blaze-html
, shakespeare
, stdenv
, text
, xss-sanitize
, yesod-core
, yesod-form
}:
mkDerivation {

pname = "yesod-form-richtext";
version = "0.1.0.0";
sha256 = "b404fed16d56aac153e2f7a6c512f1b02653edb77bfea7e5331eac08ac6c11d1";
libraryHaskellDepends = [
base
blaze-builder
blaze-html
shakespeare
text
xss-sanitize
yesod-core
yesod-form
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/geraldus/yesod-form-richtext#readme";
description = "Various rich-text WYSIWYG editors for Yesod forms";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-gitrepo" = callPackage
({
  mkDerivation
, base
, directory
, enclosed-exceptions
, http-types
, lifted-base
, process
, stdenv
, temporary
, text
, wai
, yesod-core
}:
mkDerivation {

pname = "yesod-gitrepo";
version = "0.2.1.0";
sha256 = "6e6e0f37771f888c687bbc2dff24228ea0461829de8c1b714da10dbe9f6987ec";
libraryHaskellDepends = [
base
directory
enclosed-exceptions
http-types
lifted-base
process
temporary
text
wai
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/yesod-gitrepo";
description = "Host content provided by a Git repo";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-gitrev" = callPackage
({
  mkDerivation
, aeson
, base
, gitrev
, stdenv
, template-haskell
, yesod-core
}:
mkDerivation {

pname = "yesod-gitrev";
version = "0.1.0.0";
sha256 = "30e63c0ea5aec72eed0cd1d9e4dccf242e749c9740e5d67887cac02728628f49";
revision = "1";
editedCabalFile = "1lqvqkkar50zlgyxgq10c55y6zz2v4ip3g79i5fqflik3s681200";
libraryHaskellDepends = [
aeson
base
gitrev
template-haskell
yesod-core
];
doHaddock = false;
doCheck = false;
description = "A subsite for displaying git information";
license = stdenv.lib.licenses.bsd3;

}) {};
"yesod-newsfeed" = callPackage
({
  mkDerivation
, base
, blaze-html
, blaze-markup
, bytestring
, containers
, shakespeare
, stdenv
, text
, time
, xml-conduit
, yesod-core
}:
mkDerivation {

pname = "yesod-newsfeed";
version = "1.6";
sha256 = "4e6dbc06002fe7fd13701941c036c51cf9407c35b28473ed509424bfc0b67516";
libraryHaskellDepends = [
base
blaze-html
blaze-markup
bytestring
containers
shakespeare
text
time
xml-conduit
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Helper functions and data types for producing News feeds";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-persistent" = callPackage
({
  mkDerivation
, base
, blaze-builder
, conduit
, persistent
, persistent-template
, resource-pool
, resourcet
, stdenv
, transformers
, yesod-core
}:
mkDerivation {

pname = "yesod-persistent";
version = "1.4.1.1";
sha256 = "dffd2604fc37a6b518c06391c44059df96895e3b484d4de8fbff9ff0869e7551";
libraryHaskellDepends = [
base
blaze-builder
conduit
persistent
persistent-template
resource-pool
resourcet
transformers
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Some helpers for using Persistent from Yesod";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-sitemap" = callPackage
({
  mkDerivation
, base
, conduit
, containers
, data-default
, stdenv
, text
, time
, xml-conduit
, xml-types
, yesod-core
}:
mkDerivation {

pname = "yesod-sitemap";
version = "1.4.0.1";
sha256 = "008449fd90899f1988f32a1341f5be87a73cb6b0e100494525f659e9473e2666";
libraryHaskellDepends = [
base
conduit
containers
data-default
text
time
xml-conduit
xml-types
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Generate XML sitemaps";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-static" = callPackage
({
  mkDerivation
, async
, attoparsec
, base
, base64-bytestring
, blaze-builder
, byteable
, bytestring
, conduit
, conduit-extra
, containers
, cryptohash
, cryptohash-conduit
, css-text
, data-default
, directory
, exceptions
, file-embed
, filepath
, hashable
, hjsmin
, http-types
, mime-types
, old-time
, process
, resourcet
, stdenv
, template-haskell
, text
, transformers
, unix-compat
, unordered-containers
, wai
, wai-app-static
, yesod-core
}:
mkDerivation {

pname = "yesod-static";
version = "1.5.1.1";
sha256 = "cdb50763c4cbd2b8fcdb2b9f2f2526648e82454c62d49bfd6d165af80a192a92";
libraryHaskellDepends = [
async
attoparsec
base
base64-bytestring
blaze-builder
byteable
bytestring
conduit
conduit-extra
containers
cryptohash
cryptohash-conduit
css-text
data-default
directory
exceptions
file-embed
filepath
hashable
hjsmin
http-types
mime-types
old-time
process
resourcet
template-haskell
text
transformers
unix-compat
unordered-containers
wai
wai-app-static
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Static file serving subsite for Yesod Web Framework";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-static-angular" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-builder
, blaze-markup
, bytestring
, data-default
, directory
, filepath
, hamlet
, language-javascript
, mime-types
, shakespeare
, stdenv
, template-haskell
, text
, yesod-core
, yesod-static
}:
mkDerivation {

pname = "yesod-static-angular";
version = "0.1.8";
sha256 = "97b3ef260a7e6c70b811cbf3b2b3532a003c5028bd6a0df52fc14bd45ce03beb";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
blaze-builder
blaze-markup
bytestring
data-default
directory
filepath
hamlet
language-javascript
mime-types
shakespeare
template-haskell
text
yesod-core
yesod-static
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/wuzzeb/yesod-static-angular";
description = "Yesod generators for embedding AngularJs code into yesod-static at compile time";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-table" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, contravariant
, semigroups
, stdenv
, text
, yesod-core
}:
mkDerivation {

pname = "yesod-table";
version = "2.0.3";
sha256 = "363a70fe6def770776e1e0e777651c66e4849e4d95e853956a2f2ae1be80189b";
libraryHaskellDepends = [
base
bytestring
containers
contravariant
semigroups
text
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/andrewthad/yesod-table";
description = "HTML tables for Yesod";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-test" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-builder
, blaze-html
, blaze-markup
, bytestring
, case-insensitive
, containers
, cookie
, hspec-core
, html-conduit
, http-types
, HUnit
, monad-control
, network
, persistent
, pretty-show
, stdenv
, text
, time
, transformers
, wai
, wai-extra
, xml-conduit
, xml-types
, yesod-core
}:
mkDerivation {

pname = "yesod-test";
version = "1.5.4.1";
sha256 = "36c08c34d5fef656bb3469194b77b0802c60db4120af0f6dfd2b08f4a9d9659d";
libraryHaskellDepends = [
attoparsec
base
blaze-builder
blaze-html
blaze-markup
bytestring
case-insensitive
containers
cookie
hspec-core
html-conduit
http-types
HUnit
monad-control
network
persistent
pretty-show
text
time
transformers
wai
wai-extra
xml-conduit
xml-types
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com";
description = "integration testing for WAI/Yesod Applications";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-websockets" = callPackage
({
  mkDerivation
, async
, base
, conduit
, enclosed-exceptions
, monad-control
, stdenv
, transformers
, wai
, wai-websockets
, websockets
, yesod-core
}:
mkDerivation {

pname = "yesod-websockets";
version = "0.2.5";
sha256 = "c5f609aea82035a8bd43998f29bb2fc8547f72260dafdc9fdc44a7706975c944";
libraryHaskellDepends = [
async
base
conduit
enclosed-exceptions
monad-control
transformers
wai
wai-websockets
websockets
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/yesod";
description = "WebSockets support for Yesod";
license = stdenv.lib.licenses.mit;

}) {};
"yi-core" = callPackage
({
  mkDerivation
, array
, attoparsec
, base
, binary
, bytestring
, containers
, data-default
, directory
, dlist
, dynamic-state
, dyre
, exceptions
, filepath
, hashable
, Hclip
, ListLike
, microlens-platform
, mtl
, old-locale
, oo-prototypes
, parsec
, pointedlist
, process
, process-extras
, safe
, semigroups
, split
, stdenv
, text
, text-icu
, time
, transformers-base
, unix
, unix-compat
, unordered-containers
, word-trie
, xdg-basedir
, yi-language
, yi-rope
}:
mkDerivation {

pname = "yi-core";
version = "0.13.5";
sha256 = "b84b49f40b7cf9801a3d7fcf0bf11f4e828ecfc7cd20800d8b2f46fd596e8829";
libraryHaskellDepends = [
array
attoparsec
base
binary
bytestring
containers
data-default
directory
dlist
dynamic-state
dyre
exceptions
filepath
hashable
Hclip
ListLike
microlens-platform
mtl
old-locale
oo-prototypes
parsec
pointedlist
process
process-extras
safe
semigroups
split
text
text-icu
time
transformers-base
unix
unix-compat
unordered-containers
word-trie
xdg-basedir
yi-language
yi-rope
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Yi editor core library";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-frontend-vty" = callPackage
({
  mkDerivation
, base
, containers
, data-default
, dlist
, microlens-platform
, pointedlist
, stdenv
, stm
, text
, vty
, yi-core
, yi-language
}:
mkDerivation {

pname = "yi-frontend-vty";
version = "0.13.5";
sha256 = "5be74cdfd2e0ca9d0a8af5895013f8fee86e55e2a6484f66253f761090a137b3";
libraryHaskellDepends = [
base
containers
data-default
dlist
microlens-platform
pointedlist
stm
text
vty
yi-core
yi-language
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Vty frontend for Yi editor";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-fuzzy-open" = callPackage
({
  mkDerivation
, base
, binary
, containers
, data-default
, directory
, filepath
, mtl
, stdenv
, text
, transformers-base
, vector
, yi-core
, yi-language
, yi-rope
}:
mkDerivation {

pname = "yi-fuzzy-open";
version = "0.13.5";
sha256 = "a71c3fd14598bb153cb64d45cfa60c40c4e97e9ed74e422c6fac566330ed9e2d";
libraryHaskellDepends = [
base
binary
containers
data-default
directory
filepath
mtl
text
transformers-base
vector
yi-core
yi-language
yi-rope
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Fuzzy open plugin for yi";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-ireader" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, data-default
, microlens-platform
, stdenv
, text
, yi-core
, yi-language
, yi-rope
}:
mkDerivation {

pname = "yi-ireader";
version = "0.13.5";
sha256 = "0ffe75cb958387aa4512cd07a40a25df4a68d2109b2d5530208ee291e03d7b48";
libraryHaskellDepends = [
base
binary
bytestring
containers
data-default
microlens-platform
text
yi-core
yi-language
yi-rope
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Yi editor incremental reader";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-keymap-cua" = callPackage
({
  mkDerivation
, base
, microlens-platform
, stdenv
, text
, yi-core
, yi-keymap-emacs
, yi-rope
}:
mkDerivation {

pname = "yi-keymap-cua";
version = "0.13.5";
sha256 = "d49e00c8097e23d6626b58e6cfa875f76a3a215524d29bb11fef09f91f4d57c5";
libraryHaskellDepends = [
base
microlens-platform
text
yi-core
yi-keymap-emacs
yi-rope
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Cua keymap for Yi editor";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-keymap-emacs" = callPackage
({
  mkDerivation
, base
, containers
, filepath
, Hclip
, microlens-platform
, mtl
, oo-prototypes
, semigroups
, stdenv
, text
, transformers-base
, yi-core
, yi-language
, yi-misc-modes
, yi-rope
}:
mkDerivation {

pname = "yi-keymap-emacs";
version = "0.13.5";
sha256 = "8019d069cc6f81a5c13b5429fd60db008ec224cc3df55c6384a0067edeeb0416";
libraryHaskellDepends = [
base
containers
filepath
Hclip
microlens-platform
mtl
oo-prototypes
semigroups
text
transformers-base
yi-core
yi-language
yi-misc-modes
yi-rope
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Emacs keymap for Yi editor";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-keymap-vim" = callPackage
({
  mkDerivation
, attoparsec
, base
, binary
, containers
, data-default
, directory
, filepath
, Hclip
, microlens-platform
, mtl
, oo-prototypes
, pointedlist
, safe
, semigroups
, stdenv
, text
, transformers-base
, unordered-containers
, yi-core
, yi-language
, yi-rope
}:
mkDerivation {

pname = "yi-keymap-vim";
version = "0.13.5";
sha256 = "c37a48f0915f4a1584ae684e227102bed334f64ceec851547b2789e645c74907";
libraryHaskellDepends = [
attoparsec
base
binary
containers
data-default
directory
filepath
Hclip
microlens-platform
mtl
oo-prototypes
pointedlist
safe
semigroups
text
transformers-base
unordered-containers
yi-core
yi-language
yi-rope
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Vim keymap for Yi editor";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-language" = callPackage
({
  mkDerivation
, alex
, array
, base
, binary
, containers
, data-default
, hashable
, microlens-platform
, oo-prototypes
, pointedlist
, regex-base
, regex-tdfa
, stdenv
, template-haskell
, transformers-base
, unordered-containers
}:
mkDerivation {

pname = "yi-language";
version = "0.13.5";
sha256 = "d599c10c37cc829dba86c9e35da6d58a6e84c99aaab18a5a8418d4baab22fcfd";
libraryHaskellDepends = [
array
base
binary
containers
data-default
hashable
microlens-platform
oo-prototypes
pointedlist
regex-base
regex-tdfa
template-haskell
transformers-base
unordered-containers
];
libraryToolDepends = [
alex
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Collection of language-related Yi libraries";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-misc-modes" = callPackage
({
  mkDerivation
, alex
, array
, base
, binary
, data-default
, filepath
, microlens-platform
, semigroups
, stdenv
, text
, yi-core
, yi-language
, yi-rope
}:
mkDerivation {

pname = "yi-misc-modes";
version = "0.13.5";
sha256 = "5889c2011813f37d58311a52714c5d8f165e6a0640b7af4752190d9d3db921a9";
libraryHaskellDepends = [
array
base
binary
data-default
filepath
microlens-platform
semigroups
text
yi-core
yi-language
yi-rope
];
libraryToolDepends = [
alex
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Yi editor miscellaneous modes";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-mode-haskell" = callPackage
({
  mkDerivation
, alex
, array
, base
, binary
, data-default
, microlens-platform
, stdenv
, text
, yi-core
, yi-language
, yi-rope
}:
mkDerivation {

pname = "yi-mode-haskell";
version = "0.13.5";
sha256 = "4323b34b6ae45391072300d9ba8350df8237fc5984fa4ad962bcfd20f2046f99";
libraryHaskellDepends = [
array
base
binary
data-default
microlens-platform
text
yi-core
yi-language
yi-rope
];
libraryToolDepends = [
alex
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Yi editor haskell mode";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-mode-javascript" = callPackage
({
  mkDerivation
, alex
, array
, base
, binary
, data-default
, dlist
, filepath
, microlens-platform
, mtl
, stdenv
, text
, yi-core
, yi-language
, yi-rope
}:
mkDerivation {

pname = "yi-mode-javascript";
version = "0.13.5";
sha256 = "156db2b03fb06ce12bb6e17a0b07c7acdac42a29734b714860777e234c86381c";
libraryHaskellDepends = [
array
base
binary
data-default
dlist
filepath
microlens-platform
mtl
text
yi-core
yi-language
yi-rope
];
libraryToolDepends = [
alex
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Yi editor javascript mode";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-rope" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, charsetdetect-ae
, data-default
, deepseq
, fingertree
, stdenv
, text
, text-icu
}:
mkDerivation {

pname = "yi-rope";
version = "0.8";
sha256 = "eacf45e10fe3ee541db2d44e2c5092a530087a84a608eff0f0348bf60f32144e";
libraryHaskellDepends = [
base
binary
bytestring
charsetdetect-ae
data-default
deepseq
fingertree
text
text-icu
];
doHaddock = false;
doCheck = false;
description = "A rope data structure used by Yi";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-snippet" = callPackage
({
  mkDerivation
, base
, binary
, containers
, data-default
, free
, lens
, mtl
, stdenv
, text
, vector
, yi-core
, yi-rope
}:
mkDerivation {

pname = "yi-snippet";
version = "0.13.5";
sha256 = "f3b67c88c01a6c190013870ae7dd371ccc77f619c73247effb9c3e2d36a6ab13";
libraryHaskellDepends = [
base
binary
containers
data-default
free
lens
mtl
text
vector
yi-core
yi-rope
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Snippet support for yi";
license = stdenv.lib.licenses.gpl2;

}) {};
"yjtools" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "yjtools";
version = "0.9.18";
sha256 = "9b121c6fcece8241d87aec737458d49c0b76313e9e5e1e70f72b5f71cfc0eb8f";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://homepage3.nifty.com/salamander/second/projects/yjtools/index.xhtml";
description = "some tools for Monad, List, Tuple and so on";
license = "LGPL";

}) {};
"zero" = callPackage
({
  mkDerivation
, base
, semigroups
, stdenv
}:
mkDerivation {

pname = "zero";
version = "0.1.4";
sha256 = "38cdc62d9673b8b40999de69da2ec60dab7a65fb1c22133ecd54e0a2ec61d5d5";
libraryHaskellDepends = [
base
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phaazon/zero";
description = "Semigroups with absorption";
license = stdenv.lib.licenses.bsd3;

}) {};
"zeromq4-haskell" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, containers
, exceptions
, monad-control
, semigroups
, stdenv
, transformers
, transformers-base
, zeromq
}:
mkDerivation {

pname = "zeromq4-haskell";
version = "0.6.5";
sha256 = "6e99b6cf882269544ce3d613a51b00a259f0aee9fdb13d25d8cb19f96799e7c2";
libraryHaskellDepends = [
async
base
bytestring
containers
exceptions
monad-control
semigroups
transformers
transformers-base
];
libraryPkgconfigDepends = [
zeromq
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/twittner/zeromq-haskell/";
description = "Bindings to ZeroMQ 4.x";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) zeromq;};
"zip" = callPackage
({
  mkDerivation
, base
, bytestring
, bzlib-conduit
, case-insensitive
, cereal
, conduit
, conduit-extra
, containers
, digest
, exceptions
, filepath
, mtl
, path
, path-io
, plan-b
, resourcet
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "zip";
version = "0.1.7";
sha256 = "8b7e4f597e926db852397bb2cbad04d05c718a222702076fbbdfcccb62679c9e";
libraryHaskellDepends = [
base
bytestring
bzlib-conduit
case-insensitive
cereal
conduit
conduit-extra
containers
digest
exceptions
filepath
mtl
path
path-io
plan-b
resourcet
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/zip";
description = "Operations on zip archives";
license = stdenv.lib.licenses.bsd3;

}) {};
"zip-archive" = callPackage
({
  mkDerivation
, array
, base
, binary
, bytestring
, Cabal
, containers
, digest
, directory
, filepath
, mtl
, old-time
, pretty
, stdenv
, text
, time
, unix
, zlib
}:
mkDerivation {

pname = "zip-archive";
version = "0.3.0.5";
sha256 = "dc83366e44d735df4088eb174c02c35a522e6228c04fecc35fe9493299fc97c7";
revision = "2";
editedCabalFile = "1w0vvjrfpnfap8g2jnxq8dsiqmbgkc7qyjb7gsmqbqng2jn9lhjq";
isLibrary = true;
isExecutable = true;
setupHaskellDepends = [
base
Cabal
];
libraryHaskellDepends = [
array
base
binary
bytestring
containers
digest
directory
filepath
mtl
old-time
pretty
text
time
unix
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jgm/zip-archive";
description = "Library for creating and modifying zip archives";
license = stdenv.lib.licenses.bsd3;

}) {};
"zippers" = callPackage
({
  mkDerivation
, base
, lens
, profunctors
, semigroupoids
, stdenv
}:
mkDerivation {

pname = "zippers";
version = "0.2.2";
sha256 = "d9c499cec6f60e0556b9874d2bf3b801b0a022b226a396200d11b91d3a1aede7";
libraryHaskellDepends = [
base
lens
profunctors
semigroupoids
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/zippers/";
description = "Traversal based zippers";
license = stdenv.lib.licenses.bsd3;

}) {};
"zlib" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, zlib
}:
mkDerivation {

pname = "zlib";
version = "0.6.1.2";
sha256 = "e4eb4e636caf07a16a9730ce469a00b65d5748f259f43edd904dd457b198a2bb";
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
zlib
];
doHaddock = false;
doCheck = false;
description = "Compression and decompression in the gzip and zlib formats";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) zlib;};
"zlib-bindings" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, zlib
}:
mkDerivation {

pname = "zlib-bindings";
version = "0.1.1.5";
sha256 = "c83bb438f9b6c5fe860982731eb8ac7eff993e8b56cbc15ef5b471f229f79109";
revision = "2";
editedCabalFile = "0fq49694gqkab8m0vq4i879blswczwd66n7xh4r4gwiahf0ryvqc";
libraryHaskellDepends = [
base
bytestring
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snapframework/zlib-bindings";
description = "Low-level bindings to the zlib package";
license = stdenv.lib.licenses.bsd3;

}) {};
"zlib-lens" = callPackage
({
  mkDerivation
, base
, bytestring
, profunctors
, stdenv
, zlib
}:
mkDerivation {

pname = "zlib-lens";
version = "0.1.2.1";
sha256 = "e5a563453899e0896cfa3aed22a2fbfc67012990ace6d14631f31b704ff766eb";
libraryHaskellDepends = [
base
bytestring
profunctors
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://lens.github.io/";
description = "Lenses for zlib";
license = stdenv.lib.licenses.bsd3;

}) {};
"zot" = callPackage
({
  mkDerivation
, base
, monads-tf
, stdenv
}:
mkDerivation {

pname = "zot";
version = "0.0.3";
sha256 = "c8a9091b939e3f74aca6be3007a0066c8a1de69da4b62e22891bed543f8a2b32";
revision = "1";
editedCabalFile = "04gsbs6fvwpjjg1f6g1j17dxlfzsci9vmirk7mwqwmm9ha0a4hxm";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
base
monads-tf
];
doHaddock = false;
doCheck = false;
description = "Zot language";
license = stdenv.lib.licenses.bsd3;

}) {};
"ztail" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, filepath
, hinotify
, process
, regex-posix
, stdenv
, time
, unix
, unordered-containers
}:
mkDerivation {

pname = "ztail";
version = "1.2";
sha256 = "13b314c992597118de1bfe0b866ef061237910f77bd35fb258e42d21182a3a4f";
revision = "4";
editedCabalFile = "1x8vaflxrmkwqig8wvbbkc761l52y5h45sclnidm5zmwxrv1j3zd";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
array
base
bytestring
filepath
hinotify
process
regex-posix
time
unix
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Multi-file, colored, filtered log tailer";
license = stdenv.lib.licenses.bsd3;

}) {};
    };
in compiler.override {
  initialPackages = stackPackages;
  configurationCommon = { ... }: self: super: {};
  compilerConfig = self: super: {};
}

