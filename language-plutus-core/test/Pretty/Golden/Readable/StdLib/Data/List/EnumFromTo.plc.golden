/\(s :: size) -> \(n : integer s) -> \(m : integer s) -> (/\(a :: *) -> /\(b :: *) -> \(f : (a -> b) -> a -> b) -> (/\(a :: *) -> \(s : (\(a :: *) -> (\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> withSpine (\(spine :: * -> *) -> ifix ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(self :: *) -> self -> a)) a) -> unwrap s s) {a -> b} (wrap ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(self :: *) -> (\(a :: *) -> self -> a) (a -> b))) (\(r :: *) -> r) (\(s : (\(a :: *) -> (\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> withSpine (\(spine :: * -> *) -> ifix ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(self :: *) -> self -> a)) (a -> b)) -> \(x : a) -> f ((/\(a :: *) -> \(s : (\(a :: *) -> (\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> withSpine (\(spine :: * -> *) -> ifix ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(self :: *) -> self -> a)) a) -> unwrap s s) {a -> b} s) x))) {integer s} {(\(a :: *) -> (\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> withSpine (\(spine :: * -> *) -> ifix ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(list :: *) -> all (r :: *). r -> (a -> list -> r) -> r)) (integer s)} (\(rec : integer s -> (\(a :: *) -> (\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> withSpine (\(spine :: * -> *) -> ifix ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(list :: *) -> all (r :: *). r -> (a -> list -> r) -> r)) (integer s)) -> \(n' : integer s) -> (/\(a :: *) -> \(b : all (a :: *). a -> a -> a) -> \(x : (all (a :: *). a -> a) -> a) -> \(y : (all (a :: *). a -> a) -> a) -> b {(all (a :: *). a -> a) -> a} x y (/\(a :: *) -> \(x : a) -> x)) {(\(a :: *) -> (\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> withSpine (\(spine :: * -> *) -> ifix ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(list :: *) -> all (r :: *). r -> (a -> list -> r) -> r)) (integer s)} (greaterThanInteger {s} n' m) (\(u : all (a :: *). a -> a) -> (/\(a :: *) -> wrap ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(list :: *) -> (\(a :: *) -> all (r :: *). r -> (a -> list -> r) -> r) a)) (\(r :: *) -> r) (/\(r :: *) -> \(z : r) -> \(f : a -> (\(a :: *) -> (\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> withSpine (\(spine :: * -> *) -> ifix ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(list :: *) -> all (r :: *). r -> (a -> list -> r) -> r)) a -> r) -> z)) {integer s}) (\(u : all (a :: *). a -> a) -> (/\(a :: *) -> \(x : a) -> \(xs : (\(a :: *) -> (\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> withSpine (\(spine :: * -> *) -> ifix ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(list :: *) -> all (r :: *). r -> (a -> list -> r) -> r)) a) -> wrap ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(list :: *) -> (\(a :: *) -> all (r :: *). r -> (a -> list -> r) -> r) a)) (\(r :: *) -> r) (/\(r :: *) -> \(z : r) -> \(f : a -> (\(a :: *) -> (\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> withSpine (\(spine :: * -> *) -> ifix ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(list :: *) -> all (r :: *). r -> (a -> list -> r) -> r)) a -> r) -> f x xs)) {integer s} n' (rec ((/\(s :: size) -> \(i : integer s) -> addInteger {s} i (resizeInteger {1} {s} (sizeOfInteger {s} i) 1!1)) {s} n')))) n