/\(s :: size) -> \(ss : size s) -> (/\(a :: *) -> /\(r :: *) -> \(f : r -> a -> r) -> (/\(a :: *) -> /\(b :: *) -> \(f : (a -> b) -> a -> b) -> (/\(a :: *) -> \(s : (\(a :: *) -> ifix (\(self :: * -> *) -> \(a :: *) -> self a -> a) a) a) -> unwrap s s) {a -> b} (wrap (\(self :: * -> *) -> \(a :: *) -> self a -> a) (a -> b) (\(s : (\(a :: *) -> ifix (\(self :: * -> *) -> \(a :: *) -> self a -> a) a) (a -> b)) -> \(x : a) -> f ((/\(a :: *) -> \(s : (\(a :: *) -> ifix (\(self :: * -> *) -> \(a :: *) -> self a -> a) a) a) -> unwrap s s) {a -> b} s) x))) {r} {(\(withSpine :: (((* -> *) -> *) -> *) -> * -> *) -> \(pat :: (* -> *) -> * -> *) -> withSpine (\(spine :: (* -> *) -> *) -> ifix ((\(withSpine :: (((* -> *) -> *) -> *) -> * -> *) -> \(pat :: (* -> *) -> * -> *) -> \(b :: ((* -> *) -> *) -> *) -> \(p :: (* -> *) -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: ((* -> *) -> *) -> *) -> \(a1 :: *) -> k (\(r :: * -> *) -> r a1)) (\(list :: * -> *) -> \(a :: *) -> all (r :: *). r -> (a -> list a -> r) -> r) a -> r} (\(rec : r -> (\(withSpine :: (((* -> *) -> *) -> *) -> * -> *) -> \(pat :: (* -> *) -> * -> *) -> withSpine (\(spine :: (* -> *) -> *) -> ifix ((\(withSpine :: (((* -> *) -> *) -> *) -> * -> *) -> \(pat :: (* -> *) -> * -> *) -> \(b :: ((* -> *) -> *) -> *) -> \(p :: (* -> *) -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: ((* -> *) -> *) -> *) -> \(a1 :: *) -> k (\(r :: * -> *) -> r a1)) (\(list :: * -> *) -> \(a :: *) -> all (r :: *). r -> (a -> list a -> r) -> r) a -> r) -> \(z : r) -> \(xs : (\(withSpine :: (((* -> *) -> *) -> *) -> * -> *) -> \(pat :: (* -> *) -> * -> *) -> withSpine (\(spine :: (* -> *) -> *) -> ifix ((\(withSpine :: (((* -> *) -> *) -> *) -> * -> *) -> \(pat :: (* -> *) -> * -> *) -> \(b :: ((* -> *) -> *) -> *) -> \(p :: (* -> *) -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: ((* -> *) -> *) -> *) -> \(a1 :: *) -> k (\(r :: * -> *) -> r a1)) (\(list :: * -> *) -> \(a :: *) -> all (r :: *). r -> (a -> list a -> r) -> r) a) -> unwrap xs {r} z (\(x : a) -> \(xs' : (\(withSpine :: (((* -> *) -> *) -> *) -> * -> *) -> \(pat :: (* -> *) -> * -> *) -> withSpine (\(spine :: (* -> *) -> *) -> ifix ((\(withSpine :: (((* -> *) -> *) -> *) -> * -> *) -> \(pat :: (* -> *) -> * -> *) -> \(b :: ((* -> *) -> *) -> *) -> \(p :: (* -> *) -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: ((* -> *) -> *) -> *) -> \(a1 :: *) -> k (\(r :: * -> *) -> r a1)) (\(list :: * -> *) -> \(a :: *) -> all (r :: *). r -> (a -> list a -> r) -> r) a) -> rec (f z x) xs'))) {integer s} {integer s} (addInteger {s}) (resizeInteger {1} {s} ss 1!0)