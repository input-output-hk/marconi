/\(r :: *) -> \(f : r -> r) -> \(z : r) -> (/\(a :: *) -> /\(b :: *) -> \(f : (a -> b) -> a -> b) -> (/\(a :: *) -> \(s : (\(a :: *) -> ifix (\(self :: * -> *) -> \(a :: *) -> self a -> a) a) a) -> unwrap s s) {a -> b} (iwrap (\(self :: * -> *) -> \(a :: *) -> self a -> a) (a -> b) (\(s : (\(a :: *) -> ifix (\(self :: * -> *) -> \(a :: *) -> self a -> a) a) (a -> b)) -> \(x : a) -> f ((/\(a :: *) -> \(s : (\(a :: *) -> ifix (\(self :: * -> *) -> \(a :: *) -> self a -> a) a) a) -> unwrap s s) {a -> b} s) x))) {ifix (\(rec :: (* -> *) -> *) -> \(spine :: * -> *) -> spine ((\(nat :: *) -> all (r :: *). r -> (nat -> r) -> r) (rec (\(dat :: *) -> dat)))) (\(dat :: *) -> dat)} {r} (\(rec : ifix (\(rec :: (* -> *) -> *) -> \(spine :: * -> *) -> spine ((\(nat :: *) -> all (r :: *). r -> (nat -> r) -> r) (rec (\(dat :: *) -> dat)))) (\(dat :: *) -> dat) -> r) -> \(n : ifix (\(rec :: (* -> *) -> *) -> \(spine :: * -> *) -> spine ((\(nat :: *) -> all (r :: *). r -> (nat -> r) -> r) (rec (\(dat :: *) -> dat)))) (\(dat :: *) -> dat)) -> unwrap n {r} z (\(n' : ifix (\(rec :: (* -> *) -> *) -> \(spine :: * -> *) -> spine ((\(nat :: *) -> all (r :: *). r -> (nat -> r) -> r) (rec (\(dat :: *) -> dat)))) (\(dat :: *) -> dat)) -> f (rec n')))