/\(r :: *) -> \(f : r -> r) -> \(z : r) -> (/\(a :: *) -> /\(b :: *) -> \(f : (a -> b) -> a -> b) -> (/\(a :: *) -> \(s : (\(a :: *) -> (\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> withSpine (\(spine :: * -> *) -> ifix ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(self :: *) -> self -> a)) a) -> unwrap s s) {a -> b} (wrap ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(self :: *) -> (\(a :: *) -> self -> a) (a -> b))) (\(r :: *) -> r) (\(s : (\(a :: *) -> (\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> withSpine (\(spine :: * -> *) -> ifix ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(self :: *) -> self -> a)) (a -> b)) -> \(x : a) -> f ((/\(a :: *) -> \(s : (\(a :: *) -> (\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> withSpine (\(spine :: * -> *) -> ifix ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(self :: *) -> self -> a)) a) -> unwrap s s) {a -> b} s) x))) {(\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> withSpine (\(spine :: * -> *) -> ifix ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(nat :: *) -> all (r :: *). r -> (nat -> r) -> r)} {r} (\(rec : (\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> withSpine (\(spine :: * -> *) -> ifix ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(nat :: *) -> all (r :: *). r -> (nat -> r) -> r) -> r) -> \(n : (\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> withSpine (\(spine :: * -> *) -> ifix ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(nat :: *) -> all (r :: *). r -> (nat -> r) -> r)) -> unwrap n {r} z (\(n' : (\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> withSpine (\(spine :: * -> *) -> ifix ((\(withSpine :: ((* -> *) -> *) -> *) -> \(pat :: * -> *) -> \(b :: (* -> *) -> *) -> \(p :: * -> *) -> p (pat (withSpine b))) withSpine pat) spine)) (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(nat :: *) -> all (r :: *). r -> (nat -> r) -> r)) -> f (rec n')))