/\(s :: size) -> \(ss : size s) -> (/\(r :: *) -> \(f : r -> r) -> (/\(a :: *) -> /\(b :: *) -> \(f : (a -> b) -> a -> b) -> (/\(a :: *) -> \(s : (\(a :: *) -> ifix (\(self :: * -> *) -> \(a :: *) -> self a -> a) a) a) -> unwrap s s) {a -> b} (wrap (\(self :: * -> *) -> \(a :: *) -> self a -> a) (a -> b) (\(s : (\(a :: *) -> ifix (\(self :: * -> *) -> \(a :: *) -> self a -> a) a) (a -> b)) -> \(x : a) -> f ((/\(a :: *) -> \(s : (\(a :: *) -> ifix (\(self :: * -> *) -> \(a :: *) -> self a -> a) a) a) -> unwrap s s) {a -> b} s) x))) {r} {(\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(spine :: * -> *) -> ifix (\(b :: (* -> *) -> *) -> \(p :: * -> *) -> p ((\(nat :: *) -> all (r :: *). r -> (nat -> r) -> r) ((\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) b))) spine) -> r} (\(rec : r -> (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(spine :: * -> *) -> ifix (\(b :: (* -> *) -> *) -> \(p :: * -> *) -> p ((\(nat :: *) -> all (r :: *). r -> (nat -> r) -> r) ((\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) b))) spine) -> r) -> \(z : r) -> \(n : (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(spine :: * -> *) -> ifix (\(b :: (* -> *) -> *) -> \(p :: * -> *) -> p ((\(nat :: *) -> all (r :: *). r -> (nat -> r) -> r) ((\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) b))) spine)) -> unwrap n {r} z (\(n' : (\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) (\(spine :: * -> *) -> ifix (\(b :: (* -> *) -> *) -> \(p :: * -> *) -> p ((\(nat :: *) -> all (r :: *). r -> (nat -> r) -> r) ((\(k :: (* -> *) -> *) -> k (\(r :: *) -> r)) b))) spine)) -> rec (f z) n'))) {integer s} (addInteger {s} (resizeInteger {1} {s} ss 1!1)) (resizeInteger {1} {s} ss 1!0)