{ npmlock2nix
, nodejs
, python2
, stdenv
, lib
, CoreServices ? null # needed by darwin only
, xcodebuild ? null   # needed by darwin only
}:
let
  # Takes a source and extracts `package.json, package-lock.json` from it
  # Type: Path -> Path
  getPackageFiles = src: lib.cleanSourceWith {
    filter = (path: type: lib.elem (baseNameOf path) [ "package.json" "package-lock.json" ]);
    inherit src;
  };
in
# Description: Takes a `projectDir` path to a directory containing a `package.json` and a `package-lock.json`
  # and creates an output containing `node_modules/, package.json, package-lock.json`. The `buildInputs`
  # will be avaibale during `npm install`
  # Type: Attr { projectDir: Path, buildInputs: List } -> Derivation
{ projectDir, buildInputs ? [ ] }:
npmlock2nix.node_modules {
  inherit nodejs;
  src = getPackageFiles projectDir;
  buildInputs = [ python2 ]
    ++ lib.optionals (stdenv.isDarwin) [ CoreServices xcodebuild ]
    ++ buildInputs;
}
